/*
 * generated by Xtext 2.22.0
 */
package org.omg.sysml.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SysMLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RootPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RootPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPackageAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cPackageBodyElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* ROOT PACKAGE */ RootPackage SysML::Package:
		//	{SysML::Package} PackageBodyElement*;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Package} PackageBodyElement*
		public Group getGroup() { return cGroup; }
		
		//{SysML::Package}
		public Action getPackageAction_0() { return cPackageAction_0; }
		
		//PackageBodyElement*
		public RuleCall getPackageBodyElementParserRuleCall_1() { return cPackageBodyElementParserRuleCall_1; }
	}
	public class IdentificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Identification");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cIdKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cHumanIdAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cHumanIdNameParserRuleCall_0_1_0 = (RuleCall)cHumanIdAssignment_0_1.eContents().get(0);
		private final Assignment cNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_0_2_0 = (RuleCall)cNameAssignment_0_2.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		///* BASIC ELEMENTS */ fragment Identification returns SysML::Element:
		//	'id' humanId=Name name=Name?
		//	| name=Name;
		@Override public ParserRule getRule() { return rule; }
		
		//'id' humanId=Name name=Name? | name=Name
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'id' humanId=Name name=Name?
		public Group getGroup_0() { return cGroup_0; }
		
		//'id'
		public Keyword getIdKeyword_0_0() { return cIdKeyword_0_0; }
		
		//humanId=Name
		public Assignment getHumanIdAssignment_0_1() { return cHumanIdAssignment_0_1; }
		
		//Name
		public RuleCall getHumanIdNameParserRuleCall_0_1_0() { return cHumanIdNameParserRuleCall_0_1_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_2_0() { return cNameNameParserRuleCall_0_2_0; }
		
		//name=Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
	}
	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Comment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cCommentKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Keyword cAboutKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cOwnedRelationship_compAssignment_0_0_3 = (Assignment)cGroup_0_0.eContents().get(3);
		private final RuleCall cOwnedRelationship_compAnnotationParserRuleCall_0_0_3_0 = (RuleCall)cOwnedRelationship_compAssignment_0_0_3.eContents().get(0);
		private final Group cGroup_0_0_4 = (Group)cGroup_0_0.eContents().get(4);
		private final Keyword cCommaKeyword_0_0_4_0 = (Keyword)cGroup_0_0_4.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_0_0_4_1 = (Assignment)cGroup_0_0_4.eContents().get(1);
		private final RuleCall cOwnedRelationship_compAnnotationParserRuleCall_0_0_4_1_0 = (RuleCall)cOwnedRelationship_compAssignment_0_0_4_1.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cGroup_0_1.eContents().get(0);
		private final Keyword cCommentKeyword_0_1_0_0 = (Keyword)cGroup_0_1_0.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_1_0_1 = (RuleCall)cGroup_0_1_0.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_1_0 = (RuleCall)cOwnedRelationship_compAssignment_0_1_1.eContents().get(0);
		private final Assignment cBodyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBodyREGULAR_COMMENTTerminalRuleCall_1_0 = (RuleCall)cBodyAssignment_1.eContents().get(0);
		
		///* ANNOTATIONS */ /* Comments */ Comment SysML::Comment:
		//	('comment' Identification? 'about' ownedRelationship_comp+=Annotation (',' ownedRelationship_comp+=Annotation)*
		//	| ('comment' Identification?)? ownedRelationship_comp+=EmptyAnnotation) body=REGULAR_COMMENT;
		@Override public ParserRule getRule() { return rule; }
		
		//('comment' Identification? 'about' ownedRelationship_comp+=Annotation (',' ownedRelationship_comp+=Annotation)* |
		//('comment' Identification?)? ownedRelationship_comp+=EmptyAnnotation) body=REGULAR_COMMENT
		public Group getGroup() { return cGroup; }
		
		//('comment' Identification? 'about' ownedRelationship_comp+=Annotation (',' ownedRelationship_comp+=Annotation)* |
		//('comment' Identification?)? ownedRelationship_comp+=EmptyAnnotation)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'comment' Identification? 'about' ownedRelationship_comp+=Annotation (',' ownedRelationship_comp+=Annotation)*
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//'comment'
		public Keyword getCommentKeyword_0_0_0() { return cCommentKeyword_0_0_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_0_1() { return cIdentificationParserRuleCall_0_0_1; }
		
		//'about'
		public Keyword getAboutKeyword_0_0_2() { return cAboutKeyword_0_0_2; }
		
		//ownedRelationship_comp+=Annotation
		public Assignment getOwnedRelationship_compAssignment_0_0_3() { return cOwnedRelationship_compAssignment_0_0_3; }
		
		//Annotation
		public RuleCall getOwnedRelationship_compAnnotationParserRuleCall_0_0_3_0() { return cOwnedRelationship_compAnnotationParserRuleCall_0_0_3_0; }
		
		//(',' ownedRelationship_comp+=Annotation)*
		public Group getGroup_0_0_4() { return cGroup_0_0_4; }
		
		//','
		public Keyword getCommaKeyword_0_0_4_0() { return cCommaKeyword_0_0_4_0; }
		
		//ownedRelationship_comp+=Annotation
		public Assignment getOwnedRelationship_compAssignment_0_0_4_1() { return cOwnedRelationship_compAssignment_0_0_4_1; }
		
		//Annotation
		public RuleCall getOwnedRelationship_compAnnotationParserRuleCall_0_0_4_1_0() { return cOwnedRelationship_compAnnotationParserRuleCall_0_0_4_1_0; }
		
		//('comment' Identification?)? ownedRelationship_comp+=EmptyAnnotation
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//('comment' Identification?)?
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }
		
		//'comment'
		public Keyword getCommentKeyword_0_1_0_0() { return cCommentKeyword_0_1_0_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_1_0_1() { return cIdentificationParserRuleCall_0_1_0_1; }
		
		//ownedRelationship_comp+=EmptyAnnotation
		public Assignment getOwnedRelationship_compAssignment_0_1_1() { return cOwnedRelationship_compAssignment_0_1_1; }
		
		//EmptyAnnotation
		public RuleCall getOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_1_0() { return cOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_1_0; }
		
		//body=REGULAR_COMMENT
		public Assignment getBodyAssignment_1() { return cBodyAssignment_1; }
		
		//REGULAR_COMMENT
		public RuleCall getBodyREGULAR_COMMENTTerminalRuleCall_1_0() { return cBodyREGULAR_COMMENTTerminalRuleCall_1_0; }
	}
	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Annotation");
		private final Assignment cAnnotatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cAnnotatedElementElementCrossReference_0 = (CrossReference)cAnnotatedElementAssignment.eContents().get(0);
		private final RuleCall cAnnotatedElementElementQualifiedNameParserRuleCall_0_1 = (RuleCall)cAnnotatedElementElementCrossReference_0.eContents().get(1);
		
		//Annotation SysML::Annotation:
		//	annotatedElement=[SysML::Element|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//annotatedElement=[SysML::Element|QualifiedName]
		public Assignment getAnnotatedElementAssignment() { return cAnnotatedElementAssignment; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getAnnotatedElementElementCrossReference_0() { return cAnnotatedElementElementCrossReference_0; }
		
		//QualifiedName
		public RuleCall getAnnotatedElementElementQualifiedNameParserRuleCall_0_1() { return cAnnotatedElementElementQualifiedNameParserRuleCall_0_1; }
	}
	public class EmptyAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyAnnotation");
		private final Action cAnnotationAction = (Action)rule.eContents().get(1);
		
		//EmptyAnnotation SysML::Annotation:
		//	{SysML::Annotation};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Annotation}
		public Action getAnnotationAction() { return cAnnotationAction; }
	}
	public class OwnedDocumentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedDocumentation");
		private final Assignment cDocumentingComment_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDocumentingComment_compDocumentationCommentParserRuleCall_0 = (RuleCall)cDocumentingComment_compAssignment.eContents().get(0);
		
		///* Documentation */ OwnedDocumentation SysML::Documentation:
		//	documentingComment_comp=DocumentationComment;
		@Override public ParserRule getRule() { return rule; }
		
		//documentingComment_comp=DocumentationComment
		public Assignment getDocumentingComment_compAssignment() { return cDocumentingComment_compAssignment; }
		
		//DocumentationComment
		public RuleCall getDocumentingComment_compDocumentationCommentParserRuleCall_0() { return cDocumentingComment_compDocumentationCommentParserRuleCall_0; }
	}
	public class DocumentationCommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DocumentationComment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDocKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cHumanIdAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cHumanIdNameParserRuleCall_1_1_0 = (RuleCall)cHumanIdAssignment_1_1.eContents().get(0);
		private final Assignment cBodyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBodyREGULAR_COMMENTTerminalRuleCall_2_0 = (RuleCall)cBodyAssignment_2.eContents().get(0);
		
		//DocumentationComment SysML::Comment:
		//	'doc' ('id' humanId=Name)? body=REGULAR_COMMENT;
		@Override public ParserRule getRule() { return rule; }
		
		//'doc' ('id' humanId=Name)? body=REGULAR_COMMENT
		public Group getGroup() { return cGroup; }
		
		//'doc'
		public Keyword getDocKeyword_0() { return cDocKeyword_0; }
		
		//('id' humanId=Name)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'id'
		public Keyword getIdKeyword_1_0() { return cIdKeyword_1_0; }
		
		//humanId=Name
		public Assignment getHumanIdAssignment_1_1() { return cHumanIdAssignment_1_1; }
		
		//Name
		public RuleCall getHumanIdNameParserRuleCall_1_1_0() { return cHumanIdNameParserRuleCall_1_1_0; }
		
		//body=REGULAR_COMMENT
		public Assignment getBodyAssignment_2() { return cBodyAssignment_2; }
		
		//REGULAR_COMMENT
		public RuleCall getBodyREGULAR_COMMENTTerminalRuleCall_2_0() { return cBodyREGULAR_COMMENTTerminalRuleCall_2_0; }
	}
	public class PrefixDocumentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PrefixDocumentation");
		private final Assignment cOwnedRelatedElement_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElement_compPrefixDocumentationCommentParserRuleCall_0 = (RuleCall)cOwnedRelatedElement_compAssignment.eContents().get(0);
		
		//PrefixDocumentation SysML::Annotation:
		//	ownedRelatedElement_comp+=PrefixDocumentationComment;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement_comp+=PrefixDocumentationComment
		public Assignment getOwnedRelatedElement_compAssignment() { return cOwnedRelatedElement_compAssignment; }
		
		//PrefixDocumentationComment
		public RuleCall getOwnedRelatedElement_compPrefixDocumentationCommentParserRuleCall_0() { return cOwnedRelatedElement_compPrefixDocumentationCommentParserRuleCall_0; }
	}
	public class PrefixDocumentationCommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PrefixDocumentationComment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cDocKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cIdKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cHumanIdAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cHumanIdNameParserRuleCall_0_1_1_0 = (RuleCall)cHumanIdAssignment_0_1_1.eContents().get(0);
		private final Assignment cBodyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0 = (RuleCall)cBodyAssignment_1.eContents().get(0);
		
		//PrefixDocumentationComment SysML::Comment:
		//	('doc' ('id' humanId=Name)?)? body=DOCUMENTATION_COMMENT;
		@Override public ParserRule getRule() { return rule; }
		
		//('doc' ('id' humanId=Name)?)? body=DOCUMENTATION_COMMENT
		public Group getGroup() { return cGroup; }
		
		//('doc' ('id' humanId=Name)?)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'doc'
		public Keyword getDocKeyword_0_0() { return cDocKeyword_0_0; }
		
		//('id' humanId=Name)?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//'id'
		public Keyword getIdKeyword_0_1_0() { return cIdKeyword_0_1_0; }
		
		//humanId=Name
		public Assignment getHumanIdAssignment_0_1_1() { return cHumanIdAssignment_0_1_1; }
		
		//Name
		public RuleCall getHumanIdNameParserRuleCall_0_1_1_0() { return cHumanIdNameParserRuleCall_0_1_1_0; }
		
		//body=DOCUMENTATION_COMMENT
		public Assignment getBodyAssignment_1() { return cBodyAssignment_1; }
		
		//DOCUMENTATION_COMMENT
		public RuleCall getBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0() { return cBodyDOCUMENTATION_COMMENTTerminalRuleCall_1_0; }
	}
	public class TextualRepresentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TextualRepresentation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cRepKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Keyword cAboutKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cOwnedRelationship_compAssignment_0_0_3 = (Assignment)cGroup_0_0.eContents().get(3);
		private final RuleCall cOwnedRelationship_compAnnotationParserRuleCall_0_0_3_0 = (RuleCall)cOwnedRelationship_compAssignment_0_0_3.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cGroup_0_1.eContents().get(0);
		private final Keyword cRepKeyword_0_1_0_0 = (Keyword)cGroup_0_1_0.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_1_0_1 = (RuleCall)cGroup_0_1_0.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_1_0 = (RuleCall)cOwnedRelationship_compAssignment_0_1_1.eContents().get(0);
		private final Keyword cLanguageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLanguageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLanguageSTRING_VALUETerminalRuleCall_2_0 = (RuleCall)cLanguageAssignment_2.eContents().get(0);
		private final Assignment cBodyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBodyREGULAR_COMMENTTerminalRuleCall_3_0 = (RuleCall)cBodyAssignment_3.eContents().get(0);
		
		///* Textual Representation */ TextualRepresentation SysML::TextualRepresentation:
		//	('rep' Identification? 'about' ownedRelationship_comp+=Annotation
		//	| ('rep' Identification?)? ownedRelationship_comp+=EmptyAnnotation)
		//	'language' language=STRING_VALUE
		//	body=REGULAR_COMMENT;
		@Override public ParserRule getRule() { return rule; }
		
		//('rep' Identification? 'about' ownedRelationship_comp+=Annotation | ('rep' Identification?)?
		//ownedRelationship_comp+=EmptyAnnotation) 'language' language=STRING_VALUE body=REGULAR_COMMENT
		public Group getGroup() { return cGroup; }
		
		//('rep' Identification? 'about' ownedRelationship_comp+=Annotation | ('rep' Identification?)?
		//ownedRelationship_comp+=EmptyAnnotation)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'rep' Identification? 'about' ownedRelationship_comp+=Annotation
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//'rep'
		public Keyword getRepKeyword_0_0_0() { return cRepKeyword_0_0_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_0_1() { return cIdentificationParserRuleCall_0_0_1; }
		
		//'about'
		public Keyword getAboutKeyword_0_0_2() { return cAboutKeyword_0_0_2; }
		
		//ownedRelationship_comp+=Annotation
		public Assignment getOwnedRelationship_compAssignment_0_0_3() { return cOwnedRelationship_compAssignment_0_0_3; }
		
		//Annotation
		public RuleCall getOwnedRelationship_compAnnotationParserRuleCall_0_0_3_0() { return cOwnedRelationship_compAnnotationParserRuleCall_0_0_3_0; }
		
		//('rep' Identification?)? ownedRelationship_comp+=EmptyAnnotation
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//('rep' Identification?)?
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }
		
		//'rep'
		public Keyword getRepKeyword_0_1_0_0() { return cRepKeyword_0_1_0_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_1_0_1() { return cIdentificationParserRuleCall_0_1_0_1; }
		
		//ownedRelationship_comp+=EmptyAnnotation
		public Assignment getOwnedRelationship_compAssignment_0_1_1() { return cOwnedRelationship_compAssignment_0_1_1; }
		
		//EmptyAnnotation
		public RuleCall getOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_1_0() { return cOwnedRelationship_compEmptyAnnotationParserRuleCall_0_1_1_0; }
		
		//'language'
		public Keyword getLanguageKeyword_1() { return cLanguageKeyword_1; }
		
		//language=STRING_VALUE
		public Assignment getLanguageAssignment_2() { return cLanguageAssignment_2; }
		
		//STRING_VALUE
		public RuleCall getLanguageSTRING_VALUETerminalRuleCall_2_0() { return cLanguageSTRING_VALUETerminalRuleCall_2_0; }
		
		//body=REGULAR_COMMENT
		public Assignment getBodyAssignment_3() { return cBodyAssignment_3; }
		
		//REGULAR_COMMENT
		public RuleCall getBodyREGULAR_COMMENTTerminalRuleCall_3_0() { return cBodyREGULAR_COMMENTTerminalRuleCall_3_0; }
	}
	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPackageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPackageBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* PACKAGES */ /* Packages */ Package SysML::Package:
		//	PackageDeclaration PackageBody;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDeclaration PackageBody
		public Group getGroup() { return cGroup; }
		
		//PackageDeclaration
		public RuleCall getPackageDeclarationParserRuleCall_0() { return cPackageDeclarationParserRuleCall_0; }
		
		//PackageBody
		public RuleCall getPackageBodyParserRuleCall_1() { return cPackageBodyParserRuleCall_1; }
	}
	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment PackageDeclaration returns SysML::Package:
		//	'package' Identification?;
		@Override public ParserRule getRule() { return rule; }
		
		//'package' Identification?
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_1() { return cIdentificationParserRuleCall_1; }
	}
	public class PackageBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cDocumentation_compAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0 = (RuleCall)cDocumentation_compAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedMembership_compPackageMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedImport_compPackageImportParserRuleCall_1_1_2_0 = (RuleCall)cOwnedImport_compAssignment_1_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment PackageBody returns SysML::Package:
		//	';'
		//	| '{' (documentation_comp+=OwnedDocumentation
		//	| ownedMembership_comp+=PackageMember
		//	| ownedImport_comp+=PackageImport)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (documentation_comp+=OwnedDocumentation | ownedMembership_comp+=PackageMember |
		//ownedImport_comp+=PackageImport)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (documentation_comp+=OwnedDocumentation | ownedMembership_comp+=PackageMember | ownedImport_comp+=PackageImport)*
		//'}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(documentation_comp+=OwnedDocumentation | ownedMembership_comp+=PackageMember | ownedImport_comp+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//// Note: PackageBodyElement is expanded here to avoid
		//// infinite loops in the incremental parser.
		//documentation_comp+=OwnedDocumentation
		public Assignment getDocumentation_compAssignment_1_1_0() { return cDocumentation_compAssignment_1_1_0; }
		
		//OwnedDocumentation
		public RuleCall getDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0() { return cDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0; }
		
		//ownedMembership_comp+=PackageMember
		public Assignment getOwnedMembership_compAssignment_1_1_1() { return cOwnedMembership_compAssignment_1_1_1; }
		
		//PackageMember
		public RuleCall getOwnedMembership_compPackageMemberParserRuleCall_1_1_1_0() { return cOwnedMembership_compPackageMemberParserRuleCall_1_1_1_0; }
		
		//ownedImport_comp+=PackageImport
		public Assignment getOwnedImport_compAssignment_1_1_2() { return cOwnedImport_compAssignment_1_1_2; }
		
		//PackageImport
		public RuleCall getOwnedImport_compPackageImportParserRuleCall_1_1_2_0() { return cOwnedImport_compPackageImportParserRuleCall_1_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class PackageBodyElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageBodyElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cDocumentation_compAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cDocumentation_compOwnedDocumentationParserRuleCall_0_0 = (RuleCall)cDocumentation_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedMembership_compPackageMemberParserRuleCall_1_0 = (RuleCall)cOwnedMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedImport_compPackageImportParserRuleCall_2_0 = (RuleCall)cOwnedImport_compAssignment_2.eContents().get(0);
		
		///* Package Bodies */ fragment PackageBodyElement returns SysML::Package:
		//	documentation_comp+=OwnedDocumentation
		//	| ownedMembership_comp+=PackageMember
		//	| ownedImport_comp+=PackageImport;
		@Override public ParserRule getRule() { return rule; }
		
		//documentation_comp+=OwnedDocumentation | ownedMembership_comp+=PackageMember | ownedImport_comp+=PackageImport
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//documentation_comp+=OwnedDocumentation
		public Assignment getDocumentation_compAssignment_0() { return cDocumentation_compAssignment_0; }
		
		//OwnedDocumentation
		public RuleCall getDocumentation_compOwnedDocumentationParserRuleCall_0_0() { return cDocumentation_compOwnedDocumentationParserRuleCall_0_0; }
		
		//ownedMembership_comp+=PackageMember
		public Assignment getOwnedMembership_compAssignment_1() { return cOwnedMembership_compAssignment_1; }
		
		//PackageMember
		public RuleCall getOwnedMembership_compPackageMemberParserRuleCall_1_0() { return cOwnedMembership_compPackageMemberParserRuleCall_1_0; }
		
		//ownedImport_comp+=PackageImport
		public Assignment getOwnedImport_compAssignment_2() { return cOwnedImport_compAssignment_2; }
		
		//PackageImport
		public RuleCall getOwnedImport_compPackageImportParserRuleCall_2_0() { return cOwnedImport_compPackageImportParserRuleCall_2_0; }
	}
	public class PackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cNonUsagePackageMemberParserRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cUsagePackageMemberParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//PackageMember SysML::Membership:
		//	ownedRelationship_comp+=PrefixDocumentation*
		//	visibility=BasicVisibilityIndicator? (NonUsagePackageMember | UsagePackageMember);
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=PrefixDocumentation* visibility=BasicVisibilityIndicator? (NonUsagePackageMember |
		//UsagePackageMember)
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=PrefixDocumentation*
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//PrefixDocumentation
		public RuleCall getOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0() { return cOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0; }
		
		//visibility=BasicVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//BasicVisibilityIndicator
		public RuleCall getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0; }
		
		//(NonUsagePackageMember | UsagePackageMember)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//NonUsagePackageMember
		public RuleCall getNonUsagePackageMemberParserRuleCall_2_0() { return cNonUsagePackageMemberParserRuleCall_2_0; }
		
		//UsagePackageMember
		public RuleCall getUsagePackageMemberParserRuleCall_2_1() { return cUsagePackageMemberParserRuleCall_2_1; }
	}
	public class NonUsagePackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonUsagePackageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedMemberElement_compAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedMemberElement_compDefinitionElementParserRuleCall_0_0 = (RuleCall)cOwnedMemberElement_compAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Keyword cAliasKeyword_1_0_0 = (Keyword)cAlternatives_1_0.eContents().get(0);
		private final Keyword cImportKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final Assignment cMemberElementAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cMemberElementElementCrossReference_1_1_0 = (CrossReference)cMemberElementAssignment_1_1.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_1_1_0_1 = (RuleCall)cMemberElementElementCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cAsKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_1_0 = (RuleCall)cMemberNameAssignment_1_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment NonUsagePackageMember returns SysML::Membership:
		//	ownedMemberElement_comp=DefinitionElement
		//	| ('alias' | 'import') memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement_comp=DefinitionElement | ('alias' | 'import') memberElement=[SysML::Element|QualifiedName] ('as'
		//memberName=Name)? ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedMemberElement_comp=DefinitionElement
		public Assignment getOwnedMemberElement_compAssignment_0() { return cOwnedMemberElement_compAssignment_0; }
		
		//DefinitionElement
		public RuleCall getOwnedMemberElement_compDefinitionElementParserRuleCall_0_0() { return cOwnedMemberElement_compDefinitionElementParserRuleCall_0_0; }
		
		//('alias' | 'import') memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//('alias' | 'import')
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//'alias'
		public Keyword getAliasKeyword_1_0_0() { return cAliasKeyword_1_0_0; }
		
		//'import'
		public Keyword getImportKeyword_1_0_1() { return cImportKeyword_1_0_1; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_1_1() { return cMemberElementAssignment_1_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_1_1_0() { return cMemberElementElementCrossReference_1_1_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_1_1_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_1_1_0_1; }
		
		//('as' memberName=Name)?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'as'
		public Keyword getAsKeyword_1_2_0() { return cAsKeyword_1_2_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1_2_1() { return cMemberNameAssignment_1_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_1_0() { return cMemberNameNameParserRuleCall_1_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_3() { return cSemicolonKeyword_1_3; }
	}
	public class UsagePackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsagePackageMember");
		private final Assignment cOwnedMemberElement_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compUsageElementParserRuleCall_0 = (RuleCall)cOwnedMemberElement_compAssignment.eContents().get(0);
		
		//fragment UsagePackageMember returns SysML::Membership:
		//	ownedMemberElement_comp=UsageElement;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement_comp=UsageElement
		public Assignment getOwnedMemberElement_compAssignment() { return cOwnedMemberElement_compAssignment; }
		
		//UsageElement
		public RuleCall getOwnedMemberElement_compUsageElementParserRuleCall_0() { return cOwnedMemberElement_compUsageElementParserRuleCall_0; }
	}
	public class PackageImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cImportKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cImportedPackageAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_0_0_0 = (CrossReference)cImportedPackageAssignment_3_0_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageNameParserRuleCall_3_0_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_0_0_0.eContents().get(1);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_0_1_0 = (Keyword)cAlternatives_3_0_1.eContents().get(0);
		private final Keyword cFullStopKeyword_3_0_1_1 = (Keyword)cAlternatives_3_0_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cImportedPackageAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_1_0_0 = (CrossReference)cImportedPackageAssignment_3_1_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_1_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Assignment cImportedPackageAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_2_0_0 = (CrossReference)cImportedPackageAssignment_3_2_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PackageImport SysML::Import:
		//	ownedRelationship_comp+=PrefixDocumentation*
		//	visibility=BasicVisibilityIndicator?
		//	'import' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=PrefixDocumentation* visibility=BasicVisibilityIndicator? 'import'
		//(importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=PrefixDocumentation*
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//PrefixDocumentation
		public RuleCall getOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0() { return cOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0; }
		
		//visibility=BasicVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//BasicVisibilityIndicator
		public RuleCall getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0; }
		
		//'import'
		public Keyword getImportKeyword_2() { return cImportKeyword_2; }
		
		//(importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*' |
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*')
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//importedPackage=[SysML::Package|Name]
		public Assignment getImportedPackageAssignment_3_0_0() { return cImportedPackageAssignment_3_0_0; }
		
		//[SysML::Package|Name]
		public CrossReference getImportedPackagePackageCrossReference_3_0_0_0() { return cImportedPackagePackageCrossReference_3_0_0_0; }
		
		//Name
		public RuleCall getImportedPackagePackageNameParserRuleCall_3_0_0_0_1() { return cImportedPackagePackageNameParserRuleCall_3_0_0_0_1; }
		
		//('::' | '.')
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_0_1_0() { return cColonColonKeyword_3_0_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3_0_1_1() { return cFullStopKeyword_3_0_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_0_2() { return cAsteriskKeyword_3_0_2; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName]
		public Assignment getImportedPackageAssignment_3_1_0() { return cImportedPackageAssignment_3_1_0; }
		
		//[SysML::Package|ColonQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_1_0_0() { return cImportedPackagePackageCrossReference_3_1_0_0; }
		
		//ColonQualifiedName
		public RuleCall getImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1() { return cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_1_1() { return cColonColonKeyword_3_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_1_2() { return cAsteriskKeyword_3_1_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*'
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName]
		public Assignment getImportedPackageAssignment_3_2_0() { return cImportedPackageAssignment_3_2_0; }
		
		//[SysML::Package|DotQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_2_0_0() { return cImportedPackagePackageCrossReference_3_2_0_0; }
		
		//DotQualifiedName
		public RuleCall getImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1() { return cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_3_2_1() { return cFullStopKeyword_3_2_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_2_2() { return cAsteriskKeyword_3_2_2; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class DefinitionElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCommentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTextualRepresentationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDependencyParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAttributeDefinitionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cItemDefinitionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPartDefinitionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cIndividualDefinitionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cConnectionDefinitionParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cInterfaceDefinitionParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cPortDefinitionParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cActionDefinitionParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cCalculationDefinitionParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cStateDefinitionParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cConstraintDefinitionParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cRequirementDefinitionParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cCaseDefinitionParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cAnalysisCaseDefinitionParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cVerificationCaseDefinitionParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cViewDefinitionParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cViewpointDefinitionParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cRenderingDefinitionParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		private final RuleCall cBindingConnectorParserRuleCall_22 = (RuleCall)cAlternatives.eContents().get(22);
		private final RuleCall cSuccessionParserRuleCall_23 = (RuleCall)cAlternatives.eContents().get(23);
		private final RuleCall cItemFlowParserRuleCall_24 = (RuleCall)cAlternatives.eContents().get(24);
		private final RuleCall cSuccessionItemFlowParserRuleCall_25 = (RuleCall)cAlternatives.eContents().get(25);
		private final RuleCall cConnectionUsageParserRuleCall_26 = (RuleCall)cAlternatives.eContents().get(26);
		private final RuleCall cConnectorParserRuleCall_27 = (RuleCall)cAlternatives.eContents().get(27);
		
		///* Package Elements */ DefinitionElement SysML::Element:
		//	Package
		//	| Comment
		//	| TextualRepresentation
		//	| Dependency
		//	| AttributeDefinition
		//	| ItemDefinition
		//	| PartDefinition
		//	| IndividualDefinition
		//	| ConnectionDefinition
		//	| InterfaceDefinition
		//	| PortDefinition
		//	| ActionDefinition
		//	| CalculationDefinition
		//	| StateDefinition
		//	| ConstraintDefinition
		//	| RequirementDefinition
		//	| CaseDefinition
		//	| AnalysisCaseDefinition
		//	| VerificationCaseDefinition
		//	| ViewDefinition
		//	| ViewpointDefinition
		//	| RenderingDefinition
		//	| BindingConnector
		//	| Succession
		//	| ItemFlow
		//	| SuccessionItemFlow
		//	| ConnectionUsage
		//	| Connector;
		@Override public ParserRule getRule() { return rule; }
		
		//Package | Comment | TextualRepresentation | Dependency | AttributeDefinition | ItemDefinition | PartDefinition |
		//IndividualDefinition | ConnectionDefinition | InterfaceDefinition | PortDefinition | ActionDefinition |
		//CalculationDefinition | StateDefinition | ConstraintDefinition | RequirementDefinition | CaseDefinition |
		//AnalysisCaseDefinition | VerificationCaseDefinition | ViewDefinition | ViewpointDefinition | RenderingDefinition |
		//BindingConnector | Succession | ItemFlow | SuccessionItemFlow | ConnectionUsage | Connector
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Package
		public RuleCall getPackageParserRuleCall_0() { return cPackageParserRuleCall_0; }
		
		//Comment
		public RuleCall getCommentParserRuleCall_1() { return cCommentParserRuleCall_1; }
		
		//TextualRepresentation
		public RuleCall getTextualRepresentationParserRuleCall_2() { return cTextualRepresentationParserRuleCall_2; }
		
		//Dependency
		public RuleCall getDependencyParserRuleCall_3() { return cDependencyParserRuleCall_3; }
		
		//AttributeDefinition
		public RuleCall getAttributeDefinitionParserRuleCall_4() { return cAttributeDefinitionParserRuleCall_4; }
		
		//ItemDefinition
		public RuleCall getItemDefinitionParserRuleCall_5() { return cItemDefinitionParserRuleCall_5; }
		
		//PartDefinition
		public RuleCall getPartDefinitionParserRuleCall_6() { return cPartDefinitionParserRuleCall_6; }
		
		//IndividualDefinition
		public RuleCall getIndividualDefinitionParserRuleCall_7() { return cIndividualDefinitionParserRuleCall_7; }
		
		//ConnectionDefinition
		public RuleCall getConnectionDefinitionParserRuleCall_8() { return cConnectionDefinitionParserRuleCall_8; }
		
		//InterfaceDefinition
		public RuleCall getInterfaceDefinitionParserRuleCall_9() { return cInterfaceDefinitionParserRuleCall_9; }
		
		//PortDefinition
		public RuleCall getPortDefinitionParserRuleCall_10() { return cPortDefinitionParserRuleCall_10; }
		
		//ActionDefinition
		public RuleCall getActionDefinitionParserRuleCall_11() { return cActionDefinitionParserRuleCall_11; }
		
		//CalculationDefinition
		public RuleCall getCalculationDefinitionParserRuleCall_12() { return cCalculationDefinitionParserRuleCall_12; }
		
		//StateDefinition
		public RuleCall getStateDefinitionParserRuleCall_13() { return cStateDefinitionParserRuleCall_13; }
		
		//ConstraintDefinition
		public RuleCall getConstraintDefinitionParserRuleCall_14() { return cConstraintDefinitionParserRuleCall_14; }
		
		//RequirementDefinition
		public RuleCall getRequirementDefinitionParserRuleCall_15() { return cRequirementDefinitionParserRuleCall_15; }
		
		//CaseDefinition
		public RuleCall getCaseDefinitionParserRuleCall_16() { return cCaseDefinitionParserRuleCall_16; }
		
		//AnalysisCaseDefinition
		public RuleCall getAnalysisCaseDefinitionParserRuleCall_17() { return cAnalysisCaseDefinitionParserRuleCall_17; }
		
		//VerificationCaseDefinition
		public RuleCall getVerificationCaseDefinitionParserRuleCall_18() { return cVerificationCaseDefinitionParserRuleCall_18; }
		
		//ViewDefinition
		public RuleCall getViewDefinitionParserRuleCall_19() { return cViewDefinitionParserRuleCall_19; }
		
		//ViewpointDefinition
		public RuleCall getViewpointDefinitionParserRuleCall_20() { return cViewpointDefinitionParserRuleCall_20; }
		
		//RenderingDefinition
		public RuleCall getRenderingDefinitionParserRuleCall_21() { return cRenderingDefinitionParserRuleCall_21; }
		
		//BindingConnector
		public RuleCall getBindingConnectorParserRuleCall_22() { return cBindingConnectorParserRuleCall_22; }
		
		//Succession
		public RuleCall getSuccessionParserRuleCall_23() { return cSuccessionParserRuleCall_23; }
		
		//ItemFlow
		public RuleCall getItemFlowParserRuleCall_24() { return cItemFlowParserRuleCall_24; }
		
		//SuccessionItemFlow
		public RuleCall getSuccessionItemFlowParserRuleCall_25() { return cSuccessionItemFlowParserRuleCall_25; }
		
		//ConnectionUsage
		public RuleCall getConnectionUsageParserRuleCall_26() { return cConnectionUsageParserRuleCall_26; }
		
		//Connector
		public RuleCall getConnectorParserRuleCall_27() { return cConnectorParserRuleCall_27; }
	}
	public class UsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cItemUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPartUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cIndividualUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTimeSliceUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSnapshotUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPortUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cInterfaceUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cActionUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cCalculationUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cStateUsageParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cConstraintUsageParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cRequirementUsageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cCaseUsageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cAnalysisCaseUsageParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cVerificationCaseUsageParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cViewUsageParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cViewpointUsageParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cRenderingUsageParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		
		//UsageElement SysML::Usage:
		//	AttributeUsage
		//	| ItemUsage
		//	| PartUsage
		//	| IndividualUsage
		//	| TimeSliceUsage
		//	| SnapshotUsage
		//	| PortUsage
		//	| InterfaceUsage
		//	| ActionUsage
		//	| CalculationUsage
		//	| StateUsage
		//	| ConstraintUsage
		//	| RequirementUsage
		//	| CaseUsage
		//	| AnalysisCaseUsage
		//	| VerificationCaseUsage
		//	| ViewUsage
		//	| ViewpointUsage
		//	| RenderingUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeUsage | ItemUsage | PartUsage | IndividualUsage | TimeSliceUsage | SnapshotUsage | PortUsage | InterfaceUsage |
		//ActionUsage | CalculationUsage | StateUsage | ConstraintUsage | RequirementUsage | CaseUsage | AnalysisCaseUsage |
		//VerificationCaseUsage | ViewUsage | ViewpointUsage | RenderingUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AttributeUsage
		public RuleCall getAttributeUsageParserRuleCall_0() { return cAttributeUsageParserRuleCall_0; }
		
		//ItemUsage
		public RuleCall getItemUsageParserRuleCall_1() { return cItemUsageParserRuleCall_1; }
		
		//PartUsage
		public RuleCall getPartUsageParserRuleCall_2() { return cPartUsageParserRuleCall_2; }
		
		//IndividualUsage
		public RuleCall getIndividualUsageParserRuleCall_3() { return cIndividualUsageParserRuleCall_3; }
		
		//TimeSliceUsage
		public RuleCall getTimeSliceUsageParserRuleCall_4() { return cTimeSliceUsageParserRuleCall_4; }
		
		//SnapshotUsage
		public RuleCall getSnapshotUsageParserRuleCall_5() { return cSnapshotUsageParserRuleCall_5; }
		
		//PortUsage
		public RuleCall getPortUsageParserRuleCall_6() { return cPortUsageParserRuleCall_6; }
		
		//InterfaceUsage
		public RuleCall getInterfaceUsageParserRuleCall_7() { return cInterfaceUsageParserRuleCall_7; }
		
		//ActionUsage
		public RuleCall getActionUsageParserRuleCall_8() { return cActionUsageParserRuleCall_8; }
		
		//CalculationUsage
		public RuleCall getCalculationUsageParserRuleCall_9() { return cCalculationUsageParserRuleCall_9; }
		
		//StateUsage
		public RuleCall getStateUsageParserRuleCall_10() { return cStateUsageParserRuleCall_10; }
		
		//ConstraintUsage
		public RuleCall getConstraintUsageParserRuleCall_11() { return cConstraintUsageParserRuleCall_11; }
		
		//RequirementUsage
		public RuleCall getRequirementUsageParserRuleCall_12() { return cRequirementUsageParserRuleCall_12; }
		
		//CaseUsage
		public RuleCall getCaseUsageParserRuleCall_13() { return cCaseUsageParserRuleCall_13; }
		
		//AnalysisCaseUsage
		public RuleCall getAnalysisCaseUsageParserRuleCall_14() { return cAnalysisCaseUsageParserRuleCall_14; }
		
		//VerificationCaseUsage
		public RuleCall getVerificationCaseUsageParserRuleCall_15() { return cVerificationCaseUsageParserRuleCall_15; }
		
		//ViewUsage
		public RuleCall getViewUsageParserRuleCall_16() { return cViewUsageParserRuleCall_16; }
		
		//ViewpointUsage
		public RuleCall getViewpointUsageParserRuleCall_17() { return cViewpointUsageParserRuleCall_17; }
		
		//RenderingUsage
		public RuleCall getRenderingUsageParserRuleCall_18() { return cRenderingUsageParserRuleCall_18; }
	}
	public class TypeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypeBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cDocumentation_compAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0 = (RuleCall)cDocumentation_compAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1_3 = (Assignment)cAlternatives_1_1.eContents().get(3);
		private final RuleCall cOwnedImport_compPackageImportParserRuleCall_1_1_3_0 = (RuleCall)cOwnedImport_compAssignment_1_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		///* TYPES */ fragment TypeBody returns SysML::Type:
		//	';' |
		//	'{' (documentation_comp+=OwnedDocumentation
		//	| ownedMembership_comp+=NonFeatureTypeMember
		//	| ownedFeatureMembership_comp+=FeatureTypeMember
		//	| ownedImport_comp+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NonFeatureTypeMember |
		//ownedFeatureMembership_comp+=FeatureTypeMember | ownedImport_comp+=PackageImport)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NonFeatureTypeMember |
		//ownedFeatureMembership_comp+=FeatureTypeMember | ownedImport_comp+=PackageImport)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NonFeatureTypeMember |
		//ownedFeatureMembership_comp+=FeatureTypeMember | ownedImport_comp+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//documentation_comp+=OwnedDocumentation
		public Assignment getDocumentation_compAssignment_1_1_0() { return cDocumentation_compAssignment_1_1_0; }
		
		//OwnedDocumentation
		public RuleCall getDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0() { return cDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0; }
		
		//ownedMembership_comp+=NonFeatureTypeMember
		public Assignment getOwnedMembership_compAssignment_1_1_1() { return cOwnedMembership_compAssignment_1_1_1; }
		
		//NonFeatureTypeMember
		public RuleCall getOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_1_0() { return cOwnedMembership_compNonFeatureTypeMemberParserRuleCall_1_1_1_0; }
		
		//ownedFeatureMembership_comp+=FeatureTypeMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_2() { return cOwnedFeatureMembership_compAssignment_1_1_2; }
		
		//FeatureTypeMember
		public RuleCall getOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_2_0() { return cOwnedFeatureMembership_compFeatureTypeMemberParserRuleCall_1_1_2_0; }
		
		//ownedImport_comp+=PackageImport
		public Assignment getOwnedImport_compAssignment_1_1_3() { return cOwnedImport_compAssignment_1_1_3; }
		
		//PackageImport
		public RuleCall getOwnedImport_compPackageImportParserRuleCall_1_1_3_0() { return cOwnedImport_compPackageImportParserRuleCall_1_1_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class NonFeatureTypeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonFeatureTypeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypeMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cNonUsagePackageMemberParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//NonFeatureTypeMember SysML::Membership:
		//	TypeMemberPrefix NonUsagePackageMember;
		@Override public ParserRule getRule() { return rule; }
		
		//TypeMemberPrefix NonUsagePackageMember
		public Group getGroup() { return cGroup; }
		
		//TypeMemberPrefix
		public RuleCall getTypeMemberPrefixParserRuleCall_0() { return cTypeMemberPrefixParserRuleCall_0; }
		
		//NonUsagePackageMember
		public RuleCall getNonUsagePackageMemberParserRuleCall_1() { return cNonUsagePackageMemberParserRuleCall_1; }
	}
	public class FeatureTypeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureTypeMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFeatureMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEndFeatureMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//FeatureTypeMember SysML::FeatureMembership:
		//	FeatureMember | EndFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureMember | EndFeatureMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FeatureMember
		public RuleCall getFeatureMemberParserRuleCall_0() { return cFeatureMemberParserRuleCall_0; }
		
		//EndFeatureMember
		public RuleCall getEndFeatureMemberParserRuleCall_1() { return cEndFeatureMemberParserRuleCall_1; }
	}
	public class TypeMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypeMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment TypeMemberPrefix returns SysML::Membership:
		//	ownedRelationship_comp+=PrefixDocumentation*
		//	visibility=VisibilityIndicator?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=PrefixDocumentation* visibility=VisibilityIndicator?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=PrefixDocumentation*
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//PrefixDocumentation
		public RuleCall getOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0() { return cOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0; }
		
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class FeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypeMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cDirectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0 = (RuleCall)cDirectionAssignment_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compFeatureElementParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		///* Feature Memberships */ FeatureMember SysML::FeatureMembership:
		//	TypeMemberPrefix direction=FeatureDirection
		//	ownedMemberFeature_comp=FeatureElement;
		@Override public ParserRule getRule() { return rule; }
		
		//TypeMemberPrefix direction=FeatureDirection ownedMemberFeature_comp=FeatureElement
		public Group getGroup() { return cGroup; }
		
		//TypeMemberPrefix
		public RuleCall getTypeMemberPrefixParserRuleCall_0() { return cTypeMemberPrefixParserRuleCall_0; }
		
		//direction=FeatureDirection
		public Assignment getDirectionAssignment_1() { return cDirectionAssignment_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0; }
		
		//ownedMemberFeature_comp=FeatureElement
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//FeatureElement
		public RuleCall getOwnedMemberFeature_compFeatureElementParserRuleCall_2_0() { return cOwnedMemberFeature_compFeatureElementParserRuleCall_2_0; }
	}
	public class EndFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EndFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypeMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEndKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDirectionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_2_0 = (RuleCall)cDirectionAssignment_2.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedMemberFeature_compFeatureElementParserRuleCall_3_0 = (RuleCall)cOwnedMemberFeature_compAssignment_3.eContents().get(0);
		
		//EndFeatureMember SysML::EndFeatureMembership:
		//	TypeMemberPrefix 'end' direction=FeatureDirection
		//	ownedMemberFeature_comp=FeatureElement;
		@Override public ParserRule getRule() { return rule; }
		
		//TypeMemberPrefix 'end' direction=FeatureDirection ownedMemberFeature_comp=FeatureElement
		public Group getGroup() { return cGroup; }
		
		//TypeMemberPrefix
		public RuleCall getTypeMemberPrefixParserRuleCall_0() { return cTypeMemberPrefixParserRuleCall_0; }
		
		//'end'
		public Keyword getEndKeyword_1() { return cEndKeyword_1; }
		
		//direction=FeatureDirection
		public Assignment getDirectionAssignment_2() { return cDirectionAssignment_2; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_2_0() { return cDirectionFeatureDirectionEnumRuleCall_2_0; }
		
		//ownedMemberFeature_comp=FeatureElement
		public Assignment getOwnedMemberFeature_compAssignment_3() { return cOwnedMemberFeature_compAssignment_3; }
		
		//FeatureElement
		public RuleCall getOwnedMemberFeature_compFeatureElementParserRuleCall_3_0() { return cOwnedMemberFeature_compFeatureElementParserRuleCall_3_0; }
	}
	public class FeatureElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureElement");
		private final RuleCall cUsageElementParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//FeatureElement SysML::Feature:
		//	UsageElement;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageElement
		public RuleCall getUsageElementParserRuleCall() { return cUsageElementParserRuleCall; }
	}
	public class SuperclassingPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuperclassingPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSpecializesKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedSuperclassingParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedSuperclassingParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationship_compAssignment_2_1.eContents().get(0);
		
		///* CLASSIFIERS */ /* Superclassing */ fragment SuperclassingPart returns SysML::Classifier:
		//	SpecializesKeyword ownedRelationship_comp+=OwnedSuperclassing (',' ownedRelationship_comp+=OwnedSuperclassing)*;
		@Override public ParserRule getRule() { return rule; }
		
		//SpecializesKeyword ownedRelationship_comp+=OwnedSuperclassing (',' ownedRelationship_comp+=OwnedSuperclassing)*
		public Group getGroup() { return cGroup; }
		
		//SpecializesKeyword
		public RuleCall getSpecializesKeywordParserRuleCall_0() { return cSpecializesKeywordParserRuleCall_0; }
		
		//ownedRelationship_comp+=OwnedSuperclassing
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//OwnedSuperclassing
		public RuleCall getOwnedRelationship_compOwnedSuperclassingParserRuleCall_1_0() { return cOwnedRelationship_compOwnedSuperclassingParserRuleCall_1_0; }
		
		//(',' ownedRelationship_comp+=OwnedSuperclassing)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//ownedRelationship_comp+=OwnedSuperclassing
		public Assignment getOwnedRelationship_compAssignment_2_1() { return cOwnedRelationship_compAssignment_2_1; }
		
		//OwnedSuperclassing
		public RuleCall getOwnedRelationship_compOwnedSuperclassingParserRuleCall_2_1_0() { return cOwnedRelationship_compOwnedSuperclassingParserRuleCall_2_1_0; }
	}
	public class SpecializesKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SpecializesKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSpecializesKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//SpecializesKeyword:
		//	':>' | 'specializes';
		@Override public ParserRule getRule() { return rule; }
		
		//':>' | 'specializes'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':>'
		public Keyword getColonGreaterThanSignKeyword_0() { return cColonGreaterThanSignKeyword_0; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_1() { return cSpecializesKeyword_1; }
	}
	public class OwnedSuperclassingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedSuperclassing");
		private final Assignment cSuperclassAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSuperclassClassifierCrossReference_0 = (CrossReference)cSuperclassAssignment.eContents().get(0);
		private final RuleCall cSuperclassClassifierQualifiedNameParserRuleCall_0_1 = (RuleCall)cSuperclassClassifierCrossReference_0.eContents().get(1);
		
		//OwnedSuperclassing SysML::Superclassing:
		//	superclass=[SysML::Classifier|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//superclass=[SysML::Classifier|QualifiedName]
		public Assignment getSuperclassAssignment() { return cSuperclassAssignment; }
		
		//[SysML::Classifier|QualifiedName]
		public CrossReference getSuperclassClassifierCrossReference_0() { return cSuperclassClassifierCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSuperclassClassifierQualifiedNameParserRuleCall_0_1() { return cSuperclassClassifierQualifiedNameParserRuleCall_0_1; }
	}
	public class FeatureDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* FEATURES */ /* Features */ fragment FeatureDeclaration returns SysML::Feature:
		//	Identification FeatureSpecializationPart?
		//	| FeatureSpecializationPart;
		@Override public ParserRule getRule() { return rule; }
		
		//Identification FeatureSpecializationPart? | FeatureSpecializationPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Identification FeatureSpecializationPart?
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_0_1() { return cFeatureSpecializationPartParserRuleCall_0_1; }
		
		//FeatureSpecializationPart
		public RuleCall getFeatureSpecializationPartParserRuleCall_1() { return cFeatureSpecializationPartParserRuleCall_1; }
	}
	public class FeatureSpecializationPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureSpecializationPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment FeatureSpecializationPart returns SysML::Feature:
		//	-> FeatureSpecialization+ MultiplicityPart? FeatureSpecialization*
		//	| MultiplicityPart FeatureSpecialization*;
		@Override public ParserRule getRule() { return rule; }
		
		//-> FeatureSpecialization+ MultiplicityPart? FeatureSpecialization* | MultiplicityPart FeatureSpecialization*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//-> FeatureSpecialization+ MultiplicityPart? FeatureSpecialization*
		public Group getGroup_0() { return cGroup_0; }
		
		//-> FeatureSpecialization+
		public RuleCall getFeatureSpecializationParserRuleCall_0_0() { return cFeatureSpecializationParserRuleCall_0_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_1() { return cMultiplicityPartParserRuleCall_0_1; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_2() { return cFeatureSpecializationParserRuleCall_0_2; }
		
		//MultiplicityPart FeatureSpecialization*
		public Group getGroup_1() { return cGroup_1; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1_0() { return cMultiplicityPartParserRuleCall_1_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_1_1() { return cFeatureSpecializationParserRuleCall_1_1; }
	}
	public class MultiplicityPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedMembership_compMultiplicityMemberParserRuleCall_0_0 = (RuleCall)cOwnedMembership_compAssignment_0.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cIsOrderedAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final Keyword cIsOrderedOrderedKeyword_1_0_0 = (Keyword)cIsOrderedAssignment_1_0.eContents().get(0);
		private final Assignment cIsNonuniqueAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final Keyword cIsNonuniqueNonuniqueKeyword_1_1_0 = (Keyword)cIsNonuniqueAssignment_1_1.eContents().get(0);
		
		//fragment MultiplicityPart returns SysML::Feature:
		//	ownedMembership_comp+=MultiplicityMember (isOrdered?='ordered'? & isNonunique?='nonunique'?);
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership_comp+=MultiplicityMember (isOrdered?='ordered'? & isNonunique?='nonunique'?)
		public Group getGroup() { return cGroup; }
		
		//ownedMembership_comp+=MultiplicityMember
		public Assignment getOwnedMembership_compAssignment_0() { return cOwnedMembership_compAssignment_0; }
		
		//MultiplicityMember
		public RuleCall getOwnedMembership_compMultiplicityMemberParserRuleCall_0_0() { return cOwnedMembership_compMultiplicityMemberParserRuleCall_0_0; }
		
		//(isOrdered?='ordered'? & isNonunique?='nonunique'?)
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//isOrdered?='ordered'?
		public Assignment getIsOrderedAssignment_1_0() { return cIsOrderedAssignment_1_0; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_1_0_0() { return cIsOrderedOrderedKeyword_1_0_0; }
		
		//isNonunique?='nonunique'?
		public Assignment getIsNonuniqueAssignment_1_1() { return cIsNonuniqueAssignment_1_1; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_1_1_0() { return cIsNonuniqueNonuniqueKeyword_1_1_0; }
	}
	public class FeatureSpecializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureSpecialization");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypingsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubsettingsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRedefinitionsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//fragment FeatureSpecialization returns SysML::Feature:
		//	Typings | Subsettings | Redefinitions;
		@Override public ParserRule getRule() { return rule; }
		
		//Typings | Subsettings | Redefinitions
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Typings
		public RuleCall getTypingsParserRuleCall_0() { return cTypingsParserRuleCall_0; }
		
		//Subsettings
		public RuleCall getSubsettingsParserRuleCall_1() { return cSubsettingsParserRuleCall_1; }
		
		//Redefinitions
		public RuleCall getRedefinitionsParserRuleCall_2() { return cRedefinitionsParserRuleCall_2; }
	}
	public class TypingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Typings");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypedByParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1_1.eContents().get(0);
		
		//fragment Typings returns SysML::Feature:
		//	TypedBy (',' ownedRelationship_comp+=OwnedFeatureTyping)*;
		@Override public ParserRule getRule() { return rule; }
		
		//TypedBy (',' ownedRelationship_comp+=OwnedFeatureTyping)*
		public Group getGroup() { return cGroup; }
		
		//TypedBy
		public RuleCall getTypedByParserRuleCall_0() { return cTypedByParserRuleCall_0; }
		
		//(',' ownedRelationship_comp+=OwnedFeatureTyping)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship_comp+=OwnedFeatureTyping
		public Assignment getOwnedRelationship_compAssignment_1_1() { return cOwnedRelationship_compAssignment_1_1; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_1_0() { return cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_1_0; }
	}
	public class TypedByElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypedBy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinedByKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		
		//fragment TypedBy returns SysML::Feature:
		//	DefinedByKeyword ownedRelationship_comp+=OwnedFeatureTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinedByKeyword ownedRelationship_comp+=OwnedFeatureTyping
		public Group getGroup() { return cGroup; }
		
		//DefinedByKeyword
		public RuleCall getDefinedByKeywordParserRuleCall_0() { return cDefinedByKeywordParserRuleCall_0; }
		
		//ownedRelationship_comp+=OwnedFeatureTyping
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_0() { return cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_0; }
	}
	public class DefinedByKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinedByKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cDefinedKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cByKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//DefinedByKeyword:
		//	':' | 'defined' 'by';
		@Override public ParserRule getRule() { return rule; }
		
		//':' | 'defined' 'by'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':'
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }
		
		//'defined' 'by'
		public Group getGroup_1() { return cGroup_1; }
		
		//'defined'
		public Keyword getDefinedKeyword_1_0() { return cDefinedKeyword_1_0; }
		
		//'by'
		public Keyword getByKeyword_1_1() { return cByKeyword_1_1; }
	}
	public class SubsettingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Subsettings");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSubsetsParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedSubsettingParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1_1.eContents().get(0);
		
		//fragment Subsettings returns SysML::Feature:
		//	Subsets (',' ownedRelationship_comp+=OwnedSubsetting)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Subsets (',' ownedRelationship_comp+=OwnedSubsetting)*
		public Group getGroup() { return cGroup; }
		
		//Subsets
		public RuleCall getSubsetsParserRuleCall_0() { return cSubsetsParserRuleCall_0; }
		
		//(',' ownedRelationship_comp+=OwnedSubsetting)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship_comp+=OwnedSubsetting
		public Assignment getOwnedRelationship_compAssignment_1_1() { return cOwnedRelationship_compAssignment_1_1; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationship_compOwnedSubsettingParserRuleCall_1_1_0() { return cOwnedRelationship_compOwnedSubsettingParserRuleCall_1_1_0; }
	}
	public class SubsetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Subsets");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSubsetsKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedSubsettingParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		
		//fragment Subsets returns SysML::Feature:
		//	SubsetsKeyword ownedRelationship_comp+=OwnedSubsetting;
		@Override public ParserRule getRule() { return rule; }
		
		//SubsetsKeyword ownedRelationship_comp+=OwnedSubsetting
		public Group getGroup() { return cGroup; }
		
		//SubsetsKeyword
		public RuleCall getSubsetsKeywordParserRuleCall_0() { return cSubsetsKeywordParserRuleCall_0; }
		
		//ownedRelationship_comp+=OwnedSubsetting
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationship_compOwnedSubsettingParserRuleCall_1_0() { return cOwnedRelationship_compOwnedSubsettingParserRuleCall_1_0; }
	}
	public class SubsetsKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubsetsKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSubsetsKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//SubsetsKeyword:
		//	':>' | 'subsets';
		@Override public ParserRule getRule() { return rule; }
		
		//':>' | 'subsets'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':>'
		public Keyword getColonGreaterThanSignKeyword_0() { return cColonGreaterThanSignKeyword_0; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_1() { return cSubsetsKeyword_1; }
	}
	public class RedefinitionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Redefinitions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRedefinesParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedRedefinitionParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1_1.eContents().get(0);
		
		//fragment Redefinitions returns SysML::Feature:
		//	Redefines (',' ownedRelationship_comp+=OwnedRedefinition)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Redefines (',' ownedRelationship_comp+=OwnedRedefinition)*
		public Group getGroup() { return cGroup; }
		
		//Redefines
		public RuleCall getRedefinesParserRuleCall_0() { return cRedefinesParserRuleCall_0; }
		
		//(',' ownedRelationship_comp+=OwnedRedefinition)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship_comp+=OwnedRedefinition
		public Assignment getOwnedRelationship_compAssignment_1_1() { return cOwnedRelationship_compAssignment_1_1; }
		
		//OwnedRedefinition
		public RuleCall getOwnedRelationship_compOwnedRedefinitionParserRuleCall_1_1_0() { return cOwnedRelationship_compOwnedRedefinitionParserRuleCall_1_1_0; }
	}
	public class RedefinesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Redefines");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRedefinesKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		
		//fragment Redefines returns SysML::Feature:
		//	RedefinesKeyword ownedRelationship_comp+=OwnedRedefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//RedefinesKeyword ownedRelationship_comp+=OwnedRedefinition
		public Group getGroup() { return cGroup; }
		
		//RedefinesKeyword
		public RuleCall getRedefinesKeywordParserRuleCall_0() { return cRedefinesKeywordParserRuleCall_0; }
		
		//ownedRelationship_comp+=OwnedRedefinition
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//OwnedRedefinition
		public RuleCall getOwnedRelationship_compOwnedRedefinitionParserRuleCall_1_0() { return cOwnedRelationship_compOwnedRedefinitionParserRuleCall_1_0; }
	}
	public class RedefinesKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RedefinesKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonGreaterThanSignGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cRedefinesKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//RedefinesKeyword:
		//	':>>' | 'redefines';
		@Override public ParserRule getRule() { return rule; }
		
		//':>>' | 'redefines'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':>>'
		public Keyword getColonGreaterThanSignGreaterThanSignKeyword_0() { return cColonGreaterThanSignGreaterThanSignKeyword_0; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_1() { return cRedefinesKeyword_1; }
	}
	public class OwnedFeatureTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedFeatureTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeTypeQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeTypeCrossReference_0.eContents().get(1);
		
		///* Feature Typing, Subsetting and Redefinition */ OwnedFeatureTyping SysML::FeatureTyping:
		//	type=[SysML::Type|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Type|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Type|QualifiedName]
		public CrossReference getTypeTypeCrossReference_0() { return cTypeTypeCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeTypeQualifiedNameParserRuleCall_0_1() { return cTypeTypeQualifiedNameParserRuleCall_0_1; }
	}
	public class OwnedSubsettingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedSubsetting");
		private final Assignment cSubsettedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSubsettedFeatureFeatureCrossReference_0 = (CrossReference)cSubsettedFeatureAssignment.eContents().get(0);
		private final RuleCall cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cSubsettedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//OwnedSubsetting SysML::Subsetting:
		//	subsettedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//subsettedFeature=[SysML::Feature|QualifiedName]
		public Assignment getSubsettedFeatureAssignment() { return cSubsettedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getSubsettedFeatureFeatureCrossReference_0() { return cSubsettedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class OwnedRedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedRedefinition");
		private final Assignment cRedefinedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRedefinedFeatureFeatureCrossReference_0 = (CrossReference)cRedefinedFeatureAssignment.eContents().get(0);
		private final RuleCall cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cRedefinedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//OwnedRedefinition SysML::Redefinition:
		//	redefinedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//redefinedFeature=[SysML::Feature|QualifiedName]
		public Assignment getRedefinedFeatureAssignment() { return cRedefinedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getRedefinedFeatureFeatureCrossReference_0() { return cRedefinedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class MultiplicityMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityMember");
		private final Assignment cOwnedMemberElement_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compMultiplicityParserRuleCall_0 = (RuleCall)cOwnedMemberElement_compAssignment.eContents().get(0);
		
		///* Multiplicity */ MultiplicityMember SysML::Membership:
		//	ownedMemberElement_comp=Multiplicity;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement_comp=Multiplicity
		public Assignment getOwnedMemberElement_compAssignment() { return cOwnedMemberElement_compAssignment; }
		
		//Multiplicity
		public RuleCall getOwnedMemberElement_compMultiplicityParserRuleCall_0() { return cOwnedMemberElement_compMultiplicityParserRuleCall_0; }
	}
	public class MultiplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Multiplicity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedMembership_compLiteralIntegerMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedMembership_compAssignment_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMembership_compLiteralUnlimitedNaturalMemberParserRuleCall_2_0 = (RuleCall)cOwnedMembership_compAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Multiplicity SysML::MultiplicityRange: // TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
		//	'[' (ownedMembership_comp+=LiteralIntegerMember '..')? ownedMembership_comp+=LiteralUnlimitedNaturalMember ']';
		@Override public ParserRule getRule() { return rule; }
		
		//// TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
		//'[' (ownedMembership_comp+=LiteralIntegerMember '..')? ownedMembership_comp+=LiteralUnlimitedNaturalMember ']'
		public Group getGroup() { return cGroup; }
		
		//// TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//(ownedMembership_comp+=LiteralIntegerMember '..')?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedMembership_comp+=LiteralIntegerMember
		public Assignment getOwnedMembership_compAssignment_1_0() { return cOwnedMembership_compAssignment_1_0; }
		
		//LiteralIntegerMember
		public RuleCall getOwnedMembership_compLiteralIntegerMemberParserRuleCall_1_0_0() { return cOwnedMembership_compLiteralIntegerMemberParserRuleCall_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_1() { return cFullStopFullStopKeyword_1_1; }
		
		//ownedMembership_comp+=LiteralUnlimitedNaturalMember
		public Assignment getOwnedMembership_compAssignment_2() { return cOwnedMembership_compAssignment_2; }
		
		//LiteralUnlimitedNaturalMember
		public RuleCall getOwnedMembership_compLiteralUnlimitedNaturalMemberParserRuleCall_2_0() { return cOwnedMembership_compLiteralUnlimitedNaturalMemberParserRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class LiteralIntegerMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralIntegerMember");
		private final Assignment cOwnedMemberElement_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compLiteralIntegerParserRuleCall_0 = (RuleCall)cOwnedMemberElement_compAssignment.eContents().get(0);
		
		//LiteralIntegerMember SysML::Membership:
		//	ownedMemberElement_comp=LiteralInteger;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement_comp=LiteralInteger
		public Assignment getOwnedMemberElement_compAssignment() { return cOwnedMemberElement_compAssignment; }
		
		//LiteralInteger
		public RuleCall getOwnedMemberElement_compLiteralIntegerParserRuleCall_0() { return cOwnedMemberElement_compLiteralIntegerParserRuleCall_0; }
	}
	public class LiteralUnlimitedNaturalMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralUnlimitedNaturalMember");
		private final Assignment cOwnedMemberElement_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compLiteralUnlimitedNaturalParserRuleCall_0 = (RuleCall)cOwnedMemberElement_compAssignment.eContents().get(0);
		
		//LiteralUnlimitedNaturalMember SysML::Membership:
		//	ownedMemberElement_comp=LiteralUnlimitedNatural;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement_comp=LiteralUnlimitedNatural
		public Assignment getOwnedMemberElement_compAssignment() { return cOwnedMemberElement_compAssignment; }
		
		//LiteralUnlimitedNatural
		public RuleCall getOwnedMemberElement_compLiteralUnlimitedNaturalParserRuleCall_0() { return cOwnedMemberElement_compLiteralUnlimitedNaturalParserRuleCall_0; }
	}
	public class ConnectorEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMemberNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0_0 = (RuleCall)cMemberNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compConnectorEndParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		///* CONNECTORS */ /* Connectors */ ConnectorEndMember SysML::EndFeatureMembership:
		//	(memberName=Name '=>')? ownedMemberFeature_comp=ConnectorEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//(memberName=Name '=>')? ownedMemberFeature_comp=ConnectorEnd
		public Group getGroup() { return cGroup; }
		
		//(memberName=Name '=>')?
		public Group getGroup_0() { return cGroup_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0_0() { return cMemberNameAssignment_0_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0_0() { return cMemberNameNameParserRuleCall_0_0_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_0_1() { return cEqualsSignGreaterThanSignKeyword_0_1; }
		
		//ownedMemberFeature_comp=ConnectorEnd
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//ConnectorEnd
		public RuleCall getOwnedMemberFeature_compConnectorEndParserRuleCall_1_0() { return cOwnedMemberFeature_compConnectorEndParserRuleCall_1_0; }
	}
	public class ConnectorEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compOwnedSubsettingParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMembership_compMultiplicityMemberParserRuleCall_1_0 = (RuleCall)cOwnedMembership_compAssignment_1.eContents().get(0);
		
		//ConnectorEnd SysML::Feature:
		//	ownedRelationship_comp+=OwnedSubsetting
		//	ownedMembership_comp+=MultiplicityMember?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=OwnedSubsetting ownedMembership_comp+=MultiplicityMember?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=OwnedSubsetting
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationship_compOwnedSubsettingParserRuleCall_0_0() { return cOwnedRelationship_compOwnedSubsettingParserRuleCall_0_0; }
		
		//ownedMembership_comp+=MultiplicityMember?
		public Assignment getOwnedMembership_compAssignment_1() { return cOwnedMembership_compAssignment_1; }
		
		//MultiplicityMember
		public RuleCall getOwnedMembership_compMultiplicityMemberParserRuleCall_1_0() { return cOwnedMembership_compMultiplicityMemberParserRuleCall_1_0; }
	}
	public class BindingKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BindingKeyword");
		private final Keyword cBindKeyword = (Keyword)rule.eContents().get(1);
		
		///* Binding Connectors */ BindingKeyword:
		//	'bind';
		@Override public ParserRule getRule() { return rule; }
		
		//'bind'
		public Keyword getBindKeyword() { return cBindKeyword; }
	}
	public class BindingConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BindingConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cBindingKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cBindingConnectorDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cTypeBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//BindingConnector SysML::BindingConnector:
		//	isAbstract?='abstract'? BindingKeyword
		//	BindingConnectorDeclaration TypeBody;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? BindingKeyword BindingConnectorDeclaration TypeBody
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//BindingKeyword
		public RuleCall getBindingKeywordParserRuleCall_1() { return cBindingKeywordParserRuleCall_1; }
		
		//BindingConnectorDeclaration
		public RuleCall getBindingConnectorDeclarationParserRuleCall_2() { return cBindingConnectorDeclarationParserRuleCall_2; }
		
		//TypeBody
		public RuleCall getTypeBodyParserRuleCall_3() { return cTypeBodyParserRuleCall_3; }
	}
	public class BindingConnectorDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BindingConnectorDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cFeatureDeclarationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cAsKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//fragment BindingConnectorDeclaration returns SysML::BindingConnector:
		//	(FeatureDeclaration 'as')?
		//	ownedFeatureMembership_comp+=ConnectorEndMember '='
		//	ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(FeatureDeclaration 'as')? ownedFeatureMembership_comp+=ConnectorEndMember '='
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//(FeatureDeclaration 'as')?
		public Group getGroup_0() { return cGroup_0; }
		
		//FeatureDeclaration
		public RuleCall getFeatureDeclarationParserRuleCall_0_0() { return cFeatureDeclarationParserRuleCall_0_0; }
		
		//'as'
		public Keyword getAsKeyword_0_1() { return cAsKeyword_0_1; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0; }
	}
	public class SuccessionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionKeyword");
		private final Keyword cSuccessionKeyword = (Keyword)rule.eContents().get(1);
		
		///* Successions */ SuccessionKeyword:
		//	'succession';
		@Override public ParserRule getRule() { return rule; }
		
		//'succession'
		public Keyword getSuccessionKeyword() { return cSuccessionKeyword; }
	}
	public class SuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Succession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cSuccessionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cSuccessionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cTypeBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//Succession SysML::Succession:
		//	isAbstract?='abstract'? SuccessionKeyword SuccessionDeclaration TypeBody;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? SuccessionKeyword SuccessionDeclaration TypeBody
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//SuccessionKeyword
		public RuleCall getSuccessionKeywordParserRuleCall_1() { return cSuccessionKeywordParserRuleCall_1; }
		
		//SuccessionDeclaration
		public RuleCall getSuccessionDeclarationParserRuleCall_2() { return cSuccessionDeclarationParserRuleCall_2; }
		
		//TypeBody
		public RuleCall getTypeBodyParserRuleCall_3() { return cTypeBodyParserRuleCall_3; }
	}
	public class SuccessionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cFeatureDeclarationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cFirstKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//fragment SuccessionDeclaration returns SysML::Succession:
		//	(FeatureDeclaration? 'first')?
		//	ownedFeatureMembership_comp+=ConnectorEndMember 'then'
		//	ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(FeatureDeclaration? 'first')? ownedFeatureMembership_comp+=ConnectorEndMember 'then'
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//(FeatureDeclaration? 'first')?
		public Group getGroup_0() { return cGroup_0; }
		
		//FeatureDeclaration?
		public RuleCall getFeatureDeclarationParserRuleCall_0_0() { return cFeatureDeclarationParserRuleCall_0_0; }
		
		//'first'
		public Keyword getFirstKeyword_0_1() { return cFirstKeyword_0_1; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0; }
	}
	public class ItemFlowKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowKeyword");
		private final Keyword cStreamKeyword = (Keyword)rule.eContents().get(1);
		
		///* INTERACTIONS */ /* Item Flows */ ItemFlowKeyword:
		//	'stream';
		@Override public ParserRule getRule() { return rule; }
		
		//'stream'
		public Keyword getStreamKeyword() { return cStreamKeyword; }
	}
	public class ItemFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cItemFlowKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cTypeBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ItemFlow SysML::ItemFlow:
		//	isAbstract?='abstract'? ItemFlowKeyword
		//	ItemFlowDeclaration TypeBody;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? ItemFlowKeyword ItemFlowDeclaration TypeBody
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//ItemFlowKeyword
		public RuleCall getItemFlowKeywordParserRuleCall_1() { return cItemFlowKeywordParserRuleCall_1; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_2() { return cItemFlowDeclarationParserRuleCall_2; }
		
		//TypeBody
		public RuleCall getTypeBodyParserRuleCall_3() { return cTypeBodyParserRuleCall_3; }
	}
	public class SuccessionItemFlowKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionItemFlowKeyword");
		private final Keyword cFlowKeyword = (Keyword)rule.eContents().get(1);
		
		//SuccessionItemFlowKeyword:
		//	'flow';
		@Override public ParserRule getRule() { return rule; }
		
		//'flow'
		public Keyword getFlowKeyword() { return cFlowKeyword; }
	}
	public class SuccessionItemFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionItemFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cSuccessionItemFlowKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cTypeBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//SuccessionItemFlow SysML::SuccessionItemFlow:
		//	isAbstract?='abstract'? SuccessionItemFlowKeyword
		//	ItemFlowDeclaration TypeBody;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? SuccessionItemFlowKeyword ItemFlowDeclaration TypeBody
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//SuccessionItemFlowKeyword
		public RuleCall getSuccessionItemFlowKeywordParserRuleCall_1() { return cSuccessionItemFlowKeywordParserRuleCall_1; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_2() { return cItemFlowDeclarationParserRuleCall_2; }
		
		//TypeBody
		public RuleCall getTypeBodyParserRuleCall_3() { return cTypeBodyParserRuleCall_3; }
	}
	public class ItemFlowDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final RuleCall cFeatureDeclarationParserRuleCall_0_0_0 = (RuleCall)cGroup_0_0.eContents().get(0);
		private final Alternatives cAlternatives_0_0_1 = (Alternatives)cGroup_0_0.eContents().get(1);
		private final Group cGroup_0_0_1_0 = (Group)cAlternatives_0_0_1.eContents().get(0);
		private final Keyword cOfKeyword_0_0_1_0_0 = (Keyword)cGroup_0_0_1_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0_1_0_1 = (Assignment)cGroup_0_0_1_0.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_0_0_1_0_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0_1_0_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0_1_1 = (Assignment)cAlternatives_0_0_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_0_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0_1_1.eContents().get(0);
		private final Keyword cFromKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//fragment ItemFlowDeclaration returns SysML::ItemFlow:
		//	(FeatureDeclaration? ('of' ownedFeatureMembership_comp+=ItemFeatureMember
		//	| ownedFeatureMembership_comp+=EmptyItemFeatureMember) 'from'
		//	| ownedFeatureMembership_comp+=EmptyItemFeatureMember) ownedFeatureMembership_comp+=ItemFlowEndMember 'to'
		//	ownedFeatureMembership_comp+=ItemFlowEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(FeatureDeclaration? ('of' ownedFeatureMembership_comp+=ItemFeatureMember |
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember) 'from' | ownedFeatureMembership_comp+=EmptyItemFeatureMember)
		//ownedFeatureMembership_comp+=ItemFlowEndMember 'to' ownedFeatureMembership_comp+=ItemFlowEndMember
		public Group getGroup() { return cGroup; }
		
		//(FeatureDeclaration? ('of' ownedFeatureMembership_comp+=ItemFeatureMember |
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember) 'from' | ownedFeatureMembership_comp+=EmptyItemFeatureMember)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//FeatureDeclaration? ('of' ownedFeatureMembership_comp+=ItemFeatureMember |
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember) 'from'
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//FeatureDeclaration?
		public RuleCall getFeatureDeclarationParserRuleCall_0_0_0() { return cFeatureDeclarationParserRuleCall_0_0_0; }
		
		//('of' ownedFeatureMembership_comp+=ItemFeatureMember | ownedFeatureMembership_comp+=EmptyItemFeatureMember)
		public Alternatives getAlternatives_0_0_1() { return cAlternatives_0_0_1; }
		
		//'of' ownedFeatureMembership_comp+=ItemFeatureMember
		public Group getGroup_0_0_1_0() { return cGroup_0_0_1_0; }
		
		//'of'
		public Keyword getOfKeyword_0_0_1_0_0() { return cOfKeyword_0_0_1_0_0; }
		
		//ownedFeatureMembership_comp+=ItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0_1_0_1() { return cOwnedFeatureMembership_compAssignment_0_0_1_0_1; }
		
		//ItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_0_0_1_0_1_0() { return cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_0_0_1_0_1_0; }
		
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0_1_1() { return cOwnedFeatureMembership_compAssignment_0_0_1_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_0_1_1_0() { return cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_0_1_1_0; }
		
		//'from'
		public Keyword getFromKeyword_0_0_2() { return cFromKeyword_0_0_2; }
		
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_1() { return cOwnedFeatureMembership_compAssignment_0_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_1_0() { return cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_0_1_0; }
		
		//ownedFeatureMembership_comp+=ItemFlowEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_1_0; }
		
		//'to'
		public Keyword getToKeyword_2() { return cToKeyword_2; }
		
		//ownedFeatureMembership_comp+=ItemFlowEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0; }
	}
	public class ItemFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMemberNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0_0 = (RuleCall)cMemberNameAssignment_0_0.eContents().get(0);
		private final RuleCall cDefinedByKeywordParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compItemFeatureParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		//ItemFeatureMember SysML::FeatureMembership:
		//	(memberName=Name DefinedByKeyword)? ownedMemberFeature_comp=ItemFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//(memberName=Name DefinedByKeyword)? ownedMemberFeature_comp=ItemFeature
		public Group getGroup() { return cGroup; }
		
		//(memberName=Name DefinedByKeyword)?
		public Group getGroup_0() { return cGroup_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0_0() { return cMemberNameAssignment_0_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0_0() { return cMemberNameNameParserRuleCall_0_0_0; }
		
		//DefinedByKeyword
		public RuleCall getDefinedByKeywordParserRuleCall_0_1() { return cDefinedByKeywordParserRuleCall_0_1; }
		
		//ownedMemberFeature_comp=ItemFeature
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//ItemFeature
		public RuleCall getOwnedMemberFeature_compItemFeatureParserRuleCall_1_0() { return cOwnedMemberFeature_compItemFeatureParserRuleCall_1_0; }
	}
	public class ItemFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedMembership_compMultiplicityMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedMembership_compAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOwnedMembership_compAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedMembership_compMultiplicityMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedMembership_compAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1_1.eContents().get(0);
		
		//ItemFeature SysML::ItemFeature:
		//	ownedRelationship_comp+=OwnedFeatureTyping
		//	ownedMembership_comp+=MultiplicityMember?
		//	| ownedMembership_comp+=MultiplicityMember
		//	ownedRelationship_comp+=OwnedFeatureTyping?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=OwnedFeatureTyping ownedMembership_comp+=MultiplicityMember? |
		//ownedMembership_comp+=MultiplicityMember ownedRelationship_comp+=OwnedFeatureTyping?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship_comp+=OwnedFeatureTyping ownedMembership_comp+=MultiplicityMember?
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship_comp+=OwnedFeatureTyping
		public Assignment getOwnedRelationship_compAssignment_0_0() { return cOwnedRelationship_compAssignment_0_0; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0_0_0() { return cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0_0_0; }
		
		//ownedMembership_comp+=MultiplicityMember?
		public Assignment getOwnedMembership_compAssignment_0_1() { return cOwnedMembership_compAssignment_0_1; }
		
		//MultiplicityMember
		public RuleCall getOwnedMembership_compMultiplicityMemberParserRuleCall_0_1_0() { return cOwnedMembership_compMultiplicityMemberParserRuleCall_0_1_0; }
		
		//ownedMembership_comp+=MultiplicityMember ownedRelationship_comp+=OwnedFeatureTyping?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedMembership_comp+=MultiplicityMember
		public Assignment getOwnedMembership_compAssignment_1_0() { return cOwnedMembership_compAssignment_1_0; }
		
		//MultiplicityMember
		public RuleCall getOwnedMembership_compMultiplicityMemberParserRuleCall_1_0_0() { return cOwnedMembership_compMultiplicityMemberParserRuleCall_1_0_0; }
		
		//ownedRelationship_comp+=OwnedFeatureTyping?
		public Assignment getOwnedRelationship_compAssignment_1_1() { return cOwnedRelationship_compAssignment_1_1; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_1_0() { return cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_1_1_0; }
	}
	public class EmptyItemFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFeature");
		private final Action cItemFeatureAction = (Action)rule.eContents().get(1);
		
		//EmptyItemFeature SysML::ItemFeature:
		//	{SysML::ItemFeature};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ItemFeature}
		public Action getItemFeatureAction() { return cItemFeatureAction; }
	}
	public class ItemFlowEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowEndMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compItemFlowEndParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//ItemFlowEndMember SysML::EndFeatureMembership:
		//	ownedMemberFeature_comp=ItemFlowEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=ItemFlowEnd
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//ItemFlowEnd
		public RuleCall getOwnedMemberFeature_compItemFlowEndParserRuleCall_0() { return cOwnedMemberFeature_compItemFlowEndParserRuleCall_0; }
	}
	public class ItemFlowEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowEnd");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compItemFlowFeatureMemberParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//ItemFlowEnd SysML::ItemFlowEnd:
		//	ownedFeatureMembership_comp+=ItemFlowFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=ItemFlowFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//ItemFlowFeatureMember
		public RuleCall getOwnedFeatureMembership_compItemFlowFeatureMemberParserRuleCall_0() { return cOwnedFeatureMembership_compItemFlowFeatureMemberParserRuleCall_0; }
	}
	public class EmptyItemFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFeatureMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptyItemFeatureParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EmptyItemFeatureMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=EmptyItemFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptyItemFeature
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptyItemFeature
		public RuleCall getOwnedMemberFeature_compEmptyItemFeatureParserRuleCall_0() { return cOwnedMemberFeature_compEmptyItemFeatureParserRuleCall_0; }
	}
	public class EmptyItemFlowEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFlowEnd");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyItemFlowFeatureMemberParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//EmptyItemFlowEnd SysML::ItemFlowEnd:
		//	ownedFeatureMembership_comp+=EmptyItemFlowFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptyItemFlowFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//EmptyItemFlowFeatureMember
		public RuleCall getOwnedFeatureMembership_compEmptyItemFlowFeatureMemberParserRuleCall_0() { return cOwnedFeatureMembership_compEmptyItemFlowFeatureMemberParserRuleCall_0; }
	}
	public class ItemFlowFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowFeatureMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compItemFlowFeatureParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//ItemFlowFeatureMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=ItemFlowFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=ItemFlowFeature
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//ItemFlowFeature
		public RuleCall getOwnedMemberFeature_compItemFlowFeatureParserRuleCall_0() { return cOwnedMemberFeature_compItemFlowFeatureParserRuleCall_0; }
	}
	public class ItemFlowFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowFeature");
		private final Assignment cOwnedRelationship_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedRedefinitionParserRuleCall_0 = (RuleCall)cOwnedRelationship_compAssignment.eContents().get(0);
		
		//ItemFlowFeature SysML::ItemFlowFeature:
		//	ownedRelationship_comp+=OwnedRedefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=OwnedRedefinition
		public Assignment getOwnedRelationship_compAssignment() { return cOwnedRelationship_compAssignment; }
		
		//OwnedRedefinition
		public RuleCall getOwnedRelationship_compOwnedRedefinitionParserRuleCall_0() { return cOwnedRelationship_compOwnedRedefinitionParserRuleCall_0; }
	}
	public class EmptyItemFlowEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFlowEndMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptyItemFlowEndParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EmptyItemFlowEndMember SysML::EndFeatureMembership:
		//	ownedMemberFeature_comp=EmptyItemFlowEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptyItemFlowEnd
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptyItemFlowEnd
		public RuleCall getOwnedMemberFeature_compEmptyItemFlowEndParserRuleCall_0() { return cOwnedMemberFeature_compEmptyItemFlowEndParserRuleCall_0; }
	}
	public class EmptyItemFlowFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFlowFeatureMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptyItemFlowFeatureParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EmptyItemFlowFeatureMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=EmptyItemFlowFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptyItemFlowFeature
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptyItemFlowFeature
		public RuleCall getOwnedMemberFeature_compEmptyItemFlowFeatureParserRuleCall_0() { return cOwnedMemberFeature_compEmptyItemFlowFeatureParserRuleCall_0; }
	}
	public class EmptyItemFlowFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyItemFlowFeature");
		private final Assignment cOwnedRelationship_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationship_compEmptyRedefinitionParserRuleCall_0 = (RuleCall)cOwnedRelationship_compAssignment.eContents().get(0);
		
		//EmptyItemFlowFeature SysML::ItemFlowFeature:
		//	ownedRelationship_comp+=EmptyRedefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=EmptyRedefinition
		public Assignment getOwnedRelationship_compAssignment() { return cOwnedRelationship_compAssignment; }
		
		//EmptyRedefinition
		public RuleCall getOwnedRelationship_compEmptyRedefinitionParserRuleCall_0() { return cOwnedRelationship_compEmptyRedefinitionParserRuleCall_0; }
	}
	public class EmptyRedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyRedefinition");
		private final Action cRedefinitionAction = (Action)rule.eContents().get(1);
		
		//EmptyRedefinition SysML::Redefinition:
		//	{SysML::Redefinition};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Redefinition}
		public Action getRedefinitionAction() { return cRedefinitionAction; }
	}
	public class DependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Dependency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDependencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cIdentificationParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cFromKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cClientAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cClientElementCrossReference_2_0 = (CrossReference)cClientAssignment_2.eContents().get(0);
		private final RuleCall cClientElementQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cClientElementCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cClientAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cClientElementCrossReference_3_1_0 = (CrossReference)cClientAssignment_3_1.eContents().get(0);
		private final RuleCall cClientElementQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cClientElementCrossReference_3_1_0.eContents().get(1);
		private final Keyword cToKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSupplierAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSupplierElementCrossReference_5_0 = (CrossReference)cSupplierAssignment_5.eContents().get(0);
		private final RuleCall cSupplierElementQualifiedNameParserRuleCall_5_0_1 = (RuleCall)cSupplierElementCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSupplierAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cSupplierElementCrossReference_6_1_0 = (CrossReference)cSupplierAssignment_6_1.eContents().get(0);
		private final RuleCall cSupplierElementQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cSupplierElementCrossReference_6_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		///* DEPENDENCIES */ Dependency SysML::Dependency:
		//	'dependency' (Identification? 'from')?
		//	client+=[SysML::Element|QualifiedName] (',' client+=[SysML::Element|QualifiedName])* 'to'
		//	supplier+=[SysML::Element|QualifiedName] (',' supplier+=[SysML::Element|QualifiedName])* ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'dependency' (Identification? 'from')? client+=[SysML::Element|QualifiedName] (','
		//client+=[SysML::Element|QualifiedName])* 'to' supplier+=[SysML::Element|QualifiedName] (','
		//supplier+=[SysML::Element|QualifiedName])* ';'
		public Group getGroup() { return cGroup; }
		
		//'dependency'
		public Keyword getDependencyKeyword_0() { return cDependencyKeyword_0; }
		
		//(Identification? 'from')?
		public Group getGroup_1() { return cGroup_1; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_1_0() { return cIdentificationParserRuleCall_1_0; }
		
		//'from'
		public Keyword getFromKeyword_1_1() { return cFromKeyword_1_1; }
		
		//client+=[SysML::Element|QualifiedName]
		public Assignment getClientAssignment_2() { return cClientAssignment_2; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getClientElementCrossReference_2_0() { return cClientElementCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getClientElementQualifiedNameParserRuleCall_2_0_1() { return cClientElementQualifiedNameParserRuleCall_2_0_1; }
		
		//(',' client+=[SysML::Element|QualifiedName])*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//client+=[SysML::Element|QualifiedName]
		public Assignment getClientAssignment_3_1() { return cClientAssignment_3_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getClientElementCrossReference_3_1_0() { return cClientElementCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getClientElementQualifiedNameParserRuleCall_3_1_0_1() { return cClientElementQualifiedNameParserRuleCall_3_1_0_1; }
		
		//'to'
		public Keyword getToKeyword_4() { return cToKeyword_4; }
		
		//supplier+=[SysML::Element|QualifiedName]
		public Assignment getSupplierAssignment_5() { return cSupplierAssignment_5; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getSupplierElementCrossReference_5_0() { return cSupplierElementCrossReference_5_0; }
		
		//QualifiedName
		public RuleCall getSupplierElementQualifiedNameParserRuleCall_5_0_1() { return cSupplierElementQualifiedNameParserRuleCall_5_0_1; }
		
		//(',' supplier+=[SysML::Element|QualifiedName])*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//supplier+=[SysML::Element|QualifiedName]
		public Assignment getSupplierAssignment_6_1() { return cSupplierAssignment_6_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getSupplierElementCrossReference_6_1_0() { return cSupplierElementCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getSupplierElementQualifiedNameParserRuleCall_6_1_0_1() { return cSupplierElementQualifiedNameParserRuleCall_6_1_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class DefinitionPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionPrefix");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Assignment cIsVariationAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cIsVariationVariationKeyword_1_0 = (Keyword)cIsVariationAssignment_1.eContents().get(0);
		
		///* DEFINITION AND USAGE */ /* Definitions */ fragment DefinitionPrefix returns SysML::Definition:
		//	isAbstract?='abstract' | isVariation?='variation';
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract' | isVariation?='variation'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract?='abstract'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//isVariation?='variation'
		public Assignment getIsVariationAssignment_1() { return cIsVariationAssignment_1; }
		
		//'variation'
		public Keyword getIsVariationVariationKeyword_1_0() { return cIsVariationVariationKeyword_1_0; }
	}
	public class DefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Definition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment Definition returns SysML::Definition:
		//	DefinitionDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_0() { return cDefinitionDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class DefinitionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIdentificationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cSuperclassingPartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment DefinitionDeclaration returns SysML::Definition:
		//	Identification? SuperclassingPart?;
		@Override public ParserRule getRule() { return rule; }
		
		//Identification? SuperclassingPart?
		public Group getGroup() { return cGroup; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0() { return cIdentificationParserRuleCall_0; }
		
		//SuperclassingPart?
		public RuleCall getSuperclassingPartParserRuleCall_1() { return cSuperclassingPartParserRuleCall_1; }
	}
	public class DefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cDefinitionBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment DefinitionBody returns SysML::Type:
		//	';'
		//	| '{' DefinitionBodyItem* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' DefinitionBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' DefinitionBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//DefinitionBodyItem*
		public RuleCall getDefinitionBodyItemParserRuleCall_1_1() { return cDefinitionBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class DefinitionBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cDocumentation_compAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cDocumentation_compOwnedDocumentationParserRuleCall_0_0 = (RuleCall)cDocumentation_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_0 = (RuleCall)cOwnedMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedMembership_compVariantUsageMemberParserRuleCall_2_0 = (RuleCall)cOwnedMembership_compAssignment_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compNestedUsageMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cOwnedFeatureMembership_compAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_4_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_4_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4_1.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cOwnedImport_compPackageImportParserRuleCall_5_0 = (RuleCall)cOwnedImport_compAssignment_5.eContents().get(0);
		
		//fragment DefinitionBodyItem returns SysML::Type:
		//	documentation_comp+=OwnedDocumentation
		//	| ownedMembership_comp+=NestedDefinitionMember
		//	| ownedMembership_comp+=VariantUsageMember
		//	| ownedFeatureMembership_comp+=NestedUsageMember
		//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
		//	ownedFeatureMembership_comp+=IndividualUsageMember
		//	| => ownedImport_comp+=PackageImport;
		@Override public ParserRule getRule() { return rule; }
		
		//documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NestedDefinitionMember |
		//ownedMembership_comp+=VariantUsageMember | ownedFeatureMembership_comp+=NestedUsageMember |
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=IndividualUsageMember | =>
		//ownedImport_comp+=PackageImport
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//documentation_comp+=OwnedDocumentation
		public Assignment getDocumentation_compAssignment_0() { return cDocumentation_compAssignment_0; }
		
		//OwnedDocumentation
		public RuleCall getDocumentation_compOwnedDocumentationParserRuleCall_0_0() { return cDocumentation_compOwnedDocumentationParserRuleCall_0_0; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1() { return cOwnedMembership_compAssignment_1; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_0; }
		
		//ownedMembership_comp+=VariantUsageMember
		public Assignment getOwnedMembership_compAssignment_2() { return cOwnedMembership_compAssignment_2; }
		
		//VariantUsageMember
		public RuleCall getOwnedMembership_compVariantUsageMemberParserRuleCall_2_0() { return cOwnedMembership_compVariantUsageMemberParserRuleCall_2_0; }
		
		//ownedFeatureMembership_comp+=NestedUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//NestedUsageMember
		public RuleCall getOwnedFeatureMembership_compNestedUsageMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compNestedUsageMemberParserRuleCall_3_0; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=IndividualUsageMember
		public Group getGroup_4() { return cGroup_4; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_4_0() { return cOwnedFeatureMembership_compAssignment_4_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_4_0_0() { return cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_4_0_0; }
		
		//ownedFeatureMembership_comp+=IndividualUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_4_1() { return cOwnedFeatureMembership_compAssignment_4_1; }
		
		//IndividualUsageMember
		public RuleCall getOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_4_1_0() { return cOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_4_1_0; }
		
		//=> ownedImport_comp+=PackageImport
		public Assignment getOwnedImport_compAssignment_5() { return cOwnedImport_compAssignment_5; }
		
		//PackageImport
		public RuleCall getOwnedImport_compPackageImportParserRuleCall_5_0() { return cOwnedImport_compPackageImportParserRuleCall_5_0; }
	}
	public class NestedDefinitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NestedDefinitionMember");
		private final RuleCall cNonFeatureTypeMemberParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//NestedDefinitionMember SysML::Membership:
		//	NonFeatureTypeMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonFeatureTypeMember
		public RuleCall getNonFeatureTypeMemberParserRuleCall() { return cNonFeatureTypeMemberParserRuleCall; }
	}
	public class VariantUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VariantUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cVariantKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedVariantUsage_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedVariantUsage_compVariantUsageElementParserRuleCall_2_0 = (RuleCall)cOwnedVariantUsage_compAssignment_2.eContents().get(0);
		
		//VariantUsageMember SysML::VariantMembership:
		//	DefinitionMemberPrefix 'variant'
		//	ownedVariantUsage_comp=VariantUsageElement;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'variant' ownedVariantUsage_comp=VariantUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'variant'
		public Keyword getVariantKeyword_1() { return cVariantKeyword_1; }
		
		//ownedVariantUsage_comp=VariantUsageElement
		public Assignment getOwnedVariantUsage_compAssignment_2() { return cOwnedVariantUsage_compAssignment_2; }
		
		//VariantUsageElement
		public RuleCall getOwnedVariantUsage_compVariantUsageElementParserRuleCall_2_0() { return cOwnedVariantUsage_compVariantUsageElementParserRuleCall_2_0; }
	}
	public class NestedUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NestedUsageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStructureUsageMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBehaviorUsageMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFlowUsageMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//NestedUsageMember SysML::FeatureMembership:
		//	StructureUsageMember | BehaviorUsageMember | FlowUsageMember;
		@Override public ParserRule getRule() { return rule; }
		
		//StructureUsageMember | BehaviorUsageMember | FlowUsageMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StructureUsageMember
		public RuleCall getStructureUsageMemberParserRuleCall_0() { return cStructureUsageMemberParserRuleCall_0; }
		
		//BehaviorUsageMember
		public RuleCall getBehaviorUsageMemberParserRuleCall_1() { return cBehaviorUsageMemberParserRuleCall_1; }
		
		//FlowUsageMember
		public RuleCall getFlowUsageMemberParserRuleCall_2() { return cFlowUsageMemberParserRuleCall_2; }
	}
	public class StructureUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StructureUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compStructureUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		//StructureUsageMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=StructureUsageElement;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=StructureUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=StructureUsageElement
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//StructureUsageElement
		public RuleCall getOwnedMemberFeature_compStructureUsageElementParserRuleCall_1_0() { return cOwnedMemberFeature_compStructureUsageElementParserRuleCall_1_0; }
	}
	public class BehaviorUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BehaviorUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compBehaviorUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		//BehaviorUsageMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=BehaviorUsageElement;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=BehaviorUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=BehaviorUsageElement
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//BehaviorUsageElement
		public RuleCall getOwnedMemberFeature_compBehaviorUsageElementParserRuleCall_1_0() { return cOwnedMemberFeature_compBehaviorUsageElementParserRuleCall_1_0; }
	}
	public class IndividualUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compIndividualUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		//IndividualUsageMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=IndividualUsageElement;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=IndividualUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=IndividualUsageElement
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//IndividualUsageElement
		public RuleCall getOwnedMemberFeature_compIndividualUsageElementParserRuleCall_1_0() { return cOwnedMemberFeature_compIndividualUsageElementParserRuleCall_1_0; }
	}
	public class FlowUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cDirectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0 = (RuleCall)cDirectionAssignment_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compFlowUsageElementParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//FlowUsageMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix direction=FeatureDirection
		//	ownedMemberFeature_comp=FlowUsageElement;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix direction=FeatureDirection ownedMemberFeature_comp=FlowUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//direction=FeatureDirection
		public Assignment getDirectionAssignment_1() { return cDirectionAssignment_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0; }
		
		//ownedMemberFeature_comp=FlowUsageElement
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//FlowUsageElement
		public RuleCall getOwnedMemberFeature_compFlowUsageElementParserRuleCall_2_0() { return cOwnedMemberFeature_compFlowUsageElementParserRuleCall_2_0; }
	}
	public class DefinitionMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment DefinitionMemberPrefix returns SysML::Membership:
		//	ownedRelationship_comp+=PrefixDocumentation*
		//	visibility=VisibilityIndicator?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=PrefixDocumentation* visibility=VisibilityIndicator?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=PrefixDocumentation*
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//PrefixDocumentation
		public RuleCall getOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0() { return cOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0; }
		
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class UsagePrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsagePrefix");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Assignment cIsVariationAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cIsVariationVariationKeyword_1_0 = (Keyword)cIsVariationAssignment_1.eContents().get(0);
		
		///* Usages */ fragment UsagePrefix returns SysML::Usage:
		//	isAbstract?='abstract' | isVariation?='variation';
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract' | isVariation?='variation'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract?='abstract'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//isVariation?='variation'
		public Assignment getIsVariationAssignment_1() { return cIsVariationAssignment_1; }
		
		//'variation'
		public Keyword getIsVariationVariationKeyword_1_0() { return cIsVariationVariationKeyword_1_0; }
	}
	public class UsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Usage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment Usage returns SysML::Usage:
		//	UsageDeclaration? UsageCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_1() { return cUsageCompletionParserRuleCall_1; }
	}
	public class UsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageDeclaration");
		private final RuleCall cFeatureDeclarationParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//fragment UsageDeclaration returns SysML::Feature:
		//	FeatureDeclaration;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureDeclaration
		public RuleCall getFeatureDeclarationParserRuleCall() { return cFeatureDeclarationParserRuleCall; }
	}
	public class UsageCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValueOrFlowPartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment UsageCompletion returns SysML::Usage:
		//	ValueOrFlowPart? UsageBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValueOrFlowPart? UsageBody
		public Group getGroup() { return cGroup; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_0() { return cValueOrFlowPartParserRuleCall_0; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_1() { return cUsageBodyParserRuleCall_1; }
	}
	public class UsageBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageBody");
		private final RuleCall cDefinitionBodyParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//fragment UsageBody returns SysML::Usage:
		//	DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall() { return cDefinitionBodyParserRuleCall; }
	}
	public class ValuePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValuePart");
		private final Assignment cOwnedMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMembership_compFeatureValueParserRuleCall_0 = (RuleCall)cOwnedMembership_compAssignment.eContents().get(0);
		
		//fragment ValuePart returns SysML::Feature:
		//	ownedMembership_comp+=FeatureValue;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership_comp+=FeatureValue
		public Assignment getOwnedMembership_compAssignment() { return cOwnedMembership_compAssignment; }
		
		//FeatureValue
		public RuleCall getOwnedMembership_compFeatureValueParserRuleCall_0() { return cOwnedMembership_compFeatureValueParserRuleCall_0; }
	}
	public class ValueOrFlowPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValueOrFlowPart");
		private final Assignment cOwnedMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cOwnedMembership_compAlternatives_0 = (Alternatives)cOwnedMembership_compAssignment.eContents().get(0);
		private final RuleCall cOwnedMembership_compFeatureValueParserRuleCall_0_0 = (RuleCall)cOwnedMembership_compAlternatives_0.eContents().get(0);
		private final RuleCall cOwnedMembership_compSourceItemFlowMemberParserRuleCall_0_1 = (RuleCall)cOwnedMembership_compAlternatives_0.eContents().get(1);
		
		//fragment ValueOrFlowPart returns SysML::Feature:
		//	ownedMembership_comp+=(FeatureValue | SourceItemFlowMember);
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMembership_comp+=(FeatureValue | SourceItemFlowMember)
		public Assignment getOwnedMembership_compAssignment() { return cOwnedMembership_compAssignment; }
		
		//(FeatureValue | SourceItemFlowMember)
		public Alternatives getOwnedMembership_compAlternatives_0() { return cOwnedMembership_compAlternatives_0; }
		
		//FeatureValue
		public RuleCall getOwnedMembership_compFeatureValueParserRuleCall_0_0() { return cOwnedMembership_compFeatureValueParserRuleCall_0_0; }
		
		//SourceItemFlowMember
		public RuleCall getOwnedMembership_compSourceItemFlowMemberParserRuleCall_0_1() { return cOwnedMembership_compSourceItemFlowMemberParserRuleCall_0_1; }
	}
	public class FeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValue_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValue_compOwnedExpressionParserRuleCall_1_0 = (RuleCall)cValue_compAssignment_1.eContents().get(0);
		
		//FeatureValue SysML::FeatureValue:
		//	'=' value_comp=OwnedExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//'=' value_comp=OwnedExpression
		public Group getGroup() { return cGroup; }
		
		//'='
		public Keyword getEqualsSignKeyword_0() { return cEqualsSignKeyword_0; }
		
		//value_comp=OwnedExpression
		public Assignment getValue_compAssignment_1() { return cValue_compAssignment_1; }
		
		//OwnedExpression
		public RuleCall getValue_compOwnedExpressionParserRuleCall_1_0() { return cValue_compOwnedExpressionParserRuleCall_1_0; }
	}
	public class SourceItemFlowMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SourceItemFlowMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compSourceItemFlowParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//SourceItemFlowMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=SourceItemFlow;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=SourceItemFlow
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//SourceItemFlow
		public RuleCall getOwnedMemberFeature_compSourceItemFlowParserRuleCall_0() { return cOwnedMemberFeature_compSourceItemFlowParserRuleCall_0; }
	}
	public class SourceItemFlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SourceItemFlow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cItemFlowKeywordParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Action cSuccessionItemFlowAction_0_1_0 = (Action)cGroup_0_1.eContents().get(0);
		private final RuleCall cSuccessionItemFlowKeywordParserRuleCall_0_1_1 = (RuleCall)cGroup_0_1.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cFromKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedFeatureMembership_compEmptyItemFlowEndMemberParserRuleCall_4_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4.eContents().get(0);
		
		//SourceItemFlow SysML::ItemFlow:
		//	(ItemFlowKeyword | {SysML::SuccessionItemFlow} SuccessionItemFlowKeyword)
		//	ownedFeatureMembership_comp+=EmptyItemFeatureMember
		//	'from' ownedFeatureMembership_comp+=ItemFlowEndMember
		//	ownedFeatureMembership_comp+=EmptyItemFlowEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(ItemFlowKeyword | {SysML::SuccessionItemFlow} SuccessionItemFlowKeyword)
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember 'from' ownedFeatureMembership_comp+=ItemFlowEndMember
		//ownedFeatureMembership_comp+=EmptyItemFlowEndMember
		public Group getGroup() { return cGroup; }
		
		//(ItemFlowKeyword | {SysML::SuccessionItemFlow} SuccessionItemFlowKeyword)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//ItemFlowKeyword
		public RuleCall getItemFlowKeywordParserRuleCall_0_0() { return cItemFlowKeywordParserRuleCall_0_0; }
		
		//{SysML::SuccessionItemFlow} SuccessionItemFlowKeyword
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//{SysML::SuccessionItemFlow}
		public Action getSuccessionItemFlowAction_0_1_0() { return cSuccessionItemFlowAction_0_1_0; }
		
		//SuccessionItemFlowKeyword
		public RuleCall getSuccessionItemFlowKeywordParserRuleCall_0_1_1() { return cSuccessionItemFlowKeywordParserRuleCall_0_1_1; }
		
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0; }
		
		//'from'
		public Keyword getFromKeyword_2() { return cFromKeyword_2; }
		
		//ownedFeatureMembership_comp+=ItemFlowEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compItemFlowEndMemberParserRuleCall_3_0; }
		
		//ownedFeatureMembership_comp+=EmptyItemFlowEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_4() { return cOwnedFeatureMembership_compAssignment_4; }
		
		//EmptyItemFlowEndMember
		public RuleCall getOwnedFeatureMembership_compEmptyItemFlowEndMemberParserRuleCall_4_0() { return cOwnedFeatureMembership_compEmptyItemFlowEndMemberParserRuleCall_4_0; }
	}
	public class ReferenceKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceKeyword");
		private final Keyword cRefKeyword = (Keyword)rule.eContents().get(1);
		
		///* Reference Usages */ ReferenceKeyword:
		//	'ref';
		@Override public ParserRule getRule() { return rule; }
		
		//'ref'
		public Keyword getRefKeyword() { return cRefKeyword; }
	}
	public class ReferenceUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceUsageKeyword");
		private final RuleCall cReferenceKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ReferenceUsageKeyword:
		//	ReferenceKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//ReferenceKeyword
		public RuleCall getReferenceKeywordParserRuleCall() { return cReferenceKeywordParserRuleCall; }
	}
	public class ReferenceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cReferenceUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ReferenceUsage SysML::ReferenceUsage:
		//	UsagePrefix? ReferenceUsageKeyword Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ReferenceUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ReferenceUsageKeyword
		public RuleCall getReferenceUsageKeywordParserRuleCall_1() { return cReferenceUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class ReferenceEndUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceEndUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cReferenceUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ReferenceEndUsage SysML::ReferenceUsage:
		//	UsagePrefix? ReferenceUsageKeyword? Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ReferenceUsageKeyword? Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ReferenceUsageKeyword?
		public RuleCall getReferenceUsageKeywordParserRuleCall_1() { return cReferenceUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class ReferenceVariantUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceVariantUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationship_compOwnedSubsettingParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationship_compAssignment_1_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//// TODO: Find a better way to handle variant references that using ReferenceUsage.
		//ReferenceVariantUsage SysML::ReferenceUsage:
		//	ReferenceUsage
		//	| ownedRelationship_comp+=OwnedSubsetting
		//	FeatureSpecialization* UsageBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ReferenceUsage | ownedRelationship_comp+=OwnedSubsetting FeatureSpecialization* UsageBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceUsage
		public RuleCall getReferenceUsageParserRuleCall_0() { return cReferenceUsageParserRuleCall_0; }
		
		//ownedRelationship_comp+=OwnedSubsetting FeatureSpecialization* UsageBody
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship_comp+=OwnedSubsetting
		public Assignment getOwnedRelationship_compAssignment_1_0() { return cOwnedRelationship_compAssignment_1_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationship_compOwnedSubsettingParserRuleCall_1_0_0() { return cOwnedRelationship_compOwnedSubsettingParserRuleCall_1_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_1_1() { return cFeatureSpecializationParserRuleCall_1_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_1_2() { return cUsageBodyParserRuleCall_1_2; }
	}
	public class StructureUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StructureUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cItemRefUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPartRefUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cViewRefUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRenderingRefUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPortUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cInterfaceUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		///* Body Elements */ StructureUsageElement SysML::Feature:
		//	ReferenceUsage
		//	| AttributeUsage
		//	| ItemRefUsage
		//	| PartRefUsage
		//	| ViewRefUsage
		//	| RenderingRefUsage
		//	| PortUsage
		//	| InterfaceUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//ReferenceUsage | AttributeUsage | ItemRefUsage | PartRefUsage | ViewRefUsage | RenderingRefUsage | PortUsage |
		//InterfaceUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceUsage
		public RuleCall getReferenceUsageParserRuleCall_0() { return cReferenceUsageParserRuleCall_0; }
		
		//AttributeUsage
		public RuleCall getAttributeUsageParserRuleCall_1() { return cAttributeUsageParserRuleCall_1; }
		
		//ItemRefUsage
		public RuleCall getItemRefUsageParserRuleCall_2() { return cItemRefUsageParserRuleCall_2; }
		
		//PartRefUsage
		public RuleCall getPartRefUsageParserRuleCall_3() { return cPartRefUsageParserRuleCall_3; }
		
		//ViewRefUsage
		public RuleCall getViewRefUsageParserRuleCall_4() { return cViewRefUsageParserRuleCall_4; }
		
		//RenderingRefUsage
		public RuleCall getRenderingRefUsageParserRuleCall_5() { return cRenderingRefUsageParserRuleCall_5; }
		
		//PortUsage
		public RuleCall getPortUsageParserRuleCall_6() { return cPortUsageParserRuleCall_6; }
		
		//InterfaceUsage
		public RuleCall getInterfaceUsageParserRuleCall_7() { return cInterfaceUsageParserRuleCall_7; }
	}
	public class IndividualUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIndividualRefUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTimeSliceRefUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSnapshotRefUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//IndividualUsageElement SysML::Usage:
		//	IndividualRefUsage
		//	| TimeSliceRefUsage
		//	| SnapshotRefUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//IndividualRefUsage | TimeSliceRefUsage | SnapshotRefUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IndividualRefUsage
		public RuleCall getIndividualRefUsageParserRuleCall_0() { return cIndividualRefUsageParserRuleCall_0; }
		
		//TimeSliceRefUsage
		public RuleCall getTimeSliceRefUsageParserRuleCall_1() { return cTimeSliceRefUsageParserRuleCall_1; }
		
		//SnapshotRefUsage
		public RuleCall getSnapshotRefUsageParserRuleCall_2() { return cSnapshotRefUsageParserRuleCall_2; }
	}
	public class BehaviorUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BehaviorUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionRefUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCalculationRefUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStateRefUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cConstraintRefUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRequirementRefUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cCaseRefUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cAnalysisCaseRefUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cVerificationCaseRefUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cViewpointRefUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cPerformActionUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cExhibitStateUsageParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cAssertConstraintUsageParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cSatisfyRequirementUsageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		
		//BehaviorUsageElement SysML::Usage:
		//	ActionRefUsage
		//	| CalculationRefUsage
		//	| StateRefUsage
		//	| ConstraintRefUsage
		//	| RequirementRefUsage
		//	| CaseRefUsage
		//	| AnalysisCaseRefUsage
		//	| VerificationCaseRefUsage
		//	| ViewpointRefUsage
		//	| PerformActionUsage
		//	| ExhibitStateUsage
		//	| AssertConstraintUsage
		//	| SatisfyRequirementUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionRefUsage | CalculationRefUsage | StateRefUsage | ConstraintRefUsage | RequirementRefUsage | CaseRefUsage |
		//AnalysisCaseRefUsage | VerificationCaseRefUsage | ViewpointRefUsage | PerformActionUsage | ExhibitStateUsage |
		//AssertConstraintUsage | SatisfyRequirementUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionRefUsage
		public RuleCall getActionRefUsageParserRuleCall_0() { return cActionRefUsageParserRuleCall_0; }
		
		//CalculationRefUsage
		public RuleCall getCalculationRefUsageParserRuleCall_1() { return cCalculationRefUsageParserRuleCall_1; }
		
		//StateRefUsage
		public RuleCall getStateRefUsageParserRuleCall_2() { return cStateRefUsageParserRuleCall_2; }
		
		//ConstraintRefUsage
		public RuleCall getConstraintRefUsageParserRuleCall_3() { return cConstraintRefUsageParserRuleCall_3; }
		
		//RequirementRefUsage
		public RuleCall getRequirementRefUsageParserRuleCall_4() { return cRequirementRefUsageParserRuleCall_4; }
		
		//CaseRefUsage
		public RuleCall getCaseRefUsageParserRuleCall_5() { return cCaseRefUsageParserRuleCall_5; }
		
		//AnalysisCaseRefUsage
		public RuleCall getAnalysisCaseRefUsageParserRuleCall_6() { return cAnalysisCaseRefUsageParserRuleCall_6; }
		
		//VerificationCaseRefUsage
		public RuleCall getVerificationCaseRefUsageParserRuleCall_7() { return cVerificationCaseRefUsageParserRuleCall_7; }
		
		//ViewpointRefUsage
		public RuleCall getViewpointRefUsageParserRuleCall_8() { return cViewpointRefUsageParserRuleCall_8; }
		
		//PerformActionUsage
		public RuleCall getPerformActionUsageParserRuleCall_9() { return cPerformActionUsageParserRuleCall_9; }
		
		//ExhibitStateUsage
		public RuleCall getExhibitStateUsageParserRuleCall_10() { return cExhibitStateUsageParserRuleCall_10; }
		
		//AssertConstraintUsage
		public RuleCall getAssertConstraintUsageParserRuleCall_11() { return cAssertConstraintUsageParserRuleCall_11; }
		
		//SatisfyRequirementUsage
		public RuleCall getSatisfyRequirementUsageParserRuleCall_12() { return cSatisfyRequirementUsageParserRuleCall_12; }
	}
	public class VariantUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VariantUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceVariantUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeVariantUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cItemRefUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPartRefUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cPortUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cConnectionUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cConnectorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cInterfaceUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cIndividualUsageElementParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cBehaviorUsageElementParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//VariantUsageElement SysML::Usage:
		//	ReferenceVariantUsage
		//	| AttributeVariantUsage
		//	| ItemRefUsage
		//	| PartRefUsage
		//	| PortUsage
		//	| ConnectionUsage
		//	| Connector
		//	| InterfaceUsage
		//	| IndividualUsageElement
		//	| BehaviorUsageElement;
		@Override public ParserRule getRule() { return rule; }
		
		//ReferenceVariantUsage | AttributeVariantUsage | ItemRefUsage | PartRefUsage | PortUsage | ConnectionUsage | Connector |
		//InterfaceUsage | IndividualUsageElement | BehaviorUsageElement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceVariantUsage
		public RuleCall getReferenceVariantUsageParserRuleCall_0() { return cReferenceVariantUsageParserRuleCall_0; }
		
		//AttributeVariantUsage
		public RuleCall getAttributeVariantUsageParserRuleCall_1() { return cAttributeVariantUsageParserRuleCall_1; }
		
		//ItemRefUsage
		public RuleCall getItemRefUsageParserRuleCall_2() { return cItemRefUsageParserRuleCall_2; }
		
		//PartRefUsage
		public RuleCall getPartRefUsageParserRuleCall_3() { return cPartRefUsageParserRuleCall_3; }
		
		//PortUsage
		public RuleCall getPortUsageParserRuleCall_4() { return cPortUsageParserRuleCall_4; }
		
		//ConnectionUsage
		public RuleCall getConnectionUsageParserRuleCall_5() { return cConnectionUsageParserRuleCall_5; }
		
		//Connector
		public RuleCall getConnectorParserRuleCall_6() { return cConnectorParserRuleCall_6; }
		
		//InterfaceUsage
		public RuleCall getInterfaceUsageParserRuleCall_7() { return cInterfaceUsageParserRuleCall_7; }
		
		//IndividualUsageElement
		public RuleCall getIndividualUsageElementParserRuleCall_8() { return cIndividualUsageElementParserRuleCall_8; }
		
		//BehaviorUsageElement
		public RuleCall getBehaviorUsageElementParserRuleCall_9() { return cBehaviorUsageElementParserRuleCall_9; }
	}
	public class FlowUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cItemFlowUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPartFlowUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cViewFlowUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRenderingFlowUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cActionFlowUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cCalculationFlowUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cStateFlowUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cConstraintFlowUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cRequirementFlowUsageParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cCaseFlowUsageParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cAnalysisCaseFlowUsageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cVerificationCaseFlowUsageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cViewpointFlowUsageParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		
		//FlowUsageElement SysML::Usage:
		//	ReferenceUsage
		//	| AttributeUsage
		//	| ItemFlowUsage
		//	| PartFlowUsage
		//	| ViewFlowUsage
		//	| RenderingFlowUsage
		//	| ActionFlowUsage
		//	| CalculationFlowUsage
		//	| StateFlowUsage
		//	| ConstraintFlowUsage
		//	| RequirementFlowUsage
		//	| CaseFlowUsage
		//	| AnalysisCaseFlowUsage
		//	| VerificationCaseFlowUsage
		//	| ViewpointFlowUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//ReferenceUsage | AttributeUsage | ItemFlowUsage | PartFlowUsage | ViewFlowUsage | RenderingFlowUsage | ActionFlowUsage |
		//CalculationFlowUsage | StateFlowUsage | ConstraintFlowUsage | RequirementFlowUsage | CaseFlowUsage |
		//AnalysisCaseFlowUsage | VerificationCaseFlowUsage | ViewpointFlowUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceUsage
		public RuleCall getReferenceUsageParserRuleCall_0() { return cReferenceUsageParserRuleCall_0; }
		
		//AttributeUsage
		public RuleCall getAttributeUsageParserRuleCall_1() { return cAttributeUsageParserRuleCall_1; }
		
		//ItemFlowUsage
		public RuleCall getItemFlowUsageParserRuleCall_2() { return cItemFlowUsageParserRuleCall_2; }
		
		//PartFlowUsage
		public RuleCall getPartFlowUsageParserRuleCall_3() { return cPartFlowUsageParserRuleCall_3; }
		
		//ViewFlowUsage
		public RuleCall getViewFlowUsageParserRuleCall_4() { return cViewFlowUsageParserRuleCall_4; }
		
		//RenderingFlowUsage
		public RuleCall getRenderingFlowUsageParserRuleCall_5() { return cRenderingFlowUsageParserRuleCall_5; }
		
		//ActionFlowUsage
		public RuleCall getActionFlowUsageParserRuleCall_6() { return cActionFlowUsageParserRuleCall_6; }
		
		//CalculationFlowUsage
		public RuleCall getCalculationFlowUsageParserRuleCall_7() { return cCalculationFlowUsageParserRuleCall_7; }
		
		//StateFlowUsage
		public RuleCall getStateFlowUsageParserRuleCall_8() { return cStateFlowUsageParserRuleCall_8; }
		
		//ConstraintFlowUsage
		public RuleCall getConstraintFlowUsageParserRuleCall_9() { return cConstraintFlowUsageParserRuleCall_9; }
		
		//RequirementFlowUsage
		public RuleCall getRequirementFlowUsageParserRuleCall_10() { return cRequirementFlowUsageParserRuleCall_10; }
		
		//CaseFlowUsage
		public RuleCall getCaseFlowUsageParserRuleCall_11() { return cCaseFlowUsageParserRuleCall_11; }
		
		//AnalysisCaseFlowUsage
		public RuleCall getAnalysisCaseFlowUsageParserRuleCall_12() { return cAnalysisCaseFlowUsageParserRuleCall_12; }
		
		//VerificationCaseFlowUsage
		public RuleCall getVerificationCaseFlowUsageParserRuleCall_13() { return cVerificationCaseFlowUsageParserRuleCall_13; }
		
		//ViewpointFlowUsage
		public RuleCall getViewpointFlowUsageParserRuleCall_14() { return cViewpointFlowUsageParserRuleCall_14; }
	}
	public class AttributeKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeKeyword");
		private final Keyword cAttributeKeyword = (Keyword)rule.eContents().get(1);
		
		///* ATTRIBUTES */ AttributeKeyword:
		//	'attribute';
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute'
		public Keyword getAttributeKeyword() { return cAttributeKeyword; }
	}
	public class AttributeDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeDefKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cDefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cValueKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cTypeKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//AttributeDefKeyword:
		//	AttributeKeyword 'def' | 'value' 'type';
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeKeyword 'def' | 'value' 'type'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AttributeKeyword 'def'
		public Group getGroup_0() { return cGroup_0; }
		
		//AttributeKeyword
		public RuleCall getAttributeKeywordParserRuleCall_0_0() { return cAttributeKeywordParserRuleCall_0_0; }
		
		//'def'
		public Keyword getDefKeyword_0_1() { return cDefKeyword_0_1; }
		
		//'value' 'type'
		public Group getGroup_1() { return cGroup_1; }
		
		//'value'
		public Keyword getValueKeyword_1_0() { return cValueKeyword_1_0; }
		
		//'type'
		public Keyword getTypeKeyword_1_1() { return cTypeKeyword_1_1; }
	}
	public class AttributeUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeUsageKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAttributeKeywordParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cValueKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//AttributeUsageKeyword:
		//	AttributeKeyword | 'value';
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeKeyword | 'value'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AttributeKeyword
		public RuleCall getAttributeKeywordParserRuleCall_0() { return cAttributeKeywordParserRuleCall_0; }
		
		//'value'
		public Keyword getValueKeyword_1() { return cValueKeyword_1; }
	}
	public class AttributeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAttributeDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AttributeDefinition SysML::AttributeDefinition:
		//	DefinitionPrefix? AttributeDefKeyword Definition;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? AttributeDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//AttributeDefKeyword
		public RuleCall getAttributeDefKeywordParserRuleCall_1() { return cAttributeDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class AttributeUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cAttributeUsageKeywordParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final RuleCall cValueOrFlowPartParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_1_1_2 = (RuleCall)cGroup_1_1.eContents().get(2);
		
		//AttributeUsage SysML::AttributeUsage:
		//	UsagePrefix? (AttributeUsageKeyword Usage
		//	| UsageDeclaration ValueOrFlowPart? UsageBody);
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? (AttributeUsageKeyword Usage | UsageDeclaration ValueOrFlowPart? UsageBody)
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//(AttributeUsageKeyword Usage | UsageDeclaration ValueOrFlowPart? UsageBody)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//AttributeUsageKeyword Usage
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//AttributeUsageKeyword
		public RuleCall getAttributeUsageKeywordParserRuleCall_1_0_0() { return cAttributeUsageKeywordParserRuleCall_1_0_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_1_0_1() { return cUsageParserRuleCall_1_0_1; }
		
		//UsageDeclaration ValueOrFlowPart? UsageBody
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_1_1_0() { return cUsageDeclarationParserRuleCall_1_1_0; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_1_1_1() { return cValueOrFlowPartParserRuleCall_1_1_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_1_1_2() { return cUsageBodyParserRuleCall_1_1_2; }
	}
	public class AttributeVariantUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeVariantUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAttributeUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AttributeVariantUsage SysML::AttributeUsage:
		//	UsagePrefix? AttributeUsageKeyword Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? AttributeUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//AttributeUsageKeyword
		public RuleCall getAttributeUsageKeywordParserRuleCall_1() { return cAttributeUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class ItemKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemKeyword");
		private final Keyword cItemKeyword = (Keyword)rule.eContents().get(1);
		
		///* ITEM DEFINITIONS */ ItemKeyword:
		//	'item';
		@Override public ParserRule getRule() { return rule; }
		
		//'item'
		public Keyword getItemKeyword() { return cItemKeyword; }
	}
	public class ItemDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ItemDefKeyword:
		//	ItemKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//ItemKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ItemKeyword
		public RuleCall getItemKeywordParserRuleCall_0() { return cItemKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ItemUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemUsageKeyword");
		private final RuleCall cItemKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ItemUsageKeyword:
		//	ItemKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemKeyword
		public RuleCall getItemKeywordParserRuleCall() { return cItemKeywordParserRuleCall; }
	}
	public class ItemDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cItemDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ItemDefinition SysML::ItemDefinition:
		//	DefinitionPrefix? ItemDefKeyword Definition;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? ItemDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//ItemDefKeyword
		public RuleCall getItemDefKeywordParserRuleCall_1() { return cItemDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class ItemUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cItemUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ItemUsage SysML::ItemUsage:
		//	UsagePrefix? ItemUsageKeyword Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ItemUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ItemUsageKeyword
		public RuleCall getItemUsageKeywordParserRuleCall_1() { return cItemUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class ItemFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cItemUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ItemFlowUsage SysML::ItemUsage:
		//	UsagePrefix? 'ref'? ItemUsageKeyword Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? ItemUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//ItemUsageKeyword
		public RuleCall getItemUsageKeywordParserRuleCall_2() { return cItemUsageKeywordParserRuleCall_2; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_3() { return cUsageParserRuleCall_3; }
	}
	public class ItemRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cItemUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeItemUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ItemRefUsage SysML::ItemUsage:
		//	UsagePrefix? ('ref' ItemUsageKeyword | isComposite?=ItemUsageKeyword) Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' ItemUsageKeyword | isComposite?=ItemUsageKeyword) Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' ItemUsageKeyword | isComposite?=ItemUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' ItemUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//ItemUsageKeyword
		public RuleCall getItemUsageKeywordParserRuleCall_1_0_1() { return cItemUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=ItemUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//ItemUsageKeyword
		public RuleCall getIsCompositeItemUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeItemUsageKeywordParserRuleCall_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class PartKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartKeyword");
		private final Keyword cPartKeyword = (Keyword)rule.eContents().get(1);
		
		///* PART DEFINITIONS */ PartKeyword:
		//	'part';
		@Override public ParserRule getRule() { return rule; }
		
		//'part'
		public Keyword getPartKeyword() { return cPartKeyword; }
	}
	public class PartDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartDefKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cPartKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cDefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cBlockKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//PartDefKeyword:
		//	PartKeyword 'def' | 'block';
		@Override public ParserRule getRule() { return rule; }
		
		//PartKeyword 'def' | 'block'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PartKeyword 'def'
		public Group getGroup_0() { return cGroup_0; }
		
		//PartKeyword
		public RuleCall getPartKeywordParserRuleCall_0_0() { return cPartKeywordParserRuleCall_0_0; }
		
		//'def'
		public Keyword getDefKeyword_0_1() { return cDefKeyword_0_1; }
		
		//'block'
		public Keyword getBlockKeyword_1() { return cBlockKeyword_1; }
	}
	public class PartUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartUsageKeyword");
		private final RuleCall cPartKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PartUsageKeyword:
		//	PartKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//PartKeyword
		public RuleCall getPartKeywordParserRuleCall() { return cPartKeywordParserRuleCall; }
	}
	public class PartDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPartDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PartDefinition SysML::PartDefinition:
		//	DefinitionPrefix? PartDefKeyword Definition;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? PartDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//PartDefKeyword
		public RuleCall getPartDefKeywordParserRuleCall_1() { return cPartDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class PartUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPartUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PartUsage SysML::PartUsage:
		//	UsagePrefix? PartUsageKeyword Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? PartUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//PartUsageKeyword
		public RuleCall getPartUsageKeywordParserRuleCall_1() { return cPartUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class PartFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cPartUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//PartFlowUsage SysML::PartUsage:
		//	UsagePrefix? 'ref'? PartUsageKeyword Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? PartUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//PartUsageKeyword
		public RuleCall getPartUsageKeywordParserRuleCall_2() { return cPartUsageKeywordParserRuleCall_2; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_3() { return cUsageParserRuleCall_3; }
	}
	public class PartRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cPartUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositePartUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PartRefUsage SysML::PartUsage:
		//	UsagePrefix? ('ref' PartUsageKeyword | isComposite?=PartUsageKeyword) Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' PartUsageKeyword | isComposite?=PartUsageKeyword) Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' PartUsageKeyword | isComposite?=PartUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' PartUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//PartUsageKeyword
		public RuleCall getPartUsageKeywordParserRuleCall_1_0_1() { return cPartUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=PartUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//PartUsageKeyword
		public RuleCall getIsCompositePartUsageKeywordParserRuleCall_1_1_0() { return cIsCompositePartUsageKeywordParserRuleCall_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class PortKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortKeyword");
		private final Keyword cPortKeyword = (Keyword)rule.eContents().get(1);
		
		///* PORTS */ /* Port Definitions */ PortKeyword:
		//	'port';
		@Override public ParserRule getRule() { return rule; }
		
		//'port'
		public Keyword getPortKeyword() { return cPortKeyword; }
	}
	public class PortDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortDefKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cPortKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cDefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cInterfaceKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cBlockKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//PortDefKeyword:
		//	PortKeyword 'def' | 'interface' 'block';
		@Override public ParserRule getRule() { return rule; }
		
		//PortKeyword 'def' | 'interface' 'block'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PortKeyword 'def'
		public Group getGroup_0() { return cGroup_0; }
		
		//PortKeyword
		public RuleCall getPortKeywordParserRuleCall_0_0() { return cPortKeywordParserRuleCall_0_0; }
		
		//'def'
		public Keyword getDefKeyword_0_1() { return cDefKeyword_0_1; }
		
		//'interface' 'block'
		public Group getGroup_1() { return cGroup_1; }
		
		//'interface'
		public Keyword getInterfaceKeyword_1_0() { return cInterfaceKeyword_1_0; }
		
		//'block'
		public Keyword getBlockKeyword_1_1() { return cBlockKeyword_1_1; }
	}
	public class PortDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPortDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cOwnedMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedMembership_compConjugatedPortDefinitionMemberParserRuleCall_3_0 = (RuleCall)cOwnedMembership_compAssignment_3.eContents().get(0);
		
		//PortDefinition SysML::PortDefinition:
		//	DefinitionPrefix? PortDefKeyword Definition
		//	ownedMembership_comp+=ConjugatedPortDefinitionMember;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? PortDefKeyword Definition ownedMembership_comp+=ConjugatedPortDefinitionMember
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//PortDefKeyword
		public RuleCall getPortDefKeywordParserRuleCall_1() { return cPortDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
		
		//ownedMembership_comp+=ConjugatedPortDefinitionMember
		public Assignment getOwnedMembership_compAssignment_3() { return cOwnedMembership_compAssignment_3; }
		
		//ConjugatedPortDefinitionMember
		public RuleCall getOwnedMembership_compConjugatedPortDefinitionMemberParserRuleCall_3_0() { return cOwnedMembership_compConjugatedPortDefinitionMemberParserRuleCall_3_0; }
	}
	public class ConjugatedPortDefinitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortDefinitionMember");
		private final Assignment cOwnedMemberElement_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compConjugatedPortDefinitionParserRuleCall_0 = (RuleCall)cOwnedMemberElement_compAssignment.eContents().get(0);
		
		//ConjugatedPortDefinitionMember SysML::Membership:
		//	ownedMemberElement_comp=ConjugatedPortDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement_comp=ConjugatedPortDefinition
		public Assignment getOwnedMemberElement_compAssignment() { return cOwnedMemberElement_compAssignment; }
		
		//ConjugatedPortDefinition
		public RuleCall getOwnedMemberElement_compConjugatedPortDefinitionParserRuleCall_0() { return cOwnedMemberElement_compConjugatedPortDefinitionParserRuleCall_0; }
	}
	public class ConjugatedPortDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortDefinition");
		private final Assignment cOwnedRelationship_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationship_compPortConjugationParserRuleCall_0 = (RuleCall)cOwnedRelationship_compAssignment.eContents().get(0);
		
		//ConjugatedPortDefinition SysML::ConjugatedPortDefinition:
		//	ownedRelationship_comp+=PortConjugation;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=PortConjugation
		public Assignment getOwnedRelationship_compAssignment() { return cOwnedRelationship_compAssignment; }
		
		//PortConjugation
		public RuleCall getOwnedRelationship_compPortConjugationParserRuleCall_0() { return cOwnedRelationship_compPortConjugationParserRuleCall_0; }
	}
	public class PortConjugationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortConjugation");
		private final Action cPortConjugationAction = (Action)rule.eContents().get(1);
		
		//PortConjugation SysML::PortConjugation:
		//	{SysML::PortConjugation};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::PortConjugation}
		public Action getPortConjugationAction() { return cPortConjugationAction; }
	}
	public class PortUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortUsageKeyword");
		private final RuleCall cPortKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Port Usages */ PortUsageKeyword:
		//	PortKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//PortKeyword
		public RuleCall getPortKeywordParserRuleCall() { return cPortKeywordParserRuleCall; }
	}
	public class PortUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPortUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cPortUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//PortUsage SysML::PortUsage:
		//	UsagePrefix? PortUsageKeyword PortUsageDeclaration UsageCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? PortUsageKeyword PortUsageDeclaration UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//PortUsageKeyword
		public RuleCall getPortUsageKeywordParserRuleCall_1() { return cPortUsageKeywordParserRuleCall_1; }
		
		//PortUsageDeclaration
		public RuleCall getPortUsageDeclarationParserRuleCall_2() { return cPortUsageDeclarationParserRuleCall_2; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_3() { return cUsageCompletionParserRuleCall_3; }
	}
	public class PortEndUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortEndUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPortUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cPortUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//PortEndUsage SysML::PortUsage:
		//	UsagePrefix? PortUsageKeyword? PortUsageDeclaration UsageCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? PortUsageKeyword? PortUsageDeclaration UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//PortUsageKeyword?
		public RuleCall getPortUsageKeywordParserRuleCall_1() { return cPortUsageKeywordParserRuleCall_1; }
		
		//PortUsageDeclaration
		public RuleCall getPortUsageDeclarationParserRuleCall_2() { return cPortUsageDeclarationParserRuleCall_2; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_3() { return cUsageCompletionParserRuleCall_3; }
	}
	public class PortUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortUsageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cPortSpecializationPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cPortSpecializationPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment PortUsageDeclaration returns SysML::Usage:
		//	Identification PortSpecializationPart?
		//	| PortSpecializationPart;
		@Override public ParserRule getRule() { return rule; }
		
		//Identification PortSpecializationPart? | PortSpecializationPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Identification PortSpecializationPart?
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//PortSpecializationPart?
		public RuleCall getPortSpecializationPartParserRuleCall_0_1() { return cPortSpecializationPartParserRuleCall_0_1; }
		
		//PortSpecializationPart
		public RuleCall getPortSpecializationPartParserRuleCall_1() { return cPortSpecializationPartParserRuleCall_1; }
	}
	public class PortSpecializationPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortSpecializationPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cPortSpecializationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cPortSpecializationParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cPortSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment PortSpecializationPart returns SysML::Usage:
		//	-> PortSpecialization+ MultiplicityPart? PortSpecialization*
		//	| MultiplicityPart PortSpecialization*;
		@Override public ParserRule getRule() { return rule; }
		
		//-> PortSpecialization+ MultiplicityPart? PortSpecialization* | MultiplicityPart PortSpecialization*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//-> PortSpecialization+ MultiplicityPart? PortSpecialization*
		public Group getGroup_0() { return cGroup_0; }
		
		//-> PortSpecialization+
		public RuleCall getPortSpecializationParserRuleCall_0_0() { return cPortSpecializationParserRuleCall_0_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_1() { return cMultiplicityPartParserRuleCall_0_1; }
		
		//PortSpecialization*
		public RuleCall getPortSpecializationParserRuleCall_0_2() { return cPortSpecializationParserRuleCall_0_2; }
		
		//MultiplicityPart PortSpecialization*
		public Group getGroup_1() { return cGroup_1; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1_0() { return cMultiplicityPartParserRuleCall_1_0; }
		
		//PortSpecialization*
		public RuleCall getPortSpecializationParserRuleCall_1_1() { return cPortSpecializationParserRuleCall_1_1; }
	}
	public class PortSpecializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortSpecialization");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPortTypingsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubsettingsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRedefinitionsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//fragment PortSpecialization returns SysML::Usage:
		//	PortTypings | Subsettings | Redefinitions;
		@Override public ParserRule getRule() { return rule; }
		
		//PortTypings | Subsettings | Redefinitions
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PortTypings
		public RuleCall getPortTypingsParserRuleCall_0() { return cPortTypingsParserRuleCall_0; }
		
		//Subsettings
		public RuleCall getSubsettingsParserRuleCall_1() { return cSubsettingsParserRuleCall_1; }
		
		//Redefinitions
		public RuleCall getRedefinitionsParserRuleCall_2() { return cRedefinitionsParserRuleCall_2; }
	}
	public class PortTypingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortTypings");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinedByKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationship_compPortTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationship_compPortTypingParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationship_compAssignment_2_1.eContents().get(0);
		
		//fragment PortTypings returns SysML::Feature:
		//	DefinedByKeyword ownedRelationship_comp+=PortTyping (',' ownedRelationship_comp+=PortTyping)*;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinedByKeyword ownedRelationship_comp+=PortTyping (',' ownedRelationship_comp+=PortTyping)*
		public Group getGroup() { return cGroup; }
		
		//DefinedByKeyword
		public RuleCall getDefinedByKeywordParserRuleCall_0() { return cDefinedByKeywordParserRuleCall_0; }
		
		//ownedRelationship_comp+=PortTyping
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//PortTyping
		public RuleCall getOwnedRelationship_compPortTypingParserRuleCall_1_0() { return cOwnedRelationship_compPortTypingParserRuleCall_1_0; }
		
		//(',' ownedRelationship_comp+=PortTyping)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//ownedRelationship_comp+=PortTyping
		public Assignment getOwnedRelationship_compAssignment_2_1() { return cOwnedRelationship_compAssignment_2_1; }
		
		//PortTyping
		public RuleCall getOwnedRelationship_compPortTypingParserRuleCall_2_1_0() { return cOwnedRelationship_compPortTypingParserRuleCall_2_1_0; }
	}
	public class PortTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortTyping");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureTypingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConjugatedPortTypingParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PortTyping SysML::FeatureTyping:
		//	OwnedFeatureTyping | ConjugatedPortTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//OwnedFeatureTyping | ConjugatedPortTyping
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedFeatureTypingParserRuleCall_0() { return cOwnedFeatureTypingParserRuleCall_0; }
		
		//ConjugatedPortTyping
		public RuleCall getConjugatedPortTypingParserRuleCall_1() { return cConjugatedPortTypingParserRuleCall_1; }
	}
	public class ConjugatedPortTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortTyping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTildeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPortDefinitionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPortDefinitionPortDefinitionCrossReference_1_0 = (CrossReference)cPortDefinitionAssignment_1.eContents().get(0);
		private final RuleCall cPortDefinitionPortDefinitionQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cPortDefinitionPortDefinitionCrossReference_1_0.eContents().get(1);
		
		//ConjugatedPortTyping SysML::ConjugatedPortTyping:
		//	'~' portDefinition=[SysML::PortDefinition|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//'~' portDefinition=[SysML::PortDefinition|QualifiedName]
		public Group getGroup() { return cGroup; }
		
		//'~'
		public Keyword getTildeKeyword_0() { return cTildeKeyword_0; }
		
		//portDefinition=[SysML::PortDefinition|QualifiedName]
		public Assignment getPortDefinitionAssignment_1() { return cPortDefinitionAssignment_1; }
		
		//[SysML::PortDefinition|QualifiedName]
		public CrossReference getPortDefinitionPortDefinitionCrossReference_1_0() { return cPortDefinitionPortDefinitionCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getPortDefinitionPortDefinitionQualifiedNameParserRuleCall_1_0_1() { return cPortDefinitionPortDefinitionQualifiedNameParserRuleCall_1_0_1; }
	}
	public class ConnectionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionKeyword");
		private final Keyword cConnectionKeyword = (Keyword)rule.eContents().get(1);
		
		///* CONNECTIONS */ /* Connection Definitions */ ConnectionKeyword:
		//	'connection';
		@Override public ParserRule getRule() { return rule; }
		
		//'connection'
		public Keyword getConnectionKeyword() { return cConnectionKeyword; }
	}
	public class ConnectionDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionDefKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cConnectionKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cDefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cAssocKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cBlockKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//ConnectionDefKeyword:
		//	ConnectionKeyword 'def' | 'assoc' 'block';
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectionKeyword 'def' | 'assoc' 'block'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ConnectionKeyword 'def'
		public Group getGroup_0() { return cGroup_0; }
		
		//ConnectionKeyword
		public RuleCall getConnectionKeywordParserRuleCall_0_0() { return cConnectionKeywordParserRuleCall_0_0; }
		
		//'def'
		public Keyword getDefKeyword_0_1() { return cDefKeyword_0_1; }
		
		//'assoc' 'block'
		public Group getGroup_1() { return cGroup_1; }
		
		//'assoc'
		public Keyword getAssocKeyword_1_0() { return cAssocKeyword_1_0; }
		
		//'block'
		public Keyword getBlockKeyword_1_1() { return cBlockKeyword_1_1; }
	}
	public class ConnectionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConnectionDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cConnectionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConnectionDefinition SysML::ConnectionDefinition:
		//	DefinitionPrefix? ConnectionDefKeyword
		//	DefinitionDeclaration ConnectionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? ConnectionDefKeyword DefinitionDeclaration ConnectionBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//ConnectionDefKeyword
		public RuleCall getConnectionDefKeywordParserRuleCall_1() { return cConnectionDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//ConnectionBody
		public RuleCall getConnectionBodyParserRuleCall_3() { return cConnectionBodyParserRuleCall_3; }
	}
	public class ConnectionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cDocumentation_compAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0 = (RuleCall)cDocumentation_compAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedMembership_compVariantUsageMemberParserRuleCall_1_1_2_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_3 = (Assignment)cAlternatives_1_1.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectionUsageMemberParserRuleCall_1_1_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_3.eContents().get(0);
		private final Group cGroup_1_1_4 = (Group)cAlternatives_1_1.eContents().get(4);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_4_0 = (Assignment)cGroup_1_1_4.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_1_1_4_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_4_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_4_1 = (Assignment)cGroup_1_1_4.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_1_1_4_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_4_1.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1_5 = (Assignment)cAlternatives_1_1.eContents().get(5);
		private final RuleCall cOwnedImport_compPackageImportParserRuleCall_1_1_5_0 = (RuleCall)cOwnedImport_compAssignment_1_1_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ConnectionBody returns SysML::Type:
		//	';'
		//	| '{' (documentation_comp+=OwnedDocumentation
		//	| ownedMembership_comp+=NestedDefinitionMember
		//	| ownedMembership_comp+=VariantUsageMember
		//	| ownedFeatureMembership_comp+=ConnectionUsageMember
		//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
		//	ownedFeatureMembership_comp+=IndividualUsageMember
		//	| ownedImport_comp+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NestedDefinitionMember |
		//ownedMembership_comp+=VariantUsageMember | ownedFeatureMembership_comp+=ConnectionUsageMember |
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=IndividualUsageMember |
		//ownedImport_comp+=PackageImport)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NestedDefinitionMember |
		//ownedMembership_comp+=VariantUsageMember | ownedFeatureMembership_comp+=ConnectionUsageMember |
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=IndividualUsageMember |
		//ownedImport_comp+=PackageImport)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NestedDefinitionMember |
		//ownedMembership_comp+=VariantUsageMember | ownedFeatureMembership_comp+=ConnectionUsageMember |
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=IndividualUsageMember |
		//ownedImport_comp+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//documentation_comp+=OwnedDocumentation
		public Assignment getDocumentation_compAssignment_1_1_0() { return cDocumentation_compAssignment_1_1_0; }
		
		//OwnedDocumentation
		public RuleCall getDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0() { return cDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1_1_1() { return cOwnedMembership_compAssignment_1_1_1; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_1_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_1_0; }
		
		//ownedMembership_comp+=VariantUsageMember
		public Assignment getOwnedMembership_compAssignment_1_1_2() { return cOwnedMembership_compAssignment_1_1_2; }
		
		//VariantUsageMember
		public RuleCall getOwnedMembership_compVariantUsageMemberParserRuleCall_1_1_2_0() { return cOwnedMembership_compVariantUsageMemberParserRuleCall_1_1_2_0; }
		
		//ownedFeatureMembership_comp+=ConnectionUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_3() { return cOwnedFeatureMembership_compAssignment_1_1_3; }
		
		//ConnectionUsageMember
		public RuleCall getOwnedFeatureMembership_compConnectionUsageMemberParserRuleCall_1_1_3_0() { return cOwnedFeatureMembership_compConnectionUsageMemberParserRuleCall_1_1_3_0; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=IndividualUsageMember
		public Group getGroup_1_1_4() { return cGroup_1_1_4; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_4_0() { return cOwnedFeatureMembership_compAssignment_1_1_4_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_1_1_4_0_0() { return cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_1_1_4_0_0; }
		
		//ownedFeatureMembership_comp+=IndividualUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_4_1() { return cOwnedFeatureMembership_compAssignment_1_1_4_1; }
		
		//IndividualUsageMember
		public RuleCall getOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_1_1_4_1_0() { return cOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_1_1_4_1_0; }
		
		//ownedImport_comp+=PackageImport
		public Assignment getOwnedImport_compAssignment_1_1_5() { return cOwnedImport_compAssignment_1_1_5; }
		
		//PackageImport
		public RuleCall getOwnedImport_compPackageImportParserRuleCall_1_1_5_0() { return cOwnedImport_compPackageImportParserRuleCall_1_1_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ConnectionUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionUsageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNestedUsageMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConnectionEndMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ConnectionUsageMember SysML::FeatureMembership:
		//	NestedUsageMember | ConnectionEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NestedUsageMember | ConnectionEndMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NestedUsageMember
		public RuleCall getNestedUsageMemberParserRuleCall_0() { return cNestedUsageMemberParserRuleCall_0; }
		
		//ConnectionEndMember
		public RuleCall getConnectionEndMemberParserRuleCall_1() { return cConnectionEndMemberParserRuleCall_1; }
	}
	public class ConnectionEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEndKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compConnectionEndElementParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//ConnectionEndMember SysML::EndFeatureMembership:
		//	DefinitionMemberPrefix 'end' ownedMemberFeature_comp=ConnectionEndElement;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'end' ownedMemberFeature_comp=ConnectionEndElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'end'
		public Keyword getEndKeyword_1() { return cEndKeyword_1; }
		
		//ownedMemberFeature_comp=ConnectionEndElement
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//ConnectionEndElement
		public RuleCall getOwnedMemberFeature_compConnectionEndElementParserRuleCall_2_0() { return cOwnedMemberFeature_compConnectionEndElementParserRuleCall_2_0; }
	}
	public class ConnectionEndElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionEndElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceEndUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cItemRefUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPartRefUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPortUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cActionRefUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cCalculationRefUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cStateRefUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//ConnectionEndElement SysML::Feature:
		//	ReferenceEndUsage
		//	| ItemRefUsage
		//	| PartRefUsage
		//	| PortUsage
		//	| ActionRefUsage
		//	| CalculationRefUsage
		//	| StateRefUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//ReferenceEndUsage | ItemRefUsage | PartRefUsage | PortUsage | ActionRefUsage | CalculationRefUsage | StateRefUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceEndUsage
		public RuleCall getReferenceEndUsageParserRuleCall_0() { return cReferenceEndUsageParserRuleCall_0; }
		
		//ItemRefUsage
		public RuleCall getItemRefUsageParserRuleCall_1() { return cItemRefUsageParserRuleCall_1; }
		
		//PartRefUsage
		public RuleCall getPartRefUsageParserRuleCall_2() { return cPartRefUsageParserRuleCall_2; }
		
		//PortUsage
		public RuleCall getPortUsageParserRuleCall_3() { return cPortUsageParserRuleCall_3; }
		
		//ActionRefUsage
		public RuleCall getActionRefUsageParserRuleCall_4() { return cActionRefUsageParserRuleCall_4; }
		
		//CalculationRefUsage
		public RuleCall getCalculationRefUsageParserRuleCall_5() { return cCalculationRefUsageParserRuleCall_5; }
		
		//StateRefUsage
		public RuleCall getStateRefUsageParserRuleCall_6() { return cStateRefUsageParserRuleCall_6; }
	}
	public class ConnectorKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorKeyword");
		private final Keyword cConnectKeyword = (Keyword)rule.eContents().get(1);
		
		///* Connection Usages */ ConnectorKeyword:
		//	'connect';
		@Override public ParserRule getRule() { return rule; }
		
		//'connect'
		public Keyword getConnectKeyword() { return cConnectKeyword; }
	}
	public class ConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Connector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConnectorKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConnectorPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cConnectionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//Connector SysML::ConnectionUsage:
		//	UsagePrefix? ConnectorKeyword ConnectorPart ConnectionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ConnectorKeyword ConnectorPart ConnectionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ConnectorKeyword
		public RuleCall getConnectorKeywordParserRuleCall_1() { return cConnectorKeywordParserRuleCall_1; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_2() { return cConnectorPartParserRuleCall_2; }
		
		//ConnectionBody
		public RuleCall getConnectionBodyParserRuleCall_3() { return cConnectionBodyParserRuleCall_3; }
	}
	public class ConnectionUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionUsageKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConnectionKeywordParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cLinkKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//ConnectionUsageKeyword:
		//	ConnectionKeyword | 'link';
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectionKeyword | 'link'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ConnectionKeyword
		public RuleCall getConnectionKeywordParserRuleCall_0() { return cConnectionKeywordParserRuleCall_0; }
		
		//'link'
		public Keyword getLinkKeyword_1() { return cLinkKeyword_1; }
	}
	public class ConnectionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConnectionUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cConnectorKeywordParserRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final RuleCall cConnectorPartParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final RuleCall cConnectionBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ConnectionUsage SysML::ConnectionUsage:
		//	UsagePrefix? ConnectionUsageKeyword UsageDeclaration? (ConnectorKeyword ConnectorPart)? ConnectionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ConnectionUsageKeyword UsageDeclaration? (ConnectorKeyword ConnectorPart)? ConnectionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ConnectionUsageKeyword
		public RuleCall getConnectionUsageKeywordParserRuleCall_1() { return cConnectionUsageKeywordParserRuleCall_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//(ConnectorKeyword ConnectorPart)?
		public Group getGroup_3() { return cGroup_3; }
		
		//ConnectorKeyword
		public RuleCall getConnectorKeywordParserRuleCall_3_0() { return cConnectorKeywordParserRuleCall_3_0; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_3_1() { return cConnectorPartParserRuleCall_3_1; }
		
		//ConnectionBody
		public RuleCall getConnectionBodyParserRuleCall_4() { return cConnectionBodyParserRuleCall_4; }
	}
	public class ConnectorPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBinaryConnectorPartParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNaryConnectorPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment ConnectorPart returns SysML::ConnectionUsage:
		//	BinaryConnectorPart | NaryConnectorPart;
		@Override public ParserRule getRule() { return rule; }
		
		//BinaryConnectorPart | NaryConnectorPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BinaryConnectorPart
		public RuleCall getBinaryConnectorPartParserRuleCall_0() { return cBinaryConnectorPartParserRuleCall_0; }
		
		//NaryConnectorPart
		public RuleCall getNaryConnectorPartParserRuleCall_1() { return cNaryConnectorPartParserRuleCall_1; }
	}
	public class BinaryConnectorPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BinaryConnectorPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Keyword cToKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		
		//fragment BinaryConnectorPart returns SysML::Connector:
		//	ownedFeatureMembership_comp+=ConnectorEndMember 'to'
		//	ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember 'to' ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_0_0; }
		
		//'to'
		public Keyword getToKeyword_1() { return cToKeyword_1; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0; }
	}
	public class NaryConnectorPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NaryConnectorPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_4_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//fragment NaryConnectorPart returns SysML::Connector:
		//	'(' ownedFeatureMembership_comp+=ConnectorEndMember ','
		//	ownedFeatureMembership_comp+=ConnectorEndMember (',' ownedFeatureMembership_comp+=ConnectorEndMember)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' ownedFeatureMembership_comp+=ConnectorEndMember ',' ownedFeatureMembership_comp+=ConnectorEndMember (','
		//ownedFeatureMembership_comp+=ConnectorEndMember)* ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_3_0; }
		
		//(',' ownedFeatureMembership_comp+=ConnectorEndMember)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_4_1() { return cOwnedFeatureMembership_compAssignment_4_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_4_1_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_4_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class EmptySourceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySourceEndMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptySourceEndParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EmptySourceEndMember SysML::EndFeatureMembership:
		//	ownedMemberFeature_comp=EmptySourceEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptySourceEnd
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptySourceEnd
		public RuleCall getOwnedMemberFeature_compEmptySourceEndParserRuleCall_0() { return cOwnedMemberFeature_compEmptySourceEndParserRuleCall_0; }
	}
	public class EmptySourceEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySourceEnd");
		private final Action cSourceEndAction = (Action)rule.eContents().get(1);
		
		//EmptySourceEnd SysML::Feature:
		//	{SysML::SourceEnd};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SourceEnd}
		public Action getSourceEndAction() { return cSourceEndAction; }
	}
	public class InterfaceKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceKeyword");
		private final Keyword cInterfaceKeyword = (Keyword)rule.eContents().get(1);
		
		///* INTERFACES */ /* Interface Definitions */ InterfaceKeyword:
		//	'interface';
		@Override public ParserRule getRule() { return rule; }
		
		//'interface'
		public Keyword getInterfaceKeyword() { return cInterfaceKeyword; }
	}
	public class InterfaceDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cInterfaceKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//InterfaceDefKeyword:
		//	InterfaceKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//InterfaceKeyword
		public RuleCall getInterfaceKeywordParserRuleCall_0() { return cInterfaceKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class InterfaceDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cInterfaceDefDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceDefBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//InterfaceDefinition SysML::InterfaceDefinition:
		//	InterfaceDefDeclaration InterfaceDefBody;
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceDefDeclaration InterfaceDefBody
		public Group getGroup() { return cGroup; }
		
		//InterfaceDefDeclaration
		public RuleCall getInterfaceDefDeclarationParserRuleCall_0() { return cInterfaceDefDeclarationParserRuleCall_0; }
		
		//InterfaceDefBody
		public RuleCall getInterfaceDefBodyParserRuleCall_1() { return cInterfaceDefBodyParserRuleCall_1; }
	}
	public class InterfaceDefDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment InterfaceDefDeclaration returns SysML::InterfaceDefinition:
		//	DefinitionPrefix? InterfaceDefKeyword DefinitionDeclaration;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? InterfaceDefKeyword DefinitionDeclaration
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//InterfaceDefKeyword
		public RuleCall getInterfaceDefKeywordParserRuleCall_1() { return cInterfaceDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
	}
	public class InterfaceDefBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cDocumentation_compAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0 = (RuleCall)cDocumentation_compAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedMembership_compVariantUsageMemberParserRuleCall_1_1_2_0 = (RuleCall)cOwnedMembership_compAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_3 = (Assignment)cAlternatives_1_1.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compInterfaceUsageMemberParserRuleCall_1_1_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_3.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1_1_4 = (Assignment)cAlternatives_1_1.eContents().get(4);
		private final RuleCall cOwnedImport_compPackageImportParserRuleCall_1_1_4_0 = (RuleCall)cOwnedImport_compAssignment_1_1_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment InterfaceDefBody returns SysML::Type:
		//	';'
		//	| '{' (documentation_comp+=OwnedDocumentation
		//	| ownedMembership_comp+=NestedDefinitionMember
		//	| ownedMembership_comp+=VariantUsageMember
		//	| ownedFeatureMembership_comp+=InterfaceUsageMember
		//	| ownedImport_comp+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NestedDefinitionMember |
		//ownedMembership_comp+=VariantUsageMember | ownedFeatureMembership_comp+=InterfaceUsageMember |
		//ownedImport_comp+=PackageImport)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NestedDefinitionMember |
		//ownedMembership_comp+=VariantUsageMember | ownedFeatureMembership_comp+=InterfaceUsageMember |
		//ownedImport_comp+=PackageImport)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NestedDefinitionMember |
		//ownedMembership_comp+=VariantUsageMember | ownedFeatureMembership_comp+=InterfaceUsageMember |
		//ownedImport_comp+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//documentation_comp+=OwnedDocumentation
		public Assignment getDocumentation_compAssignment_1_1_0() { return cDocumentation_compAssignment_1_1_0; }
		
		//OwnedDocumentation
		public RuleCall getDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0() { return cDocumentation_compOwnedDocumentationParserRuleCall_1_1_0_0; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1_1_1() { return cOwnedMembership_compAssignment_1_1_1; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_1_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_1_1_0; }
		
		//ownedMembership_comp+=VariantUsageMember
		public Assignment getOwnedMembership_compAssignment_1_1_2() { return cOwnedMembership_compAssignment_1_1_2; }
		
		//VariantUsageMember
		public RuleCall getOwnedMembership_compVariantUsageMemberParserRuleCall_1_1_2_0() { return cOwnedMembership_compVariantUsageMemberParserRuleCall_1_1_2_0; }
		
		//ownedFeatureMembership_comp+=InterfaceUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_3() { return cOwnedFeatureMembership_compAssignment_1_1_3; }
		
		//InterfaceUsageMember
		public RuleCall getOwnedFeatureMembership_compInterfaceUsageMemberParserRuleCall_1_1_3_0() { return cOwnedFeatureMembership_compInterfaceUsageMemberParserRuleCall_1_1_3_0; }
		
		//ownedImport_comp+=PackageImport
		public Assignment getOwnedImport_compAssignment_1_1_4() { return cOwnedImport_compAssignment_1_1_4; }
		
		//PackageImport
		public RuleCall getOwnedImport_compPackageImportParserRuleCall_1_1_4_0() { return cOwnedImport_compPackageImportParserRuleCall_1_1_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class InterfaceUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsageMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNestedUsageMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInterfaceEndMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//InterfaceUsageMember SysML::FeatureMembership:
		//	NestedUsageMember | InterfaceEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NestedUsageMember | InterfaceEndMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NestedUsageMember
		public RuleCall getNestedUsageMemberParserRuleCall_0() { return cNestedUsageMemberParserRuleCall_0; }
		
		//InterfaceEndMember
		public RuleCall getInterfaceEndMemberParserRuleCall_1() { return cInterfaceEndMemberParserRuleCall_1; }
	}
	public class InterfaceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEndKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compPortEndUsageParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//InterfaceEndMember SysML::EndFeatureMembership:
		//	DefinitionMemberPrefix 'end' ownedMemberFeature_comp=PortEndUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'end' ownedMemberFeature_comp=PortEndUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'end'
		public Keyword getEndKeyword_1() { return cEndKeyword_1; }
		
		//ownedMemberFeature_comp=PortEndUsage
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//PortEndUsage
		public RuleCall getOwnedMemberFeature_compPortEndUsageParserRuleCall_2_0() { return cOwnedMemberFeature_compPortEndUsageParserRuleCall_2_0; }
	}
	public class InterfaceUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsageKeyword");
		private final RuleCall cInterfaceKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Interface Usages */ InterfaceUsageKeyword:
		//	InterfaceKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceKeyword
		public RuleCall getInterfaceKeywordParserRuleCall() { return cInterfaceKeywordParserRuleCall; }
	}
	public class InterfaceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cInterfaceUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cInterfaceDefBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//InterfaceUsage SysML::InterfaceUsage:
		//	UsagePrefix? InterfaceUsageKeyword InterfaceUsageDeclaration InterfaceDefBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? InterfaceUsageKeyword InterfaceUsageDeclaration InterfaceDefBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//InterfaceUsageKeyword
		public RuleCall getInterfaceUsageKeywordParserRuleCall_1() { return cInterfaceUsageKeywordParserRuleCall_1; }
		
		//InterfaceUsageDeclaration
		public RuleCall getInterfaceUsageDeclarationParserRuleCall_2() { return cInterfaceUsageDeclarationParserRuleCall_2; }
		
		//InterfaceDefBody
		public RuleCall getInterfaceDefBodyParserRuleCall_3() { return cInterfaceDefBodyParserRuleCall_3; }
	}
	public class InterfaceUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final RuleCall cConnectorKeywordParserRuleCall_0_1_0 = (RuleCall)cGroup_0_1.eContents().get(0);
		private final RuleCall cConnectorPartParserRuleCall_0_1_1 = (RuleCall)cGroup_0_1.eContents().get(1);
		private final RuleCall cConnectorPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment InterfaceUsageDeclaration returns SysML::InterfaceUsage:
		//	UsageDeclaration? (ConnectorKeyword ConnectorPart)? | ConnectorPart;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? (ConnectorKeyword ConnectorPart)? | ConnectorPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UsageDeclaration? (ConnectorKeyword ConnectorPart)?
		public Group getGroup_0() { return cGroup_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0_0() { return cUsageDeclarationParserRuleCall_0_0; }
		
		//(ConnectorKeyword ConnectorPart)?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//ConnectorKeyword
		public RuleCall getConnectorKeywordParserRuleCall_0_1_0() { return cConnectorKeywordParserRuleCall_0_1_0; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_0_1_1() { return cConnectorPartParserRuleCall_0_1_1; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_1() { return cConnectorPartParserRuleCall_1; }
	}
	public class IndividualKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualKeyword");
		private final Keyword cIndividualKeyword = (Keyword)rule.eContents().get(1);
		
		///* INDIVIDUALS */ /* Individual Definitions */ IndividualKeyword:
		//	'individual';
		@Override public ParserRule getRule() { return rule; }
		
		//'individual'
		public Keyword getIndividualKeyword() { return cIndividualKeyword; }
	}
	public class IndividualDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIndividualKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//IndividualDefKeyword:
		//	IndividualKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//IndividualKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//IndividualKeyword
		public RuleCall getIndividualKeywordParserRuleCall_0() { return cIndividualKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class IndividualDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cIndividualDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cOwnedMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedMembership_compLifeClassMembershipParserRuleCall_3_0 = (RuleCall)cOwnedMembership_compAssignment_3.eContents().get(0);
		
		//IndividualDefinition SysML::IndividualDefinition:
		//	DefinitionPrefix? IndividualDefKeyword Definition
		//	ownedMembership_comp+=LifeClassMembership;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? IndividualDefKeyword Definition ownedMembership_comp+=LifeClassMembership
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//IndividualDefKeyword
		public RuleCall getIndividualDefKeywordParserRuleCall_1() { return cIndividualDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
		
		//ownedMembership_comp+=LifeClassMembership
		public Assignment getOwnedMembership_compAssignment_3() { return cOwnedMembership_compAssignment_3; }
		
		//LifeClassMembership
		public RuleCall getOwnedMembership_compLifeClassMembershipParserRuleCall_3_0() { return cOwnedMembership_compLifeClassMembershipParserRuleCall_3_0; }
	}
	public class LifeClassMembershipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LifeClassMembership");
		private final Assignment cOwnedMemberElement_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compLifeClassParserRuleCall_0 = (RuleCall)cOwnedMemberElement_compAssignment.eContents().get(0);
		
		//LifeClassMembership SysML::Membership:
		//	ownedMemberElement_comp=LifeClass;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement_comp=LifeClass
		public Assignment getOwnedMemberElement_compAssignment() { return cOwnedMemberElement_compAssignment; }
		
		//LifeClass
		public RuleCall getOwnedMemberElement_compLifeClassParserRuleCall_0() { return cOwnedMemberElement_compLifeClassParserRuleCall_0; }
	}
	public class LifeClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LifeClass");
		private final Action cLifeClassAction = (Action)rule.eContents().get(1);
		
		//LifeClass SysML::LifeClass:
		//	{SysML::LifeClass};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::LifeClass}
		public Action getLifeClassAction() { return cLifeClassAction; }
	}
	public class IndividualUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualUsageKeyword");
		private final RuleCall cIndividualKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Individual Usages */ IndividualUsageKeyword:
		//	IndividualKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//IndividualKeyword
		public RuleCall getIndividualKeywordParserRuleCall() { return cIndividualKeywordParserRuleCall; }
	}
	public class TimeSliceKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TimeSliceKeyword");
		private final Keyword cTimesliceKeyword = (Keyword)rule.eContents().get(1);
		
		//TimeSliceKeyword:
		//	'timeslice';
		@Override public ParserRule getRule() { return rule; }
		
		//'timeslice'
		public Keyword getTimesliceKeyword() { return cTimesliceKeyword; }
	}
	public class SnapshotKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SnapshotKeyword");
		private final Keyword cSnapshotKeyword = (Keyword)rule.eContents().get(1);
		
		//SnapshotKeyword:
		//	'snapshot';
		@Override public ParserRule getRule() { return rule; }
		
		//'snapshot'
		public Keyword getSnapshotKeyword() { return cSnapshotKeyword; }
	}
	public class IndividualUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cIndividualUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//IndividualUsage SysML::IndividualUsage:
		//	UsagePrefix? IndividualUsageKeyword Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? IndividualUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//IndividualUsageKeyword
		public RuleCall getIndividualUsageKeywordParserRuleCall_1() { return cIndividualUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class IndividualRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cIndividualUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeIndividualUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//IndividualRefUsage SysML::IndividualUsage:
		//	UsagePrefix? ('ref' IndividualUsageKeyword | isComposite?=IndividualUsageKeyword) Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' IndividualUsageKeyword | isComposite?=IndividualUsageKeyword) Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' IndividualUsageKeyword | isComposite?=IndividualUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' IndividualUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//IndividualUsageKeyword
		public RuleCall getIndividualUsageKeywordParserRuleCall_1_0_1() { return cIndividualUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=IndividualUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//IndividualUsageKeyword
		public RuleCall getIsCompositeIndividualUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeIndividualUsageKeywordParserRuleCall_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class TimeSliceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TimeSliceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cTimeSliceKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compTimeSliceFeatureMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//TimeSliceUsage SysML::IndividualUsage:
		//	UsagePrefix? TimeSliceKeyword Usage
		//	ownedFeatureMembership_comp+=TimeSliceFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? TimeSliceKeyword Usage ownedFeatureMembership_comp+=TimeSliceFeatureMember
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//TimeSliceKeyword
		public RuleCall getTimeSliceKeywordParserRuleCall_1() { return cTimeSliceKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
		
		//ownedFeatureMembership_comp+=TimeSliceFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//TimeSliceFeatureMember
		public RuleCall getOwnedFeatureMembership_compTimeSliceFeatureMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compTimeSliceFeatureMemberParserRuleCall_3_0; }
	}
	public class TimeSliceRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TimeSliceRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cTimeSliceKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeTimeSliceKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compTimeSliceFeatureMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//TimeSliceRefUsage SysML::IndividualUsage:
		//	UsagePrefix? ('ref' TimeSliceKeyword | isComposite?=TimeSliceKeyword) Usage
		//	ownedFeatureMembership_comp+=TimeSliceFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' TimeSliceKeyword | isComposite?=TimeSliceKeyword) Usage
		//ownedFeatureMembership_comp+=TimeSliceFeatureMember
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' TimeSliceKeyword | isComposite?=TimeSliceKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' TimeSliceKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//TimeSliceKeyword
		public RuleCall getTimeSliceKeywordParserRuleCall_1_0_1() { return cTimeSliceKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=TimeSliceKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//TimeSliceKeyword
		public RuleCall getIsCompositeTimeSliceKeywordParserRuleCall_1_1_0() { return cIsCompositeTimeSliceKeywordParserRuleCall_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
		
		//ownedFeatureMembership_comp+=TimeSliceFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//TimeSliceFeatureMember
		public RuleCall getOwnedFeatureMembership_compTimeSliceFeatureMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compTimeSliceFeatureMemberParserRuleCall_3_0; }
	}
	public class TimeSliceFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TimeSliceFeatureMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTimeSliceFeatureParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//TimeSliceFeatureMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=TimeSliceFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=TimeSliceFeature
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//TimeSliceFeature
		public RuleCall getOwnedMemberFeature_compTimeSliceFeatureParserRuleCall_0() { return cOwnedMemberFeature_compTimeSliceFeatureParserRuleCall_0; }
	}
	public class TimeSliceFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TimeSliceFeature");
		private final Action cTimeSliceFeatureAction = (Action)rule.eContents().get(1);
		
		//TimeSliceFeature SysML::TimeSliceFeature:
		//	{SysML::TimeSliceFeature};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::TimeSliceFeature}
		public Action getTimeSliceFeatureAction() { return cTimeSliceFeatureAction; }
	}
	public class SnapshotUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SnapshotUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cSnapshotKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compSnapshotFeatureMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//SnapshotUsage SysML::IndividualUsage:
		//	UsagePrefix? SnapshotKeyword Usage
		//	ownedFeatureMembership_comp+=SnapshotFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? SnapshotKeyword Usage ownedFeatureMembership_comp+=SnapshotFeatureMember
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//SnapshotKeyword
		public RuleCall getSnapshotKeywordParserRuleCall_1() { return cSnapshotKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
		
		//ownedFeatureMembership_comp+=SnapshotFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//SnapshotFeatureMember
		public RuleCall getOwnedFeatureMembership_compSnapshotFeatureMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compSnapshotFeatureMemberParserRuleCall_3_0; }
	}
	public class SnapshotRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SnapshotRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cSnapshotKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeSnapshotKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compSnapshotFeatureMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//SnapshotRefUsage SysML::IndividualUsage:
		//	UsagePrefix? ('ref' SnapshotKeyword | isComposite?=SnapshotKeyword) Usage
		//	ownedFeatureMembership_comp+=SnapshotFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' SnapshotKeyword | isComposite?=SnapshotKeyword) Usage
		//ownedFeatureMembership_comp+=SnapshotFeatureMember
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' SnapshotKeyword | isComposite?=SnapshotKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' SnapshotKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//SnapshotKeyword
		public RuleCall getSnapshotKeywordParserRuleCall_1_0_1() { return cSnapshotKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=SnapshotKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//SnapshotKeyword
		public RuleCall getIsCompositeSnapshotKeywordParserRuleCall_1_1_0() { return cIsCompositeSnapshotKeywordParserRuleCall_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
		
		//ownedFeatureMembership_comp+=SnapshotFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//SnapshotFeatureMember
		public RuleCall getOwnedFeatureMembership_compSnapshotFeatureMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compSnapshotFeatureMemberParserRuleCall_3_0; }
	}
	public class SnapshotFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SnapshotFeatureMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compSnapshotFeatureParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//SnapshotFeatureMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=SnapshotFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=SnapshotFeature
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//SnapshotFeature
		public RuleCall getOwnedMemberFeature_compSnapshotFeatureParserRuleCall_0() { return cOwnedMemberFeature_compSnapshotFeatureParserRuleCall_0; }
	}
	public class SnapshotFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SnapshotFeature");
		private final Action cSnapshotFeatureAction = (Action)rule.eContents().get(1);
		
		//SnapshotFeature SysML::SnapshotFeature:
		//	{SysML::SnapshotFeature};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SnapshotFeature}
		public Action getSnapshotFeatureAction() { return cSnapshotFeatureAction; }
	}
	public class EmptySuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySuccessionMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptySuccessionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		///* Individual Succession */ EmptySuccessionMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=EmptySuccession;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptySuccession
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptySuccession
		public RuleCall getOwnedMemberFeature_compEmptySuccessionParserRuleCall_0() { return cOwnedMemberFeature_compEmptySuccessionParserRuleCall_0; }
	}
	public class EmptySuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compEmptyTargetEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		
		//EmptySuccession SysML::Succession:
		//	'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember
		//	ownedFeatureMembership_comp+=EmptyTargetEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember ownedFeatureMembership_comp+=EmptyTargetEndMember
		public Group getGroup() { return cGroup; }
		
		//'then'
		public Keyword getThenKeyword_0() { return cThenKeyword_0; }
		
		//ownedFeatureMembership_comp+=MultiplicitySourceEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//MultiplicitySourceEndMember
		public RuleCall getOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=EmptyTargetEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//EmptyTargetEndMember
		public RuleCall getOwnedFeatureMembership_compEmptyTargetEndMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compEmptyTargetEndMemberParserRuleCall_2_0; }
	}
	public class MultiplicitySourceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicitySourceEndMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compMultiplicitySourceEndParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//MultiplicitySourceEndMember SysML::EndFeatureMembership:
		//	ownedMemberFeature_comp=MultiplicitySourceEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=MultiplicitySourceEnd
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//MultiplicitySourceEnd
		public RuleCall getOwnedMemberFeature_compMultiplicitySourceEndParserRuleCall_0() { return cOwnedMemberFeature_compMultiplicitySourceEndParserRuleCall_0; }
	}
	public class MultiplicitySourceEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicitySourceEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSourceEndAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMembership_compMultiplicityMemberParserRuleCall_1_0 = (RuleCall)cOwnedMembership_compAssignment_1.eContents().get(0);
		
		//MultiplicitySourceEnd SysML::Feature:
		//	{SysML::SourceEnd} ownedMembership_comp+=MultiplicityMember?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SourceEnd} ownedMembership_comp+=MultiplicityMember?
		public Group getGroup() { return cGroup; }
		
		//{SysML::SourceEnd}
		public Action getSourceEndAction_0() { return cSourceEndAction_0; }
		
		//ownedMembership_comp+=MultiplicityMember?
		public Assignment getOwnedMembership_compAssignment_1() { return cOwnedMembership_compAssignment_1; }
		
		//MultiplicityMember
		public RuleCall getOwnedMembership_compMultiplicityMemberParserRuleCall_1_0() { return cOwnedMembership_compMultiplicityMemberParserRuleCall_1_0; }
	}
	public class EmptyTargetEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyTargetEndMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEmptyTargetEndParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//EmptyTargetEndMember SysML::EndFeatureMembership:
		//	ownedMemberFeature_comp=EmptyTargetEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=EmptyTargetEnd
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//EmptyTargetEnd
		public RuleCall getOwnedMemberFeature_compEmptyTargetEndParserRuleCall_0() { return cOwnedMemberFeature_compEmptyTargetEndParserRuleCall_0; }
	}
	public class EmptyTargetEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyTargetEnd");
		private final Action cTargetEndAction = (Action)rule.eContents().get(1);
		
		//EmptyTargetEnd SysML::Feature:
		//	{SysML::TargetEnd};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::TargetEnd}
		public Action getTargetEndAction() { return cTargetEndAction; }
	}
	public class ActionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionKeyword");
		private final Keyword cActionKeyword = (Keyword)rule.eContents().get(1);
		
		///* ACTION */ /* Action Definitions */ ActionKeyword:
		//	'action';
		@Override public ParserRule getRule() { return rule; }
		
		//'action'
		public Keyword getActionKeyword() { return cActionKeyword; }
	}
	public class ActionDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionDefKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cActionKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cDefKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cActivityKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//ActionDefKeyword:
		//	ActionKeyword 'def' | 'activity';
		@Override public ParserRule getRule() { return rule; }
		
		//ActionKeyword 'def' | 'activity'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionKeyword 'def'
		public Group getGroup_0() { return cGroup_0; }
		
		//ActionKeyword
		public RuleCall getActionKeywordParserRuleCall_0_0() { return cActionKeywordParserRuleCall_0_0; }
		
		//'def'
		public Keyword getDefKeyword_0_1() { return cDefKeyword_0_1; }
		
		//'activity'
		public Keyword getActivityKeyword_1() { return cActivityKeyword_1; }
	}
	public class ActionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActionDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ActionDefinition SysML::ActionDefinition:
		//	DefinitionPrefix? ActionDefKeyword ActionDeclaration ActionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? ActionDefKeyword ActionDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//ActionDefKeyword
		public RuleCall getActionDefKeywordParserRuleCall_1() { return cActionDefKeywordParserRuleCall_1; }
		
		//ActionDeclaration
		public RuleCall getActionDeclarationParserRuleCall_2() { return cActionDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class ActionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ActionDeclaration returns SysML::ActionDefinition:
		//	DefinitionDeclaration ParameterList?;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionDeclaration ParameterList?
		public Group getGroup() { return cGroup; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_0() { return cDefinitionDeclarationParserRuleCall_0; }
		
		//ParameterList?
		public RuleCall getParameterListParserRuleCall_1() { return cParameterListParserRuleCall_1; }
	}
	public class ParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compParameterMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment ParameterList returns SysML::Type:
		//	'(' (ownedFeatureMembership_comp+=ParameterMember (',' ownedFeatureMembership_comp+=ParameterMember)*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' (ownedFeatureMembership_comp+=ParameterMember (',' ownedFeatureMembership_comp+=ParameterMember)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(ownedFeatureMembership_comp+=ParameterMember (',' ownedFeatureMembership_comp+=ParameterMember)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedFeatureMembership_comp+=ParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_0() { return cOwnedFeatureMembership_compAssignment_1_0; }
		
		//ParameterMember
		public RuleCall getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_0_0() { return cOwnedFeatureMembership_compParameterMemberParserRuleCall_1_0_0; }
		
		//(',' ownedFeatureMembership_comp+=ParameterMember)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedFeatureMembership_comp+=ParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_1() { return cOwnedFeatureMembership_compAssignment_1_1_1; }
		
		//ParameterMember
		public RuleCall getOwnedFeatureMembership_compParameterMemberParserRuleCall_1_1_1_0() { return cOwnedFeatureMembership_compParameterMemberParserRuleCall_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class ParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cOwnedMemberParameter_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberParameter_compParameterParserRuleCall_1_0 = (RuleCall)cOwnedMemberParameter_compAssignment_1.eContents().get(0);
		
		//ParameterMember SysML::ParameterMembership:
		//	direction=FeatureDirection? ownedMemberParameter_comp=Parameter;
		@Override public ParserRule getRule() { return rule; }
		
		//direction=FeatureDirection? ownedMemberParameter_comp=Parameter
		public Group getGroup() { return cGroup; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//ownedMemberParameter_comp=Parameter
		public Assignment getOwnedMemberParameter_compAssignment_1() { return cOwnedMemberParameter_compAssignment_1; }
		
		//Parameter
		public RuleCall getOwnedMemberParameter_compParameterParserRuleCall_1_0() { return cOwnedMemberParameter_compParameterParserRuleCall_1_0; }
	}
	public class ActionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cActionBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ActionBody returns SysML::Type:
		//	';'
		//	// Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//	// while incrementally parsing.
		//	| '{' => ActionBodyItem* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//// while incrementally parsing.
		//| '{' => ActionBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => ActionBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> ActionBodyItem*
		public RuleCall getActionBodyItemParserRuleCall_1_1() { return cActionBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ActionBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cDocumentation_compAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cDocumentation_compOwnedDocumentationParserRuleCall_0_0 = (RuleCall)cDocumentation_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_0 = (RuleCall)cOwnedMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedMembership_compVariantUsageMemberParserRuleCall_2_0 = (RuleCall)cOwnedMembership_compAssignment_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compParameterFlowUsageMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_4_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cOwnedFeatureMembership_compAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_5_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_5_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_5_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cOwnedFeatureMembership_compAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compInitialNodeMemberParserRuleCall_6_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_6_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_6_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cOwnedFeatureMembership_compAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_7_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_7_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final Alternatives cOwnedFeatureMembership_compAlternatives_7_1_0 = (Alternatives)cOwnedFeatureMembership_compAssignment_7_1.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compBehaviorUsageMemberParserRuleCall_7_1_0_0 = (RuleCall)cOwnedFeatureMembership_compAlternatives_7_1_0.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compActionNodeMemberParserRuleCall_7_1_0_1 = (RuleCall)cOwnedFeatureMembership_compAlternatives_7_1_0.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_7_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_7_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cOwnedFeatureMembership_compGuardedSuccessionMemberParserRuleCall_8_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_8.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final RuleCall cOwnedImport_compPackageImportParserRuleCall_9_0 = (RuleCall)cOwnedImport_compAssignment_9.eContents().get(0);
		
		//fragment ActionBodyItem returns SysML::Type:
		//	documentation_comp+=OwnedDocumentation
		//	| ownedMembership_comp+=NestedDefinitionMember
		//	| ownedMembership_comp+=VariantUsageMember
		//	| ownedFeatureMembership_comp+=ParameterFlowUsageMember
		//	| ownedFeatureMembership_comp+=StructureUsageMember
		//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
		//	ownedFeatureMembership_comp+=IndividualUsageMember
		//	| ownedFeatureMembership_comp+=InitialNodeMember
		//	ownedFeatureMembership_comp+=TargetSuccessionMember*
		//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
		//	ownedFeatureMembership_comp+=(BehaviorUsageMember | ActionNodeMember)
		//	ownedFeatureMembership_comp+=TargetSuccessionMember*
		//	| ownedFeatureMembership_comp+=GuardedSuccessionMember
		//	| ownedImport_comp+=PackageImport;
		@Override public ParserRule getRule() { return rule; }
		
		//documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NestedDefinitionMember |
		//ownedMembership_comp+=VariantUsageMember | ownedFeatureMembership_comp+=ParameterFlowUsageMember |
		//ownedFeatureMembership_comp+=StructureUsageMember | ownedFeatureMembership_comp+=EmptySuccessionMember?
		//ownedFeatureMembership_comp+=IndividualUsageMember | ownedFeatureMembership_comp+=InitialNodeMember
		//ownedFeatureMembership_comp+=TargetSuccessionMember* | ownedFeatureMembership_comp+=EmptySuccessionMember?
		//ownedFeatureMembership_comp+=(BehaviorUsageMember | ActionNodeMember)
		//ownedFeatureMembership_comp+=TargetSuccessionMember* | ownedFeatureMembership_comp+=GuardedSuccessionMember |
		//ownedImport_comp+=PackageImport
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//documentation_comp+=OwnedDocumentation
		public Assignment getDocumentation_compAssignment_0() { return cDocumentation_compAssignment_0; }
		
		//OwnedDocumentation
		public RuleCall getDocumentation_compOwnedDocumentationParserRuleCall_0_0() { return cDocumentation_compOwnedDocumentationParserRuleCall_0_0; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1() { return cOwnedMembership_compAssignment_1; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_0; }
		
		//ownedMembership_comp+=VariantUsageMember
		public Assignment getOwnedMembership_compAssignment_2() { return cOwnedMembership_compAssignment_2; }
		
		//VariantUsageMember
		public RuleCall getOwnedMembership_compVariantUsageMemberParserRuleCall_2_0() { return cOwnedMembership_compVariantUsageMemberParserRuleCall_2_0; }
		
		//ownedFeatureMembership_comp+=ParameterFlowUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ParameterFlowUsageMember
		public RuleCall getOwnedFeatureMembership_compParameterFlowUsageMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compParameterFlowUsageMemberParserRuleCall_3_0; }
		
		//ownedFeatureMembership_comp+=StructureUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_4() { return cOwnedFeatureMembership_compAssignment_4; }
		
		//StructureUsageMember
		public RuleCall getOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_4_0() { return cOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_4_0; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=IndividualUsageMember
		public Group getGroup_5() { return cGroup_5; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_5_0() { return cOwnedFeatureMembership_compAssignment_5_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_5_0_0() { return cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_5_0_0; }
		
		//ownedFeatureMembership_comp+=IndividualUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_5_1() { return cOwnedFeatureMembership_compAssignment_5_1; }
		
		//IndividualUsageMember
		public RuleCall getOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_5_1_0() { return cOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_5_1_0; }
		
		//ownedFeatureMembership_comp+=InitialNodeMember ownedFeatureMembership_comp+=TargetSuccessionMember*
		public Group getGroup_6() { return cGroup_6; }
		
		//ownedFeatureMembership_comp+=InitialNodeMember
		public Assignment getOwnedFeatureMembership_compAssignment_6_0() { return cOwnedFeatureMembership_compAssignment_6_0; }
		
		//InitialNodeMember
		public RuleCall getOwnedFeatureMembership_compInitialNodeMemberParserRuleCall_6_0_0() { return cOwnedFeatureMembership_compInitialNodeMemberParserRuleCall_6_0_0; }
		
		//ownedFeatureMembership_comp+=TargetSuccessionMember*
		public Assignment getOwnedFeatureMembership_compAssignment_6_1() { return cOwnedFeatureMembership_compAssignment_6_1; }
		
		//TargetSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_6_1_0() { return cOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_6_1_0; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=(BehaviorUsageMember |
		//ActionNodeMember) ownedFeatureMembership_comp+=TargetSuccessionMember*
		public Group getGroup_7() { return cGroup_7; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_7_0() { return cOwnedFeatureMembership_compAssignment_7_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_7_0_0() { return cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_7_0_0; }
		
		//ownedFeatureMembership_comp+=(BehaviorUsageMember | ActionNodeMember)
		public Assignment getOwnedFeatureMembership_compAssignment_7_1() { return cOwnedFeatureMembership_compAssignment_7_1; }
		
		//(BehaviorUsageMember | ActionNodeMember)
		public Alternatives getOwnedFeatureMembership_compAlternatives_7_1_0() { return cOwnedFeatureMembership_compAlternatives_7_1_0; }
		
		//BehaviorUsageMember
		public RuleCall getOwnedFeatureMembership_compBehaviorUsageMemberParserRuleCall_7_1_0_0() { return cOwnedFeatureMembership_compBehaviorUsageMemberParserRuleCall_7_1_0_0; }
		
		//ActionNodeMember
		public RuleCall getOwnedFeatureMembership_compActionNodeMemberParserRuleCall_7_1_0_1() { return cOwnedFeatureMembership_compActionNodeMemberParserRuleCall_7_1_0_1; }
		
		//ownedFeatureMembership_comp+=TargetSuccessionMember*
		public Assignment getOwnedFeatureMembership_compAssignment_7_2() { return cOwnedFeatureMembership_compAssignment_7_2; }
		
		//TargetSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_7_2_0() { return cOwnedFeatureMembership_compTargetSuccessionMemberParserRuleCall_7_2_0; }
		
		//ownedFeatureMembership_comp+=GuardedSuccessionMember
		public Assignment getOwnedFeatureMembership_compAssignment_8() { return cOwnedFeatureMembership_compAssignment_8; }
		
		//GuardedSuccessionMember
		public RuleCall getOwnedFeatureMembership_compGuardedSuccessionMemberParserRuleCall_8_0() { return cOwnedFeatureMembership_compGuardedSuccessionMemberParserRuleCall_8_0; }
		
		//ownedImport_comp+=PackageImport
		public Assignment getOwnedImport_compAssignment_9() { return cOwnedImport_compAssignment_9; }
		
		//PackageImport
		public RuleCall getOwnedImport_compPackageImportParserRuleCall_9_0() { return cOwnedImport_compPackageImportParserRuleCall_9_0; }
	}
	public class ParameterFlowUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterFlowUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cDirectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0 = (RuleCall)cDirectionAssignment_1.eContents().get(0);
		private final Assignment cOwnedMemberParameter_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberParameter_compFlowUsageElementParserRuleCall_2_0 = (RuleCall)cOwnedMemberParameter_compAssignment_2.eContents().get(0);
		
		//ParameterFlowUsageMember SysML::ParameterMembership:
		//	DefinitionMemberPrefix direction=FeatureDirection
		//	ownedMemberParameter_comp=FlowUsageElement;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix direction=FeatureDirection ownedMemberParameter_comp=FlowUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//direction=FeatureDirection
		public Assignment getDirectionAssignment_1() { return cDirectionAssignment_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0; }
		
		//ownedMemberParameter_comp=FlowUsageElement
		public Assignment getOwnedMemberParameter_compAssignment_2() { return cOwnedMemberParameter_compAssignment_2; }
		
		//FlowUsageElement
		public RuleCall getOwnedMemberParameter_compFlowUsageElementParserRuleCall_2_0() { return cOwnedMemberParameter_compFlowUsageElementParserRuleCall_2_0; }
	}
	public class InitialNodeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InitialNodeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFirstKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMemberFeatureFeatureCrossReference_2_0 = (CrossReference)cMemberFeatureAssignment_2.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//InitialNodeMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix 'first' memberFeature=[SysML::Feature|QualifiedName] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'first' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'first'
		public Keyword getFirstKeyword_1() { return cFirstKeyword_1; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_2() { return cMemberFeatureAssignment_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_2_0() { return cMemberFeatureFeatureCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_2_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ActionNodeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNodeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compActionNodeParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		//ActionNodeMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=ActionNode;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=ActionNode
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=ActionNode
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//ActionNode
		public RuleCall getOwnedMemberFeature_compActionNodeParserRuleCall_1_0() { return cOwnedMemberFeature_compActionNodeParserRuleCall_1_0; }
	}
	public class TargetSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetSuccessionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compActionTargetSuccessionParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TargetSuccessionMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=ActionTargetSuccession ';';
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=ActionTargetSuccession ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=ActionTargetSuccession
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//ActionTargetSuccession
		public RuleCall getOwnedMemberFeature_compActionTargetSuccessionParserRuleCall_1_0() { return cOwnedMemberFeature_compActionTargetSuccessionParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class GuardedSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardedSuccessionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedMemberFeature_compGuardedSuccessionParserRuleCall_0_0 = (RuleCall)cOwnedMemberFeature_compAssignment_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//GuardedSuccessionMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=GuardedSuccession ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=GuardedSuccession ';'
		public Group getGroup() { return cGroup; }
		
		//ownedMemberFeature_comp=GuardedSuccession
		public Assignment getOwnedMemberFeature_compAssignment_0() { return cOwnedMemberFeature_compAssignment_0; }
		
		//GuardedSuccession
		public RuleCall getOwnedMemberFeature_compGuardedSuccessionParserRuleCall_0_0() { return cOwnedMemberFeature_compGuardedSuccessionParserRuleCall_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Parameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cReferenceUsageAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_0_1_0 = (RuleCall)cAlternatives_0_1.eContents().get(0);
		private final Group cGroup_0_1_1 = (Group)cAlternatives_0_1.eContents().get(1);
		private final RuleCall cReferenceUsageKeywordParserRuleCall_0_1_1_0 = (RuleCall)cGroup_0_1_1.eContents().get(0);
		private final RuleCall cParameterDeclarationParserRuleCall_0_1_1_1 = (RuleCall)cGroup_0_1_1.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cAttributeUsageAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cAttributeUsageKeywordParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cItemUsageAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final RuleCall cItemUsageKeywordParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cPartUsageAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final RuleCall cPartUsageKeywordParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_3_2 = (RuleCall)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cViewUsageAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final RuleCall cViewUsageKeywordParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cRenderingUsageAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final RuleCall cRenderingUsageKeywordParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_5_2 = (RuleCall)cGroup_5.eContents().get(2);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Action cActionUsageAction_6_0 = (Action)cGroup_6.eContents().get(0);
		private final RuleCall cActionUsageKeywordParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_6_2 = (RuleCall)cGroup_6.eContents().get(2);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Action cCalculationUsageAction_7_0 = (Action)cGroup_7.eContents().get(0);
		private final RuleCall cCalculationUsageKeywordParserRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_7_2 = (RuleCall)cGroup_7.eContents().get(2);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Action cStateUsageAction_8_0 = (Action)cGroup_8.eContents().get(0);
		private final RuleCall cStateUsageKeywordParserRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_8_2 = (RuleCall)cGroup_8.eContents().get(2);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Action cConstraintUsageAction_9_0 = (Action)cGroup_9.eContents().get(0);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_9_1 = (RuleCall)cGroup_9.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_9_2 = (RuleCall)cGroup_9.eContents().get(2);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Action cRequirementUsageAction_10_0 = (Action)cGroup_10.eContents().get(0);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_10_1 = (RuleCall)cGroup_10.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_10_2 = (RuleCall)cGroup_10.eContents().get(2);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Action cAnalysisCaseUsageAction_11_0 = (Action)cGroup_11.eContents().get(0);
		private final RuleCall cAnalysisCaseUsageKeywordParserRuleCall_11_1 = (RuleCall)cGroup_11.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_11_2 = (RuleCall)cGroup_11.eContents().get(2);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Action cVerificationCaseUsageAction_12_0 = (Action)cGroup_12.eContents().get(0);
		private final RuleCall cVerificationCaseUsageKeywordParserRuleCall_12_1 = (RuleCall)cGroup_12.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_12_2 = (RuleCall)cGroup_12.eContents().get(2);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Action cViewpointUsageAction_13_0 = (Action)cGroup_13.eContents().get(0);
		private final RuleCall cViewpointUsageKeywordParserRuleCall_13_1 = (RuleCall)cGroup_13.eContents().get(1);
		private final RuleCall cParameterDeclarationParserRuleCall_13_2 = (RuleCall)cGroup_13.eContents().get(2);
		
		///* Parameters */ Parameter SysML::Usage:
		//	{SysML::ReferenceUsage} (ParameterDeclaration | ReferenceUsageKeyword ParameterDeclaration?) | {SysML::AttributeUsage}
		//	AttributeUsageKeyword ParameterDeclaration?
		//	| {SysML::ItemUsage} ItemUsageKeyword ParameterDeclaration?
		//	| {SysML::PartUsage} PartUsageKeyword ParameterDeclaration?
		//	| {SysML::ViewUsage} ViewUsageKeyword ParameterDeclaration?
		//	| {SysML::RenderingUsage} RenderingUsageKeyword ParameterDeclaration?
		//	| {SysML::ActionUsage} ActionUsageKeyword ParameterDeclaration?
		//	| {SysML::CalculationUsage} CalculationUsageKeyword ParameterDeclaration?
		//	| {SysML::StateUsage} StateUsageKeyword ParameterDeclaration?
		//	| {SysML::ConstraintUsage} ConstraintUsageKeyword ParameterDeclaration?
		//	| {SysML::RequirementUsage} RequirementUsageKeyword ParameterDeclaration?
		//	| {SysML::AnalysisCaseUsage} AnalysisCaseUsageKeyword ParameterDeclaration?
		//	| {SysML::VerificationCaseUsage} VerificationCaseUsageKeyword ParameterDeclaration?
		//	| {SysML::ViewpointUsage} ViewpointUsageKeyword ParameterDeclaration?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ReferenceUsage} (ParameterDeclaration | ReferenceUsageKeyword ParameterDeclaration?) | {SysML::AttributeUsage}
		//AttributeUsageKeyword ParameterDeclaration? | {SysML::ItemUsage} ItemUsageKeyword ParameterDeclaration? |
		//{SysML::PartUsage} PartUsageKeyword ParameterDeclaration? | {SysML::ViewUsage} ViewUsageKeyword ParameterDeclaration? |
		//{SysML::RenderingUsage} RenderingUsageKeyword ParameterDeclaration? | {SysML::ActionUsage} ActionUsageKeyword
		//ParameterDeclaration? | {SysML::CalculationUsage} CalculationUsageKeyword ParameterDeclaration? | {SysML::StateUsage}
		//StateUsageKeyword ParameterDeclaration? | {SysML::ConstraintUsage} ConstraintUsageKeyword ParameterDeclaration? |
		//{SysML::RequirementUsage} RequirementUsageKeyword ParameterDeclaration? | {SysML::AnalysisCaseUsage}
		//AnalysisCaseUsageKeyword ParameterDeclaration? | {SysML::VerificationCaseUsage} VerificationCaseUsageKeyword
		//ParameterDeclaration? | {SysML::ViewpointUsage} ViewpointUsageKeyword ParameterDeclaration?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{SysML::ReferenceUsage} (ParameterDeclaration | ReferenceUsageKeyword ParameterDeclaration?)
		public Group getGroup_0() { return cGroup_0; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction_0_0() { return cReferenceUsageAction_0_0; }
		
		//(ParameterDeclaration | ReferenceUsageKeyword ParameterDeclaration?)
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }
		
		//ParameterDeclaration
		public RuleCall getParameterDeclarationParserRuleCall_0_1_0() { return cParameterDeclarationParserRuleCall_0_1_0; }
		
		//ReferenceUsageKeyword ParameterDeclaration?
		public Group getGroup_0_1_1() { return cGroup_0_1_1; }
		
		//ReferenceUsageKeyword
		public RuleCall getReferenceUsageKeywordParserRuleCall_0_1_1_0() { return cReferenceUsageKeywordParserRuleCall_0_1_1_0; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_0_1_1_1() { return cParameterDeclarationParserRuleCall_0_1_1_1; }
		
		//{SysML::AttributeUsage} AttributeUsageKeyword ParameterDeclaration?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::AttributeUsage}
		public Action getAttributeUsageAction_1_0() { return cAttributeUsageAction_1_0; }
		
		//AttributeUsageKeyword
		public RuleCall getAttributeUsageKeywordParserRuleCall_1_1() { return cAttributeUsageKeywordParserRuleCall_1_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_1_2() { return cParameterDeclarationParserRuleCall_1_2; }
		
		//{SysML::ItemUsage} ItemUsageKeyword ParameterDeclaration?
		public Group getGroup_2() { return cGroup_2; }
		
		//{SysML::ItemUsage}
		public Action getItemUsageAction_2_0() { return cItemUsageAction_2_0; }
		
		//ItemUsageKeyword
		public RuleCall getItemUsageKeywordParserRuleCall_2_1() { return cItemUsageKeywordParserRuleCall_2_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_2_2() { return cParameterDeclarationParserRuleCall_2_2; }
		
		//{SysML::PartUsage} PartUsageKeyword ParameterDeclaration?
		public Group getGroup_3() { return cGroup_3; }
		
		//{SysML::PartUsage}
		public Action getPartUsageAction_3_0() { return cPartUsageAction_3_0; }
		
		//PartUsageKeyword
		public RuleCall getPartUsageKeywordParserRuleCall_3_1() { return cPartUsageKeywordParserRuleCall_3_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_3_2() { return cParameterDeclarationParserRuleCall_3_2; }
		
		//{SysML::ViewUsage} ViewUsageKeyword ParameterDeclaration?
		public Group getGroup_4() { return cGroup_4; }
		
		//{SysML::ViewUsage}
		public Action getViewUsageAction_4_0() { return cViewUsageAction_4_0; }
		
		//ViewUsageKeyword
		public RuleCall getViewUsageKeywordParserRuleCall_4_1() { return cViewUsageKeywordParserRuleCall_4_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_4_2() { return cParameterDeclarationParserRuleCall_4_2; }
		
		//{SysML::RenderingUsage} RenderingUsageKeyword ParameterDeclaration?
		public Group getGroup_5() { return cGroup_5; }
		
		//{SysML::RenderingUsage}
		public Action getRenderingUsageAction_5_0() { return cRenderingUsageAction_5_0; }
		
		//RenderingUsageKeyword
		public RuleCall getRenderingUsageKeywordParserRuleCall_5_1() { return cRenderingUsageKeywordParserRuleCall_5_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_5_2() { return cParameterDeclarationParserRuleCall_5_2; }
		
		//{SysML::ActionUsage} ActionUsageKeyword ParameterDeclaration?
		public Group getGroup_6() { return cGroup_6; }
		
		//{SysML::ActionUsage}
		public Action getActionUsageAction_6_0() { return cActionUsageAction_6_0; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_6_1() { return cActionUsageKeywordParserRuleCall_6_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_6_2() { return cParameterDeclarationParserRuleCall_6_2; }
		
		//{SysML::CalculationUsage} CalculationUsageKeyword ParameterDeclaration?
		public Group getGroup_7() { return cGroup_7; }
		
		//{SysML::CalculationUsage}
		public Action getCalculationUsageAction_7_0() { return cCalculationUsageAction_7_0; }
		
		//CalculationUsageKeyword
		public RuleCall getCalculationUsageKeywordParserRuleCall_7_1() { return cCalculationUsageKeywordParserRuleCall_7_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_7_2() { return cParameterDeclarationParserRuleCall_7_2; }
		
		//{SysML::StateUsage} StateUsageKeyword ParameterDeclaration?
		public Group getGroup_8() { return cGroup_8; }
		
		//{SysML::StateUsage}
		public Action getStateUsageAction_8_0() { return cStateUsageAction_8_0; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_8_1() { return cStateUsageKeywordParserRuleCall_8_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_8_2() { return cParameterDeclarationParserRuleCall_8_2; }
		
		//{SysML::ConstraintUsage} ConstraintUsageKeyword ParameterDeclaration?
		public Group getGroup_9() { return cGroup_9; }
		
		//{SysML::ConstraintUsage}
		public Action getConstraintUsageAction_9_0() { return cConstraintUsageAction_9_0; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_9_1() { return cConstraintUsageKeywordParserRuleCall_9_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_9_2() { return cParameterDeclarationParserRuleCall_9_2; }
		
		//{SysML::RequirementUsage} RequirementUsageKeyword ParameterDeclaration?
		public Group getGroup_10() { return cGroup_10; }
		
		//{SysML::RequirementUsage}
		public Action getRequirementUsageAction_10_0() { return cRequirementUsageAction_10_0; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_10_1() { return cRequirementUsageKeywordParserRuleCall_10_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_10_2() { return cParameterDeclarationParserRuleCall_10_2; }
		
		//{SysML::AnalysisCaseUsage} AnalysisCaseUsageKeyword ParameterDeclaration?
		public Group getGroup_11() { return cGroup_11; }
		
		//{SysML::AnalysisCaseUsage}
		public Action getAnalysisCaseUsageAction_11_0() { return cAnalysisCaseUsageAction_11_0; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getAnalysisCaseUsageKeywordParserRuleCall_11_1() { return cAnalysisCaseUsageKeywordParserRuleCall_11_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_11_2() { return cParameterDeclarationParserRuleCall_11_2; }
		
		//{SysML::VerificationCaseUsage} VerificationCaseUsageKeyword ParameterDeclaration?
		public Group getGroup_12() { return cGroup_12; }
		
		//{SysML::VerificationCaseUsage}
		public Action getVerificationCaseUsageAction_12_0() { return cVerificationCaseUsageAction_12_0; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getVerificationCaseUsageKeywordParserRuleCall_12_1() { return cVerificationCaseUsageKeywordParserRuleCall_12_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_12_2() { return cParameterDeclarationParserRuleCall_12_2; }
		
		//{SysML::ViewpointUsage} ViewpointUsageKeyword ParameterDeclaration?
		public Group getGroup_13() { return cGroup_13; }
		
		//{SysML::ViewpointUsage}
		public Action getViewpointUsageAction_13_0() { return cViewpointUsageAction_13_0; }
		
		//ViewpointUsageKeyword
		public RuleCall getViewpointUsageKeywordParserRuleCall_13_1() { return cViewpointUsageKeywordParserRuleCall_13_1; }
		
		//ParameterDeclaration?
		public RuleCall getParameterDeclarationParserRuleCall_13_2() { return cParameterDeclarationParserRuleCall_13_2; }
	}
	public class ParameterDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cParameterSpecializationPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cParameterSpecializationPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment ParameterDeclaration returns SysML::Usage:
		//	Identification ParameterSpecializationPart?
		//	| ParameterSpecializationPart;
		@Override public ParserRule getRule() { return rule; }
		
		//Identification ParameterSpecializationPart? | ParameterSpecializationPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Identification ParameterSpecializationPart?
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//ParameterSpecializationPart?
		public RuleCall getParameterSpecializationPartParserRuleCall_0_1() { return cParameterSpecializationPartParserRuleCall_0_1; }
		
		//ParameterSpecializationPart
		public RuleCall getParameterSpecializationPartParserRuleCall_1() { return cParameterSpecializationPartParserRuleCall_1; }
	}
	public class ParameterSpecializationPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterSpecializationPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cParameterSpecializationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cParameterSpecializationParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cParameterSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment ParameterSpecializationPart returns SysML::Feature:
		//	-> ParameterSpecialization+ MultiplicityPart? ParameterSpecialization*
		//	| MultiplicityPart ParameterSpecialization*;
		@Override public ParserRule getRule() { return rule; }
		
		//-> ParameterSpecialization+ MultiplicityPart? ParameterSpecialization* | MultiplicityPart ParameterSpecialization*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//-> ParameterSpecialization+ MultiplicityPart? ParameterSpecialization*
		public Group getGroup_0() { return cGroup_0; }
		
		//-> ParameterSpecialization+
		public RuleCall getParameterSpecializationParserRuleCall_0_0() { return cParameterSpecializationParserRuleCall_0_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_1() { return cMultiplicityPartParserRuleCall_0_1; }
		
		//ParameterSpecialization*
		public RuleCall getParameterSpecializationParserRuleCall_0_2() { return cParameterSpecializationParserRuleCall_0_2; }
		
		//MultiplicityPart ParameterSpecialization*
		public Group getGroup_1() { return cGroup_1; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1_0() { return cMultiplicityPartParserRuleCall_1_0; }
		
		//ParameterSpecialization*
		public RuleCall getParameterSpecializationParserRuleCall_1_1() { return cParameterSpecializationParserRuleCall_1_1; }
	}
	public class ParameterSpecializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ParameterSpecialization");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypedByParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubsetsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRedefinesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//fragment ParameterSpecialization returns SysML::Feature:
		//	TypedBy | Subsets | Redefines;
		@Override public ParserRule getRule() { return rule; }
		
		//TypedBy | Subsets | Redefines
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TypedBy
		public RuleCall getTypedByParserRuleCall_0() { return cTypedByParserRuleCall_0; }
		
		//Subsets
		public RuleCall getSubsetsParserRuleCall_1() { return cSubsetsParserRuleCall_1; }
		
		//Redefines
		public RuleCall getRedefinesParserRuleCall_2() { return cRedefinesParserRuleCall_2; }
	}
	public class ActionUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageKeyword");
		private final RuleCall cActionKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Action Usages */ ActionUsageKeyword:
		//	ActionKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionKeyword
		public RuleCall getActionKeywordParserRuleCall() { return cActionKeywordParserRuleCall; }
	}
	public class ActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActionUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ActionUsage SysML::ActionUsage:
		//	UsagePrefix? ActionUsageKeyword ActionUsageDeclaration ActionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ActionUsageKeyword ActionUsageDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_1() { return cActionUsageKeywordParserRuleCall_1; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class ActionFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cActionUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cActionBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ActionFlowUsage SysML::ActionUsage:
		//	UsagePrefix? 'ref'? ActionUsageKeyword ActionUsageDeclaration ActionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? ActionUsageKeyword ActionUsageDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_2() { return cActionUsageKeywordParserRuleCall_2; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_3() { return cActionUsageDeclarationParserRuleCall_3; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_4() { return cActionBodyParserRuleCall_4; }
	}
	public class ActionRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cActionUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeActionUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ActionRefUsage SysML::ActionUsage:
		//	UsagePrefix? ('ref' ActionUsageKeyword | isComposite?=ActionUsageKeyword) ActionUsageDeclaration ActionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' ActionUsageKeyword | isComposite?=ActionUsageKeyword) ActionUsageDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' ActionUsageKeyword | isComposite?=ActionUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' ActionUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_1_0_1() { return cActionUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=ActionUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//ActionUsageKeyword
		public RuleCall getIsCompositeActionUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeActionUsageKeywordParserRuleCall_1_1_0; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class PerformActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformActionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cPerformKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cPerformActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//PerformActionUsage SysML::PerformActionUsage:
		//	UsagePrefix? 'perform' PerformActionUsageDeclaration ActionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'perform' PerformActionUsageDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'perform'
		public Keyword getPerformKeyword_1() { return cPerformKeyword_1; }
		
		//PerformActionUsageDeclaration
		public RuleCall getPerformActionUsageDeclarationParserRuleCall_2() { return cPerformActionUsageDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class PerformActionUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformActionUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final RuleCall cOwnedRelationship_compOwnedSubsettingParserRuleCall_0_0_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final RuleCall cActionUsageKeywordParserRuleCall_0_1_0 = (RuleCall)cGroup_0_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_1_1 = (RuleCall)cGroup_0_1.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cActionUsageParameterListParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//fragment PerformActionUsageDeclaration returns SysML::ActionUsage:
		//	(ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
		//	| ActionUsageKeyword UsageDeclaration?) (ValuePart | ActionUsageParameterList)?;
		@Override public ParserRule getRule() { return rule; }
		
		//(ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart? | ActionUsageKeyword UsageDeclaration?) (ValuePart |
		//ActionUsageParameterList)?
		public Group getGroup() { return cGroup; }
		
		//(ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart? | ActionUsageKeyword UsageDeclaration?)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//ownedRelationship_comp+=OwnedSubsetting
		public Assignment getOwnedRelationship_compAssignment_0_0_0() { return cOwnedRelationship_compAssignment_0_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationship_compOwnedSubsettingParserRuleCall_0_0_0_0() { return cOwnedRelationship_compOwnedSubsettingParserRuleCall_0_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_0_0_1() { return cFeatureSpecializationPartParserRuleCall_0_0_1; }
		
		//ActionUsageKeyword UsageDeclaration?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_0_1_0() { return cActionUsageKeywordParserRuleCall_0_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0_1_1() { return cUsageDeclarationParserRuleCall_0_1_1; }
		
		//(ValuePart | ActionUsageParameterList)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_1_0() { return cValuePartParserRuleCall_1_0; }
		
		//ActionUsageParameterList
		public RuleCall getActionUsageParameterListParserRuleCall_1_1() { return cActionUsageParameterListParserRuleCall_1_1; }
	}
	public class ActionUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cActionUsageParameterListParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//fragment ActionUsageDeclaration returns SysML::Step:
		//	UsageDeclaration? (ValuePart | ActionUsageParameterList)?;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? (ValuePart | ActionUsageParameterList)?
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//(ValuePart | ActionUsageParameterList)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_1_0() { return cValuePartParserRuleCall_1_0; }
		
		//ActionUsageParameterList
		public RuleCall getActionUsageParameterListParserRuleCall_1_1() { return cActionUsageParameterListParserRuleCall_1_1; }
	}
	public class ActionUsageParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compActionUsageParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compActionUsageParameterMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment ActionUsageParameterList returns SysML::Type:
		//	'(' (ownedFeatureMembership_comp+=ActionUsageParameterMember (','
		//	ownedFeatureMembership_comp+=ActionUsageParameterMember)*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' (ownedFeatureMembership_comp+=ActionUsageParameterMember (','
		//ownedFeatureMembership_comp+=ActionUsageParameterMember)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(ownedFeatureMembership_comp+=ActionUsageParameterMember (','
		//ownedFeatureMembership_comp+=ActionUsageParameterMember)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedFeatureMembership_comp+=ActionUsageParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_0() { return cOwnedFeatureMembership_compAssignment_1_0; }
		
		//ActionUsageParameterMember
		public RuleCall getOwnedFeatureMembership_compActionUsageParameterMemberParserRuleCall_1_0_0() { return cOwnedFeatureMembership_compActionUsageParameterMemberParserRuleCall_1_0_0; }
		
		//(',' ownedFeatureMembership_comp+=ActionUsageParameterMember)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedFeatureMembership_comp+=ActionUsageParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_1() { return cOwnedFeatureMembership_compAssignment_1_1_1; }
		
		//ActionUsageParameterMember
		public RuleCall getOwnedFeatureMembership_compActionUsageParameterMemberParserRuleCall_1_1_1_0() { return cOwnedFeatureMembership_compActionUsageParameterMemberParserRuleCall_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class ActionUsageParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cOwnedMemberParameter_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberParameter_compActionUsageParameterParserRuleCall_1_0 = (RuleCall)cOwnedMemberParameter_compAssignment_1.eContents().get(0);
		
		//ActionUsageParameterMember SysML::ParameterMembership:
		//	direction=FeatureDirection? ownedMemberParameter_comp=ActionUsageParameter;
		@Override public ParserRule getRule() { return rule; }
		
		//direction=FeatureDirection? ownedMemberParameter_comp=ActionUsageParameter
		public Group getGroup() { return cGroup; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//ownedMemberParameter_comp=ActionUsageParameter
		public Assignment getOwnedMemberParameter_compAssignment_1() { return cOwnedMemberParameter_compAssignment_1; }
		
		//ActionUsageParameter
		public RuleCall getOwnedMemberParameter_compActionUsageParameterParserRuleCall_1_0() { return cOwnedMemberParameter_compActionUsageParameterParserRuleCall_1_0; }
	}
	public class ActionUsageParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cParameterParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cValueOrFlowPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cReferenceUsageAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cValueOrFlowPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//ActionUsageParameter SysML::Usage:
		//	Parameter ValueOrFlowPart? | {SysML::ReferenceUsage} ValueOrFlowPart;
		@Override public ParserRule getRule() { return rule; }
		
		//Parameter ValueOrFlowPart? | {SysML::ReferenceUsage} ValueOrFlowPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Parameter ValueOrFlowPart?
		public Group getGroup_0() { return cGroup_0; }
		
		//Parameter
		public RuleCall getParameterParserRuleCall_0_0() { return cParameterParserRuleCall_0_0; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_0_1() { return cValueOrFlowPartParserRuleCall_0_1; }
		
		//{SysML::ReferenceUsage} ValueOrFlowPart
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction_1_0() { return cReferenceUsageAction_1_0; }
		
		//ValueOrFlowPart
		public RuleCall getValueOrFlowPartParserRuleCall_1_1() { return cValueOrFlowPartParserRuleCall_1_1; }
	}
	public class ActionNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSendNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAcceptNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cControlNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///* Action Nodes */ ActionNode SysML::ActionUsage:
		//	SendNode | AcceptNode | ControlNode;
		@Override public ParserRule getRule() { return rule; }
		
		//SendNode | AcceptNode | ControlNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SendNode
		public RuleCall getSendNodeParserRuleCall_0() { return cSendNodeParserRuleCall_0; }
		
		//AcceptNode
		public RuleCall getAcceptNodeParserRuleCall_1() { return cAcceptNodeParserRuleCall_1; }
		
		//ControlNode
		public RuleCall getControlNodeParserRuleCall_2() { return cControlNodeParserRuleCall_2; }
	}
	public class AcceptNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AcceptNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAcceptNodeDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AcceptNode SysML::AcceptActionUsage:
		//	UsagePrefix? AcceptNodeDeclaration ActionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? AcceptNodeDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//AcceptNodeDeclaration
		public RuleCall getAcceptNodeDeclarationParserRuleCall_1() { return cAcceptNodeDeclarationParserRuleCall_1; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_2() { return cActionBodyParserRuleCall_2; }
	}
	public class AcceptNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AcceptNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cActionKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cAcceptKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		
		//fragment AcceptNodeDeclaration returns SysML::ActionUsage:
		//	ownedFeatureMembership_comp+=EmptyParameterMember ('action' UsageDeclaration)? 'accept'
		//	ownedFeatureMembership_comp+=ItemFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember ('action' UsageDeclaration)? 'accept'
		//ownedFeatureMembership_comp+=ItemFeatureMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0; }
		
		//('action' UsageDeclaration)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'action'
		public Keyword getActionKeyword_1_0() { return cActionKeyword_1_0; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_1_1() { return cUsageDeclarationParserRuleCall_1_1; }
		
		//'accept'
		public Keyword getAcceptKeyword_2() { return cAcceptKeyword_2; }
		
		//ownedFeatureMembership_comp+=ItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_3_0; }
	}
	public class SendNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SendNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cSendNodeDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SendNode SysML::SendActionUsage:
		//	UsagePrefix? SendNodeDeclaration ActionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? SendNodeDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//SendNodeDeclaration
		public RuleCall getSendNodeDeclarationParserRuleCall_1() { return cSendNodeDeclarationParserRuleCall_1; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_2() { return cActionBodyParserRuleCall_2; }
	}
	public class SendNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SendNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cActionKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cSendKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnedFeatureMembership_compAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_4_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOwnedFeatureMembership_compAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_6_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_6.eContents().get(0);
		
		//fragment SendNodeDeclaration returns SysML::ActionUsage:
		//	ownedFeatureMembership_comp+=EmptyParameterMember ownedFeatureMembership_comp+=EmptyItemFeatureMember ('action'
		//	UsageDeclaration)? 'send' ownedFeatureMembership_comp+=OwnedExpressionMember
		//	'to' ownedFeatureMembership_comp+=OwnedExpressionMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember ownedFeatureMembership_comp+=EmptyItemFeatureMember ('action'
		//UsageDeclaration)? 'send' ownedFeatureMembership_comp+=OwnedExpressionMember 'to'
		//ownedFeatureMembership_comp+=OwnedExpressionMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=EmptyItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//EmptyItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compEmptyItemFeatureMemberParserRuleCall_1_0; }
		
		//('action' UsageDeclaration)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'action'
		public Keyword getActionKeyword_2_0() { return cActionKeyword_2_0; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_2_1() { return cUsageDeclarationParserRuleCall_2_1; }
		
		//'send'
		public Keyword getSendKeyword_3() { return cSendKeyword_3; }
		
		//ownedFeatureMembership_comp+=OwnedExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_4() { return cOwnedFeatureMembership_compAssignment_4; }
		
		//OwnedExpressionMember
		public RuleCall getOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_4_0() { return cOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//ownedFeatureMembership_comp+=OwnedExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_6() { return cOwnedFeatureMembership_compAssignment_6; }
		
		//OwnedExpressionMember
		public RuleCall getOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_6_0() { return cOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_6_0; }
	}
	public class ControlNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ControlNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMergeNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDecisionNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJoinNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cForkNodeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ControlNode SysML::ControlNode:
		//	MergeNode
		//	| DecisionNode
		//	| JoinNode
		//	| ForkNode;
		@Override public ParserRule getRule() { return rule; }
		
		//MergeNode | DecisionNode | JoinNode | ForkNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MergeNode
		public RuleCall getMergeNodeParserRuleCall_0() { return cMergeNodeParserRuleCall_0; }
		
		//DecisionNode
		public RuleCall getDecisionNodeParserRuleCall_1() { return cDecisionNodeParserRuleCall_1; }
		
		//JoinNode
		public RuleCall getJoinNodeParserRuleCall_2() { return cJoinNodeParserRuleCall_2; }
		
		//ForkNode
		public RuleCall getForkNodeParserRuleCall_3() { return cForkNodeParserRuleCall_3; }
	}
	public class MergeNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MergeNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsCompositeMergeKeyword_1_0 = (Keyword)cIsCompositeAssignment_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//MergeNode SysML::MergeNode:
		//	UsagePrefix? isComposite?='merge' UsageDeclaration? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? isComposite?='merge' UsageDeclaration? ';'
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//isComposite?='merge'
		public Assignment getIsCompositeAssignment_1() { return cIsCompositeAssignment_1; }
		
		//'merge'
		public Keyword getIsCompositeMergeKeyword_1_0() { return cIsCompositeMergeKeyword_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class DecisionNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DecisionNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsCompositeDecideKeyword_1_0 = (Keyword)cIsCompositeAssignment_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//DecisionNode SysML::DecisionNode:
		//	UsagePrefix? isComposite?='decide' UsageDeclaration? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? isComposite?='decide' UsageDeclaration? ';'
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//isComposite?='decide'
		public Assignment getIsCompositeAssignment_1() { return cIsCompositeAssignment_1; }
		
		//'decide'
		public Keyword getIsCompositeDecideKeyword_1_0() { return cIsCompositeDecideKeyword_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class JoinNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.JoinNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsCompositeJoinKeyword_1_0 = (Keyword)cIsCompositeAssignment_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//JoinNode SysML::JoinNode:
		//	UsagePrefix? isComposite?='join' UsageDeclaration? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? isComposite?='join' UsageDeclaration? ';'
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//isComposite?='join'
		public Assignment getIsCompositeAssignment_1() { return cIsCompositeAssignment_1; }
		
		//'join'
		public Keyword getIsCompositeJoinKeyword_1_0() { return cIsCompositeJoinKeyword_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class ForkNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ForkNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsCompositeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsCompositeForkKeyword_1_0 = (Keyword)cIsCompositeAssignment_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ForkNode SysML::ForkNode:
		//	UsagePrefix? isComposite?='fork' UsageDeclaration? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? isComposite?='fork' UsageDeclaration? ';'
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//isComposite?='fork'
		public Assignment getIsCompositeAssignment_1() { return cIsCompositeAssignment_1; }
		
		//'fork'
		public Keyword getIsCompositeForkKeyword_1_0() { return cIsCompositeForkKeyword_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class EmptyParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyParameterMember");
		private final Assignment cOwnedMemberParameter_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberParameter_compEmptyParameterParserRuleCall_0 = (RuleCall)cOwnedMemberParameter_compAssignment.eContents().get(0);
		
		//EmptyParameterMember SysML::ParameterMembership:
		//	ownedMemberParameter_comp=EmptyParameter;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberParameter_comp=EmptyParameter
		public Assignment getOwnedMemberParameter_compAssignment() { return cOwnedMemberParameter_compAssignment; }
		
		//EmptyParameter
		public RuleCall getOwnedMemberParameter_compEmptyParameterParserRuleCall_0() { return cOwnedMemberParameter_compEmptyParameterParserRuleCall_0; }
	}
	public class EmptyParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyParameter");
		private final Action cReferenceUsageAction = (Action)rule.eContents().get(1);
		
		//EmptyParameter SysML::Usage:
		//	{SysML::ReferenceUsage};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction() { return cReferenceUsageAction; }
	}
	public class ActionTargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionTargetSuccession");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTargetSuccessionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGuardedTargetSuccessionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDefaultTargetSuccessionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///* Action Succession */ ActionTargetSuccession SysML::Feature:
		//	TargetSuccession | GuardedTargetSuccession | DefaultTargetSuccession;
		@Override public ParserRule getRule() { return rule; }
		
		//TargetSuccession | GuardedTargetSuccession | DefaultTargetSuccession
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TargetSuccession
		public RuleCall getTargetSuccessionParserRuleCall_0() { return cTargetSuccessionParserRuleCall_0; }
		
		//GuardedTargetSuccession
		public RuleCall getGuardedTargetSuccessionParserRuleCall_1() { return cGuardedTargetSuccessionParserRuleCall_1; }
		
		//DefaultTargetSuccession
		public RuleCall getDefaultTargetSuccessionParserRuleCall_2() { return cDefaultTargetSuccessionParserRuleCall_2; }
	}
	public class TargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		
		//TargetSuccession SysML::Succession:
		//	'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember
		//	ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//'then'
		public Keyword getThenKeyword_0() { return cThenKeyword_0; }
		
		//ownedFeatureMembership_comp+=MultiplicitySourceEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//MultiplicitySourceEndMember
		public RuleCall getOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compMultiplicitySourceEndMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_2_0; }
	}
	public class GuardedTargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardedTargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Keyword cThenKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		
		//GuardedTargetSuccession SysML::TransitionUsage:
		//	ownedFeatureMembership_comp+=GuardExpressionMember
		//	'then' ownedFeatureMembership_comp+=TransitionSuccessionMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=GuardExpressionMember 'then' ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=GuardExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//GuardExpressionMember
		public RuleCall getOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_0_0; }
		
		//'then'
		public Keyword getThenKeyword_1() { return cThenKeyword_1; }
		
		//ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_2_0; }
	}
	public class DefaultTargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefaultTargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cElseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//DefaultTargetSuccession SysML::TransitionUsage:
		//	'else' ownedFeatureMembership_comp+=TransitionSuccessionMember;
		@Override public ParserRule getRule() { return rule; }
		
		//'else' ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//'else'
		public Keyword getElseKeyword_0() { return cElseKeyword_0; }
		
		//ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_1_0; }
	}
	public class GuardedSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardedSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSuccessionKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cFirstKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compTransitionSourceMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		private final Keyword cThenKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOwnedFeatureMembership_compAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_5_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_5.eContents().get(0);
		
		//GuardedSuccession SysML::TransitionUsage:
		//	SuccessionKeyword (UsageDeclaration? 'first')?
		//	ownedFeatureMembership_comp+=TransitionSourceMember
		//	ownedFeatureMembership_comp+=GuardExpressionMember
		//	'then' ownedFeatureMembership_comp+=TransitionSuccessionMember;
		@Override public ParserRule getRule() { return rule; }
		
		//SuccessionKeyword (UsageDeclaration? 'first')? ownedFeatureMembership_comp+=TransitionSourceMember
		//ownedFeatureMembership_comp+=GuardExpressionMember 'then' ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//SuccessionKeyword
		public RuleCall getSuccessionKeywordParserRuleCall_0() { return cSuccessionKeywordParserRuleCall_0; }
		
		//(UsageDeclaration? 'first')?
		public Group getGroup_1() { return cGroup_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_0() { return cUsageDeclarationParserRuleCall_1_0; }
		
		//'first'
		public Keyword getFirstKeyword_1_1() { return cFirstKeyword_1_1; }
		
		//ownedFeatureMembership_comp+=TransitionSourceMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//TransitionSourceMember
		public RuleCall getOwnedFeatureMembership_compTransitionSourceMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compTransitionSourceMemberParserRuleCall_2_0; }
		
		//ownedFeatureMembership_comp+=GuardExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//GuardExpressionMember
		public RuleCall getOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_3_0; }
		
		//'then'
		public Keyword getThenKeyword_4() { return cThenKeyword_4; }
		
		//ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Assignment getOwnedFeatureMembership_compAssignment_5() { return cOwnedFeatureMembership_compAssignment_5; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_5_0() { return cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_5_0; }
	}
	public class StateKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateKeyword");
		private final Keyword cStateKeyword = (Keyword)rule.eContents().get(1);
		
		///* STATES */ /* State Definitions */ StateKeyword:
		//	'state';
		@Override public ParserRule getRule() { return rule; }
		
		//'state'
		public Keyword getStateKeyword() { return cStateKeyword; }
	}
	public class StateDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cStateKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//StateDefKeyword:
		//	StateKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//StateKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//StateKeyword
		public RuleCall getStateKeywordParserRuleCall_0() { return cStateKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class StateDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cStateDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cStateBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//StateDefinition SysML::StateDefinition:
		//	isAbstract?='abstract'? StateDefKeyword ActionDeclaration StateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? StateDefKeyword ActionDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//StateDefKeyword
		public RuleCall getStateDefKeywordParserRuleCall_1() { return cStateDefKeywordParserRuleCall_1; }
		
		//ActionDeclaration
		public RuleCall getActionDeclarationParserRuleCall_2() { return cActionDeclarationParserRuleCall_2; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_3() { return cStateBodyParserRuleCall_3; }
	}
	public class StateBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cStateBodyPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment StateBody returns SysML::Type:
		//	';' | '{' StateBodyPart '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' StateBodyPart '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' StateBodyPart '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//StateBodyPart
		public RuleCall getStateBodyPartParserRuleCall_1_1() { return cStateBodyPartParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class StateBodyPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateBodyPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEntryActionMemberParserRuleCall_0_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEntryTransitionMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compDoActionMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compExitActionMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		private final RuleCall cStateDefBodyItemParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//fragment StateBodyPart returns SysML::Type:
		//	(ownedFeatureMembership_comp+=EntryActionMember
		//	ownedFeatureMembership_comp+=EntryTransitionMember*)?
		//	ownedFeatureMembership_comp+=DoActionMember?
		//	ownedFeatureMembership_comp+=ExitActionMember?
		//	// Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//	// while incrementally parsing.
		//	=> StateDefBodyItem*;
		@Override public ParserRule getRule() { return rule; }
		
		//(ownedFeatureMembership_comp+=EntryActionMember ownedFeatureMembership_comp+=EntryTransitionMember*)?
		//ownedFeatureMembership_comp+=DoActionMember? ownedFeatureMembership_comp+=ExitActionMember? // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//// while incrementally parsing.
		//=> StateDefBodyItem*
		public Group getGroup() { return cGroup; }
		
		//(ownedFeatureMembership_comp+=EntryActionMember ownedFeatureMembership_comp+=EntryTransitionMember*)?
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedFeatureMembership_comp+=EntryActionMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0() { return cOwnedFeatureMembership_compAssignment_0_0; }
		
		//EntryActionMember
		public RuleCall getOwnedFeatureMembership_compEntryActionMemberParserRuleCall_0_0_0() { return cOwnedFeatureMembership_compEntryActionMemberParserRuleCall_0_0_0; }
		
		//ownedFeatureMembership_comp+=EntryTransitionMember*
		public Assignment getOwnedFeatureMembership_compAssignment_0_1() { return cOwnedFeatureMembership_compAssignment_0_1; }
		
		//EntryTransitionMember
		public RuleCall getOwnedFeatureMembership_compEntryTransitionMemberParserRuleCall_0_1_0() { return cOwnedFeatureMembership_compEntryTransitionMemberParserRuleCall_0_1_0; }
		
		//ownedFeatureMembership_comp+=DoActionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//DoActionMember
		public RuleCall getOwnedFeatureMembership_compDoActionMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compDoActionMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=ExitActionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//ExitActionMember
		public RuleCall getOwnedFeatureMembership_compExitActionMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compExitActionMemberParserRuleCall_2_0; }
		
		//// Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//// while incrementally parsing.
		//=> StateDefBodyItem*
		public RuleCall getStateDefBodyItemParserRuleCall_3() { return cStateDefBodyItemParserRuleCall_3; }
	}
	public class StateDefBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cDocumentation_compAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cDocumentation_compOwnedDocumentationParserRuleCall_0_0 = (RuleCall)cDocumentation_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_0 = (RuleCall)cOwnedMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedMembership_compVariantUsageMemberParserRuleCall_2_0 = (RuleCall)cOwnedMembership_compAssignment_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compParameterFlowUsageMemberParserRuleCall_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_4_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cOwnedFeatureMembership_compAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_5_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_5_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_5_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cOwnedFeatureMembership_compAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compBehaviorUsageMemberParserRuleCall_6_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_6_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compTargetTransitionUsageMemberParserRuleCall_6_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_6_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cOwnedFeatureMembership_compTransitionUsageMemberParserRuleCall_7_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_7.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cOwnedImport_compPackageImportParserRuleCall_8_0 = (RuleCall)cOwnedImport_compAssignment_8.eContents().get(0);
		
		//fragment StateDefBodyItem returns SysML::Type:
		//	documentation_comp+=OwnedDocumentation
		//	| ownedMembership_comp+=NestedDefinitionMember
		//	| ownedMembership_comp+=VariantUsageMember
		//	| ownedFeatureMembership_comp+=ParameterFlowUsageMember
		//	| ownedFeatureMembership_comp+=StructureUsageMember
		//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
		//	ownedFeatureMembership_comp+=IndividualUsageMember
		//	| ownedFeatureMembership_comp+=BehaviorUsageMember
		//	ownedFeatureMembership_comp+=TargetTransitionUsageMember*
		//	| ownedFeatureMembership_comp+=TransitionUsageMember
		//	| ownedImport_comp+=PackageImport;
		@Override public ParserRule getRule() { return rule; }
		
		//documentation_comp+=OwnedDocumentation | ownedMembership_comp+=NestedDefinitionMember |
		//ownedMembership_comp+=VariantUsageMember | ownedFeatureMembership_comp+=ParameterFlowUsageMember |
		//ownedFeatureMembership_comp+=StructureUsageMember | ownedFeatureMembership_comp+=EmptySuccessionMember?
		//ownedFeatureMembership_comp+=IndividualUsageMember | ownedFeatureMembership_comp+=BehaviorUsageMember
		//ownedFeatureMembership_comp+=TargetTransitionUsageMember* | ownedFeatureMembership_comp+=TransitionUsageMember |
		//ownedImport_comp+=PackageImport
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//documentation_comp+=OwnedDocumentation
		public Assignment getDocumentation_compAssignment_0() { return cDocumentation_compAssignment_0; }
		
		//OwnedDocumentation
		public RuleCall getDocumentation_compOwnedDocumentationParserRuleCall_0_0() { return cDocumentation_compOwnedDocumentationParserRuleCall_0_0; }
		
		//ownedMembership_comp+=NestedDefinitionMember
		public Assignment getOwnedMembership_compAssignment_1() { return cOwnedMembership_compAssignment_1; }
		
		//NestedDefinitionMember
		public RuleCall getOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_0() { return cOwnedMembership_compNestedDefinitionMemberParserRuleCall_1_0; }
		
		//ownedMembership_comp+=VariantUsageMember
		public Assignment getOwnedMembership_compAssignment_2() { return cOwnedMembership_compAssignment_2; }
		
		//VariantUsageMember
		public RuleCall getOwnedMembership_compVariantUsageMemberParserRuleCall_2_0() { return cOwnedMembership_compVariantUsageMemberParserRuleCall_2_0; }
		
		//ownedFeatureMembership_comp+=ParameterFlowUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_3() { return cOwnedFeatureMembership_compAssignment_3; }
		
		//ParameterFlowUsageMember
		public RuleCall getOwnedFeatureMembership_compParameterFlowUsageMemberParserRuleCall_3_0() { return cOwnedFeatureMembership_compParameterFlowUsageMemberParserRuleCall_3_0; }
		
		//ownedFeatureMembership_comp+=StructureUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_4() { return cOwnedFeatureMembership_compAssignment_4; }
		
		//StructureUsageMember
		public RuleCall getOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_4_0() { return cOwnedFeatureMembership_compStructureUsageMemberParserRuleCall_4_0; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember? ownedFeatureMembership_comp+=IndividualUsageMember
		public Group getGroup_5() { return cGroup_5; }
		
		//ownedFeatureMembership_comp+=EmptySuccessionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_5_0() { return cOwnedFeatureMembership_compAssignment_5_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_5_0_0() { return cOwnedFeatureMembership_compEmptySuccessionMemberParserRuleCall_5_0_0; }
		
		//ownedFeatureMembership_comp+=IndividualUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_5_1() { return cOwnedFeatureMembership_compAssignment_5_1; }
		
		//IndividualUsageMember
		public RuleCall getOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_5_1_0() { return cOwnedFeatureMembership_compIndividualUsageMemberParserRuleCall_5_1_0; }
		
		//ownedFeatureMembership_comp+=BehaviorUsageMember ownedFeatureMembership_comp+=TargetTransitionUsageMember*
		public Group getGroup_6() { return cGroup_6; }
		
		//ownedFeatureMembership_comp+=BehaviorUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_6_0() { return cOwnedFeatureMembership_compAssignment_6_0; }
		
		//BehaviorUsageMember
		public RuleCall getOwnedFeatureMembership_compBehaviorUsageMemberParserRuleCall_6_0_0() { return cOwnedFeatureMembership_compBehaviorUsageMemberParserRuleCall_6_0_0; }
		
		//ownedFeatureMembership_comp+=TargetTransitionUsageMember*
		public Assignment getOwnedFeatureMembership_compAssignment_6_1() { return cOwnedFeatureMembership_compAssignment_6_1; }
		
		//TargetTransitionUsageMember
		public RuleCall getOwnedFeatureMembership_compTargetTransitionUsageMemberParserRuleCall_6_1_0() { return cOwnedFeatureMembership_compTargetTransitionUsageMemberParserRuleCall_6_1_0; }
		
		//ownedFeatureMembership_comp+=TransitionUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_7() { return cOwnedFeatureMembership_compAssignment_7; }
		
		//TransitionUsageMember
		public RuleCall getOwnedFeatureMembership_compTransitionUsageMemberParserRuleCall_7_0() { return cOwnedFeatureMembership_compTransitionUsageMemberParserRuleCall_7_0; }
		
		//ownedImport_comp+=PackageImport
		public Assignment getOwnedImport_compAssignment_8() { return cOwnedImport_compAssignment_8; }
		
		//PackageImport
		public RuleCall getOwnedImport_compPackageImportParserRuleCall_8_0() { return cOwnedImport_compPackageImportParserRuleCall_8_0; }
	}
	public class EntryActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EntryActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindEntryActionKindParserRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compStateActionUsageParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//EntryActionMember SysML::StateSubactionMembership:
		//	DefinitionMemberPrefix kind=EntryActionKind ownedMemberFeature_comp=StateActionUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix kind=EntryActionKind ownedMemberFeature_comp=StateActionUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//kind=EntryActionKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//EntryActionKind
		public RuleCall getKindEntryActionKindParserRuleCall_1_0() { return cKindEntryActionKindParserRuleCall_1_0; }
		
		//ownedMemberFeature_comp=StateActionUsage
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//StateActionUsage
		public RuleCall getOwnedMemberFeature_compStateActionUsageParserRuleCall_2_0() { return cOwnedMemberFeature_compStateActionUsageParserRuleCall_2_0; }
	}
	public class EntryActionKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EntryActionKind");
		private final Keyword cEntryKeyword = (Keyword)rule.eContents().get(1);
		
		//EntryActionKind SysML::StateSubactionKind:
		//	'entry';
		@Override public ParserRule getRule() { return rule; }
		
		//'entry'
		public Keyword getEntryKeyword() { return cEntryKeyword; }
	}
	public class DoActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DoActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindDoActionKindParserRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compStateActionUsageParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//DoActionMember SysML::StateSubactionMembership:
		//	DefinitionMemberPrefix kind=DoActionKind ownedMemberFeature_comp=StateActionUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix kind=DoActionKind ownedMemberFeature_comp=StateActionUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//kind=DoActionKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//DoActionKind
		public RuleCall getKindDoActionKindParserRuleCall_1_0() { return cKindDoActionKindParserRuleCall_1_0; }
		
		//ownedMemberFeature_comp=StateActionUsage
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//StateActionUsage
		public RuleCall getOwnedMemberFeature_compStateActionUsageParserRuleCall_2_0() { return cOwnedMemberFeature_compStateActionUsageParserRuleCall_2_0; }
	}
	public class DoActionKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DoActionKind");
		private final Keyword cDoKeyword = (Keyword)rule.eContents().get(1);
		
		//DoActionKind SysML::StateSubactionKind:
		//	'do';
		@Override public ParserRule getRule() { return rule; }
		
		//'do'
		public Keyword getDoKeyword() { return cDoKeyword; }
	}
	public class ExitActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExitActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindExitActionKindParserRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compStateActionUsageParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//ExitActionMember SysML::StateSubactionMembership:
		//	DefinitionMemberPrefix kind=ExitActionKind ownedMemberFeature_comp=StateActionUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix kind=ExitActionKind ownedMemberFeature_comp=StateActionUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//kind=ExitActionKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//ExitActionKind
		public RuleCall getKindExitActionKindParserRuleCall_1_0() { return cKindExitActionKindParserRuleCall_1_0; }
		
		//ownedMemberFeature_comp=StateActionUsage
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//StateActionUsage
		public RuleCall getOwnedMemberFeature_compStateActionUsageParserRuleCall_2_0() { return cOwnedMemberFeature_compStateActionUsageParserRuleCall_2_0; }
	}
	public class ExitActionKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExitActionKind");
		private final Keyword cExitKeyword = (Keyword)rule.eContents().get(1);
		
		//ExitActionKind SysML::StateSubactionKind:
		//	'exit';
		@Override public ParserRule getRule() { return rule; }
		
		//'exit'
		public Keyword getExitKeyword() { return cExitKeyword; }
	}
	public class EntryTransitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EntryTransitionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cOwnedMemberFeature_compGuardedTargetSuccessionParserRuleCall_1_0_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cThenKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTransitionSuccessionParserRuleCall_1_1_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//EntryTransitionMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix (ownedMemberFeature_comp=GuardedTargetSuccession
		//	| 'then' ownedMemberFeature_comp=TransitionSuccession) ';';
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix (ownedMemberFeature_comp=GuardedTargetSuccession | 'then'
		//ownedMemberFeature_comp=TransitionSuccession) ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//(ownedMemberFeature_comp=GuardedTargetSuccession | 'then' ownedMemberFeature_comp=TransitionSuccession)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ownedMemberFeature_comp=GuardedTargetSuccession
		public Assignment getOwnedMemberFeature_compAssignment_1_0() { return cOwnedMemberFeature_compAssignment_1_0; }
		
		//GuardedTargetSuccession
		public RuleCall getOwnedMemberFeature_compGuardedTargetSuccessionParserRuleCall_1_0_0() { return cOwnedMemberFeature_compGuardedTargetSuccessionParserRuleCall_1_0_0; }
		
		//'then' ownedMemberFeature_comp=TransitionSuccession
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'then'
		public Keyword getThenKeyword_1_1_0() { return cThenKeyword_1_1_0; }
		
		//ownedMemberFeature_comp=TransitionSuccession
		public Assignment getOwnedMemberFeature_compAssignment_1_1_1() { return cOwnedMemberFeature_compAssignment_1_1_1; }
		
		//TransitionSuccession
		public RuleCall getOwnedMemberFeature_compTransitionSuccessionParserRuleCall_1_1_1_0() { return cOwnedMemberFeature_compTransitionSuccessionParserRuleCall_1_1_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class StateActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateActionUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cEmptyActionUsageParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cPerformedActionUsageParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cActionBodyParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//StateActionUsage SysML::ActionUsage:
		//	EmptyActionUsage ';' | PerformedActionUsage ActionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//EmptyActionUsage ';' | PerformedActionUsage ActionBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EmptyActionUsage ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//EmptyActionUsage
		public RuleCall getEmptyActionUsageParserRuleCall_0_0() { return cEmptyActionUsageParserRuleCall_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_0_1() { return cSemicolonKeyword_0_1; }
		
		//PerformedActionUsage ActionBody
		public Group getGroup_1() { return cGroup_1; }
		
		//PerformedActionUsage
		public RuleCall getPerformedActionUsageParserRuleCall_1_0() { return cPerformedActionUsageParserRuleCall_1_0; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_1_1() { return cActionBodyParserRuleCall_1_1; }
	}
	public class EmptyActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyActionUsage");
		private final Action cActionUsageAction = (Action)rule.eContents().get(1);
		
		//EmptyActionUsage SysML::ActionUsage:
		//	{SysML::ActionUsage};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ActionUsage}
		public Action getActionUsageAction() { return cActionUsageAction; }
	}
	public class PerformedActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformedActionUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cPerformActionUsageAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final RuleCall cPerformActionUsageDeclarationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cAcceptActionUsageAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cAcceptNodeDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cSendActionUsageAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final RuleCall cSendNodeDeclarationParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//PerformedActionUsage SysML::ActionUsage:
		//	{SysML::PerformActionUsage} PerformActionUsageDeclaration
		//	| {SysML::AcceptActionUsage} AcceptNodeDeclaration
		//	| {SysML::SendActionUsage} SendNodeDeclaration;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::PerformActionUsage} PerformActionUsageDeclaration | {SysML::AcceptActionUsage} AcceptNodeDeclaration |
		//{SysML::SendActionUsage} SendNodeDeclaration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{SysML::PerformActionUsage} PerformActionUsageDeclaration
		public Group getGroup_0() { return cGroup_0; }
		
		//{SysML::PerformActionUsage}
		public Action getPerformActionUsageAction_0_0() { return cPerformActionUsageAction_0_0; }
		
		//PerformActionUsageDeclaration
		public RuleCall getPerformActionUsageDeclarationParserRuleCall_0_1() { return cPerformActionUsageDeclarationParserRuleCall_0_1; }
		
		//{SysML::AcceptActionUsage} AcceptNodeDeclaration
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::AcceptActionUsage}
		public Action getAcceptActionUsageAction_1_0() { return cAcceptActionUsageAction_1_0; }
		
		//AcceptNodeDeclaration
		public RuleCall getAcceptNodeDeclarationParserRuleCall_1_1() { return cAcceptNodeDeclarationParserRuleCall_1_1; }
		
		//{SysML::SendActionUsage} SendNodeDeclaration
		public Group getGroup_2() { return cGroup_2; }
		
		//{SysML::SendActionUsage}
		public Action getSendActionUsageAction_2_0() { return cSendActionUsageAction_2_0; }
		
		//SendNodeDeclaration
		public RuleCall getSendNodeDeclarationParserRuleCall_2_1() { return cSendNodeDeclarationParserRuleCall_2_1; }
	}
	public class TransitionUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTransitionUsageParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TransitionUsageMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=TransitionUsage ';';
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=TransitionUsage ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=TransitionUsage
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//TransitionUsage
		public RuleCall getOwnedMemberFeature_compTransitionUsageParserRuleCall_1_0() { return cOwnedMemberFeature_compTransitionUsageParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class TargetTransitionUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetTransitionUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTargetTransitionUsageParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TargetTransitionUsageMember SysML::FeatureMembership:
		//	DefinitionMemberPrefix ownedMemberFeature_comp=TargetTransitionUsage ';';
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedMemberFeature_comp=TargetTransitionUsage ';'
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedMemberFeature_comp=TargetTransitionUsage
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//TargetTransitionUsage
		public RuleCall getOwnedMemberFeature_compTargetTransitionUsageParserRuleCall_1_0() { return cOwnedMemberFeature_compTargetTransitionUsageParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class StateUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateUsageKeyword");
		private final RuleCall cStateKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* State Usages */ StateUsageKeyword:
		//	StateKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//StateKeyword
		public RuleCall getStateKeywordParserRuleCall() { return cStateKeywordParserRuleCall; }
	}
	public class StateUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cStateUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cStateBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//StateUsage SysML::StateUsage:
		//	UsagePrefix? StateUsageKeyword ActionUsageDeclaration StateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? StateUsageKeyword ActionUsageDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_1() { return cStateUsageKeywordParserRuleCall_1; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_3() { return cStateBodyParserRuleCall_3; }
	}
	public class StateFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cStateUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cStateBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//StateFlowUsage SysML::StateUsage:
		//	UsagePrefix? 'ref'? StateUsageKeyword ActionUsageDeclaration StateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? StateUsageKeyword ActionUsageDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_2() { return cStateUsageKeywordParserRuleCall_2; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_3() { return cActionUsageDeclarationParserRuleCall_3; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_4() { return cStateBodyParserRuleCall_4; }
	}
	public class StateRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cStateUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeStateUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cStateBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//StateRefUsage SysML::StateUsage:
		//	UsagePrefix? ('ref' StateUsageKeyword | isComposite?=StateUsageKeyword) ActionUsageDeclaration StateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' StateUsageKeyword | isComposite?=StateUsageKeyword) ActionUsageDeclaration StateBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' StateUsageKeyword | isComposite?=StateUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' StateUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_1_0_1() { return cStateUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=StateUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//StateUsageKeyword
		public RuleCall getIsCompositeStateUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeStateUsageKeywordParserRuleCall_1_1_0; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_3() { return cStateBodyParserRuleCall_3; }
	}
	public class ExhibitStateUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExhibitStateUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cExhibitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cOwnedRelationship_compOwnedSubsettingParserRuleCall_2_0_0_0 = (RuleCall)cOwnedRelationship_compAssignment_2_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final RuleCall cStateUsageKeywordParserRuleCall_2_1_0 = (RuleCall)cGroup_2_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2_1_1 = (RuleCall)cGroup_2_1.eContents().get(1);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_3_0 = (RuleCall)cAlternatives_3.eContents().get(0);
		private final RuleCall cActionUsageParameterListParserRuleCall_3_1 = (RuleCall)cAlternatives_3.eContents().get(1);
		private final RuleCall cStateBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ExhibitStateUsage SysML::ExhibitStateUsage:
		//	UsagePrefix? 'exhibit' (ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
		//	| StateUsageKeyword UsageDeclaration?) (ValuePart | ActionUsageParameterList)? StateBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'exhibit' (ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart? | StateUsageKeyword
		//UsageDeclaration?) (ValuePart | ActionUsageParameterList)? StateBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'exhibit'
		public Keyword getExhibitKeyword_1() { return cExhibitKeyword_1; }
		
		//(ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart? | StateUsageKeyword UsageDeclaration?)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//ownedRelationship_comp+=OwnedSubsetting
		public Assignment getOwnedRelationship_compAssignment_2_0_0() { return cOwnedRelationship_compAssignment_2_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationship_compOwnedSubsettingParserRuleCall_2_0_0_0() { return cOwnedRelationship_compOwnedSubsettingParserRuleCall_2_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_2_0_1() { return cFeatureSpecializationPartParserRuleCall_2_0_1; }
		
		//StateUsageKeyword UsageDeclaration?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_2_1_0() { return cStateUsageKeywordParserRuleCall_2_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2_1_1() { return cUsageDeclarationParserRuleCall_2_1_1; }
		
		//(ValuePart | ActionUsageParameterList)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_3_0() { return cValuePartParserRuleCall_3_0; }
		
		//ActionUsageParameterList
		public RuleCall getActionUsageParameterListParserRuleCall_3_1() { return cActionUsageParameterListParserRuleCall_3_1; }
		
		//StateBody
		public RuleCall getStateBodyParserRuleCall_4() { return cStateBodyParserRuleCall_4; }
	}
	public class TransitionUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionUsageKeyword");
		private final Keyword cTransitionKeyword = (Keyword)rule.eContents().get(1);
		
		///* Transition Usages */ TransitionUsageKeyword:
		//	'transition';
		@Override public ParserRule getRule() { return rule; }
		
		//'transition'
		public Keyword getTransitionKeyword() { return cTransitionKeyword; }
	}
	public class TransitionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTransitionUsageKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cFirstKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compTransitionSourceMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cOwnedImport_compAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cOwnedImport_compEmptyImportParserRuleCall_3_0_0 = (RuleCall)cOwnedImport_compAssignment_3_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compTriggerActionMemberParserRuleCall_3_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_4_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedFeatureMembership_compEffectBehaviorMemberParserRuleCall_5_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_5.eContents().get(0);
		private final Keyword cThenKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cOwnedFeatureMembership_compAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_7_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_7.eContents().get(0);
		
		//TransitionUsage SysML::TransitionUsage:
		//	TransitionUsageKeyword (UsageDeclaration? 'first')?
		//	ownedFeatureMembership_comp+=TransitionSourceMember (ownedImport_comp+=EmptyImport
		//	ownedFeatureMembership_comp+=TriggerActionMember)?
		//	ownedFeatureMembership_comp+=GuardExpressionMember?
		//	ownedFeatureMembership_comp+=EffectBehaviorMember?
		//	'then' ownedFeatureMembership_comp+=TransitionSuccessionMember;
		@Override public ParserRule getRule() { return rule; }
		
		//TransitionUsageKeyword (UsageDeclaration? 'first')? ownedFeatureMembership_comp+=TransitionSourceMember
		//(ownedImport_comp+=EmptyImport ownedFeatureMembership_comp+=TriggerActionMember)?
		//ownedFeatureMembership_comp+=GuardExpressionMember? ownedFeatureMembership_comp+=EffectBehaviorMember? 'then'
		//ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//TransitionUsageKeyword
		public RuleCall getTransitionUsageKeywordParserRuleCall_0() { return cTransitionUsageKeywordParserRuleCall_0; }
		
		//(UsageDeclaration? 'first')?
		public Group getGroup_1() { return cGroup_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_0() { return cUsageDeclarationParserRuleCall_1_0; }
		
		//'first'
		public Keyword getFirstKeyword_1_1() { return cFirstKeyword_1_1; }
		
		//ownedFeatureMembership_comp+=TransitionSourceMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//TransitionSourceMember
		public RuleCall getOwnedFeatureMembership_compTransitionSourceMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compTransitionSourceMemberParserRuleCall_2_0; }
		
		//(ownedImport_comp+=EmptyImport ownedFeatureMembership_comp+=TriggerActionMember)?
		public Group getGroup_3() { return cGroup_3; }
		
		//ownedImport_comp+=EmptyImport
		public Assignment getOwnedImport_compAssignment_3_0() { return cOwnedImport_compAssignment_3_0; }
		
		//EmptyImport
		public RuleCall getOwnedImport_compEmptyImportParserRuleCall_3_0_0() { return cOwnedImport_compEmptyImportParserRuleCall_3_0_0; }
		
		//ownedFeatureMembership_comp+=TriggerActionMember
		public Assignment getOwnedFeatureMembership_compAssignment_3_1() { return cOwnedFeatureMembership_compAssignment_3_1; }
		
		//TriggerActionMember
		public RuleCall getOwnedFeatureMembership_compTriggerActionMemberParserRuleCall_3_1_0() { return cOwnedFeatureMembership_compTriggerActionMemberParserRuleCall_3_1_0; }
		
		//ownedFeatureMembership_comp+=GuardExpressionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_4() { return cOwnedFeatureMembership_compAssignment_4; }
		
		//GuardExpressionMember
		public RuleCall getOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_4_0() { return cOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_4_0; }
		
		//ownedFeatureMembership_comp+=EffectBehaviorMember?
		public Assignment getOwnedFeatureMembership_compAssignment_5() { return cOwnedFeatureMembership_compAssignment_5; }
		
		//EffectBehaviorMember
		public RuleCall getOwnedFeatureMembership_compEffectBehaviorMemberParserRuleCall_5_0() { return cOwnedFeatureMembership_compEffectBehaviorMemberParserRuleCall_5_0; }
		
		//'then'
		public Keyword getThenKeyword_6() { return cThenKeyword_6; }
		
		//ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Assignment getOwnedFeatureMembership_compAssignment_7() { return cOwnedFeatureMembership_compAssignment_7; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_7_0() { return cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_7_0; }
	}
	public class TargetTransitionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetTransitionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedImport_compEmptyImportParserRuleCall_0_0_0 = (RuleCall)cOwnedImport_compAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compTriggerActionMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compEffectBehaviorMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		private final Keyword cThenKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnedFeatureMembership_compAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_4_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_4.eContents().get(0);
		
		//TargetTransitionUsage SysML::TransitionUsage:
		//	(ownedImport_comp+=EmptyImport
		//	ownedFeatureMembership_comp+=TriggerActionMember)?
		//	ownedFeatureMembership_comp+=GuardExpressionMember?
		//	ownedFeatureMembership_comp+=EffectBehaviorMember?
		//	'then' ownedFeatureMembership_comp+=TransitionSuccessionMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(ownedImport_comp+=EmptyImport ownedFeatureMembership_comp+=TriggerActionMember)?
		//ownedFeatureMembership_comp+=GuardExpressionMember? ownedFeatureMembership_comp+=EffectBehaviorMember? 'then'
		//ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//(ownedImport_comp+=EmptyImport ownedFeatureMembership_comp+=TriggerActionMember)?
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedImport_comp+=EmptyImport
		public Assignment getOwnedImport_compAssignment_0_0() { return cOwnedImport_compAssignment_0_0; }
		
		//EmptyImport
		public RuleCall getOwnedImport_compEmptyImportParserRuleCall_0_0_0() { return cOwnedImport_compEmptyImportParserRuleCall_0_0_0; }
		
		//ownedFeatureMembership_comp+=TriggerActionMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_1() { return cOwnedFeatureMembership_compAssignment_0_1; }
		
		//TriggerActionMember
		public RuleCall getOwnedFeatureMembership_compTriggerActionMemberParserRuleCall_0_1_0() { return cOwnedFeatureMembership_compTriggerActionMemberParserRuleCall_0_1_0; }
		
		//ownedFeatureMembership_comp+=GuardExpressionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//GuardExpressionMember
		public RuleCall getOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compGuardExpressionMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=EffectBehaviorMember?
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//EffectBehaviorMember
		public RuleCall getOwnedFeatureMembership_compEffectBehaviorMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compEffectBehaviorMemberParserRuleCall_2_0; }
		
		//'then'
		public Keyword getThenKeyword_3() { return cThenKeyword_3; }
		
		//ownedFeatureMembership_comp+=TransitionSuccessionMember
		public Assignment getOwnedFeatureMembership_compAssignment_4() { return cOwnedFeatureMembership_compAssignment_4; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_4_0() { return cOwnedFeatureMembership_compTransitionSuccessionMemberParserRuleCall_4_0; }
	}
	public class EmptyImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyImport");
		private final Action cImportAction = (Action)rule.eContents().get(1);
		
		//EmptyImport SysML::Import:
		//	{SysML::Import};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Import}
		public Action getImportAction() { return cImportAction; }
	}
	public class TransitionSourceMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSourceMember");
		private final Assignment cMemberFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cMemberFeatureFeatureCrossReference_0 = (CrossReference)cMemberFeatureAssignment.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_0.eContents().get(1);
		
		//TransitionSourceMember SysML::FeatureMembership:
		//	memberFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment() { return cMemberFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_0() { return cMemberFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class TriggerActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKindTriggerFeatureKindEnumRuleCall_0_0 = (RuleCall)cKindAssignment_0.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTriggerActionParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		//TriggerActionMember SysML::TransitionFeatureMembership:
		//	kind=TriggerFeatureKind ownedMemberFeature_comp=TriggerAction;
		@Override public ParserRule getRule() { return rule; }
		
		//kind=TriggerFeatureKind ownedMemberFeature_comp=TriggerAction
		public Group getGroup() { return cGroup; }
		
		//kind=TriggerFeatureKind
		public Assignment getKindAssignment_0() { return cKindAssignment_0; }
		
		//TriggerFeatureKind
		public RuleCall getKindTriggerFeatureKindEnumRuleCall_0_0() { return cKindTriggerFeatureKindEnumRuleCall_0_0; }
		
		//ownedMemberFeature_comp=TriggerAction
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//TriggerAction
		public RuleCall getOwnedMemberFeature_compTriggerActionParserRuleCall_1_0() { return cOwnedMemberFeature_compTriggerActionParserRuleCall_1_0; }
	}
	public class TriggerActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//TriggerAction SysML::AcceptActionUsage:
		//	ownedFeatureMembership_comp+=EmptyParameterMember
		//	ownedFeatureMembership_comp+=ItemFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember ownedFeatureMembership_comp+=ItemFeatureMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptyParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptyParameterMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=ItemFeatureMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ItemFeatureMember
		public RuleCall getOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compItemFeatureMemberParserRuleCall_1_0; }
	}
	public class GuardExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardExpressionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKindGuardFeatureKindEnumRuleCall_0_0 = (RuleCall)cKindAssignment_0.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compOwnedExpressionParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		//GuardExpressionMember SysML::TransitionFeatureMembership:
		//	kind=GuardFeatureKind ownedMemberFeature_comp=OwnedExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//kind=GuardFeatureKind ownedMemberFeature_comp=OwnedExpression
		public Group getGroup() { return cGroup; }
		
		//kind=GuardFeatureKind
		public Assignment getKindAssignment_0() { return cKindAssignment_0; }
		
		//GuardFeatureKind
		public RuleCall getKindGuardFeatureKindEnumRuleCall_0_0() { return cKindGuardFeatureKindEnumRuleCall_0_0; }
		
		//ownedMemberFeature_comp=OwnedExpression
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//OwnedExpression
		public RuleCall getOwnedMemberFeature_compOwnedExpressionParserRuleCall_1_0() { return cOwnedMemberFeature_compOwnedExpressionParserRuleCall_1_0; }
	}
	public class EffectBehaviorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectBehaviorMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKindEffectFeatureKindEnumRuleCall_0_0 = (RuleCall)cKindAssignment_0.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compEffectBehaviorUsageParserRuleCall_1_0 = (RuleCall)cOwnedMemberFeature_compAssignment_1.eContents().get(0);
		
		//EffectBehaviorMember SysML::TransitionFeatureMembership:
		//	kind=EffectFeatureKind ownedMemberFeature_comp=EffectBehaviorUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//kind=EffectFeatureKind ownedMemberFeature_comp=EffectBehaviorUsage
		public Group getGroup() { return cGroup; }
		
		//kind=EffectFeatureKind
		public Assignment getKindAssignment_0() { return cKindAssignment_0; }
		
		//EffectFeatureKind
		public RuleCall getKindEffectFeatureKindEnumRuleCall_0_0() { return cKindEffectFeatureKindEnumRuleCall_0_0; }
		
		//ownedMemberFeature_comp=EffectBehaviorUsage
		public Assignment getOwnedMemberFeature_compAssignment_1() { return cOwnedMemberFeature_compAssignment_1; }
		
		//EffectBehaviorUsage
		public RuleCall getOwnedMemberFeature_compEffectBehaviorUsageParserRuleCall_1_0() { return cOwnedMemberFeature_compEffectBehaviorUsageParserRuleCall_1_0; }
	}
	public class EffectBehaviorUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectBehaviorUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmptyActionUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cPerformedActionUsageParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cActionBodyItemParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		
		//EffectBehaviorUsage SysML::ActionUsage:
		//	EmptyActionUsage | PerformedActionUsage ('{' ActionBodyItem* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//EmptyActionUsage | PerformedActionUsage ('{' ActionBodyItem* '}')?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EmptyActionUsage
		public RuleCall getEmptyActionUsageParserRuleCall_0() { return cEmptyActionUsageParserRuleCall_0; }
		
		//PerformedActionUsage ('{' ActionBodyItem* '}')?
		public Group getGroup_1() { return cGroup_1; }
		
		//PerformedActionUsage
		public RuleCall getPerformedActionUsageParserRuleCall_1_0() { return cPerformedActionUsageParserRuleCall_1_0; }
		
		//('{' ActionBodyItem* '}')?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_1_0() { return cLeftCurlyBracketKeyword_1_1_0; }
		
		//ActionBodyItem*
		public RuleCall getActionBodyItemParserRuleCall_1_1_1() { return cActionBodyItemParserRuleCall_1_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_1_2() { return cRightCurlyBracketKeyword_1_1_2; }
	}
	public class TransitionSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSuccessionMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTransitionSuccessionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//TransitionSuccessionMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=TransitionSuccession;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=TransitionSuccession
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//TransitionSuccession
		public RuleCall getOwnedMemberFeature_compTransitionSuccessionParserRuleCall_0() { return cOwnedMemberFeature_compTransitionSuccessionParserRuleCall_0; }
	}
	public class TransitionSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//TransitionSuccession SysML::Succession:
		//	ownedFeatureMembership_comp+=EmptySourceEndMember
		//	ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptySourceEndMember
		public RuleCall getOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0; }
	}
	public class CalculationKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationKeyword");
		private final Keyword cCalcKeyword = (Keyword)rule.eContents().get(1);
		
		///* CALCULATIONS */ /* Calculation Definitions */ CalculationKeyword:
		//	'calc';
		@Override public ParserRule getRule() { return rule; }
		
		//'calc'
		public Keyword getCalcKeyword() { return cCalcKeyword; }
	}
	public class CalculationDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCalculationKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//CalculationDefKeyword:
		//	CalculationKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//CalculationKeyword
		public RuleCall getCalculationKeywordParserRuleCall_0() { return cCalculationKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class CalculationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCalculationDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final RuleCall cCalculationBodyParserRuleCall_3_0 = (RuleCall)cAlternatives_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cEqualsSignKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_3_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_3_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		
		//CalculationDefinition SysML::CalculationDefinition:
		//	DefinitionPrefix? CalculationDefKeyword CalculationDeclaration (CalculationBody
		//	| '=' ownedFeatureMembership_comp+=ResultExpressionMember ';');
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? CalculationDefKeyword CalculationDeclaration (CalculationBody | '='
		//ownedFeatureMembership_comp+=ResultExpressionMember ';')
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//CalculationDefKeyword
		public RuleCall getCalculationDefKeywordParserRuleCall_1() { return cCalculationDefKeywordParserRuleCall_1; }
		
		//CalculationDeclaration
		public RuleCall getCalculationDeclarationParserRuleCall_2() { return cCalculationDeclarationParserRuleCall_2; }
		
		//(CalculationBody | '=' ownedFeatureMembership_comp+=ResultExpressionMember ';')
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3_0() { return cCalculationBodyParserRuleCall_3_0; }
		
		//'=' ownedFeatureMembership_comp+=ResultExpressionMember ';'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_1_0() { return cEqualsSignKeyword_3_1_0; }
		
		//ownedFeatureMembership_comp+=ResultExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_3_1_1() { return cOwnedFeatureMembership_compAssignment_3_1_1; }
		
		//ResultExpressionMember
		public RuleCall getOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_3_1_1_0() { return cOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_3_1_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_1_2() { return cSemicolonKeyword_3_1_2; }
	}
	public class CalculationDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cParameterListParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cReturnParameterPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment CalculationDeclaration returns SysML::CalculationDefinition:
		//	DefinitionDeclaration (ParameterList ReturnParameterPart?)?;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionDeclaration (ParameterList ReturnParameterPart?)?
		public Group getGroup() { return cGroup; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_0() { return cDefinitionDeclarationParserRuleCall_0; }
		
		//(ParameterList ReturnParameterPart?)?
		public Group getGroup_1() { return cGroup_1; }
		
		//ParameterList
		public RuleCall getParameterListParserRuleCall_1_0() { return cParameterListParserRuleCall_1_0; }
		
		//ReturnParameterPart?
		public RuleCall getReturnParameterPartParserRuleCall_1_1() { return cReturnParameterPartParserRuleCall_1_1; }
	}
	public class ReturnParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReturnParameterPart");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compReturnParameterMemberParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//fragment ReturnParameterPart returns SysML::Type:
		//	ownedFeatureMembership_comp+=ReturnParameterMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=ReturnParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//ReturnParameterMember
		public RuleCall getOwnedFeatureMembership_compReturnParameterMemberParserRuleCall_0() { return cOwnedFeatureMembership_compReturnParameterMemberParserRuleCall_0; }
	}
	public class ReturnParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReturnParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReturnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberParameter_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberParameter_compParameterParserRuleCall_1_0 = (RuleCall)cOwnedMemberParameter_compAssignment_1.eContents().get(0);
		
		//ReturnParameterMember SysML::ReturnParameterMembership:
		//	'return'? ownedMemberParameter_comp=Parameter;
		@Override public ParserRule getRule() { return rule; }
		
		//'return'? ownedMemberParameter_comp=Parameter
		public Group getGroup() { return cGroup; }
		
		//'return'?
		public Keyword getReturnKeyword_0() { return cReturnKeyword_0; }
		
		//ownedMemberParameter_comp=Parameter
		public Assignment getOwnedMemberParameter_compAssignment_1() { return cOwnedMemberParameter_compAssignment_1; }
		
		//Parameter
		public RuleCall getOwnedMemberParameter_compParameterParserRuleCall_1_0() { return cOwnedMemberParameter_compParameterParserRuleCall_1_0; }
	}
	public class CalculationBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCalculationBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment CalculationBody returns SysML::Type:
		//	';'
		//	| '{' => CalculationBodyItem*
		//	ownedFeatureMembership_comp+=ResultExpressionMember?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' => CalculationBodyItem* ownedFeatureMembership_comp+=ResultExpressionMember? '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => CalculationBodyItem* ownedFeatureMembership_comp+=ResultExpressionMember? '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> CalculationBodyItem*
		public RuleCall getCalculationBodyItemParserRuleCall_1_1() { return cCalculationBodyItemParserRuleCall_1_1; }
		
		//ownedFeatureMembership_comp+=ResultExpressionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1_2() { return cOwnedFeatureMembership_compAssignment_1_2; }
		
		//ResultExpressionMember
		public RuleCall getOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_1_2_0() { return cOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class CalculationBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compReturnParameterFlowUsageMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//fragment CalculationBodyItem returns SysML::Type:
		//	ActionBodyItem
		//	| ownedFeatureMembership_comp+=ReturnParameterFlowUsageMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionBodyItem | ownedFeatureMembership_comp+=ReturnParameterFlowUsageMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionBodyItem
		public RuleCall getActionBodyItemParserRuleCall_0() { return cActionBodyItemParserRuleCall_0; }
		
		//ownedFeatureMembership_comp+=ReturnParameterFlowUsageMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ReturnParameterFlowUsageMember
		public RuleCall getOwnedFeatureMembership_compReturnParameterFlowUsageMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compReturnParameterFlowUsageMemberParserRuleCall_1_0; }
	}
	public class ReturnParameterFlowUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReturnParameterFlowUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cReturnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedMemberParameter_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberParameter_compFlowUsageElementParserRuleCall_2_0 = (RuleCall)cOwnedMemberParameter_compAssignment_2.eContents().get(0);
		
		//ReturnParameterFlowUsageMember SysML::ReturnParameterMembership:
		//	DefinitionMemberPrefix 'return'
		//	ownedMemberParameter_comp=FlowUsageElement;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'return' ownedMemberParameter_comp=FlowUsageElement
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'return'
		public Keyword getReturnKeyword_1() { return cReturnKeyword_1; }
		
		//ownedMemberParameter_comp=FlowUsageElement
		public Assignment getOwnedMemberParameter_compAssignment_2() { return cOwnedMemberParameter_compAssignment_2; }
		
		//FlowUsageElement
		public RuleCall getOwnedMemberParameter_compFlowUsageElementParserRuleCall_2_0() { return cOwnedMemberParameter_compFlowUsageElementParserRuleCall_2_0; }
	}
	public class ResultExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ResultExpressionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedResultExpression_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedResultExpression_compOwnedExpressionParserRuleCall_1_0 = (RuleCall)cOwnedResultExpression_compAssignment_1.eContents().get(0);
		
		//ResultExpressionMember SysML::ResultExpressionMembership:
		//	DefinitionMemberPrefix ownedResultExpression_comp=OwnedExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedResultExpression_comp=OwnedExpression
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedResultExpression_comp=OwnedExpression
		public Assignment getOwnedResultExpression_compAssignment_1() { return cOwnedResultExpression_compAssignment_1; }
		
		//OwnedExpression
		public RuleCall getOwnedResultExpression_compOwnedExpressionParserRuleCall_1_0() { return cOwnedResultExpression_compOwnedExpressionParserRuleCall_1_0; }
	}
	public class CalculationUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationUsageKeyword");
		private final RuleCall cCalculationKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Calculation Usages */ CalculationUsageKeyword:
		//	CalculationKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationKeyword
		public RuleCall getCalculationKeywordParserRuleCall() { return cCalculationKeywordParserRuleCall; }
	}
	public class CalculationUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCalculationUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CalculationUsage SysML::CalculationUsage:
		//	UsagePrefix? CalculationUsageKeyword CalculationUsageDeclaration CalculationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? CalculationUsageKeyword CalculationUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//CalculationUsageKeyword
		public RuleCall getCalculationUsageKeywordParserRuleCall_1() { return cCalculationUsageKeywordParserRuleCall_1; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class CalculationFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cCalculationUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//CalculationFlowUsage SysML::CalculationUsage:
		//	UsagePrefix? 'ref'? CalculationUsageKeyword CalculationUsageDeclaration CalculationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? CalculationUsageKeyword CalculationUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//CalculationUsageKeyword
		public RuleCall getCalculationUsageKeywordParserRuleCall_2() { return cCalculationUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_4() { return cCalculationBodyParserRuleCall_4; }
	}
	public class CalculationRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cCalculationUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeCalculationUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CalculationRefUsage SysML::CalculationUsage:
		//	UsagePrefix? ('ref' CalculationUsageKeyword | isComposite?=CalculationUsageKeyword) CalculationUsageDeclaration
		//	CalculationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' CalculationUsageKeyword | isComposite?=CalculationUsageKeyword) CalculationUsageDeclaration
		//CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' CalculationUsageKeyword | isComposite?=CalculationUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' CalculationUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//CalculationUsageKeyword
		public RuleCall getCalculationUsageKeywordParserRuleCall_1_0_1() { return cCalculationUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=CalculationUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//CalculationUsageKeyword
		public RuleCall getIsCompositeCalculationUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeCalculationUsageKeywordParserRuleCall_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class CalculationUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cCalculationUsageParameterPartParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//fragment CalculationUsageDeclaration returns SysML::Step:
		//	UsageDeclaration? (ValuePart | CalculationUsageParameterPart)?;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? (ValuePart | CalculationUsageParameterPart)?
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//(ValuePart | CalculationUsageParameterPart)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_1_0() { return cValuePartParserRuleCall_1_0; }
		
		//CalculationUsageParameterPart
		public RuleCall getCalculationUsageParameterPartParserRuleCall_1_1() { return cCalculationUsageParameterPartParserRuleCall_1_1; }
	}
	public class CalculationUsageParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationUsageParameterPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionUsageParameterListParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCalculationReturnParameterPartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment CalculationUsageParameterPart returns SysML::Feature:
		//	ActionUsageParameterList CalculationReturnParameterPart?;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionUsageParameterList CalculationReturnParameterPart?
		public Group getGroup() { return cGroup; }
		
		//ActionUsageParameterList
		public RuleCall getActionUsageParameterListParserRuleCall_0() { return cActionUsageParameterListParserRuleCall_0; }
		
		//CalculationReturnParameterPart?
		public RuleCall getCalculationReturnParameterPartParserRuleCall_1() { return cCalculationReturnParameterPartParserRuleCall_1; }
	}
	public class CalculationReturnParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationReturnParameterPart");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compCalculationReturnParameterMemberParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//fragment CalculationReturnParameterPart returns SysML::Feature:
		//	ownedFeatureMembership_comp+=CalculationReturnParameterMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=CalculationReturnParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//CalculationReturnParameterMember
		public RuleCall getOwnedFeatureMembership_compCalculationReturnParameterMemberParserRuleCall_0() { return cOwnedFeatureMembership_compCalculationReturnParameterMemberParserRuleCall_0; }
	}
	public class CalculationReturnParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationReturnParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReturnKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedMemberParameter_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberParameter_compActionUsageParameterParserRuleCall_1_0 = (RuleCall)cOwnedMemberParameter_compAssignment_1.eContents().get(0);
		
		//CalculationReturnParameterMember SysML::ReturnParameterMembership:
		//	'return'? ownedMemberParameter_comp=ActionUsageParameter;
		@Override public ParserRule getRule() { return rule; }
		
		//'return'? ownedMemberParameter_comp=ActionUsageParameter
		public Group getGroup() { return cGroup; }
		
		//'return'?
		public Keyword getReturnKeyword_0() { return cReturnKeyword_0; }
		
		//ownedMemberParameter_comp=ActionUsageParameter
		public Assignment getOwnedMemberParameter_compAssignment_1() { return cOwnedMemberParameter_compAssignment_1; }
		
		//ActionUsageParameter
		public RuleCall getOwnedMemberParameter_compActionUsageParameterParserRuleCall_1_0() { return cOwnedMemberParameter_compActionUsageParameterParserRuleCall_1_0; }
	}
	public class ConstraintKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintKeyword");
		private final Keyword cConstraintKeyword = (Keyword)rule.eContents().get(1);
		
		///* CONSTRAINTS */ /* Constraint Definitions */ ConstraintKeyword:
		//	'constraint';
		@Override public ParserRule getRule() { return rule; }
		
		//'constraint'
		public Keyword getConstraintKeyword() { return cConstraintKeyword; }
	}
	public class ConstraintDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConstraintKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ConstraintDefKeyword:
		//	ConstraintKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//ConstraintKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ConstraintKeyword
		public RuleCall getConstraintKeywordParserRuleCall_0() { return cConstraintKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ConstraintDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConstraintDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConstraintDefinition SysML::ConstraintDefinition:
		//	DefinitionPrefix? ConstraintDefKeyword ConstraintDeclaration CalculationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? ConstraintDefKeyword ConstraintDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//ConstraintDefKeyword
		public RuleCall getConstraintDefKeywordParserRuleCall_1() { return cConstraintDefKeywordParserRuleCall_1; }
		
		//ConstraintDeclaration
		public RuleCall getConstraintDeclarationParserRuleCall_2() { return cConstraintDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class ConstraintDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cEmptyReturnParameterPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment ConstraintDeclaration returns SysML::ConstraintDefinition:
		//	DefinitionDeclaration ParameterList? EmptyReturnParameterPart;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionDeclaration ParameterList? EmptyReturnParameterPart
		public Group getGroup() { return cGroup; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_0() { return cDefinitionDeclarationParserRuleCall_0; }
		
		//ParameterList?
		public RuleCall getParameterListParserRuleCall_1() { return cParameterListParserRuleCall_1; }
		
		//EmptyReturnParameterPart
		public RuleCall getEmptyReturnParameterPartParserRuleCall_2() { return cEmptyReturnParameterPartParserRuleCall_2; }
	}
	public class EmptyReturnParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyReturnParameterPart");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compEmptyReturnParameterMemberParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//fragment EmptyReturnParameterPart returns SysML::Type:
		//	ownedFeatureMembership_comp+=EmptyReturnParameterMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptyReturnParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//EmptyReturnParameterMember
		public RuleCall getOwnedFeatureMembership_compEmptyReturnParameterMemberParserRuleCall_0() { return cOwnedFeatureMembership_compEmptyReturnParameterMemberParserRuleCall_0; }
	}
	public class EmptyReturnParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyReturnParameterMember");
		private final Assignment cOwnedMemberParameter_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberParameter_compEmptyParameterParserRuleCall_0 = (RuleCall)cOwnedMemberParameter_compAssignment.eContents().get(0);
		
		//EmptyReturnParameterMember SysML::ReturnParameterMembership:
		//	ownedMemberParameter_comp=EmptyParameter;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberParameter_comp=EmptyParameter
		public Assignment getOwnedMemberParameter_compAssignment() { return cOwnedMemberParameter_compAssignment; }
		
		//EmptyParameter
		public RuleCall getOwnedMemberParameter_compEmptyParameterParserRuleCall_0() { return cOwnedMemberParameter_compEmptyParameterParserRuleCall_0; }
	}
	public class ConstraintUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintUsageKeyword");
		private final RuleCall cConstraintKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Constraint Usages */ ConstraintUsageKeyword:
		//	ConstraintKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//ConstraintKeyword
		public RuleCall getConstraintKeywordParserRuleCall() { return cConstraintKeywordParserRuleCall; }
	}
	public class ConstraintUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConstraintUsage SysML::ConstraintUsage:
		//	UsagePrefix? ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_1() { return cConstraintUsageKeywordParserRuleCall_1; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class ConstraintFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCalculationBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ConstraintFlowUsage SysML::ConstraintUsage:
		//	UsagePrefix? 'ref'? ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_2() { return cConstraintUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_4() { return cCalculationBodyParserRuleCall_4; }
	}
	public class ConstraintRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeConstraintUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConstraintRefUsage SysML::ConstraintUsage:
		//	UsagePrefix? ('ref' ConstraintUsageKeyword | isComposite?=ConstraintUsageKeyword) CalculationUsageDeclaration
		//	CalculationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' ConstraintUsageKeyword | isComposite?=ConstraintUsageKeyword) CalculationUsageDeclaration
		//CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' ConstraintUsageKeyword | isComposite?=ConstraintUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' ConstraintUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_1_0_1() { return cConstraintUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=ConstraintUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//ConstraintUsageKeyword
		public RuleCall getIsCompositeConstraintUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeConstraintUsageKeywordParserRuleCall_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class AssertConstraintUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssertConstraintUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAssertKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cOwnedRelationship_compOwnedSubsettingParserRuleCall_2_0_0_0 = (RuleCall)cOwnedRelationship_compAssignment_2_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_2_1_0 = (RuleCall)cGroup_2_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2_1_1 = (RuleCall)cGroup_2_1.eContents().get(1);
		private final RuleCall cCalculationUsageParameterPartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cInvariantPartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cCalculationBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//AssertConstraintUsage SysML::AssertConstraintUsage:
		//	UsagePrefix? 'assert' (ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
		//	| ConstraintUsageKeyword UsageDeclaration?) CalculationUsageParameterPart? InvariantPart CalculationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'assert' (ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart? | ConstraintUsageKeyword
		//UsageDeclaration?) CalculationUsageParameterPart? InvariantPart CalculationBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'assert'
		public Keyword getAssertKeyword_1() { return cAssertKeyword_1; }
		
		//(ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart? | ConstraintUsageKeyword UsageDeclaration?)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//ownedRelationship_comp+=OwnedSubsetting
		public Assignment getOwnedRelationship_compAssignment_2_0_0() { return cOwnedRelationship_compAssignment_2_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationship_compOwnedSubsettingParserRuleCall_2_0_0_0() { return cOwnedRelationship_compOwnedSubsettingParserRuleCall_2_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_2_0_1() { return cFeatureSpecializationPartParserRuleCall_2_0_1; }
		
		//ConstraintUsageKeyword UsageDeclaration?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_2_1_0() { return cConstraintUsageKeywordParserRuleCall_2_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2_1_1() { return cUsageDeclarationParserRuleCall_2_1_1; }
		
		//CalculationUsageParameterPart?
		public RuleCall getCalculationUsageParameterPartParserRuleCall_3() { return cCalculationUsageParameterPartParserRuleCall_3; }
		
		//InvariantPart
		public RuleCall getInvariantPartParserRuleCall_4() { return cInvariantPartParserRuleCall_4; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_5() { return cCalculationBodyParserRuleCall_5; }
	}
	public class InvariantPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InvariantPart");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compTrueLiteralMemberParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//fragment InvariantPart returns SysML::Invariant:
		//	ownedFeatureMembership_comp+=TrueLiteralMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=TrueLiteralMember
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//TrueLiteralMember
		public RuleCall getOwnedFeatureMembership_compTrueLiteralMemberParserRuleCall_0() { return cOwnedFeatureMembership_compTrueLiteralMemberParserRuleCall_0; }
	}
	public class TrueLiteralMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TrueLiteralMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTrueLiteralExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//TrueLiteralMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=TrueLiteralExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=TrueLiteralExpression
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//TrueLiteralExpression
		public RuleCall getOwnedMemberFeature_compTrueLiteralExpressionParserRuleCall_0() { return cOwnedMemberFeature_compTrueLiteralExpressionParserRuleCall_0; }
	}
	public class TrueLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TrueLiteralExpression");
		private final Action cLiteralBooleanAction = (Action)rule.eContents().get(1);
		
		//TrueLiteralExpression SysML::LiteralBoolean:
		//	{SysML::LiteralBoolean};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::LiteralBoolean}
		public Action getLiteralBooleanAction() { return cLiteralBooleanAction; }
	}
	public class RequirementKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementKeyword");
		private final Keyword cRequirementKeyword = (Keyword)rule.eContents().get(1);
		
		///* REQUIREMENTS */ /* Requirement Definitions */ RequirementKeyword:
		//	'requirement';
		@Override public ParserRule getRule() { return rule; }
		
		//'requirement'
		public Keyword getRequirementKeyword() { return cRequirementKeyword; }
	}
	public class RequirementDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRequirementKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//RequirementDefKeyword:
		//	RequirementKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//RequirementKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//RequirementKeyword
		public RuleCall getRequirementKeywordParserRuleCall_0() { return cRequirementKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class RequirementDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRequirementDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//RequirementDefinition SysML::RequirementDefinition:
		//	DefinitionPrefix? RequirementDefKeyword ConstraintDeclaration RequirementBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? RequirementDefKeyword ConstraintDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//RequirementDefKeyword
		public RuleCall getRequirementDefKeywordParserRuleCall_1() { return cRequirementDefKeywordParserRuleCall_1; }
		
		//ConstraintDeclaration
		public RuleCall getConstraintDeclarationParserRuleCall_2() { return cConstraintDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class RequirementBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cRequirementBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment RequirementBody returns SysML::Type:
		//	';' | '{' => RequirementBodyItem* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' => RequirementBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => RequirementBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> RequirementBodyItem*
		public RuleCall getRequirementBodyItemParserRuleCall_1_1() { return cRequirementBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class RequirementBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefinitionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compSubjectMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compRequirementConstraintMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		
		//fragment RequirementBodyItem returns SysML::Type:
		//	DefinitionBodyItem
		//	| ownedFeatureMembership_comp+=SubjectMember
		//	| ownedFeatureMembership_comp+=RequirementConstraintMember;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionBodyItem | ownedFeatureMembership_comp+=SubjectMember |
		//ownedFeatureMembership_comp+=RequirementConstraintMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefinitionBodyItem
		public RuleCall getDefinitionBodyItemParserRuleCall_0() { return cDefinitionBodyItemParserRuleCall_0; }
		
		//ownedFeatureMembership_comp+=SubjectMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//SubjectMember
		public RuleCall getOwnedFeatureMembership_compSubjectMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compSubjectMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=RequirementConstraintMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//RequirementConstraintMember
		public RuleCall getOwnedFeatureMembership_compRequirementConstraintMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compRequirementConstraintMemberParserRuleCall_2_0; }
	}
	public class SubjectMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubjectMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedSubjectParameter_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedSubjectParameter_compSubjectUsageParserRuleCall_1_0 = (RuleCall)cOwnedSubjectParameter_compAssignment_1.eContents().get(0);
		
		//SubjectMember SysML::SubjectMembership:
		//	DefinitionMemberPrefix ownedSubjectParameter_comp=SubjectUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix ownedSubjectParameter_comp=SubjectUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//ownedSubjectParameter_comp=SubjectUsage
		public Assignment getOwnedSubjectParameter_compAssignment_1() { return cOwnedSubjectParameter_compAssignment_1; }
		
		//SubjectUsage
		public RuleCall getOwnedSubjectParameter_compSubjectUsageParserRuleCall_1_0() { return cOwnedSubjectParameter_compSubjectUsageParserRuleCall_1_0; }
	}
	public class SubjectUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubjectUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//SubjectUsage SysML::ReferenceUsage:
		//	'subject' Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//'subject' Usage
		public Group getGroup() { return cGroup; }
		
		//'subject'
		public Keyword getSubjectKeyword_0() { return cSubjectKeyword_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_1() { return cUsageParserRuleCall_1; }
	}
	public class RequirementConstraintMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementConstraintMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindRequirementConstraintKindEnumRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compRequirementConstraintUsageParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//RequirementConstraintMember SysML::RequirementConstraintMembership:
		//	DefinitionMemberPrefix kind=RequirementConstraintKind
		//	ownedMemberFeature_comp=RequirementConstraintUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix kind=RequirementConstraintKind ownedMemberFeature_comp=RequirementConstraintUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//kind=RequirementConstraintKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//RequirementConstraintKind
		public RuleCall getKindRequirementConstraintKindEnumRuleCall_1_0() { return cKindRequirementConstraintKindEnumRuleCall_1_0; }
		
		//ownedMemberFeature_comp=RequirementConstraintUsage
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//RequirementConstraintUsage
		public RuleCall getOwnedMemberFeature_compRequirementConstraintUsageParserRuleCall_2_0() { return cOwnedMemberFeature_compRequirementConstraintUsageParserRuleCall_2_0; }
	}
	public class RequirementConstraintUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementConstraintUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationship_compOwnedSubsettingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cCalculationUsageParameterPartParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cConstraintKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cCalculationBodyParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//RequirementConstraintUsage SysML::ConstraintUsage:
		//	ownedRelationship_comp+=OwnedSubsetting FeatureSpecialization*
		//	CalculationUsageParameterPart? RequirementBody
		//	| 'constraint' CalculationUsageDeclaration CalculationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=OwnedSubsetting FeatureSpecialization* CalculationUsageParameterPart? RequirementBody |
		//'constraint' CalculationUsageDeclaration CalculationBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship_comp+=OwnedSubsetting FeatureSpecialization* CalculationUsageParameterPart? RequirementBody
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship_comp+=OwnedSubsetting
		public Assignment getOwnedRelationship_compAssignment_0_0() { return cOwnedRelationship_compAssignment_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationship_compOwnedSubsettingParserRuleCall_0_0_0() { return cOwnedRelationship_compOwnedSubsettingParserRuleCall_0_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_1() { return cFeatureSpecializationParserRuleCall_0_1; }
		
		//CalculationUsageParameterPart?
		public RuleCall getCalculationUsageParameterPartParserRuleCall_0_2() { return cCalculationUsageParameterPartParserRuleCall_0_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_0_3() { return cRequirementBodyParserRuleCall_0_3; }
		
		//'constraint' CalculationUsageDeclaration CalculationBody
		public Group getGroup_1() { return cGroup_1; }
		
		//'constraint'
		public Keyword getConstraintKeyword_1_0() { return cConstraintKeyword_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_1_1() { return cCalculationUsageDeclarationParserRuleCall_1_1; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_1_2() { return cCalculationBodyParserRuleCall_1_2; }
	}
	public class RequirementUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementUsageKeyword");
		private final RuleCall cRequirementKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Requirement Usages */ RequirementUsageKeyword:
		//	RequirementKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//RequirementKeyword
		public RuleCall getRequirementKeywordParserRuleCall() { return cRequirementKeywordParserRuleCall; }
	}
	public class RequirementUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//RequirementUsage SysML::RequirementUsage:
		//	UsagePrefix? RequirementUsageKeyword CalculationUsageDeclaration RequirementBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? RequirementUsageKeyword CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_1() { return cRequirementUsageKeywordParserRuleCall_1; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class RequirementFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cRequirementBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//RequirementFlowUsage SysML::RequirementUsage:
		//	UsagePrefix? 'ref'? RequirementUsageKeyword CalculationUsageDeclaration RequirementBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? RequirementUsageKeyword CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_2() { return cRequirementUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_4() { return cRequirementBodyParserRuleCall_4; }
	}
	public class RequirementRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeRequirementUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//RequirementRefUsage SysML::RequirementUsage:
		//	UsagePrefix? ('ref' RequirementUsageKeyword | isComposite?=RequirementUsageKeyword) CalculationUsageDeclaration
		//	RequirementBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' RequirementUsageKeyword | isComposite?=RequirementUsageKeyword) CalculationUsageDeclaration
		//RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' RequirementUsageKeyword | isComposite?=RequirementUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' RequirementUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_1_0_1() { return cRequirementUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=RequirementUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//RequirementUsageKeyword
		public RuleCall getIsCompositeRequirementUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeRequirementUsageKeywordParserRuleCall_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class SatisfyRequirementUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfyRequirementUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSatisfyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cOwnedRelationship_compAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cOwnedRelationship_compOwnedSubsettingParserRuleCall_2_0_0_0 = (RuleCall)cOwnedRelationship_compAssignment_2_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_2_1_0 = (RuleCall)cGroup_2_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2_1_1 = (RuleCall)cGroup_2_1.eContents().get(1);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_3_0 = (RuleCall)cAlternatives_3.eContents().get(0);
		private final RuleCall cActionUsageParameterListParserRuleCall_3_1 = (RuleCall)cAlternatives_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cByKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOwnedMembership_compAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOwnedMembership_compSatisfactionConnectorMemberParserRuleCall_4_1_0 = (RuleCall)cOwnedMembership_compAssignment_4_1.eContents().get(0);
		private final RuleCall cInvariantPartParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final RuleCall cRequirementBodyParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//SatisfyRequirementUsage SysML::SatisfyRequirementUsage:
		//	UsagePrefix? 'satisfy' (ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
		//	| RequirementUsageKeyword UsageDeclaration?) (ValuePart | ActionUsageParameterList)? ('by'
		//	ownedMembership_comp+=SatisfactionConnectorMember)?
		//	InvariantPart RequirementBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'satisfy' (ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart? | RequirementUsageKeyword
		//UsageDeclaration?) (ValuePart | ActionUsageParameterList)? ('by' ownedMembership_comp+=SatisfactionConnectorMember)?
		//InvariantPart RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'satisfy'
		public Keyword getSatisfyKeyword_1() { return cSatisfyKeyword_1; }
		
		//(ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart? | RequirementUsageKeyword UsageDeclaration?)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//ownedRelationship_comp+=OwnedSubsetting
		public Assignment getOwnedRelationship_compAssignment_2_0_0() { return cOwnedRelationship_compAssignment_2_0_0; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationship_compOwnedSubsettingParserRuleCall_2_0_0_0() { return cOwnedRelationship_compOwnedSubsettingParserRuleCall_2_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_2_0_1() { return cFeatureSpecializationPartParserRuleCall_2_0_1; }
		
		//RequirementUsageKeyword UsageDeclaration?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_2_1_0() { return cRequirementUsageKeywordParserRuleCall_2_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2_1_1() { return cUsageDeclarationParserRuleCall_2_1_1; }
		
		//(ValuePart | ActionUsageParameterList)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_3_0() { return cValuePartParserRuleCall_3_0; }
		
		//ActionUsageParameterList
		public RuleCall getActionUsageParameterListParserRuleCall_3_1() { return cActionUsageParameterListParserRuleCall_3_1; }
		
		//('by' ownedMembership_comp+=SatisfactionConnectorMember)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'by'
		public Keyword getByKeyword_4_0() { return cByKeyword_4_0; }
		
		//ownedMembership_comp+=SatisfactionConnectorMember
		public Assignment getOwnedMembership_compAssignment_4_1() { return cOwnedMembership_compAssignment_4_1; }
		
		//SatisfactionConnectorMember
		public RuleCall getOwnedMembership_compSatisfactionConnectorMemberParserRuleCall_4_1_0() { return cOwnedMembership_compSatisfactionConnectorMemberParserRuleCall_4_1_0; }
		
		//InvariantPart
		public RuleCall getInvariantPartParserRuleCall_5() { return cInvariantPartParserRuleCall_5; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_6() { return cRequirementBodyParserRuleCall_6; }
	}
	public class SatisfactionConnectorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfactionConnectorMember");
		private final Assignment cOwnedMemberElement_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberElement_compSatisfactionConnectorParserRuleCall_0 = (RuleCall)cOwnedMemberElement_compAssignment.eContents().get(0);
		
		//SatisfactionConnectorMember SysML::Membership:
		//	ownedMemberElement_comp=SatisfactionConnector;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberElement_comp=SatisfactionConnector
		public Assignment getOwnedMemberElement_compAssignment() { return cOwnedMemberElement_compAssignment; }
		
		//SatisfactionConnector
		public RuleCall getOwnedMemberElement_compSatisfactionConnectorParserRuleCall_0() { return cOwnedMemberElement_compSatisfactionConnectorParserRuleCall_0; }
	}
	public class SatisfactionConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfactionConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//SatisfactionConnector SysML::BindingConnector:
		//	ownedFeatureMembership_comp+=EmptySourceEndMember ownedFeatureMembership_comp+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember ownedFeatureMembership_comp+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=EmptySourceEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//EmptySourceEndMember
		public RuleCall getOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compEmptySourceEndMemberParserRuleCall_0_0; }
		
		//ownedFeatureMembership_comp+=ConnectorEndMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compConnectorEndMemberParserRuleCall_1_0; }
	}
	public class CaseKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseKeyword");
		private final Keyword cCaseKeyword = (Keyword)rule.eContents().get(1);
		
		///* CASES */ /* Case Definitions */ CaseKeyword:
		//	'case';
		@Override public ParserRule getRule() { return rule; }
		
		//'case'
		public Keyword getCaseKeyword() { return cCaseKeyword; }
	}
	public class CaseDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCaseKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//CaseDefKeyword:
		//	CaseKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//CaseKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//CaseKeyword
		public RuleCall getCaseKeywordParserRuleCall_0() { return cCaseKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class CaseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCaseDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CaseDefinition SysML::CaseDefinition:
		//	DefinitionPrefix? CaseDefKeyword CalculationDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? CaseDefKeyword CalculationDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//CaseDefKeyword
		public RuleCall getCaseDefKeywordParserRuleCall_1() { return cCaseDefKeywordParserRuleCall_1; }
		
		//CalculationDeclaration
		public RuleCall getCalculationDeclarationParserRuleCall_2() { return cCalculationDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class CaseBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCaseBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment CaseBody returns SysML::Type:
		//	';'
		//	| '{' => CaseBodyItem*
		//	ownedFeatureMembership_comp+=ResultExpressionMember?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' => CaseBodyItem* ownedFeatureMembership_comp+=ResultExpressionMember? '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => CaseBodyItem* ownedFeatureMembership_comp+=ResultExpressionMember? '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> CaseBodyItem*
		public RuleCall getCaseBodyItemParserRuleCall_1_1() { return cCaseBodyItemParserRuleCall_1_1; }
		
		//ownedFeatureMembership_comp+=ResultExpressionMember?
		public Assignment getOwnedFeatureMembership_compAssignment_1_2() { return cOwnedFeatureMembership_compAssignment_1_2; }
		
		//ResultExpressionMember
		public RuleCall getOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_1_2_0() { return cOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class CaseBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCalculationBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compSubjectMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compObjectiveMemberParserRuleCall_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2.eContents().get(0);
		
		//fragment CaseBodyItem returns SysML::Type:
		//	CalculationBodyItem
		//	| ownedFeatureMembership_comp+=SubjectMember
		//	| ownedFeatureMembership_comp+=ObjectiveMember;
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationBodyItem | ownedFeatureMembership_comp+=SubjectMember | ownedFeatureMembership_comp+=ObjectiveMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CalculationBodyItem
		public RuleCall getCalculationBodyItemParserRuleCall_0() { return cCalculationBodyItemParserRuleCall_0; }
		
		//ownedFeatureMembership_comp+=SubjectMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//SubjectMember
		public RuleCall getOwnedFeatureMembership_compSubjectMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compSubjectMemberParserRuleCall_1_0; }
		
		//ownedFeatureMembership_comp+=ObjectiveMember
		public Assignment getOwnedFeatureMembership_compAssignment_2() { return cOwnedFeatureMembership_compAssignment_2; }
		
		//ObjectiveMember
		public RuleCall getOwnedFeatureMembership_compObjectiveMemberParserRuleCall_2_0() { return cOwnedFeatureMembership_compObjectiveMemberParserRuleCall_2_0; }
	}
	public class ObjectiveMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ObjectiveMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cObjectiveKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedObjectiveRequirement_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedObjectiveRequirement_compObjectiveRequirementUsageParserRuleCall_2_0 = (RuleCall)cOwnedObjectiveRequirement_compAssignment_2.eContents().get(0);
		
		//ObjectiveMember SysML::ObjectiveMembership:
		//	DefinitionMemberPrefix 'objective' ownedObjectiveRequirement_comp=ObjectiveRequirementUsage;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionMemberPrefix 'objective' ownedObjectiveRequirement_comp=ObjectiveRequirementUsage
		public Group getGroup() { return cGroup; }
		
		//DefinitionMemberPrefix
		public RuleCall getDefinitionMemberPrefixParserRuleCall_0() { return cDefinitionMemberPrefixParserRuleCall_0; }
		
		//'objective'
		public Keyword getObjectiveKeyword_1() { return cObjectiveKeyword_1; }
		
		//ownedObjectiveRequirement_comp=ObjectiveRequirementUsage
		public Assignment getOwnedObjectiveRequirement_compAssignment_2() { return cOwnedObjectiveRequirement_compAssignment_2; }
		
		//ObjectiveRequirementUsage
		public RuleCall getOwnedObjectiveRequirement_compObjectiveRequirementUsageParserRuleCall_2_0() { return cOwnedObjectiveRequirement_compObjectiveRequirementUsageParserRuleCall_2_0; }
	}
	public class ObjectiveRequirementUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ObjectiveRequirementUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRequirementBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ObjectiveRequirementUsage SysML::RequirementUsage:
		//	CalculationUsageDeclaration RequirementBody;
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_0() { return cCalculationUsageDeclarationParserRuleCall_0; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_1() { return cRequirementBodyParserRuleCall_1; }
	}
	public class CaseUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseUsageKeyword");
		private final RuleCall cCaseKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Case Usages */ CaseUsageKeyword:
		//	CaseKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//CaseKeyword
		public RuleCall getCaseKeywordParserRuleCall() { return cCaseKeywordParserRuleCall; }
	}
	public class CaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCaseUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CaseUsage SysML::CaseUsage:
		//	UsagePrefix? CaseUsageKeyword CalculationUsageDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? CaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//CaseUsageKeyword
		public RuleCall getCaseUsageKeywordParserRuleCall_1() { return cCaseUsageKeywordParserRuleCall_1; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class CaseFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cCaseUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCaseBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//CaseFlowUsage SysML::CaseUsage:
		//	UsagePrefix? 'ref'? CaseUsageKeyword CalculationUsageDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? CaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//CaseUsageKeyword
		public RuleCall getCaseUsageKeywordParserRuleCall_2() { return cCaseUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_4() { return cCaseBodyParserRuleCall_4; }
	}
	public class CaseRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cCaseUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeCaseUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CaseRefUsage SysML::CaseUsage:
		//	UsagePrefix? ('ref' CaseUsageKeyword | isComposite?=CaseUsageKeyword) CalculationUsageDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' CaseUsageKeyword | isComposite?=CaseUsageKeyword) CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' CaseUsageKeyword | isComposite?=CaseUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' CaseUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//CaseUsageKeyword
		public RuleCall getCaseUsageKeywordParserRuleCall_1_0_1() { return cCaseUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=CaseUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//CaseUsageKeyword
		public RuleCall getIsCompositeCaseUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeCaseUsageKeywordParserRuleCall_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class AnalysisCaseKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseKeyword");
		private final Keyword cAnalysisKeyword = (Keyword)rule.eContents().get(1);
		
		///* ANALYSIS CASES */ AnalysisCaseKeyword:
		//	'analysis';
		@Override public ParserRule getRule() { return rule; }
		
		//'analysis'
		public Keyword getAnalysisKeyword() { return cAnalysisKeyword; }
	}
	public class AnalysisCaseDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAnalysisCaseKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//AnalysisCaseDefKeyword:
		//	AnalysisCaseKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//AnalysisCaseKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//AnalysisCaseKeyword
		public RuleCall getAnalysisCaseKeywordParserRuleCall_0() { return cAnalysisCaseKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class AnalysisCaseUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseUsageKeyword");
		private final RuleCall cAnalysisCaseKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnalysisCaseUsageKeyword:
		//	AnalysisCaseKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//AnalysisCaseKeyword
		public RuleCall getAnalysisCaseKeywordParserRuleCall() { return cAnalysisCaseKeywordParserRuleCall; }
	}
	public class AnalysisCaseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAnalysisCaseDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AnalysisCaseDefinition SysML::AnalysisCaseDefinition:
		//	DefinitionPrefix? AnalysisCaseDefKeyword CalculationDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? AnalysisCaseDefKeyword CalculationDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//AnalysisCaseDefKeyword
		public RuleCall getAnalysisCaseDefKeywordParserRuleCall_1() { return cAnalysisCaseDefKeywordParserRuleCall_1; }
		
		//CalculationDeclaration
		public RuleCall getCalculationDeclarationParserRuleCall_2() { return cCalculationDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class AnalysisCaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAnalysisCaseUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AnalysisCaseUsage SysML::AnalysisCaseUsage:
		//	UsagePrefix? AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getAnalysisCaseUsageKeywordParserRuleCall_1() { return cAnalysisCaseUsageKeywordParserRuleCall_1; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class AnalysisCaseFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cAnalysisCaseUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCaseBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//AnalysisCaseFlowUsage SysML::AnalysisCaseUsage:
		//	UsagePrefix? 'ref'? AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getAnalysisCaseUsageKeywordParserRuleCall_2() { return cAnalysisCaseUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_4() { return cCaseBodyParserRuleCall_4; }
	}
	public class AnalysisCaseRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cAnalysisCaseUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeAnalysisCaseUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AnalysisCaseRefUsage SysML::AnalysisCaseUsage:
		//	UsagePrefix? ('ref' AnalysisCaseUsageKeyword | isComposite?=AnalysisCaseUsageKeyword) CalculationUsageDeclaration
		//	CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' AnalysisCaseUsageKeyword | isComposite?=AnalysisCaseUsageKeyword) CalculationUsageDeclaration
		//CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' AnalysisCaseUsageKeyword | isComposite?=AnalysisCaseUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' AnalysisCaseUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getAnalysisCaseUsageKeywordParserRuleCall_1_0_1() { return cAnalysisCaseUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=AnalysisCaseUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getIsCompositeAnalysisCaseUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeAnalysisCaseUsageKeywordParserRuleCall_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class VerificationCaseKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseKeyword");
		private final Keyword cVerificationKeyword = (Keyword)rule.eContents().get(1);
		
		///* VERIFICATION CASES */ VerificationCaseKeyword:
		//	'verification';
		@Override public ParserRule getRule() { return rule; }
		
		//'verification'
		public Keyword getVerificationKeyword() { return cVerificationKeyword; }
	}
	public class VerificationCaseDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cVerificationCaseKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//VerificationCaseDefKeyword:
		//	VerificationCaseKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//VerificationCaseKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//VerificationCaseKeyword
		public RuleCall getVerificationCaseKeywordParserRuleCall_0() { return cVerificationCaseKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class VerificationCaseUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseUsageKeyword");
		private final RuleCall cVerificationCaseKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//VerificationCaseUsageKeyword:
		//	VerificationCaseKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//VerificationCaseKeyword
		public RuleCall getVerificationCaseKeywordParserRuleCall() { return cVerificationCaseKeywordParserRuleCall; }
	}
	public class VerificationCaseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cVerificationCaseDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//VerificationCaseDefinition SysML::VerificationCaseDefinition:
		//	DefinitionPrefix? VerificationCaseDefKeyword CalculationDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? VerificationCaseDefKeyword CalculationDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//VerificationCaseDefKeyword
		public RuleCall getVerificationCaseDefKeywordParserRuleCall_1() { return cVerificationCaseDefKeywordParserRuleCall_1; }
		
		//CalculationDeclaration
		public RuleCall getCalculationDeclarationParserRuleCall_2() { return cCalculationDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class VerificationCaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cVerificationCaseUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//VerificationCaseUsage SysML::VerificationCaseUsage:
		//	UsagePrefix? VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getVerificationCaseUsageKeywordParserRuleCall_1() { return cVerificationCaseUsageKeywordParserRuleCall_1; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class VerificationCaseFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cVerificationCaseUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCaseBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//VerificationCaseFlowUsage SysML::VerificationCaseUsage:
		//	UsagePrefix? 'ref'? VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getVerificationCaseUsageKeywordParserRuleCall_2() { return cVerificationCaseUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_4() { return cCaseBodyParserRuleCall_4; }
	}
	public class VerificationCaseRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cVerificationCaseUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeVerificationCaseUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//VerificationCaseRefUsage SysML::VerificationCaseUsage:
		//	UsagePrefix? ('ref' VerificationCaseUsageKeyword | isComposite?=VerificationCaseUsageKeyword)
		//	CalculationUsageDeclaration CaseBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' VerificationCaseUsageKeyword | isComposite?=VerificationCaseUsageKeyword)
		//CalculationUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' VerificationCaseUsageKeyword | isComposite?=VerificationCaseUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' VerificationCaseUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getVerificationCaseUsageKeywordParserRuleCall_1_0_1() { return cVerificationCaseUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=VerificationCaseUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getIsCompositeVerificationCaseUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeVerificationCaseUsageKeywordParserRuleCall_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class ViewKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewKeyword");
		private final Keyword cViewKeyword = (Keyword)rule.eContents().get(1);
		
		///* VIEWS */ /* View Definitions */ ViewKeyword:
		//	'view';
		@Override public ParserRule getRule() { return rule; }
		
		//'view'
		public Keyword getViewKeyword() { return cViewKeyword; }
	}
	public class ViewDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cViewKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ViewDefKeyword:
		//	ViewKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//ViewKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ViewKeyword
		public RuleCall getViewKeywordParserRuleCall_0() { return cViewKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ViewDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cViewDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cDefinitionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ViewDefinition SysML::ViewDefinition:
		//	DefinitionPrefix? ViewDefKeyword DefinitionDeclaration DefinitionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? ViewDefKeyword DefinitionDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//ViewDefKeyword
		public RuleCall getViewDefKeywordParserRuleCall_1() { return cViewDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_3() { return cDefinitionBodyParserRuleCall_3; }
	}
	public class ViewUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewUsageKeyword");
		private final RuleCall cViewKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* View Usages */ ViewUsageKeyword:
		//	ViewKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewKeyword
		public RuleCall getViewKeywordParserRuleCall() { return cViewKeywordParserRuleCall; }
	}
	public class ViewUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cViewUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cValueOrFlowPartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cViewBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ViewUsage SysML::ViewUsage:
		//	UsagePrefix? ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ViewUsageKeyword
		public RuleCall getViewUsageKeywordParserRuleCall_1() { return cViewUsageKeywordParserRuleCall_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_3() { return cValueOrFlowPartParserRuleCall_3; }
		
		//ViewBody
		public RuleCall getViewBodyParserRuleCall_4() { return cViewBodyParserRuleCall_4; }
	}
	public class ViewFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cViewUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cValueOrFlowPartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cViewBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//ViewFlowUsage SysML::ViewUsage:
		//	UsagePrefix? 'ref'? ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//ViewUsageKeyword
		public RuleCall getViewUsageKeywordParserRuleCall_2() { return cViewUsageKeywordParserRuleCall_2; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_3() { return cUsageDeclarationParserRuleCall_3; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_4() { return cValueOrFlowPartParserRuleCall_4; }
		
		//ViewBody
		public RuleCall getViewBodyParserRuleCall_5() { return cViewBodyParserRuleCall_5; }
	}
	public class ViewRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cViewUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeViewUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cValueOrFlowPartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cViewBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ViewRefUsage SysML::ViewUsage:
		//	UsagePrefix? ('ref' ViewUsageKeyword | isComposite?=ViewUsageKeyword) UsageDeclaration? ValueOrFlowPart? ViewBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' ViewUsageKeyword | isComposite?=ViewUsageKeyword) UsageDeclaration? ValueOrFlowPart? ViewBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' ViewUsageKeyword | isComposite?=ViewUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' ViewUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//ViewUsageKeyword
		public RuleCall getViewUsageKeywordParserRuleCall_1_0_1() { return cViewUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=ViewUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//ViewUsageKeyword
		public RuleCall getIsCompositeViewUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeViewUsageKeywordParserRuleCall_1_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//ValueOrFlowPart?
		public RuleCall getValueOrFlowPartParserRuleCall_3() { return cValueOrFlowPartParserRuleCall_3; }
		
		//ViewBody
		public RuleCall getViewBodyParserRuleCall_4() { return cViewBodyParserRuleCall_4; }
	}
	public class ViewBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cViewBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ViewBody returns SysML::ViewUsage:
		//	';' | '{' ViewBodyItem* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' ViewBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ViewBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//ViewBodyItem*
		public RuleCall getViewBodyItemParserRuleCall_1_1() { return cViewBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ViewBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefinitionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedImport_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedImport_compExposeParserRuleCall_1_0 = (RuleCall)cOwnedImport_compAssignment_1.eContents().get(0);
		
		//fragment ViewBodyItem returns SysML::ViewUsage:
		//	DefinitionBodyItem
		//	| ownedImport_comp+=Expose;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionBodyItem | ownedImport_comp+=Expose
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefinitionBodyItem
		public RuleCall getDefinitionBodyItemParserRuleCall_0() { return cDefinitionBodyItemParserRuleCall_0; }
		
		//ownedImport_comp+=Expose
		public Assignment getOwnedImport_compAssignment_1() { return cOwnedImport_compAssignment_1; }
		
		//Expose
		public RuleCall getOwnedImport_compExposeParserRuleCall_1_0() { return cOwnedImport_compExposeParserRuleCall_1_0; }
	}
	public class ExposeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Expose");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cExposeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cImportedPackageAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_0_0_0 = (CrossReference)cImportedPackageAssignment_3_0_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageNameParserRuleCall_3_0_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_0_0_0.eContents().get(1);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_0_1_0 = (Keyword)cAlternatives_3_0_1.eContents().get(0);
		private final Keyword cFullStopKeyword_3_0_1_1 = (Keyword)cAlternatives_3_0_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cImportedPackageAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_1_0_0 = (CrossReference)cImportedPackageAssignment_3_1_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_1_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Assignment cImportedPackageAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_2_0_0 = (CrossReference)cImportedPackageAssignment_3_2_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Expose SysML::Expose:
		//	ownedRelationship_comp+=PrefixDocumentation*
		//	visibility=BasicVisibilityIndicator?
		//	'expose' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=PrefixDocumentation* visibility=BasicVisibilityIndicator? 'expose'
		//(importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=PrefixDocumentation*
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//PrefixDocumentation
		public RuleCall getOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0() { return cOwnedRelationship_compPrefixDocumentationParserRuleCall_0_0; }
		
		//visibility=BasicVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//BasicVisibilityIndicator
		public RuleCall getVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityBasicVisibilityIndicatorEnumRuleCall_1_0; }
		
		//'expose'
		public Keyword getExposeKeyword_2() { return cExposeKeyword_2; }
		
		//(importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*' |
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*')
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//importedPackage=[SysML::Package|Name]
		public Assignment getImportedPackageAssignment_3_0_0() { return cImportedPackageAssignment_3_0_0; }
		
		//[SysML::Package|Name]
		public CrossReference getImportedPackagePackageCrossReference_3_0_0_0() { return cImportedPackagePackageCrossReference_3_0_0_0; }
		
		//Name
		public RuleCall getImportedPackagePackageNameParserRuleCall_3_0_0_0_1() { return cImportedPackagePackageNameParserRuleCall_3_0_0_0_1; }
		
		//('::' | '.')
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_0_1_0() { return cColonColonKeyword_3_0_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3_0_1_1() { return cFullStopKeyword_3_0_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_0_2() { return cAsteriskKeyword_3_0_2; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName]
		public Assignment getImportedPackageAssignment_3_1_0() { return cImportedPackageAssignment_3_1_0; }
		
		//[SysML::Package|ColonQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_1_0_0() { return cImportedPackagePackageCrossReference_3_1_0_0; }
		
		//ColonQualifiedName
		public RuleCall getImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1() { return cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_1_1() { return cColonColonKeyword_3_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_1_2() { return cAsteriskKeyword_3_1_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*'
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName]
		public Assignment getImportedPackageAssignment_3_2_0() { return cImportedPackageAssignment_3_2_0; }
		
		//[SysML::Package|DotQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_2_0_0() { return cImportedPackagePackageCrossReference_3_2_0_0; }
		
		//DotQualifiedName
		public RuleCall getImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1() { return cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_3_2_1() { return cFullStopKeyword_3_2_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_2_2() { return cAsteriskKeyword_3_2_2; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ViewpointKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointKeyword");
		private final Keyword cViewpointKeyword = (Keyword)rule.eContents().get(1);
		
		///* VIEWPOINTS */ ViewpointKeyword:
		//	'viewpoint';
		@Override public ParserRule getRule() { return rule; }
		
		//'viewpoint'
		public Keyword getViewpointKeyword() { return cViewpointKeyword; }
	}
	public class ViewpointDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cViewpointKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ViewpointDefKeyword:
		//	ViewpointKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//ViewpointKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ViewpointKeyword
		public RuleCall getViewpointKeywordParserRuleCall_0() { return cViewpointKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ViewpointUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointUsageKeyword");
		private final RuleCall cViewpointKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ViewpointUsageKeyword:
		//	ViewpointKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewpointKeyword
		public RuleCall getViewpointKeywordParserRuleCall() { return cViewpointKeywordParserRuleCall; }
	}
	public class ViewpointDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cViewpointDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ViewpointDefinition SysML::ViewpointDefinition:
		//	DefinitionPrefix? ViewpointDefKeyword ConstraintDeclaration RequirementBody;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? ViewpointDefKeyword ConstraintDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//ViewpointDefKeyword
		public RuleCall getViewpointDefKeywordParserRuleCall_1() { return cViewpointDefKeywordParserRuleCall_1; }
		
		//ConstraintDeclaration
		public RuleCall getConstraintDeclarationParserRuleCall_2() { return cConstraintDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class ViewpointUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cViewpointUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ViewpointUsage SysML::ViewpointUsage:
		//	UsagePrefix? ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//ViewpointUsageKeyword
		public RuleCall getViewpointUsageKeywordParserRuleCall_1() { return cViewpointUsageKeywordParserRuleCall_1; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class ViewpointFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cViewpointUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cRequirementBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ViewpointFlowUsage SysML::ViewpointUsage:
		//	UsagePrefix? 'ref'? ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref'? ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'?
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//ViewpointUsageKeyword
		public RuleCall getViewpointUsageKeywordParserRuleCall_2() { return cViewpointUsageKeywordParserRuleCall_2; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_3() { return cCalculationUsageDeclarationParserRuleCall_3; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_4() { return cRequirementBodyParserRuleCall_4; }
	}
	public class ViewpointRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cViewpointUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeViewpointUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cCalculationUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ViewpointRefUsage SysML::ViewpointUsage:
		//	UsagePrefix? ('ref' ViewpointUsageKeyword | isComposite?=ViewpointUsageKeyword) CalculationUsageDeclaration
		//	RequirementBody;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' ViewpointUsageKeyword | isComposite?=ViewpointUsageKeyword) CalculationUsageDeclaration
		//RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' ViewpointUsageKeyword | isComposite?=ViewpointUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' ViewpointUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//ViewpointUsageKeyword
		public RuleCall getViewpointUsageKeywordParserRuleCall_1_0_1() { return cViewpointUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=ViewpointUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//ViewpointUsageKeyword
		public RuleCall getIsCompositeViewpointUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeViewpointUsageKeywordParserRuleCall_1_1_0; }
		
		//CalculationUsageDeclaration
		public RuleCall getCalculationUsageDeclarationParserRuleCall_2() { return cCalculationUsageDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class RenderingKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingKeyword");
		private final Keyword cRenderingKeyword = (Keyword)rule.eContents().get(1);
		
		///* RENDERINGS */ RenderingKeyword:
		//	'rendering';
		@Override public ParserRule getRule() { return rule; }
		
		//'rendering'
		public Keyword getRenderingKeyword() { return cRenderingKeyword; }
	}
	public class RenderingDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRenderingKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//RenderingDefKeyword:
		//	RenderingKeyword 'def';
		@Override public ParserRule getRule() { return rule; }
		
		//RenderingKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//RenderingKeyword
		public RuleCall getRenderingKeywordParserRuleCall_0() { return cRenderingKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class RenderingDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRenderingDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RenderingDefinition SysML::RenderingDefinition:
		//	DefinitionPrefix? RenderingDefKeyword Definition;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix? RenderingDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix?
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//RenderingDefKeyword
		public RuleCall getRenderingDefKeywordParserRuleCall_1() { return cRenderingDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class RenderingUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingUsageKeyword");
		private final RuleCall cRenderingKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//RenderingUsageKeyword:
		//	RenderingKeyword;
		@Override public ParserRule getRule() { return rule; }
		
		//RenderingKeyword
		public RuleCall getRenderingKeywordParserRuleCall() { return cRenderingKeywordParserRuleCall; }
	}
	public class RenderingUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRenderingUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RenderingUsage SysML::RenderingUsage:
		//	UsagePrefix? RenderingUsageKeyword Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? RenderingUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//RenderingUsageKeyword
		public RuleCall getRenderingUsageKeywordParserRuleCall_1() { return cRenderingUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class RenderingFlowUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingFlowUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cRenderingUsageKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//RenderingFlowUsage SysML::RenderingUsage:
		//	UsagePrefix? 'ref' RenderingUsageKeyword Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? 'ref' RenderingUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//'ref'
		public Keyword getRefKeyword_1() { return cRefKeyword_1; }
		
		//RenderingUsageKeyword
		public RuleCall getRenderingUsageKeywordParserRuleCall_2() { return cRenderingUsageKeywordParserRuleCall_2; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_3() { return cUsageParserRuleCall_3; }
	}
	public class RenderingRefUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingRefUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cRefKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cRenderingUsageKeywordParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Assignment cIsCompositeAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cIsCompositeRenderingUsageKeywordParserRuleCall_1_1_0 = (RuleCall)cIsCompositeAssignment_1_1.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RenderingRefUsage SysML::RenderingUsage:
		//	UsagePrefix? ('ref' RenderingUsageKeyword | isComposite?=RenderingUsageKeyword) Usage;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix? ('ref' RenderingUsageKeyword | isComposite?=RenderingUsageKeyword) Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix?
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//('ref' RenderingUsageKeyword | isComposite?=RenderingUsageKeyword)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'ref' RenderingUsageKeyword
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'ref'
		public Keyword getRefKeyword_1_0_0() { return cRefKeyword_1_0_0; }
		
		//RenderingUsageKeyword
		public RuleCall getRenderingUsageKeywordParserRuleCall_1_0_1() { return cRenderingUsageKeywordParserRuleCall_1_0_1; }
		
		//isComposite?=RenderingUsageKeyword
		public Assignment getIsCompositeAssignment_1_1() { return cIsCompositeAssignment_1_1; }
		
		//RenderingUsageKeyword
		public RuleCall getIsCompositeRenderingUsageKeywordParserRuleCall_1_1_0() { return cIsCompositeRenderingUsageKeywordParserRuleCall_1_1_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class OwnedExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedExpressionMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compOwnedExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		///* EXPRESSIONS */ /* Operator Expressions */ OwnedExpressionMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=OwnedExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=OwnedExpression
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//OwnedExpression
		public RuleCall getOwnedMemberFeature_compOwnedExpressionParserRuleCall_0() { return cOwnedMemberFeature_compOwnedExpressionParserRuleCall_0; }
	}
	public class OwnedExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConditionalExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQueryPathExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//OwnedExpression SysML::Expression:
		//	ConditionalExpression | QueryPathExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalExpression | QueryPathExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ConditionalExpression
		public RuleCall getConditionalExpressionParserRuleCall_0() { return cConditionalExpressionParserRuleCall_0; }
		
		//QueryPathExpression
		public RuleCall getQueryPathExpressionParserRuleCall_1() { return cQueryPathExpressionParserRuleCall_1; }
	}
	public class ConditionalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNullCoalescingExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalTestOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compOwnedExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		private final Keyword cColonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cOperand_compAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cOperand_compConditionalExpressionParserRuleCall_1_4_0 = (RuleCall)cOperand_compAssignment_1_4.eContents().get(0);
		
		//// Conditional Test Expressions
		//ConditionalExpression SysML::Expression:
		//	NullCoalescingExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalTestOperator
		//	operand_comp+=OwnedExpression ':' operand_comp+=ConditionalExpression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//NullCoalescingExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalTestOperator
		//operand_comp+=OwnedExpression ':' operand_comp+=ConditionalExpression)?
		public Group getGroup() { return cGroup; }
		
		//NullCoalescingExpression
		public RuleCall getNullCoalescingExpressionParserRuleCall_0() { return cNullCoalescingExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalTestOperator operand_comp+=OwnedExpression ':'
		//operand_comp+=ConditionalExpression)?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=ConditionalTestOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalTestOperator
		public RuleCall getOperatorConditionalTestOperatorParserRuleCall_1_1_0() { return cOperatorConditionalTestOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=OwnedExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//OwnedExpression
		public RuleCall getOperand_compOwnedExpressionParserRuleCall_1_2_0() { return cOperand_compOwnedExpressionParserRuleCall_1_2_0; }
		
		//':'
		public Keyword getColonKeyword_1_3() { return cColonKeyword_1_3; }
		
		//operand_comp+=ConditionalExpression
		public Assignment getOperand_compAssignment_1_4() { return cOperand_compAssignment_1_4; }
		
		//ConditionalExpression
		public RuleCall getOperand_compConditionalExpressionParserRuleCall_1_4_0() { return cOperand_compConditionalExpressionParserRuleCall_1_4_0; }
	}
	public class ConditionalTestOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalTestOperator");
		private final Keyword cQuestionMarkKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalTestOperator:
		//	'?';
		@Override public ParserRule getRule() { return rule; }
		
		//'?'
		public Keyword getQuestionMarkKeyword() { return cQuestionMarkKeyword; }
	}
	public class NullCoalescingExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NullCoalescingExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConditionalOrExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorNullCoalescingOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compConditionalOrExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Null Coalescing Expressions
		//NullCoalescingExpression SysML::Expression:
		//	ConditionalOrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=NullCoalescingOperator
		//	operand_comp+=ConditionalOrExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalOrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=NullCoalescingOperator
		//operand_comp+=ConditionalOrExpression)*
		public Group getGroup() { return cGroup; }
		
		//ConditionalOrExpression
		public RuleCall getConditionalOrExpressionParserRuleCall_0() { return cConditionalOrExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=NullCoalescingOperator
		//operand_comp+=ConditionalOrExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=NullCoalescingOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//NullCoalescingOperator
		public RuleCall getOperatorNullCoalescingOperatorParserRuleCall_1_1_0() { return cOperatorNullCoalescingOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=ConditionalOrExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//ConditionalOrExpression
		public RuleCall getOperand_compConditionalOrExpressionParserRuleCall_1_2_0() { return cOperand_compConditionalOrExpressionParserRuleCall_1_2_0; }
	}
	public class NullCoalescingOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NullCoalescingOperator");
		private final Keyword cQuestionMarkQuestionMarkKeyword = (Keyword)rule.eContents().get(1);
		
		//NullCoalescingOperator:
		//	'??';
		@Override public ParserRule getRule() { return rule; }
		
		//'??'
		public Keyword getQuestionMarkQuestionMarkKeyword() { return cQuestionMarkQuestionMarkKeyword; }
	}
	public class ConditionalOrExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalOrExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConditionalAndExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalOrOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compConditionalAndExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Conditional Logical Expressions
		//ConditionalOrExpression SysML::Expression:
		//	ConditionalAndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalOrOperator
		//	operand_comp+=ConditionalAndExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalAndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalOrOperator
		//operand_comp+=ConditionalAndExpression)*
		public Group getGroup() { return cGroup; }
		
		//ConditionalAndExpression
		public RuleCall getConditionalAndExpressionParserRuleCall_0() { return cConditionalAndExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalOrOperator
		//operand_comp+=ConditionalAndExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=ConditionalOrOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalOrOperator
		public RuleCall getOperatorConditionalOrOperatorParserRuleCall_1_1_0() { return cOperatorConditionalOrOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=ConditionalAndExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//ConditionalAndExpression
		public RuleCall getOperand_compConditionalAndExpressionParserRuleCall_1_2_0() { return cOperand_compConditionalAndExpressionParserRuleCall_1_2_0; }
	}
	public class ConditionalOrOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalOrOperator");
		private final Keyword cVerticalLineVerticalLineKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalOrOperator:
		//	'||';
		@Override public ParserRule getRule() { return rule; }
		
		//'||'
		public Keyword getVerticalLineVerticalLineKeyword() { return cVerticalLineVerticalLineKeyword; }
	}
	public class ConditionalAndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalAndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOrExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalAndOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compOrExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//ConditionalAndExpression SysML::Expression:
		//	OrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalAndOperator
		//	operand_comp+=OrExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//OrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalAndOperator
		//operand_comp+=OrExpression)*
		public Group getGroup() { return cGroup; }
		
		//OrExpression
		public RuleCall getOrExpressionParserRuleCall_0() { return cOrExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalAndOperator operand_comp+=OrExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=ConditionalAndOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalAndOperator
		public RuleCall getOperatorConditionalAndOperatorParserRuleCall_1_1_0() { return cOperatorConditionalAndOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=OrExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//OrExpression
		public RuleCall getOperand_compOrExpressionParserRuleCall_1_2_0() { return cOperand_compOrExpressionParserRuleCall_1_2_0; }
	}
	public class ConditionalAndOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConditionalAndOperator");
		private final Keyword cAmpersandAmpersandKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalAndOperator:
		//	'&&';
		@Override public ParserRule getRule() { return rule; }
		
		//'&&'
		public Keyword getAmpersandAmpersandKeyword() { return cAmpersandAmpersandKeyword; }
	}
	public class OrExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OrExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cXorExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorOrOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compXorExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Logical Expressions
		//OrExpression SysML::Expression:
		//	XorExpression ({SysML::OperatorExpression.operand_comp+=current} operator=OrOperator operand_comp+=XorExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//XorExpression ({SysML::OperatorExpression.operand_comp+=current} operator=OrOperator operand_comp+=XorExpression)*
		public Group getGroup() { return cGroup; }
		
		//XorExpression
		public RuleCall getXorExpressionParserRuleCall_0() { return cXorExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=OrOperator operand_comp+=XorExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=OrOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//OrOperator
		public RuleCall getOperatorOrOperatorParserRuleCall_1_1_0() { return cOperatorOrOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=XorExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//XorExpression
		public RuleCall getOperand_compXorExpressionParserRuleCall_1_2_0() { return cOperand_compXorExpressionParserRuleCall_1_2_0; }
	}
	public class OrOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OrOperator");
		private final Keyword cVerticalLineKeyword = (Keyword)rule.eContents().get(1);
		
		//OrOperator:
		//	'|';
		@Override public ParserRule getRule() { return rule; }
		
		//'|'
		public Keyword getVerticalLineKeyword() { return cVerticalLineKeyword; }
	}
	public class XorExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.XorExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAndExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorXorOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compAndExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//XorExpression SysML::Expression:
		//	AndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=XorOperator operand_comp+=AndExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//AndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=XorOperator operand_comp+=AndExpression)*
		public Group getGroup() { return cGroup; }
		
		//AndExpression
		public RuleCall getAndExpressionParserRuleCall_0() { return cAndExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=XorOperator operand_comp+=AndExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=XorOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//XorOperator
		public RuleCall getOperatorXorOperatorParserRuleCall_1_1_0() { return cOperatorXorOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=AndExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//AndExpression
		public RuleCall getOperand_compAndExpressionParserRuleCall_1_2_0() { return cOperand_compAndExpressionParserRuleCall_1_2_0; }
	}
	public class XorOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.XorOperator");
		private final Keyword cCircumflexAccentKeyword = (Keyword)rule.eContents().get(1);
		
		//XorOperator:
		//	'^';
		@Override public ParserRule getRule() { return rule; }
		
		//'^'
		public Keyword getCircumflexAccentKeyword() { return cCircumflexAccentKeyword; }
	}
	public class AndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEqualityExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorAndOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compEqualityExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//AndExpression SysML::Expression:
		//	EqualityExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AndOperator
		//	operand_comp+=EqualityExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//EqualityExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AndOperator
		//operand_comp+=EqualityExpression)*
		public Group getGroup() { return cGroup; }
		
		//EqualityExpression
		public RuleCall getEqualityExpressionParserRuleCall_0() { return cEqualityExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=AndOperator operand_comp+=EqualityExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=AndOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//AndOperator
		public RuleCall getOperatorAndOperatorParserRuleCall_1_1_0() { return cOperatorAndOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=EqualityExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//EqualityExpression
		public RuleCall getOperand_compEqualityExpressionParserRuleCall_1_2_0() { return cOperand_compEqualityExpressionParserRuleCall_1_2_0; }
	}
	public class AndOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AndOperator");
		private final Keyword cAmpersandKeyword = (Keyword)rule.eContents().get(1);
		
		//AndOperator:
		//	'&';
		@Override public ParserRule getRule() { return rule; }
		
		//'&'
		public Keyword getAmpersandKeyword() { return cAmpersandKeyword; }
	}
	public class EqualityExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EqualityExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cClassificationExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorEqualityOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compClassificationExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Equality Expressions
		//EqualityExpression SysML::Expression:
		//	ClassificationExpression ({SysML::OperatorExpression.operand_comp+=current} operator=EqualityOperator
		//	operand_comp+=ClassificationExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassificationExpression ({SysML::OperatorExpression.operand_comp+=current} operator=EqualityOperator
		//operand_comp+=ClassificationExpression)*
		public Group getGroup() { return cGroup; }
		
		//ClassificationExpression
		public RuleCall getClassificationExpressionParserRuleCall_0() { return cClassificationExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=EqualityOperator operand_comp+=ClassificationExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=EqualityOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//EqualityOperator
		public RuleCall getOperatorEqualityOperatorParserRuleCall_1_1_0() { return cOperatorEqualityOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=ClassificationExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//ClassificationExpression
		public RuleCall getOperand_compClassificationExpressionParserRuleCall_1_2_0() { return cOperand_compClassificationExpressionParserRuleCall_1_2_0; }
	}
	public class EqualityOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EqualityOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cEqualsSignEqualsSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cExclamationMarkEqualsSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EqualityOperator:
		//	'==' | '!=';
		@Override public ParserRule getRule() { return rule; }
		
		//'==' | '!='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'=='
		public Keyword getEqualsSignEqualsSignKeyword_0() { return cEqualsSignEqualsSignKeyword_0; }
		
		//'!='
		public Keyword getExclamationMarkEqualsSignKeyword_1() { return cExclamationMarkEqualsSignKeyword_1; }
	}
	public class ClassificationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ClassificationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRelationalExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorClassificationOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_2.eContents().get(0);
		
		//// Classification Expressions
		//ClassificationExpression SysML::Expression:
		//	RelationalExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ClassificationOperator
		//	ownedFeatureMembership_comp+=TypeReferenceMember)?;
		@Override public ParserRule getRule() { return rule; }
		
		//RelationalExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ClassificationOperator
		//ownedFeatureMembership_comp+=TypeReferenceMember)?
		public Group getGroup() { return cGroup; }
		
		//RelationalExpression
		public RuleCall getRelationalExpressionParserRuleCall_0() { return cRelationalExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=ClassificationOperator
		//ownedFeatureMembership_comp+=TypeReferenceMember)?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=ClassificationOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ClassificationOperator
		public RuleCall getOperatorClassificationOperatorParserRuleCall_1_1_0() { return cOperatorClassificationOperatorParserRuleCall_1_1_0; }
		
		//ownedFeatureMembership_comp+=TypeReferenceMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_2() { return cOwnedFeatureMembership_compAssignment_1_2; }
		
		//TypeReferenceMember
		public RuleCall getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_1_2_0() { return cOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_1_2_0; }
	}
	public class ClassificationOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ClassificationOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cInstanceofKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHastypeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cIstypeKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//ClassificationOperator:
		//	'instanceof' | 'hastype' | 'istype';
		@Override public ParserRule getRule() { return rule; }
		
		//'instanceof' | 'hastype' | 'istype'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'instanceof'
		public Keyword getInstanceofKeyword_0() { return cInstanceofKeyword_0; }
		
		//'hastype'
		public Keyword getHastypeKeyword_1() { return cHastypeKeyword_1; }
		
		//'istype'
		public Keyword getIstypeKeyword_2() { return cIstypeKeyword_2; }
	}
	public class TypeReferenceMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypeReferenceMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compTypeReferenceParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//TypeReferenceMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=TypeReference;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=TypeReference
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//TypeReference
		public RuleCall getOwnedMemberFeature_compTypeReferenceParserRuleCall_0() { return cOwnedMemberFeature_compTypeReferenceParserRuleCall_0; }
	}
	public class TypeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypeReference");
		private final Assignment cOwnedRelationship_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0 = (RuleCall)cOwnedRelationship_compAssignment.eContents().get(0);
		
		//TypeReference SysML::Feature:
		//	ownedRelationship_comp+=OwnedFeatureTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=OwnedFeatureTyping
		public Assignment getOwnedRelationship_compAssignment() { return cOwnedRelationship_compAssignment; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0() { return cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0; }
	}
	public class RelationalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RelationalExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAdditiveExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorRelationalOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compAdditiveExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Relational Expressions
		//RelationalExpression SysML::Expression:
		//	AdditiveExpression ({SysML::OperatorExpression.operand_comp+=current} operator=RelationalOperator
		//	operand_comp+=AdditiveExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//AdditiveExpression ({SysML::OperatorExpression.operand_comp+=current} operator=RelationalOperator
		//operand_comp+=AdditiveExpression)*
		public Group getGroup() { return cGroup; }
		
		//AdditiveExpression
		public RuleCall getAdditiveExpressionParserRuleCall_0() { return cAdditiveExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=RelationalOperator operand_comp+=AdditiveExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=RelationalOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//RelationalOperator
		public RuleCall getOperatorRelationalOperatorParserRuleCall_1_1_0() { return cOperatorRelationalOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=AdditiveExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//AdditiveExpression
		public RuleCall getOperand_compAdditiveExpressionParserRuleCall_1_2_0() { return cOperand_compAdditiveExpressionParserRuleCall_1_2_0; }
	}
	public class RelationalOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RelationalOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cLessThanSignEqualsSignKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cGreaterThanSignEqualsSignKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//RelationalOperator:
		//	'<' | '>' | '<=' | '>=';
		@Override public ParserRule getRule() { return rule; }
		
		//'<' | '>' | '<=' | '>='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'<'
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1() { return cGreaterThanSignKeyword_1; }
		
		//'<='
		public Keyword getLessThanSignEqualsSignKeyword_2() { return cLessThanSignEqualsSignKeyword_2; }
		
		//'>='
		public Keyword getGreaterThanSignEqualsSignKeyword_3() { return cGreaterThanSignEqualsSignKeyword_3; }
	}
	public class AdditiveExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AdditiveExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMultiplicativeExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorAdditiveOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compMultiplicativeExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//// Arithmetic Expressions
		//AdditiveExpression SysML::Expression:
		//	MultiplicativeExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AdditiveOperator
		//	operand_comp+=MultiplicativeExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//MultiplicativeExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AdditiveOperator
		//operand_comp+=MultiplicativeExpression)*
		public Group getGroup() { return cGroup; }
		
		//MultiplicativeExpression
		public RuleCall getMultiplicativeExpressionParserRuleCall_0() { return cMultiplicativeExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=AdditiveOperator operand_comp+=MultiplicativeExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=AdditiveOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//AdditiveOperator
		public RuleCall getOperatorAdditiveOperatorParserRuleCall_1_1_0() { return cOperatorAdditiveOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=MultiplicativeExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//MultiplicativeExpression
		public RuleCall getOperand_compMultiplicativeExpressionParserRuleCall_1_2_0() { return cOperand_compMultiplicativeExpressionParserRuleCall_1_2_0; }
	}
	public class AdditiveOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AdditiveOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//AdditiveOperator:
		//	'+' | '-';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
	}
	public class MultiplicativeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicativeExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cExponentiationExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorMultiplicativeOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compExponentiationExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//MultiplicativeExpression SysML::Expression:
		//	ExponentiationExpression ({SysML::OperatorExpression.operand_comp+=current} operator=MultiplicativeOperator
		//	operand_comp+=ExponentiationExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ExponentiationExpression ({SysML::OperatorExpression.operand_comp+=current} operator=MultiplicativeOperator
		//operand_comp+=ExponentiationExpression)*
		public Group getGroup() { return cGroup; }
		
		//ExponentiationExpression
		public RuleCall getExponentiationExpressionParserRuleCall_0() { return cExponentiationExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=MultiplicativeOperator
		//operand_comp+=ExponentiationExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=MultiplicativeOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//MultiplicativeOperator
		public RuleCall getOperatorMultiplicativeOperatorParserRuleCall_1_1_0() { return cOperatorMultiplicativeOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=ExponentiationExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//ExponentiationExpression
		public RuleCall getOperand_compExponentiationExpressionParserRuleCall_1_2_0() { return cOperand_compExponentiationExpressionParserRuleCall_1_2_0; }
	}
	public class MultiplicativeOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicativeOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//MultiplicativeOperator:
		//	'*' | '/';
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | '/'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//'/'
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }
	}
	public class ExponentiationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExponentiationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitsExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorExponentiationOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compUnitsExpressionParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//ExponentiationExpression SysML::Expression:
		//	UnitsExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ExponentiationOperator
		//	operand_comp+=UnitsExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitsExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ExponentiationOperator
		//operand_comp+=UnitsExpression)*
		public Group getGroup() { return cGroup; }
		
		//UnitsExpression
		public RuleCall getUnitsExpressionParserRuleCall_0() { return cUnitsExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=ExponentiationOperator operand_comp+=UnitsExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=ExponentiationOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ExponentiationOperator
		public RuleCall getOperatorExponentiationOperatorParserRuleCall_1_1_0() { return cOperatorExponentiationOperatorParserRuleCall_1_1_0; }
		
		//operand_comp+=UnitsExpression
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//UnitsExpression
		public RuleCall getOperand_compUnitsExpressionParserRuleCall_1_2_0() { return cOperand_compUnitsExpressionParserRuleCall_1_2_0; }
	}
	public class ExponentiationOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExponentiationOperator");
		private final Keyword cAsteriskAsteriskKeyword = (Keyword)rule.eContents().get(1);
		
		//ExponentiationOperator:
		//	'**';
		@Override public ParserRule getRule() { return rule; }
		
		//'**'
		public Keyword getAsteriskAsteriskKeyword() { return cAsteriskAsteriskKeyword; }
	}
	public class UnitsExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnitsExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cOperatorCommercialAtKeyword_1_1_0 = (Keyword)cOperatorAssignment_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cOperand_compAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOperand_compOwnedExpressionParserRuleCall_1_3_0 = (RuleCall)cOperand_compAssignment_1_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		
		//// Units Expressions
		//UnitsExpression SysML::Expression:
		//	UnaryExpression ({SysML::OperatorExpression.operand_comp+=current} operator='@' '[' operand_comp+=OwnedExpression
		//	']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//UnaryExpression ({SysML::OperatorExpression.operand_comp+=current} operator='@' '[' operand_comp+=OwnedExpression ']')?
		public Group getGroup() { return cGroup; }
		
		//UnaryExpression
		public RuleCall getUnaryExpressionParserRuleCall_0() { return cUnaryExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator='@' '[' operand_comp+=OwnedExpression ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator='@'
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//'@'
		public Keyword getOperatorCommercialAtKeyword_1_1_0() { return cOperatorCommercialAtKeyword_1_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_2() { return cLeftSquareBracketKeyword_1_2; }
		
		//operand_comp+=OwnedExpression
		public Assignment getOperand_compAssignment_1_3() { return cOperand_compAssignment_1_3; }
		
		//OwnedExpression
		public RuleCall getOperand_compOwnedExpressionParserRuleCall_1_3_0() { return cOperand_compOwnedExpressionParserRuleCall_1_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_4() { return cRightSquareBracketKeyword_1_4; }
	}
	public class UnaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnaryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cOperatorExpressionAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cOperatorAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOperatorUnaryOperatorParserRuleCall_0_1_0 = (RuleCall)cOperatorAssignment_0_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cOperand_compExtentExpressionParserRuleCall_0_2_0 = (RuleCall)cOperand_compAssignment_0_2.eContents().get(0);
		private final RuleCall cExtentExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// Unary Expressions
		//UnaryExpression SysML::Expression:
		//	{SysML::OperatorExpression} operator=UnaryOperator operand_comp+=ExtentExpression
		//	| ExtentExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::OperatorExpression} operator=UnaryOperator operand_comp+=ExtentExpression | ExtentExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{SysML::OperatorExpression} operator=UnaryOperator operand_comp+=ExtentExpression
		public Group getGroup_0() { return cGroup_0; }
		
		//{SysML::OperatorExpression}
		public Action getOperatorExpressionAction_0_0() { return cOperatorExpressionAction_0_0; }
		
		//operator=UnaryOperator
		public Assignment getOperatorAssignment_0_1() { return cOperatorAssignment_0_1; }
		
		//UnaryOperator
		public RuleCall getOperatorUnaryOperatorParserRuleCall_0_1_0() { return cOperatorUnaryOperatorParserRuleCall_0_1_0; }
		
		//operand_comp+=ExtentExpression
		public Assignment getOperand_compAssignment_0_2() { return cOperand_compAssignment_0_2; }
		
		//ExtentExpression
		public RuleCall getOperand_compExtentExpressionParserRuleCall_0_2_0() { return cOperand_compExtentExpressionParserRuleCall_0_2_0; }
		
		//ExtentExpression
		public RuleCall getExtentExpressionParserRuleCall_1() { return cExtentExpressionParserRuleCall_1; }
	}
	public class UnaryOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UnaryOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cTildeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//UnaryOperator:
		//	'+' | '-' | '!' | '~';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-' | '!' | '~'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_2() { return cExclamationMarkKeyword_2; }
		
		//'~'
		public Keyword getTildeKeyword_3() { return cTildeKeyword_3; }
	}
	public class ExtentExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExtentExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cOperatorExpressionAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cOperatorAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cOperatorAllKeyword_0_1_0 = (Keyword)cOperatorAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_2.eContents().get(0);
		private final RuleCall cSequenceExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// Extent Expressions
		//ExtentExpression SysML::Expression:
		//	{SysML::OperatorExpression} operator='all' ownedFeatureMembership_comp+=TypeReferenceMember
		//	| SequenceExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::OperatorExpression} operator='all' ownedFeatureMembership_comp+=TypeReferenceMember | SequenceExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{SysML::OperatorExpression} operator='all' ownedFeatureMembership_comp+=TypeReferenceMember
		public Group getGroup_0() { return cGroup_0; }
		
		//{SysML::OperatorExpression}
		public Action getOperatorExpressionAction_0_0() { return cOperatorExpressionAction_0_0; }
		
		//operator='all'
		public Assignment getOperatorAssignment_0_1() { return cOperatorAssignment_0_1; }
		
		//'all'
		public Keyword getOperatorAllKeyword_0_1_0() { return cOperatorAllKeyword_0_1_0; }
		
		//ownedFeatureMembership_comp+=TypeReferenceMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_2() { return cOwnedFeatureMembership_compAssignment_0_2; }
		
		//TypeReferenceMember
		public RuleCall getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_2_0() { return cOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_2_0; }
		
		//SequenceExpression
		public RuleCall getSequenceExpressionParserRuleCall_1() { return cSequenceExpressionParserRuleCall_1; }
	}
	public class SequenceExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SequenceExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cSequenceConstructionExpressionParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cBaseExpressionParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Action cOperatorExpressionOperand_compAction_1_0_0 = (Action)cGroup_1_0.eContents().get(0);
		private final Assignment cOperatorAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final Keyword cOperatorLeftSquareBracketKeyword_1_0_1_0 = (Keyword)cOperatorAssignment_1_0_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOperand_compOwnedExpressionParserRuleCall_1_0_2_0 = (RuleCall)cOperand_compAssignment_1_0_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_0_3 = (Keyword)cGroup_1_0.eContents().get(3);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_1_0 = (Action)cGroup_1_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cOperatorAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOperatorNameParserRuleCall_1_1_2_0 = (RuleCall)cOperatorAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compBodyExpressionMemberParserRuleCall_1_1_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1_3.eContents().get(0);
		
		///* Sequence Expressions */ SequenceExpression SysML::Expression:
		//	(SequenceConstructionExpression | BaseExpression) ({SysML::OperatorExpression.operand_comp+=current} operator='['
		//	operand_comp+=OwnedExpression ']'
		//	| {SysML::OperatorExpression.operand_comp+=current} '->'
		//	operator=Name ownedFeatureMembership_comp+=BodyExpressionMember+)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(SequenceConstructionExpression | BaseExpression) ({SysML::OperatorExpression.operand_comp+=current} operator='['
		//operand_comp+=OwnedExpression ']' | {SysML::OperatorExpression.operand_comp+=current} '->' operator=Name
		//ownedFeatureMembership_comp+=BodyExpressionMember+)*
		public Group getGroup() { return cGroup; }
		
		//(SequenceConstructionExpression | BaseExpression)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//SequenceConstructionExpression
		public RuleCall getSequenceConstructionExpressionParserRuleCall_0_0() { return cSequenceConstructionExpressionParserRuleCall_0_0; }
		
		//BaseExpression
		public RuleCall getBaseExpressionParserRuleCall_0_1() { return cBaseExpressionParserRuleCall_0_1; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator='[' operand_comp+=OwnedExpression ']' |
		//{SysML::OperatorExpression.operand_comp+=current} '->' operator=Name
		//ownedFeatureMembership_comp+=BodyExpressionMember+)*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current} operator='[' operand_comp+=OwnedExpression ']'
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0_0() { return cOperatorExpressionOperand_compAction_1_0_0; }
		
		//operator='['
		public Assignment getOperatorAssignment_1_0_1() { return cOperatorAssignment_1_0_1; }
		
		//'['
		public Keyword getOperatorLeftSquareBracketKeyword_1_0_1_0() { return cOperatorLeftSquareBracketKeyword_1_0_1_0; }
		
		//operand_comp+=OwnedExpression
		public Assignment getOperand_compAssignment_1_0_2() { return cOperand_compAssignment_1_0_2; }
		
		//OwnedExpression
		public RuleCall getOperand_compOwnedExpressionParserRuleCall_1_0_2_0() { return cOperand_compOwnedExpressionParserRuleCall_1_0_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_0_3() { return cRightSquareBracketKeyword_1_0_3; }
		
		//{SysML::OperatorExpression.operand_comp+=current} '->' operator=Name ownedFeatureMembership_comp+=BodyExpressionMember+
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_1_0() { return cOperatorExpressionOperand_compAction_1_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_1_1() { return cHyphenMinusGreaterThanSignKeyword_1_1_1; }
		
		//operator=Name
		public Assignment getOperatorAssignment_1_1_2() { return cOperatorAssignment_1_1_2; }
		
		//Name
		public RuleCall getOperatorNameParserRuleCall_1_1_2_0() { return cOperatorNameParserRuleCall_1_1_2_0; }
		
		//ownedFeatureMembership_comp+=BodyExpressionMember+
		public Assignment getOwnedFeatureMembership_compAssignment_1_1_3() { return cOwnedFeatureMembership_compAssignment_1_1_3; }
		
		//BodyExpressionMember
		public RuleCall getOwnedFeatureMembership_compBodyExpressionMemberParserRuleCall_1_1_3_0() { return cOwnedFeatureMembership_compBodyExpressionMemberParserRuleCall_1_1_3_0; }
	}
	public class BodyExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BodyExpressionMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compBodyExpressionParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//BodyExpressionMember SysML::FeatureMembership:
		//	ownedMemberFeature_comp=BodyExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=BodyExpression
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//BodyExpression
		public RuleCall getOwnedMemberFeature_compBodyExpressionParserRuleCall_0() { return cOwnedMemberFeature_compBodyExpressionParserRuleCall_0; }
	}
	public class BodyExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BodyExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0_0.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cOwnedFeatureMembership_compAssignment_0_0_3 = (Assignment)cGroup_0_0.eContents().get(3);
		private final RuleCall cOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_0_0_3_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0_0_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_0_4 = (Keyword)cGroup_0_0.eContents().get(4);
		private final Assignment cOwnedRelationship_compAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationship_compExpressionTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationship_compAssignment_1.eContents().get(0);
		
		//BodyExpression SysML::BlockExpression:
		//	=> (ownedFeatureMembership_comp+=BodyParameterMember
		//	ownedFeatureMembership_comp+=BodyParameterMember*
		//	'(' ownedFeatureMembership_comp+=ResultExpressionMember ')') | ownedRelationship_comp+=ExpressionTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//=> (ownedFeatureMembership_comp+=BodyParameterMember ownedFeatureMembership_comp+=BodyParameterMember* '('
		//ownedFeatureMembership_comp+=ResultExpressionMember ')') | ownedRelationship_comp+=ExpressionTyping
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//=> (ownedFeatureMembership_comp+=BodyParameterMember ownedFeatureMembership_comp+=BodyParameterMember* '('
		//ownedFeatureMembership_comp+=ResultExpressionMember ')')
		public Group getGroup_0() { return cGroup_0; }
		
		//(ownedFeatureMembership_comp+=BodyParameterMember ownedFeatureMembership_comp+=BodyParameterMember* '('
		//ownedFeatureMembership_comp+=ResultExpressionMember ')')
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//ownedFeatureMembership_comp+=BodyParameterMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0_0() { return cOwnedFeatureMembership_compAssignment_0_0_0; }
		
		//BodyParameterMember
		public RuleCall getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_0_0() { return cOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_0_0; }
		
		//ownedFeatureMembership_comp+=BodyParameterMember*
		public Assignment getOwnedFeatureMembership_compAssignment_0_0_1() { return cOwnedFeatureMembership_compAssignment_0_0_1; }
		
		//BodyParameterMember
		public RuleCall getOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_1_0() { return cOwnedFeatureMembership_compBodyParameterMemberParserRuleCall_0_0_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_0_2() { return cLeftParenthesisKeyword_0_0_2; }
		
		//ownedFeatureMembership_comp+=ResultExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_0_0_3() { return cOwnedFeatureMembership_compAssignment_0_0_3; }
		
		//ResultExpressionMember
		public RuleCall getOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_0_0_3_0() { return cOwnedFeatureMembership_compResultExpressionMemberParserRuleCall_0_0_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_0_4() { return cRightParenthesisKeyword_0_0_4; }
		
		//ownedRelationship_comp+=ExpressionTyping
		public Assignment getOwnedRelationship_compAssignment_1() { return cOwnedRelationship_compAssignment_1; }
		
		//ExpressionTyping
		public RuleCall getOwnedRelationship_compExpressionTypingParserRuleCall_1_0() { return cOwnedRelationship_compExpressionTypingParserRuleCall_1_0; }
	}
	public class BodyParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BodyParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMemberNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0 = (RuleCall)cMemberNameAssignment_0.eContents().get(0);
		private final Assignment cOwnedMemberParameter_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedMemberParameter_compBodyParameterParserRuleCall_1_0 = (RuleCall)cOwnedMemberParameter_compAssignment_1.eContents().get(0);
		
		//BodyParameterMember SysML::ParameterMembership:
		//	memberName=Name ownedMemberParameter_comp=BodyParameter;
		@Override public ParserRule getRule() { return rule; }
		
		//memberName=Name ownedMemberParameter_comp=BodyParameter
		public Group getGroup() { return cGroup; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0() { return cMemberNameAssignment_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0() { return cMemberNameNameParserRuleCall_0_0; }
		
		//ownedMemberParameter_comp=BodyParameter
		public Assignment getOwnedMemberParameter_compAssignment_1() { return cOwnedMemberParameter_compAssignment_1; }
		
		//BodyParameter
		public RuleCall getOwnedMemberParameter_compBodyParameterParserRuleCall_1_0() { return cOwnedMemberParameter_compBodyParameterParserRuleCall_1_0; }
	}
	public class BodyParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BodyParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceUsageAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cTypedByParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final RuleCall cTypedByParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		
		//BodyParameter SysML::Usage:
		//	{SysML::ReferenceUsage} (TypedBy MultiplicityPart? | MultiplicityPart TypedBy?)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ReferenceUsage} (TypedBy MultiplicityPart? | MultiplicityPart TypedBy?)?
		public Group getGroup() { return cGroup; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction_0() { return cReferenceUsageAction_0; }
		
		//(TypedBy MultiplicityPart? | MultiplicityPart TypedBy?)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//TypedBy MultiplicityPart?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//TypedBy
		public RuleCall getTypedByParserRuleCall_1_0_0() { return cTypedByParserRuleCall_1_0_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_1_0_1() { return cMultiplicityPartParserRuleCall_1_0_1; }
		
		//MultiplicityPart TypedBy?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1_1_0() { return cMultiplicityPartParserRuleCall_1_1_0; }
		
		//TypedBy?
		public RuleCall getTypedByParserRuleCall_1_1_1() { return cTypedByParserRuleCall_1_1_1; }
	}
	public class ExpressionTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExpressionTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeFunctionCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeFunctionQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeFunctionCrossReference_0.eContents().get(1);
		
		//ExpressionTyping SysML::FeatureTyping:
		//	type=[SysML::Function|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Function|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Function|QualifiedName]
		public CrossReference getTypeFunctionCrossReference_0() { return cTypeFunctionCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeFunctionQualifiedNameParserRuleCall_0_1() { return cTypeFunctionQualifiedNameParserRuleCall_0_1; }
	}
	public class SequenceConstructionExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SequenceConstructionExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cNullExpressionAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedExpressionParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Alternatives cAlternatives_1_2 = (Alternatives)cGroup_1.eContents().get(2);
		private final Group cGroup_1_2_0 = (Group)cAlternatives_1_2.eContents().get(0);
		private final Action cOperatorExpressionOperand_compAction_1_2_0_0 = (Action)cGroup_1_2_0.eContents().get(0);
		private final Assignment cOperatorAssignment_1_2_0_1 = (Assignment)cGroup_1_2_0.eContents().get(1);
		private final Keyword cOperatorCommaKeyword_1_2_0_1_0 = (Keyword)cOperatorAssignment_1_2_0_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2_0_2 = (Assignment)cGroup_1_2_0.eContents().get(2);
		private final RuleCall cOperand_compSequenceElementListParserRuleCall_1_2_0_2_0 = (RuleCall)cOperand_compAssignment_1_2_0_2.eContents().get(0);
		private final Group cGroup_1_2_1 = (Group)cAlternatives_1_2.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_2_1_0 = (Action)cGroup_1_2_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_2_1_1 = (Assignment)cGroup_1_2_1.eContents().get(1);
		private final Keyword cOperatorFullStopFullStopKeyword_1_2_1_1_0 = (Keyword)cOperatorAssignment_1_2_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2_1_2 = (Assignment)cGroup_1_2_1.eContents().get(2);
		private final RuleCall cOperand_compOwnedExpressionParserRuleCall_1_2_1_2_0 = (RuleCall)cOperand_compAssignment_1_2_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//SequenceConstructionExpression SysML::Expression:
		//	{SysML::NullExpression} '{' '}'
		//	| '{' OwnedExpression ({SysML::OperatorExpression.operand_comp+=current} operator=','
		//	operand_comp+=SequenceElementList
		//	| {SysML::OperatorExpression.operand_comp+=current} operator='..' operand_comp+=OwnedExpression)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::NullExpression} '{' '}' | '{' OwnedExpression ({SysML::OperatorExpression.operand_comp+=current} operator=','
		//operand_comp+=SequenceElementList | {SysML::OperatorExpression.operand_comp+=current} operator='..'
		//operand_comp+=OwnedExpression)? '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{SysML::NullExpression} '{' '}'
		public Group getGroup_0() { return cGroup_0; }
		
		//{SysML::NullExpression}
		public Action getNullExpressionAction_0_0() { return cNullExpressionAction_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0_1() { return cLeftCurlyBracketKeyword_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_0_2() { return cRightCurlyBracketKeyword_0_2; }
		
		//'{' OwnedExpression ({SysML::OperatorExpression.operand_comp+=current} operator=',' operand_comp+=SequenceElementList |
		//{SysML::OperatorExpression.operand_comp+=current} operator='..' operand_comp+=OwnedExpression)? '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//OwnedExpression
		public RuleCall getOwnedExpressionParserRuleCall_1_1() { return cOwnedExpressionParserRuleCall_1_1; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=',' operand_comp+=SequenceElementList |
		//{SysML::OperatorExpression.operand_comp+=current} operator='..' operand_comp+=OwnedExpression)?
		public Alternatives getAlternatives_1_2() { return cAlternatives_1_2; }
		
		//{SysML::OperatorExpression.operand_comp+=current} operator=',' operand_comp+=SequenceElementList
		public Group getGroup_1_2_0() { return cGroup_1_2_0; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_2_0_0() { return cOperatorExpressionOperand_compAction_1_2_0_0; }
		
		//operator=','
		public Assignment getOperatorAssignment_1_2_0_1() { return cOperatorAssignment_1_2_0_1; }
		
		//','
		public Keyword getOperatorCommaKeyword_1_2_0_1_0() { return cOperatorCommaKeyword_1_2_0_1_0; }
		
		//operand_comp+=SequenceElementList
		public Assignment getOperand_compAssignment_1_2_0_2() { return cOperand_compAssignment_1_2_0_2; }
		
		//SequenceElementList
		public RuleCall getOperand_compSequenceElementListParserRuleCall_1_2_0_2_0() { return cOperand_compSequenceElementListParserRuleCall_1_2_0_2_0; }
		
		//{SysML::OperatorExpression.operand_comp+=current} operator='..' operand_comp+=OwnedExpression
		public Group getGroup_1_2_1() { return cGroup_1_2_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_2_1_0() { return cOperatorExpressionOperand_compAction_1_2_1_0; }
		
		//operator='..'
		public Assignment getOperatorAssignment_1_2_1_1() { return cOperatorAssignment_1_2_1_1; }
		
		//'..'
		public Keyword getOperatorFullStopFullStopKeyword_1_2_1_1_0() { return cOperatorFullStopFullStopKeyword_1_2_1_1_0; }
		
		//operand_comp+=OwnedExpression
		public Assignment getOperand_compAssignment_1_2_1_2() { return cOperand_compAssignment_1_2_1_2; }
		
		//OwnedExpression
		public RuleCall getOperand_compOwnedExpressionParserRuleCall_1_2_1_2_0() { return cOperand_compOwnedExpressionParserRuleCall_1_2_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class SequenceElementListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SequenceElementList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOwnedExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperand_compAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cOperatorCommaKeyword_1_1_0 = (Keyword)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperand_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperand_compSequenceElementListParserRuleCall_1_2_0 = (RuleCall)cOperand_compAssignment_1_2.eContents().get(0);
		
		//SequenceElementList SysML::Expression:
		//	OwnedExpression ({SysML::OperatorExpression.operand_comp+=current} operator=',' operand_comp+=SequenceElementList)?;
		@Override public ParserRule getRule() { return rule; }
		
		//OwnedExpression ({SysML::OperatorExpression.operand_comp+=current} operator=',' operand_comp+=SequenceElementList)?
		public Group getGroup() { return cGroup; }
		
		//OwnedExpression
		public RuleCall getOwnedExpressionParserRuleCall_0() { return cOwnedExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand_comp+=current} operator=',' operand_comp+=SequenceElementList)?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand_comp+=current}
		public Action getOperatorExpressionOperand_compAction_1_0() { return cOperatorExpressionOperand_compAction_1_0; }
		
		//operator=','
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//','
		public Keyword getOperatorCommaKeyword_1_1_0() { return cOperatorCommaKeyword_1_1_0; }
		
		//operand_comp+=SequenceElementList
		public Assignment getOperand_compAssignment_1_2() { return cOperand_compAssignment_1_2; }
		
		//SequenceElementList
		public RuleCall getOperand_compSequenceElementListParserRuleCall_1_2_0() { return cOperand_compSequenceElementListParserRuleCall_1_2_0; }
	}
	public class BaseExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BaseExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNullExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFeatureReferenceExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cInvocationExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cExtentExpression_DeprecatedParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cOwnedExpressionParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		///* Base Expressions */ BaseExpression SysML::Expression:
		//	NullExpression
		//	| LiteralExpression
		//	| FeatureReferenceExpression
		//	| InvocationExpression
		//	| ExtentExpression_Deprecated
		//	| '(' OwnedExpression ')';
		@Override public ParserRule getRule() { return rule; }
		
		//NullExpression | LiteralExpression | FeatureReferenceExpression | InvocationExpression | ExtentExpression_Deprecated |
		//'(' OwnedExpression ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NullExpression
		public RuleCall getNullExpressionParserRuleCall_0() { return cNullExpressionParserRuleCall_0; }
		
		//LiteralExpression
		public RuleCall getLiteralExpressionParserRuleCall_1() { return cLiteralExpressionParserRuleCall_1; }
		
		//FeatureReferenceExpression
		public RuleCall getFeatureReferenceExpressionParserRuleCall_2() { return cFeatureReferenceExpressionParserRuleCall_2; }
		
		//InvocationExpression
		public RuleCall getInvocationExpressionParserRuleCall_3() { return cInvocationExpressionParserRuleCall_3; }
		
		//ExtentExpression_Deprecated
		public RuleCall getExtentExpression_DeprecatedParserRuleCall_4() { return cExtentExpression_DeprecatedParserRuleCall_4; }
		
		//'(' OwnedExpression ')'
		public Group getGroup_5() { return cGroup_5; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }
		
		//OwnedExpression
		public RuleCall getOwnedExpressionParserRuleCall_5_1() { return cOwnedExpressionParserRuleCall_5_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_2() { return cRightParenthesisKeyword_5_2; }
	}
	public class NullExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NullExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNullExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNullKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//// Null Expressions
		//NullExpression SysML::NullExpression:
		//	{SysML::NullExpression} 'null';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::NullExpression} 'null'
		public Group getGroup() { return cGroup; }
		
		//{SysML::NullExpression}
		public Action getNullExpressionAction_0() { return cNullExpressionAction_0; }
		
		//'null'
		public Keyword getNullKeyword_1() { return cNullKeyword_1; }
	}
	public class FeatureReferenceExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureReferenceExpression");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//// Feature Reference Expressions
		//FeatureReferenceExpression SysML::FeatureReferenceExpression:
		//	ownedFeatureMembership_comp+=FeatureReferenceMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=FeatureReferenceMember
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//FeatureReferenceMember
		public RuleCall getOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_0() { return cOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_0; }
	}
	public class FeatureReferenceMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureReferenceMember");
		private final Assignment cOwnedMemberFeature_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedMemberFeature_compFeatureReferenceParserRuleCall_0 = (RuleCall)cOwnedMemberFeature_compAssignment.eContents().get(0);
		
		//FeatureReferenceMember SysML::ReturnParameterMembership:
		//	ownedMemberFeature_comp=FeatureReference;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedMemberFeature_comp=FeatureReference
		public Assignment getOwnedMemberFeature_compAssignment() { return cOwnedMemberFeature_compAssignment; }
		
		//FeatureReference
		public RuleCall getOwnedMemberFeature_compFeatureReferenceParserRuleCall_0() { return cOwnedMemberFeature_compFeatureReferenceParserRuleCall_0; }
	}
	public class FeatureReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureReference");
		private final Assignment cOwnedRelationship_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationship_compOwnedSubsettingParserRuleCall_0 = (RuleCall)cOwnedRelationship_compAssignment.eContents().get(0);
		
		//FeatureReference SysML::ReferenceUsage:
		//	ownedRelationship_comp+=OwnedSubsetting;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=OwnedSubsetting
		public Assignment getOwnedRelationship_compAssignment() { return cOwnedRelationship_compAssignment; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationship_compOwnedSubsettingParserRuleCall_0() { return cOwnedRelationship_compOwnedSubsettingParserRuleCall_0; }
	}
	public class InvocationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InvocationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationship_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0_0 = (RuleCall)cOwnedRelationship_compAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cArgumentListParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//// Invocation Expressions
		//InvocationExpression SysML::InvocationExpression:
		//	ownedRelationship_comp+=OwnedFeatureTyping '(' ArgumentList? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship_comp+=OwnedFeatureTyping '(' ArgumentList? ')'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship_comp+=OwnedFeatureTyping
		public Assignment getOwnedRelationship_compAssignment_0() { return cOwnedRelationship_compAssignment_0; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0_0() { return cOwnedRelationship_compOwnedFeatureTypingParserRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//ArgumentList?
		public RuleCall getArgumentListParserRuleCall_2() { return cArgumentListParserRuleCall_2; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class ArgumentListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ArgumentList");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPositionalArgumentListParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNamedArgumentListParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment ArgumentList returns SysML::Expression:
		//	PositionalArgumentList | NamedArgumentList;
		@Override public ParserRule getRule() { return rule; }
		
		//PositionalArgumentList | NamedArgumentList
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PositionalArgumentList
		public RuleCall getPositionalArgumentListParserRuleCall_0() { return cPositionalArgumentListParserRuleCall_0; }
		
		//NamedArgumentList
		public RuleCall getNamedArgumentListParserRuleCall_1() { return cNamedArgumentListParserRuleCall_1; }
	}
	public class PositionalArgumentListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PositionalArgumentList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1.eContents().get(0);
		
		//fragment PositionalArgumentList returns SysML::Expression:
		//	ownedFeatureMembership_comp+=OwnedExpressionMember (',' ownedFeatureMembership_comp+=OwnedExpressionMember)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=OwnedExpressionMember (',' ownedFeatureMembership_comp+=OwnedExpressionMember)*
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=OwnedExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//OwnedExpressionMember
		public RuleCall getOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_0_0; }
		
		//(',' ownedFeatureMembership_comp+=OwnedExpressionMember)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedFeatureMembership_comp+=OwnedExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1() { return cOwnedFeatureMembership_compAssignment_1_1; }
		
		//OwnedExpressionMember
		public RuleCall getOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_1_1_0() { return cOwnedFeatureMembership_compOwnedExpressionMemberParserRuleCall_1_1_0; }
	}
	public class NamedArgumentListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NamedArgumentList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_1.eContents().get(0);
		
		//fragment NamedArgumentList returns SysML::Expression:
		//	ownedFeatureMembership_comp+=NamedExpressionMember (',' ownedFeatureMembership_comp+=NamedExpressionMember)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=NamedExpressionMember (',' ownedFeatureMembership_comp+=NamedExpressionMember)*
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=NamedExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//NamedExpressionMember
		public RuleCall getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_0_0; }
		
		//(',' ownedFeatureMembership_comp+=NamedExpressionMember)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedFeatureMembership_comp+=NamedExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_1() { return cOwnedFeatureMembership_compAssignment_1_1; }
		
		//NamedExpressionMember
		public RuleCall getOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_1_1_0() { return cOwnedFeatureMembership_compNamedExpressionMemberParserRuleCall_1_1_0; }
	}
	public class NamedExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NamedExpressionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMemberNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0 = (RuleCall)cMemberNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedMemberFeature_compAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedMemberFeature_compOwnedExpressionParserRuleCall_2_0 = (RuleCall)cOwnedMemberFeature_compAssignment_2.eContents().get(0);
		
		//NamedExpressionMember SysML::FeatureMembership:
		//	memberName=Name '=>' ownedMemberFeature_comp=OwnedExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//memberName=Name '=>' ownedMemberFeature_comp=OwnedExpression
		public Group getGroup() { return cGroup; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0() { return cMemberNameAssignment_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0() { return cMemberNameNameParserRuleCall_0_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }
		
		//ownedMemberFeature_comp=OwnedExpression
		public Assignment getOwnedMemberFeature_compAssignment_2() { return cOwnedMemberFeature_compAssignment_2; }
		
		//OwnedExpression
		public RuleCall getOwnedMemberFeature_compOwnedExpressionParserRuleCall_2_0() { return cOwnedMemberFeature_compOwnedExpressionParserRuleCall_2_0; }
	}
	public class ExtentExpression_DeprecatedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExtentExpression_Deprecated");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOperatorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cOperatorAllInstancesKeyword_2_0 = (Keyword)cOperatorAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// Extent Expressions (Deprecated)
		//ExtentExpression_Deprecated SysML::OperatorExpression:
		//	ownedFeatureMembership_comp+=TypeReferenceMember '.' operator='allInstances' '(' ')';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedFeatureMembership_comp+=TypeReferenceMember '.' operator='allInstances' '(' ')'
		public Group getGroup() { return cGroup; }
		
		//ownedFeatureMembership_comp+=TypeReferenceMember
		public Assignment getOwnedFeatureMembership_compAssignment_0() { return cOwnedFeatureMembership_compAssignment_0; }
		
		//TypeReferenceMember
		public RuleCall getOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_0() { return cOwnedFeatureMembership_compTypeReferenceMemberParserRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//operator='allInstances'
		public Assignment getOperatorAssignment_2() { return cOperatorAssignment_2; }
		
		//'allInstances'
		public Keyword getOperatorAllInstancesKeyword_2_0() { return cOperatorAllInstancesKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class LiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLiteralBooleanParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLiteralStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLiteralIntegerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLiteralRealParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cLiteralUnboundedParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		///* Literal Expressions */ LiteralExpression SysML::LiteralExpression:
		//	LiteralBoolean
		//	| LiteralString
		//	| LiteralInteger
		//	| LiteralReal
		//	| LiteralUnbounded;
		@Override public ParserRule getRule() { return rule; }
		
		//LiteralBoolean | LiteralString | LiteralInteger | LiteralReal | LiteralUnbounded
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LiteralBoolean
		public RuleCall getLiteralBooleanParserRuleCall_0() { return cLiteralBooleanParserRuleCall_0; }
		
		//LiteralString
		public RuleCall getLiteralStringParserRuleCall_1() { return cLiteralStringParserRuleCall_1; }
		
		//LiteralInteger
		public RuleCall getLiteralIntegerParserRuleCall_2() { return cLiteralIntegerParserRuleCall_2; }
		
		//LiteralReal
		public RuleCall getLiteralRealParserRuleCall_3() { return cLiteralRealParserRuleCall_3; }
		
		//LiteralUnbounded
		public RuleCall getLiteralUnboundedParserRuleCall_4() { return cLiteralUnboundedParserRuleCall_4; }
	}
	public class LiteralBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralBoolean");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBooleanValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//LiteralBoolean SysML::LiteralBoolean:
		//	value=BooleanValue;
		@Override public ParserRule getRule() { return rule; }
		
		//value=BooleanValue
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BooleanValue
		public RuleCall getValueBooleanValueParserRuleCall_0() { return cValueBooleanValueParserRuleCall_0; }
	}
	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BooleanValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//BooleanValue Ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class LiteralStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralString");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRING_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//LiteralString SysML::LiteralString:
		//	value=STRING_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING_VALUE
		public RuleCall getValueSTRING_VALUETerminalRuleCall_0() { return cValueSTRING_VALUETerminalRuleCall_0; }
	}
	public class LiteralIntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralInteger");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueDECIMAL_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//LiteralInteger SysML::LiteralInteger:
		//	value=DECIMAL_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=DECIMAL_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//DECIMAL_VALUE
		public RuleCall getValueDECIMAL_VALUETerminalRuleCall_0() { return cValueDECIMAL_VALUETerminalRuleCall_0; }
	}
	public class LiteralRealElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralReal");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueRealValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//LiteralReal SysML::LiteralReal:
		//	value=RealValue;
		@Override public ParserRule getRule() { return rule; }
		
		//value=RealValue
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//RealValue
		public RuleCall getValueRealValueParserRuleCall_0() { return cValueRealValueParserRuleCall_0; }
	}
	public class RealValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RealValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cDECIMAL_VALUETerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Alternatives cAlternatives_0_2 = (Alternatives)cGroup_0.eContents().get(2);
		private final RuleCall cDECIMAL_VALUETerminalRuleCall_0_2_0 = (RuleCall)cAlternatives_0_2.eContents().get(0);
		private final RuleCall cEXP_VALUETerminalRuleCall_0_2_1 = (RuleCall)cAlternatives_0_2.eContents().get(1);
		private final RuleCall cEXP_VALUETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RealValue Ecore::EDouble:
		//	DECIMAL_VALUE? '.' (DECIMAL_VALUE | EXP_VALUE) | EXP_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//DECIMAL_VALUE? '.' (DECIMAL_VALUE | EXP_VALUE) | EXP_VALUE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DECIMAL_VALUE? '.' (DECIMAL_VALUE | EXP_VALUE)
		public Group getGroup_0() { return cGroup_0; }
		
		//DECIMAL_VALUE?
		public RuleCall getDECIMAL_VALUETerminalRuleCall_0_0() { return cDECIMAL_VALUETerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }
		
		//(DECIMAL_VALUE | EXP_VALUE)
		public Alternatives getAlternatives_0_2() { return cAlternatives_0_2; }
		
		//DECIMAL_VALUE
		public RuleCall getDECIMAL_VALUETerminalRuleCall_0_2_0() { return cDECIMAL_VALUETerminalRuleCall_0_2_0; }
		
		//EXP_VALUE
		public RuleCall getEXP_VALUETerminalRuleCall_0_2_1() { return cEXP_VALUETerminalRuleCall_0_2_1; }
		
		//EXP_VALUE
		public RuleCall getEXP_VALUETerminalRuleCall_1() { return cEXP_VALUETerminalRuleCall_1; }
	}
	public class LiteralUnboundedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralUnbounded");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLiteralUnboundedAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//LiteralUnbounded SysML::LiteralUnbounded:
		//	{SysML::LiteralUnbounded} '*';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::LiteralUnbounded} '*'
		public Group getGroup() { return cGroup; }
		
		//{SysML::LiteralUnbounded}
		public Action getLiteralUnboundedAction_0() { return cLiteralUnboundedAction_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }
	}
	public class LiteralUnlimitedNaturalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LiteralUnlimitedNatural");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLiteralIntegerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLiteralUnboundedParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//LiteralUnlimitedNatural SysML::LiteralExpression:
		//	LiteralInteger | LiteralUnbounded;
		@Override public ParserRule getRule() { return rule; }
		
		//LiteralInteger | LiteralUnbounded
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LiteralInteger
		public RuleCall getLiteralIntegerParserRuleCall_0() { return cLiteralIntegerParserRuleCall_0; }
		
		//LiteralUnbounded
		public RuleCall getLiteralUnboundedParserRuleCall_1() { return cLiteralUnboundedParserRuleCall_1; }
	}
	public class QueryPathExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QueryPathExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQueryHeadExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Action cQueryQualifierExpressionOperand_compAction_1_1 = (Action)cGroup_1.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compBodyExpressionMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSolidusKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Action cQueryPathStepExpressionOperand_compAction_2_1 = (Action)cGroup_2.eContents().get(1);
		private final Assignment cOperand_compAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cOperand_compQueryNameExpressionParserRuleCall_2_2_0 = (RuleCall)cOperand_compAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Action cQueryQualifierExpressionOperand_compAction_2_3_1 = (Action)cGroup_2_3.eContents().get(1);
		private final Assignment cOwnedFeatureMembership_compAssignment_2_3_2 = (Assignment)cGroup_2_3.eContents().get(2);
		private final RuleCall cOwnedFeatureMembership_compBodyExpressionMemberParserRuleCall_2_3_2_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_2_3_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_3_3 = (Keyword)cGroup_2_3.eContents().get(3);
		
		///* QUERY PATH EXPRESSIONS */ QueryPathExpression SysML::Expression:
		//	QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current}
		//	ownedFeatureMembership_comp+=BodyExpressionMember ']')? ('/' {SysML::QueryPathStepExpression.operand_comp+=current}
		//	operand_comp+=QueryNameExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current}
		//	ownedFeatureMembership_comp+=BodyExpressionMember ']')?)*;
		@Override public ParserRule getRule() { return rule; }
		
		//QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current}
		//ownedFeatureMembership_comp+=BodyExpressionMember ']')? ('/' {SysML::QueryPathStepExpression.operand_comp+=current}
		//operand_comp+=QueryNameExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current}
		//ownedFeatureMembership_comp+=BodyExpressionMember ']')?)*
		public Group getGroup() { return cGroup; }
		
		//QueryHeadExpression
		public RuleCall getQueryHeadExpressionParserRuleCall_0() { return cQueryHeadExpressionParserRuleCall_0; }
		
		//('[' {SysML::QueryQualifierExpression.operand_comp+=current} ownedFeatureMembership_comp+=BodyExpressionMember ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }
		
		//{SysML::QueryQualifierExpression.operand_comp+=current}
		public Action getQueryQualifierExpressionOperand_compAction_1_1() { return cQueryQualifierExpressionOperand_compAction_1_1; }
		
		//ownedFeatureMembership_comp+=BodyExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_1_2() { return cOwnedFeatureMembership_compAssignment_1_2; }
		
		//BodyExpressionMember
		public RuleCall getOwnedFeatureMembership_compBodyExpressionMemberParserRuleCall_1_2_0() { return cOwnedFeatureMembership_compBodyExpressionMemberParserRuleCall_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
		
		//('/' {SysML::QueryPathStepExpression.operand_comp+=current} operand_comp+=QueryNameExpression ('['
		//{SysML::QueryQualifierExpression.operand_comp+=current} ownedFeatureMembership_comp+=BodyExpressionMember ']')?)*
		public Group getGroup_2() { return cGroup_2; }
		
		//'/'
		public Keyword getSolidusKeyword_2_0() { return cSolidusKeyword_2_0; }
		
		//{SysML::QueryPathStepExpression.operand_comp+=current}
		public Action getQueryPathStepExpressionOperand_compAction_2_1() { return cQueryPathStepExpressionOperand_compAction_2_1; }
		
		//operand_comp+=QueryNameExpression
		public Assignment getOperand_compAssignment_2_2() { return cOperand_compAssignment_2_2; }
		
		//QueryNameExpression
		public RuleCall getOperand_compQueryNameExpressionParserRuleCall_2_2_0() { return cOperand_compQueryNameExpressionParserRuleCall_2_2_0; }
		
		//('[' {SysML::QueryQualifierExpression.operand_comp+=current} ownedFeatureMembership_comp+=BodyExpressionMember ']')?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_3_0() { return cLeftSquareBracketKeyword_2_3_0; }
		
		//{SysML::QueryQualifierExpression.operand_comp+=current}
		public Action getQueryQualifierExpressionOperand_compAction_2_3_1() { return cQueryQualifierExpressionOperand_compAction_2_3_1; }
		
		//ownedFeatureMembership_comp+=BodyExpressionMember
		public Assignment getOwnedFeatureMembership_compAssignment_2_3_2() { return cOwnedFeatureMembership_compAssignment_2_3_2; }
		
		//BodyExpressionMember
		public RuleCall getOwnedFeatureMembership_compBodyExpressionMemberParserRuleCall_2_3_2_0() { return cOwnedFeatureMembership_compBodyExpressionMemberParserRuleCall_2_3_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_3_3() { return cRightSquareBracketKeyword_2_3_3; }
	}
	public class QueryNameExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QueryNameExpression");
		private final Assignment cOwnedFeatureMembership_compAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_0 = (RuleCall)cOwnedFeatureMembership_compAssignment.eContents().get(0);
		
		//QueryNameExpression SysML::QueryPathExpression:
		//	ownedFeatureMembership_comp+=FeatureReferenceMember;
		@Override public ParserRule getRule() { return rule; }
		
		///* isParent ?= '..'
		//    | isDescendants ?= '/'
		//    | @traversal
		//    */ ownedFeatureMembership_comp+=FeatureReferenceMember
		public Assignment getOwnedFeatureMembership_compAssignment() { return cOwnedFeatureMembership_compAssignment; }
		
		//FeatureReferenceMember
		public RuleCall getOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_0() { return cOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_0; }
	}
	public class QueryHeadExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QueryHeadExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFullStopSolidusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedFeatureMembership_compAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_1_0 = (RuleCall)cOwnedFeatureMembership_compAssignment_1.eContents().get(0);
		
		//QueryHeadExpression SysML::QueryPathExpression:
		//	'./' ownedFeatureMembership_comp+=FeatureReferenceMember;
		@Override public ParserRule getRule() { return rule; }
		
		//'./' ownedFeatureMembership_comp+=FeatureReferenceMember
		public Group getGroup() { return cGroup; }
		
		//'./'
		public Keyword getFullStopSolidusKeyword_0() { return cFullStopSolidusKeyword_0; }
		
		//ownedFeatureMembership_comp+=FeatureReferenceMember
		public Assignment getOwnedFeatureMembership_compAssignment_1() { return cOwnedFeatureMembership_compAssignment_1; }
		
		//FeatureReferenceMember
		public RuleCall getOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_1_0() { return cOwnedFeatureMembership_compFeatureReferenceMemberParserRuleCall_1_0; }
	}
	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Name");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUNRESTRICTED_NAMETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* NAMES */ Name:
		//	ID | UNRESTRICTED_NAME;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | UNRESTRICTED_NAME
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//UNRESTRICTED_NAME
		public RuleCall getUNRESTRICTED_NAMETerminalRuleCall_1() { return cUNRESTRICTED_NAMETerminalRuleCall_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.QualifiedName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cColonQualifiedNameParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDotQualifiedNameParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//QualifiedName:
		//	Name | ColonQualifiedName | DotQualifiedName;
		@Override public ParserRule getRule() { return rule; }
		
		//Name | ColonQualifiedName | DotQualifiedName
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//ColonQualifiedName
		public RuleCall getColonQualifiedNameParserRuleCall_1() { return cColonQualifiedNameParserRuleCall_1; }
		
		//DotQualifiedName
		public RuleCall getDotQualifiedNameParserRuleCall_2() { return cDotQualifiedNameParserRuleCall_2; }
	}
	public class ColonQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ColonQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//ColonQualifiedName:
		//	Name ('::' Name)+;
		@Override public ParserRule getRule() { return rule; }
		
		//Name ('::' Name)+
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//('::' Name)+
		public Group getGroup_1() { return cGroup_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1_0() { return cColonColonKeyword_1_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	public class DotQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DotQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//DotQualifiedName:
		//	Name ('.' Name)+;
		@Override public ParserRule getRule() { return rule; }
		
		//Name ('.' Name)+
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//('.' Name)+
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	
	public class BasicVisibilityIndicatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BasicVisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum BasicVisibilityIndicator returns SysML::VisibilityKind:
		//	public | private;
		public EnumRule getRule() { return rule; }
		
		//public | private
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
	}
	public class VisibilityIndicatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cProtectedProtectedKeyword_2_0 = (Keyword)cProtectedEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum VisibilityIndicator returns SysML::VisibilityKind:
		//	public | private | protected;
		public EnumRule getRule() { return rule; }
		
		//public | private | protected
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
		
		//protected
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_2() { return cProtectedEnumLiteralDeclaration_2; }
		
		//'protected'
		public Keyword getProtectedProtectedKeyword_2_0() { return cProtectedProtectedKeyword_2_0; }
	}
	public class FeatureDirectionElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureDirection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInInKeyword_0_0 = (Keyword)cInEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOutEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOutOutKeyword_1_0 = (Keyword)cOutEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInoutEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInoutInoutKeyword_2_0 = (Keyword)cInoutEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum FeatureDirection returns SysML::FeatureDirectionKind:
		//	in | out | inout;
		public EnumRule getRule() { return rule; }
		
		//in | out | inout
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//in
		public EnumLiteralDeclaration getInEnumLiteralDeclaration_0() { return cInEnumLiteralDeclaration_0; }
		
		//'in'
		public Keyword getInInKeyword_0_0() { return cInInKeyword_0_0; }
		
		//out
		public EnumLiteralDeclaration getOutEnumLiteralDeclaration_1() { return cOutEnumLiteralDeclaration_1; }
		
		//'out'
		public Keyword getOutOutKeyword_1_0() { return cOutOutKeyword_1_0; }
		
		//inout
		public EnumLiteralDeclaration getInoutEnumLiteralDeclaration_2() { return cInoutEnumLiteralDeclaration_2; }
		
		//'inout'
		public Keyword getInoutInoutKeyword_2_0() { return cInoutInoutKeyword_2_0; }
	}
	public class TriggerFeatureKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerFeatureKind");
		private final EnumLiteralDeclaration cTriggerEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cTriggerAcceptKeyword_0 = (Keyword)cTriggerEnumLiteralDeclaration.eContents().get(0);
		
		//enum TriggerFeatureKind returns SysML::TransitionFeatureKind:
		//	trigger='accept';
		public EnumRule getRule() { return rule; }
		
		//trigger='accept'
		public EnumLiteralDeclaration getTriggerEnumLiteralDeclaration() { return cTriggerEnumLiteralDeclaration; }
		
		//'accept'
		public Keyword getTriggerAcceptKeyword_0() { return cTriggerAcceptKeyword_0; }
	}
	public class GuardFeatureKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardFeatureKind");
		private final EnumLiteralDeclaration cGuardEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cGuardIfKeyword_0 = (Keyword)cGuardEnumLiteralDeclaration.eContents().get(0);
		
		//enum GuardFeatureKind returns SysML::TransitionFeatureKind:
		//	guard='if';
		public EnumRule getRule() { return rule; }
		
		//guard='if'
		public EnumLiteralDeclaration getGuardEnumLiteralDeclaration() { return cGuardEnumLiteralDeclaration; }
		
		//'if'
		public Keyword getGuardIfKeyword_0() { return cGuardIfKeyword_0; }
	}
	public class EffectFeatureKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectFeatureKind");
		private final EnumLiteralDeclaration cEffectEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cEffectDoKeyword_0 = (Keyword)cEffectEnumLiteralDeclaration.eContents().get(0);
		
		//enum EffectFeatureKind returns SysML::TransitionFeatureKind:
		//	effect='do';
		public EnumRule getRule() { return rule; }
		
		//effect='do'
		public EnumLiteralDeclaration getEffectEnumLiteralDeclaration() { return cEffectEnumLiteralDeclaration; }
		
		//'do'
		public Keyword getEffectDoKeyword_0() { return cEffectDoKeyword_0; }
	}
	public class RequirementConstraintKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementConstraintKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAssumptionEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAssumptionAssumeKeyword_0_0 = (Keyword)cAssumptionEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRequirementEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRequirementRequireKeyword_1_0 = (Keyword)cRequirementEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum RequirementConstraintKind returns SysML::RequirementConstraintKind:
		//	assumption='assume' | requirement='require';
		public EnumRule getRule() { return rule; }
		
		//assumption='assume' | requirement='require'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//assumption='assume'
		public EnumLiteralDeclaration getAssumptionEnumLiteralDeclaration_0() { return cAssumptionEnumLiteralDeclaration_0; }
		
		//'assume'
		public Keyword getAssumptionAssumeKeyword_0_0() { return cAssumptionAssumeKeyword_0_0; }
		
		//requirement='require'
		public EnumLiteralDeclaration getRequirementEnumLiteralDeclaration_1() { return cRequirementEnumLiteralDeclaration_1; }
		
		//'require'
		public Keyword getRequirementRequireKeyword_1_0() { return cRequirementRequireKeyword_1_0; }
	}
	
	private final RootPackageElements pRootPackage;
	private final IdentificationElements pIdentification;
	private final CommentElements pComment;
	private final AnnotationElements pAnnotation;
	private final EmptyAnnotationElements pEmptyAnnotation;
	private final OwnedDocumentationElements pOwnedDocumentation;
	private final DocumentationCommentElements pDocumentationComment;
	private final PrefixDocumentationElements pPrefixDocumentation;
	private final PrefixDocumentationCommentElements pPrefixDocumentationComment;
	private final TextualRepresentationElements pTextualRepresentation;
	private final PackageElements pPackage;
	private final PackageDeclarationElements pPackageDeclaration;
	private final PackageBodyElements pPackageBody;
	private final PackageBodyElementElements pPackageBodyElement;
	private final PackageMemberElements pPackageMember;
	private final NonUsagePackageMemberElements pNonUsagePackageMember;
	private final UsagePackageMemberElements pUsagePackageMember;
	private final PackageImportElements pPackageImport;
	private final BasicVisibilityIndicatorElements eBasicVisibilityIndicator;
	private final DefinitionElementElements pDefinitionElement;
	private final UsageElementElements pUsageElement;
	private final TypeBodyElements pTypeBody;
	private final NonFeatureTypeMemberElements pNonFeatureTypeMember;
	private final FeatureTypeMemberElements pFeatureTypeMember;
	private final TypeMemberPrefixElements pTypeMemberPrefix;
	private final VisibilityIndicatorElements eVisibilityIndicator;
	private final FeatureMemberElements pFeatureMember;
	private final EndFeatureMemberElements pEndFeatureMember;
	private final FeatureDirectionElements eFeatureDirection;
	private final FeatureElementElements pFeatureElement;
	private final SuperclassingPartElements pSuperclassingPart;
	private final SpecializesKeywordElements pSpecializesKeyword;
	private final OwnedSuperclassingElements pOwnedSuperclassing;
	private final FeatureDeclarationElements pFeatureDeclaration;
	private final FeatureSpecializationPartElements pFeatureSpecializationPart;
	private final MultiplicityPartElements pMultiplicityPart;
	private final FeatureSpecializationElements pFeatureSpecialization;
	private final TypingsElements pTypings;
	private final TypedByElements pTypedBy;
	private final DefinedByKeywordElements pDefinedByKeyword;
	private final SubsettingsElements pSubsettings;
	private final SubsetsElements pSubsets;
	private final SubsetsKeywordElements pSubsetsKeyword;
	private final RedefinitionsElements pRedefinitions;
	private final RedefinesElements pRedefines;
	private final RedefinesKeywordElements pRedefinesKeyword;
	private final OwnedFeatureTypingElements pOwnedFeatureTyping;
	private final OwnedSubsettingElements pOwnedSubsetting;
	private final OwnedRedefinitionElements pOwnedRedefinition;
	private final MultiplicityMemberElements pMultiplicityMember;
	private final MultiplicityElements pMultiplicity;
	private final LiteralIntegerMemberElements pLiteralIntegerMember;
	private final LiteralUnlimitedNaturalMemberElements pLiteralUnlimitedNaturalMember;
	private final ConnectorEndMemberElements pConnectorEndMember;
	private final ConnectorEndElements pConnectorEnd;
	private final BindingKeywordElements pBindingKeyword;
	private final BindingConnectorElements pBindingConnector;
	private final BindingConnectorDeclarationElements pBindingConnectorDeclaration;
	private final SuccessionKeywordElements pSuccessionKeyword;
	private final SuccessionElements pSuccession;
	private final SuccessionDeclarationElements pSuccessionDeclaration;
	private final ItemFlowKeywordElements pItemFlowKeyword;
	private final ItemFlowElements pItemFlow;
	private final SuccessionItemFlowKeywordElements pSuccessionItemFlowKeyword;
	private final SuccessionItemFlowElements pSuccessionItemFlow;
	private final ItemFlowDeclarationElements pItemFlowDeclaration;
	private final ItemFeatureMemberElements pItemFeatureMember;
	private final ItemFeatureElements pItemFeature;
	private final EmptyItemFeatureElements pEmptyItemFeature;
	private final ItemFlowEndMemberElements pItemFlowEndMember;
	private final ItemFlowEndElements pItemFlowEnd;
	private final EmptyItemFeatureMemberElements pEmptyItemFeatureMember;
	private final EmptyItemFlowEndElements pEmptyItemFlowEnd;
	private final ItemFlowFeatureMemberElements pItemFlowFeatureMember;
	private final ItemFlowFeatureElements pItemFlowFeature;
	private final EmptyItemFlowEndMemberElements pEmptyItemFlowEndMember;
	private final EmptyItemFlowFeatureMemberElements pEmptyItemFlowFeatureMember;
	private final EmptyItemFlowFeatureElements pEmptyItemFlowFeature;
	private final EmptyRedefinitionElements pEmptyRedefinition;
	private final DependencyElements pDependency;
	private final DefinitionPrefixElements pDefinitionPrefix;
	private final DefinitionElements pDefinition;
	private final DefinitionDeclarationElements pDefinitionDeclaration;
	private final DefinitionBodyElements pDefinitionBody;
	private final DefinitionBodyItemElements pDefinitionBodyItem;
	private final NestedDefinitionMemberElements pNestedDefinitionMember;
	private final VariantUsageMemberElements pVariantUsageMember;
	private final NestedUsageMemberElements pNestedUsageMember;
	private final StructureUsageMemberElements pStructureUsageMember;
	private final BehaviorUsageMemberElements pBehaviorUsageMember;
	private final IndividualUsageMemberElements pIndividualUsageMember;
	private final FlowUsageMemberElements pFlowUsageMember;
	private final DefinitionMemberPrefixElements pDefinitionMemberPrefix;
	private final UsagePrefixElements pUsagePrefix;
	private final UsageElements pUsage;
	private final UsageDeclarationElements pUsageDeclaration;
	private final UsageCompletionElements pUsageCompletion;
	private final UsageBodyElements pUsageBody;
	private final ValuePartElements pValuePart;
	private final ValueOrFlowPartElements pValueOrFlowPart;
	private final FeatureValueElements pFeatureValue;
	private final SourceItemFlowMemberElements pSourceItemFlowMember;
	private final SourceItemFlowElements pSourceItemFlow;
	private final ReferenceKeywordElements pReferenceKeyword;
	private final ReferenceUsageKeywordElements pReferenceUsageKeyword;
	private final ReferenceUsageElements pReferenceUsage;
	private final ReferenceEndUsageElements pReferenceEndUsage;
	private final ReferenceVariantUsageElements pReferenceVariantUsage;
	private final StructureUsageElementElements pStructureUsageElement;
	private final IndividualUsageElementElements pIndividualUsageElement;
	private final BehaviorUsageElementElements pBehaviorUsageElement;
	private final VariantUsageElementElements pVariantUsageElement;
	private final FlowUsageElementElements pFlowUsageElement;
	private final AttributeKeywordElements pAttributeKeyword;
	private final AttributeDefKeywordElements pAttributeDefKeyword;
	private final AttributeUsageKeywordElements pAttributeUsageKeyword;
	private final AttributeDefinitionElements pAttributeDefinition;
	private final AttributeUsageElements pAttributeUsage;
	private final AttributeVariantUsageElements pAttributeVariantUsage;
	private final ItemKeywordElements pItemKeyword;
	private final ItemDefKeywordElements pItemDefKeyword;
	private final ItemUsageKeywordElements pItemUsageKeyword;
	private final ItemDefinitionElements pItemDefinition;
	private final ItemUsageElements pItemUsage;
	private final ItemFlowUsageElements pItemFlowUsage;
	private final ItemRefUsageElements pItemRefUsage;
	private final PartKeywordElements pPartKeyword;
	private final PartDefKeywordElements pPartDefKeyword;
	private final PartUsageKeywordElements pPartUsageKeyword;
	private final PartDefinitionElements pPartDefinition;
	private final PartUsageElements pPartUsage;
	private final PartFlowUsageElements pPartFlowUsage;
	private final PartRefUsageElements pPartRefUsage;
	private final PortKeywordElements pPortKeyword;
	private final PortDefKeywordElements pPortDefKeyword;
	private final PortDefinitionElements pPortDefinition;
	private final ConjugatedPortDefinitionMemberElements pConjugatedPortDefinitionMember;
	private final ConjugatedPortDefinitionElements pConjugatedPortDefinition;
	private final PortConjugationElements pPortConjugation;
	private final PortUsageKeywordElements pPortUsageKeyword;
	private final PortUsageElements pPortUsage;
	private final PortEndUsageElements pPortEndUsage;
	private final PortUsageDeclarationElements pPortUsageDeclaration;
	private final PortSpecializationPartElements pPortSpecializationPart;
	private final PortSpecializationElements pPortSpecialization;
	private final PortTypingsElements pPortTypings;
	private final PortTypingElements pPortTyping;
	private final ConjugatedPortTypingElements pConjugatedPortTyping;
	private final ConnectionKeywordElements pConnectionKeyword;
	private final ConnectionDefKeywordElements pConnectionDefKeyword;
	private final ConnectionDefinitionElements pConnectionDefinition;
	private final ConnectionBodyElements pConnectionBody;
	private final ConnectionUsageMemberElements pConnectionUsageMember;
	private final ConnectionEndMemberElements pConnectionEndMember;
	private final ConnectionEndElementElements pConnectionEndElement;
	private final ConnectorKeywordElements pConnectorKeyword;
	private final ConnectorElements pConnector;
	private final ConnectionUsageKeywordElements pConnectionUsageKeyword;
	private final ConnectionUsageElements pConnectionUsage;
	private final ConnectorPartElements pConnectorPart;
	private final BinaryConnectorPartElements pBinaryConnectorPart;
	private final NaryConnectorPartElements pNaryConnectorPart;
	private final EmptySourceEndMemberElements pEmptySourceEndMember;
	private final EmptySourceEndElements pEmptySourceEnd;
	private final InterfaceKeywordElements pInterfaceKeyword;
	private final InterfaceDefKeywordElements pInterfaceDefKeyword;
	private final InterfaceDefinitionElements pInterfaceDefinition;
	private final InterfaceDefDeclarationElements pInterfaceDefDeclaration;
	private final InterfaceDefBodyElements pInterfaceDefBody;
	private final InterfaceUsageMemberElements pInterfaceUsageMember;
	private final InterfaceEndMemberElements pInterfaceEndMember;
	private final InterfaceUsageKeywordElements pInterfaceUsageKeyword;
	private final InterfaceUsageElements pInterfaceUsage;
	private final InterfaceUsageDeclarationElements pInterfaceUsageDeclaration;
	private final IndividualKeywordElements pIndividualKeyword;
	private final IndividualDefKeywordElements pIndividualDefKeyword;
	private final IndividualDefinitionElements pIndividualDefinition;
	private final LifeClassMembershipElements pLifeClassMembership;
	private final LifeClassElements pLifeClass;
	private final IndividualUsageKeywordElements pIndividualUsageKeyword;
	private final TimeSliceKeywordElements pTimeSliceKeyword;
	private final SnapshotKeywordElements pSnapshotKeyword;
	private final IndividualUsageElements pIndividualUsage;
	private final IndividualRefUsageElements pIndividualRefUsage;
	private final TimeSliceUsageElements pTimeSliceUsage;
	private final TimeSliceRefUsageElements pTimeSliceRefUsage;
	private final TimeSliceFeatureMemberElements pTimeSliceFeatureMember;
	private final TimeSliceFeatureElements pTimeSliceFeature;
	private final SnapshotUsageElements pSnapshotUsage;
	private final SnapshotRefUsageElements pSnapshotRefUsage;
	private final SnapshotFeatureMemberElements pSnapshotFeatureMember;
	private final SnapshotFeatureElements pSnapshotFeature;
	private final EmptySuccessionMemberElements pEmptySuccessionMember;
	private final EmptySuccessionElements pEmptySuccession;
	private final MultiplicitySourceEndMemberElements pMultiplicitySourceEndMember;
	private final MultiplicitySourceEndElements pMultiplicitySourceEnd;
	private final EmptyTargetEndMemberElements pEmptyTargetEndMember;
	private final EmptyTargetEndElements pEmptyTargetEnd;
	private final ActionKeywordElements pActionKeyword;
	private final ActionDefKeywordElements pActionDefKeyword;
	private final ActionDefinitionElements pActionDefinition;
	private final ActionDeclarationElements pActionDeclaration;
	private final ParameterListElements pParameterList;
	private final ParameterMemberElements pParameterMember;
	private final ActionBodyElements pActionBody;
	private final ActionBodyItemElements pActionBodyItem;
	private final ParameterFlowUsageMemberElements pParameterFlowUsageMember;
	private final InitialNodeMemberElements pInitialNodeMember;
	private final ActionNodeMemberElements pActionNodeMember;
	private final TargetSuccessionMemberElements pTargetSuccessionMember;
	private final GuardedSuccessionMemberElements pGuardedSuccessionMember;
	private final ParameterElements pParameter;
	private final ParameterDeclarationElements pParameterDeclaration;
	private final ParameterSpecializationPartElements pParameterSpecializationPart;
	private final ParameterSpecializationElements pParameterSpecialization;
	private final ActionUsageKeywordElements pActionUsageKeyword;
	private final ActionUsageElements pActionUsage;
	private final ActionFlowUsageElements pActionFlowUsage;
	private final ActionRefUsageElements pActionRefUsage;
	private final PerformActionUsageElements pPerformActionUsage;
	private final PerformActionUsageDeclarationElements pPerformActionUsageDeclaration;
	private final ActionUsageDeclarationElements pActionUsageDeclaration;
	private final ActionUsageParameterListElements pActionUsageParameterList;
	private final ActionUsageParameterMemberElements pActionUsageParameterMember;
	private final ActionUsageParameterElements pActionUsageParameter;
	private final ActionNodeElements pActionNode;
	private final AcceptNodeElements pAcceptNode;
	private final AcceptNodeDeclarationElements pAcceptNodeDeclaration;
	private final SendNodeElements pSendNode;
	private final SendNodeDeclarationElements pSendNodeDeclaration;
	private final ControlNodeElements pControlNode;
	private final MergeNodeElements pMergeNode;
	private final DecisionNodeElements pDecisionNode;
	private final JoinNodeElements pJoinNode;
	private final ForkNodeElements pForkNode;
	private final EmptyParameterMemberElements pEmptyParameterMember;
	private final EmptyParameterElements pEmptyParameter;
	private final ActionTargetSuccessionElements pActionTargetSuccession;
	private final TargetSuccessionElements pTargetSuccession;
	private final GuardedTargetSuccessionElements pGuardedTargetSuccession;
	private final DefaultTargetSuccessionElements pDefaultTargetSuccession;
	private final GuardedSuccessionElements pGuardedSuccession;
	private final StateKeywordElements pStateKeyword;
	private final StateDefKeywordElements pStateDefKeyword;
	private final StateDefinitionElements pStateDefinition;
	private final StateBodyElements pStateBody;
	private final StateBodyPartElements pStateBodyPart;
	private final StateDefBodyItemElements pStateDefBodyItem;
	private final EntryActionMemberElements pEntryActionMember;
	private final EntryActionKindElements pEntryActionKind;
	private final DoActionMemberElements pDoActionMember;
	private final DoActionKindElements pDoActionKind;
	private final ExitActionMemberElements pExitActionMember;
	private final ExitActionKindElements pExitActionKind;
	private final EntryTransitionMemberElements pEntryTransitionMember;
	private final StateActionUsageElements pStateActionUsage;
	private final EmptyActionUsageElements pEmptyActionUsage;
	private final PerformedActionUsageElements pPerformedActionUsage;
	private final TransitionUsageMemberElements pTransitionUsageMember;
	private final TargetTransitionUsageMemberElements pTargetTransitionUsageMember;
	private final StateUsageKeywordElements pStateUsageKeyword;
	private final StateUsageElements pStateUsage;
	private final StateFlowUsageElements pStateFlowUsage;
	private final StateRefUsageElements pStateRefUsage;
	private final ExhibitStateUsageElements pExhibitStateUsage;
	private final TransitionUsageKeywordElements pTransitionUsageKeyword;
	private final TransitionUsageElements pTransitionUsage;
	private final TargetTransitionUsageElements pTargetTransitionUsage;
	private final EmptyImportElements pEmptyImport;
	private final TransitionSourceMemberElements pTransitionSourceMember;
	private final TriggerActionMemberElements pTriggerActionMember;
	private final TriggerFeatureKindElements eTriggerFeatureKind;
	private final TriggerActionElements pTriggerAction;
	private final GuardExpressionMemberElements pGuardExpressionMember;
	private final GuardFeatureKindElements eGuardFeatureKind;
	private final EffectBehaviorMemberElements pEffectBehaviorMember;
	private final EffectFeatureKindElements eEffectFeatureKind;
	private final EffectBehaviorUsageElements pEffectBehaviorUsage;
	private final TransitionSuccessionMemberElements pTransitionSuccessionMember;
	private final TransitionSuccessionElements pTransitionSuccession;
	private final CalculationKeywordElements pCalculationKeyword;
	private final CalculationDefKeywordElements pCalculationDefKeyword;
	private final CalculationDefinitionElements pCalculationDefinition;
	private final CalculationDeclarationElements pCalculationDeclaration;
	private final ReturnParameterPartElements pReturnParameterPart;
	private final ReturnParameterMemberElements pReturnParameterMember;
	private final CalculationBodyElements pCalculationBody;
	private final CalculationBodyItemElements pCalculationBodyItem;
	private final ReturnParameterFlowUsageMemberElements pReturnParameterFlowUsageMember;
	private final ResultExpressionMemberElements pResultExpressionMember;
	private final CalculationUsageKeywordElements pCalculationUsageKeyword;
	private final CalculationUsageElements pCalculationUsage;
	private final CalculationFlowUsageElements pCalculationFlowUsage;
	private final CalculationRefUsageElements pCalculationRefUsage;
	private final CalculationUsageDeclarationElements pCalculationUsageDeclaration;
	private final CalculationUsageParameterPartElements pCalculationUsageParameterPart;
	private final CalculationReturnParameterPartElements pCalculationReturnParameterPart;
	private final CalculationReturnParameterMemberElements pCalculationReturnParameterMember;
	private final ConstraintKeywordElements pConstraintKeyword;
	private final ConstraintDefKeywordElements pConstraintDefKeyword;
	private final ConstraintDefinitionElements pConstraintDefinition;
	private final ConstraintDeclarationElements pConstraintDeclaration;
	private final EmptyReturnParameterPartElements pEmptyReturnParameterPart;
	private final EmptyReturnParameterMemberElements pEmptyReturnParameterMember;
	private final ConstraintUsageKeywordElements pConstraintUsageKeyword;
	private final ConstraintUsageElements pConstraintUsage;
	private final ConstraintFlowUsageElements pConstraintFlowUsage;
	private final ConstraintRefUsageElements pConstraintRefUsage;
	private final AssertConstraintUsageElements pAssertConstraintUsage;
	private final InvariantPartElements pInvariantPart;
	private final TrueLiteralMemberElements pTrueLiteralMember;
	private final TrueLiteralExpressionElements pTrueLiteralExpression;
	private final RequirementKeywordElements pRequirementKeyword;
	private final RequirementDefKeywordElements pRequirementDefKeyword;
	private final RequirementDefinitionElements pRequirementDefinition;
	private final RequirementBodyElements pRequirementBody;
	private final RequirementBodyItemElements pRequirementBodyItem;
	private final SubjectMemberElements pSubjectMember;
	private final SubjectUsageElements pSubjectUsage;
	private final RequirementConstraintMemberElements pRequirementConstraintMember;
	private final RequirementConstraintKindElements eRequirementConstraintKind;
	private final RequirementConstraintUsageElements pRequirementConstraintUsage;
	private final RequirementUsageKeywordElements pRequirementUsageKeyword;
	private final RequirementUsageElements pRequirementUsage;
	private final RequirementFlowUsageElements pRequirementFlowUsage;
	private final RequirementRefUsageElements pRequirementRefUsage;
	private final SatisfyRequirementUsageElements pSatisfyRequirementUsage;
	private final SatisfactionConnectorMemberElements pSatisfactionConnectorMember;
	private final SatisfactionConnectorElements pSatisfactionConnector;
	private final CaseKeywordElements pCaseKeyword;
	private final CaseDefKeywordElements pCaseDefKeyword;
	private final CaseDefinitionElements pCaseDefinition;
	private final CaseBodyElements pCaseBody;
	private final CaseBodyItemElements pCaseBodyItem;
	private final ObjectiveMemberElements pObjectiveMember;
	private final ObjectiveRequirementUsageElements pObjectiveRequirementUsage;
	private final CaseUsageKeywordElements pCaseUsageKeyword;
	private final CaseUsageElements pCaseUsage;
	private final CaseFlowUsageElements pCaseFlowUsage;
	private final CaseRefUsageElements pCaseRefUsage;
	private final AnalysisCaseKeywordElements pAnalysisCaseKeyword;
	private final AnalysisCaseDefKeywordElements pAnalysisCaseDefKeyword;
	private final AnalysisCaseUsageKeywordElements pAnalysisCaseUsageKeyword;
	private final AnalysisCaseDefinitionElements pAnalysisCaseDefinition;
	private final AnalysisCaseUsageElements pAnalysisCaseUsage;
	private final AnalysisCaseFlowUsageElements pAnalysisCaseFlowUsage;
	private final AnalysisCaseRefUsageElements pAnalysisCaseRefUsage;
	private final VerificationCaseKeywordElements pVerificationCaseKeyword;
	private final VerificationCaseDefKeywordElements pVerificationCaseDefKeyword;
	private final VerificationCaseUsageKeywordElements pVerificationCaseUsageKeyword;
	private final VerificationCaseDefinitionElements pVerificationCaseDefinition;
	private final VerificationCaseUsageElements pVerificationCaseUsage;
	private final VerificationCaseFlowUsageElements pVerificationCaseFlowUsage;
	private final VerificationCaseRefUsageElements pVerificationCaseRefUsage;
	private final ViewKeywordElements pViewKeyword;
	private final ViewDefKeywordElements pViewDefKeyword;
	private final ViewDefinitionElements pViewDefinition;
	private final ViewUsageKeywordElements pViewUsageKeyword;
	private final ViewUsageElements pViewUsage;
	private final ViewFlowUsageElements pViewFlowUsage;
	private final ViewRefUsageElements pViewRefUsage;
	private final ViewBodyElements pViewBody;
	private final ViewBodyItemElements pViewBodyItem;
	private final ExposeElements pExpose;
	private final ViewpointKeywordElements pViewpointKeyword;
	private final ViewpointDefKeywordElements pViewpointDefKeyword;
	private final ViewpointUsageKeywordElements pViewpointUsageKeyword;
	private final ViewpointDefinitionElements pViewpointDefinition;
	private final ViewpointUsageElements pViewpointUsage;
	private final ViewpointFlowUsageElements pViewpointFlowUsage;
	private final ViewpointRefUsageElements pViewpointRefUsage;
	private final RenderingKeywordElements pRenderingKeyword;
	private final RenderingDefKeywordElements pRenderingDefKeyword;
	private final RenderingDefinitionElements pRenderingDefinition;
	private final RenderingUsageKeywordElements pRenderingUsageKeyword;
	private final RenderingUsageElements pRenderingUsage;
	private final RenderingFlowUsageElements pRenderingFlowUsage;
	private final RenderingRefUsageElements pRenderingRefUsage;
	private final OwnedExpressionMemberElements pOwnedExpressionMember;
	private final OwnedExpressionElements pOwnedExpression;
	private final ConditionalExpressionElements pConditionalExpression;
	private final ConditionalTestOperatorElements pConditionalTestOperator;
	private final NullCoalescingExpressionElements pNullCoalescingExpression;
	private final NullCoalescingOperatorElements pNullCoalescingOperator;
	private final ConditionalOrExpressionElements pConditionalOrExpression;
	private final ConditionalOrOperatorElements pConditionalOrOperator;
	private final ConditionalAndExpressionElements pConditionalAndExpression;
	private final ConditionalAndOperatorElements pConditionalAndOperator;
	private final OrExpressionElements pOrExpression;
	private final OrOperatorElements pOrOperator;
	private final XorExpressionElements pXorExpression;
	private final XorOperatorElements pXorOperator;
	private final AndExpressionElements pAndExpression;
	private final AndOperatorElements pAndOperator;
	private final EqualityExpressionElements pEqualityExpression;
	private final EqualityOperatorElements pEqualityOperator;
	private final ClassificationExpressionElements pClassificationExpression;
	private final ClassificationOperatorElements pClassificationOperator;
	private final TypeReferenceMemberElements pTypeReferenceMember;
	private final TypeReferenceElements pTypeReference;
	private final RelationalExpressionElements pRelationalExpression;
	private final RelationalOperatorElements pRelationalOperator;
	private final AdditiveExpressionElements pAdditiveExpression;
	private final AdditiveOperatorElements pAdditiveOperator;
	private final MultiplicativeExpressionElements pMultiplicativeExpression;
	private final MultiplicativeOperatorElements pMultiplicativeOperator;
	private final ExponentiationExpressionElements pExponentiationExpression;
	private final ExponentiationOperatorElements pExponentiationOperator;
	private final UnitsExpressionElements pUnitsExpression;
	private final UnaryExpressionElements pUnaryExpression;
	private final UnaryOperatorElements pUnaryOperator;
	private final ExtentExpressionElements pExtentExpression;
	private final SequenceExpressionElements pSequenceExpression;
	private final BodyExpressionMemberElements pBodyExpressionMember;
	private final BodyExpressionElements pBodyExpression;
	private final BodyParameterMemberElements pBodyParameterMember;
	private final BodyParameterElements pBodyParameter;
	private final ExpressionTypingElements pExpressionTyping;
	private final SequenceConstructionExpressionElements pSequenceConstructionExpression;
	private final SequenceElementListElements pSequenceElementList;
	private final BaseExpressionElements pBaseExpression;
	private final NullExpressionElements pNullExpression;
	private final FeatureReferenceExpressionElements pFeatureReferenceExpression;
	private final FeatureReferenceMemberElements pFeatureReferenceMember;
	private final FeatureReferenceElements pFeatureReference;
	private final InvocationExpressionElements pInvocationExpression;
	private final ArgumentListElements pArgumentList;
	private final PositionalArgumentListElements pPositionalArgumentList;
	private final NamedArgumentListElements pNamedArgumentList;
	private final NamedExpressionMemberElements pNamedExpressionMember;
	private final ExtentExpression_DeprecatedElements pExtentExpression_Deprecated;
	private final LiteralExpressionElements pLiteralExpression;
	private final LiteralBooleanElements pLiteralBoolean;
	private final BooleanValueElements pBooleanValue;
	private final LiteralStringElements pLiteralString;
	private final LiteralIntegerElements pLiteralInteger;
	private final LiteralRealElements pLiteralReal;
	private final RealValueElements pRealValue;
	private final LiteralUnboundedElements pLiteralUnbounded;
	private final LiteralUnlimitedNaturalElements pLiteralUnlimitedNatural;
	private final QueryPathExpressionElements pQueryPathExpression;
	private final QueryNameExpressionElements pQueryNameExpression;
	private final QueryHeadExpressionElements pQueryHeadExpression;
	private final NameElements pName;
	private final QualifiedNameElements pQualifiedName;
	private final ColonQualifiedNameElements pColonQualifiedName;
	private final DotQualifiedNameElements pDotQualifiedName;
	private final TerminalRule tDECIMAL_VALUE;
	private final TerminalRule tEXP_VALUE;
	private final TerminalRule tID;
	private final TerminalRule tUNRESTRICTED_NAME;
	private final TerminalRule tSTRING_VALUE;
	private final TerminalRule tREGULAR_COMMENT;
	private final TerminalRule tDOCUMENTATION_COMMENT;
	private final TerminalRule tML_NOTE;
	private final TerminalRule tSL_NOTE;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public SysMLGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pRootPackage = new RootPackageElements();
		this.pIdentification = new IdentificationElements();
		this.pComment = new CommentElements();
		this.pAnnotation = new AnnotationElements();
		this.pEmptyAnnotation = new EmptyAnnotationElements();
		this.pOwnedDocumentation = new OwnedDocumentationElements();
		this.pDocumentationComment = new DocumentationCommentElements();
		this.pPrefixDocumentation = new PrefixDocumentationElements();
		this.pPrefixDocumentationComment = new PrefixDocumentationCommentElements();
		this.pTextualRepresentation = new TextualRepresentationElements();
		this.pPackage = new PackageElements();
		this.pPackageDeclaration = new PackageDeclarationElements();
		this.pPackageBody = new PackageBodyElements();
		this.pPackageBodyElement = new PackageBodyElementElements();
		this.pPackageMember = new PackageMemberElements();
		this.pNonUsagePackageMember = new NonUsagePackageMemberElements();
		this.pUsagePackageMember = new UsagePackageMemberElements();
		this.pPackageImport = new PackageImportElements();
		this.eBasicVisibilityIndicator = new BasicVisibilityIndicatorElements();
		this.pDefinitionElement = new DefinitionElementElements();
		this.pUsageElement = new UsageElementElements();
		this.pTypeBody = new TypeBodyElements();
		this.pNonFeatureTypeMember = new NonFeatureTypeMemberElements();
		this.pFeatureTypeMember = new FeatureTypeMemberElements();
		this.pTypeMemberPrefix = new TypeMemberPrefixElements();
		this.eVisibilityIndicator = new VisibilityIndicatorElements();
		this.pFeatureMember = new FeatureMemberElements();
		this.pEndFeatureMember = new EndFeatureMemberElements();
		this.eFeatureDirection = new FeatureDirectionElements();
		this.pFeatureElement = new FeatureElementElements();
		this.pSuperclassingPart = new SuperclassingPartElements();
		this.pSpecializesKeyword = new SpecializesKeywordElements();
		this.pOwnedSuperclassing = new OwnedSuperclassingElements();
		this.pFeatureDeclaration = new FeatureDeclarationElements();
		this.pFeatureSpecializationPart = new FeatureSpecializationPartElements();
		this.pMultiplicityPart = new MultiplicityPartElements();
		this.pFeatureSpecialization = new FeatureSpecializationElements();
		this.pTypings = new TypingsElements();
		this.pTypedBy = new TypedByElements();
		this.pDefinedByKeyword = new DefinedByKeywordElements();
		this.pSubsettings = new SubsettingsElements();
		this.pSubsets = new SubsetsElements();
		this.pSubsetsKeyword = new SubsetsKeywordElements();
		this.pRedefinitions = new RedefinitionsElements();
		this.pRedefines = new RedefinesElements();
		this.pRedefinesKeyword = new RedefinesKeywordElements();
		this.pOwnedFeatureTyping = new OwnedFeatureTypingElements();
		this.pOwnedSubsetting = new OwnedSubsettingElements();
		this.pOwnedRedefinition = new OwnedRedefinitionElements();
		this.pMultiplicityMember = new MultiplicityMemberElements();
		this.pMultiplicity = new MultiplicityElements();
		this.pLiteralIntegerMember = new LiteralIntegerMemberElements();
		this.pLiteralUnlimitedNaturalMember = new LiteralUnlimitedNaturalMemberElements();
		this.pConnectorEndMember = new ConnectorEndMemberElements();
		this.pConnectorEnd = new ConnectorEndElements();
		this.pBindingKeyword = new BindingKeywordElements();
		this.pBindingConnector = new BindingConnectorElements();
		this.pBindingConnectorDeclaration = new BindingConnectorDeclarationElements();
		this.pSuccessionKeyword = new SuccessionKeywordElements();
		this.pSuccession = new SuccessionElements();
		this.pSuccessionDeclaration = new SuccessionDeclarationElements();
		this.pItemFlowKeyword = new ItemFlowKeywordElements();
		this.pItemFlow = new ItemFlowElements();
		this.pSuccessionItemFlowKeyword = new SuccessionItemFlowKeywordElements();
		this.pSuccessionItemFlow = new SuccessionItemFlowElements();
		this.pItemFlowDeclaration = new ItemFlowDeclarationElements();
		this.pItemFeatureMember = new ItemFeatureMemberElements();
		this.pItemFeature = new ItemFeatureElements();
		this.pEmptyItemFeature = new EmptyItemFeatureElements();
		this.pItemFlowEndMember = new ItemFlowEndMemberElements();
		this.pItemFlowEnd = new ItemFlowEndElements();
		this.pEmptyItemFeatureMember = new EmptyItemFeatureMemberElements();
		this.pEmptyItemFlowEnd = new EmptyItemFlowEndElements();
		this.pItemFlowFeatureMember = new ItemFlowFeatureMemberElements();
		this.pItemFlowFeature = new ItemFlowFeatureElements();
		this.pEmptyItemFlowEndMember = new EmptyItemFlowEndMemberElements();
		this.pEmptyItemFlowFeatureMember = new EmptyItemFlowFeatureMemberElements();
		this.pEmptyItemFlowFeature = new EmptyItemFlowFeatureElements();
		this.pEmptyRedefinition = new EmptyRedefinitionElements();
		this.pDependency = new DependencyElements();
		this.pDefinitionPrefix = new DefinitionPrefixElements();
		this.pDefinition = new DefinitionElements();
		this.pDefinitionDeclaration = new DefinitionDeclarationElements();
		this.pDefinitionBody = new DefinitionBodyElements();
		this.pDefinitionBodyItem = new DefinitionBodyItemElements();
		this.pNestedDefinitionMember = new NestedDefinitionMemberElements();
		this.pVariantUsageMember = new VariantUsageMemberElements();
		this.pNestedUsageMember = new NestedUsageMemberElements();
		this.pStructureUsageMember = new StructureUsageMemberElements();
		this.pBehaviorUsageMember = new BehaviorUsageMemberElements();
		this.pIndividualUsageMember = new IndividualUsageMemberElements();
		this.pFlowUsageMember = new FlowUsageMemberElements();
		this.pDefinitionMemberPrefix = new DefinitionMemberPrefixElements();
		this.pUsagePrefix = new UsagePrefixElements();
		this.pUsage = new UsageElements();
		this.pUsageDeclaration = new UsageDeclarationElements();
		this.pUsageCompletion = new UsageCompletionElements();
		this.pUsageBody = new UsageBodyElements();
		this.pValuePart = new ValuePartElements();
		this.pValueOrFlowPart = new ValueOrFlowPartElements();
		this.pFeatureValue = new FeatureValueElements();
		this.pSourceItemFlowMember = new SourceItemFlowMemberElements();
		this.pSourceItemFlow = new SourceItemFlowElements();
		this.pReferenceKeyword = new ReferenceKeywordElements();
		this.pReferenceUsageKeyword = new ReferenceUsageKeywordElements();
		this.pReferenceUsage = new ReferenceUsageElements();
		this.pReferenceEndUsage = new ReferenceEndUsageElements();
		this.pReferenceVariantUsage = new ReferenceVariantUsageElements();
		this.pStructureUsageElement = new StructureUsageElementElements();
		this.pIndividualUsageElement = new IndividualUsageElementElements();
		this.pBehaviorUsageElement = new BehaviorUsageElementElements();
		this.pVariantUsageElement = new VariantUsageElementElements();
		this.pFlowUsageElement = new FlowUsageElementElements();
		this.pAttributeKeyword = new AttributeKeywordElements();
		this.pAttributeDefKeyword = new AttributeDefKeywordElements();
		this.pAttributeUsageKeyword = new AttributeUsageKeywordElements();
		this.pAttributeDefinition = new AttributeDefinitionElements();
		this.pAttributeUsage = new AttributeUsageElements();
		this.pAttributeVariantUsage = new AttributeVariantUsageElements();
		this.pItemKeyword = new ItemKeywordElements();
		this.pItemDefKeyword = new ItemDefKeywordElements();
		this.pItemUsageKeyword = new ItemUsageKeywordElements();
		this.pItemDefinition = new ItemDefinitionElements();
		this.pItemUsage = new ItemUsageElements();
		this.pItemFlowUsage = new ItemFlowUsageElements();
		this.pItemRefUsage = new ItemRefUsageElements();
		this.pPartKeyword = new PartKeywordElements();
		this.pPartDefKeyword = new PartDefKeywordElements();
		this.pPartUsageKeyword = new PartUsageKeywordElements();
		this.pPartDefinition = new PartDefinitionElements();
		this.pPartUsage = new PartUsageElements();
		this.pPartFlowUsage = new PartFlowUsageElements();
		this.pPartRefUsage = new PartRefUsageElements();
		this.pPortKeyword = new PortKeywordElements();
		this.pPortDefKeyword = new PortDefKeywordElements();
		this.pPortDefinition = new PortDefinitionElements();
		this.pConjugatedPortDefinitionMember = new ConjugatedPortDefinitionMemberElements();
		this.pConjugatedPortDefinition = new ConjugatedPortDefinitionElements();
		this.pPortConjugation = new PortConjugationElements();
		this.pPortUsageKeyword = new PortUsageKeywordElements();
		this.pPortUsage = new PortUsageElements();
		this.pPortEndUsage = new PortEndUsageElements();
		this.pPortUsageDeclaration = new PortUsageDeclarationElements();
		this.pPortSpecializationPart = new PortSpecializationPartElements();
		this.pPortSpecialization = new PortSpecializationElements();
		this.pPortTypings = new PortTypingsElements();
		this.pPortTyping = new PortTypingElements();
		this.pConjugatedPortTyping = new ConjugatedPortTypingElements();
		this.pConnectionKeyword = new ConnectionKeywordElements();
		this.pConnectionDefKeyword = new ConnectionDefKeywordElements();
		this.pConnectionDefinition = new ConnectionDefinitionElements();
		this.pConnectionBody = new ConnectionBodyElements();
		this.pConnectionUsageMember = new ConnectionUsageMemberElements();
		this.pConnectionEndMember = new ConnectionEndMemberElements();
		this.pConnectionEndElement = new ConnectionEndElementElements();
		this.pConnectorKeyword = new ConnectorKeywordElements();
		this.pConnector = new ConnectorElements();
		this.pConnectionUsageKeyword = new ConnectionUsageKeywordElements();
		this.pConnectionUsage = new ConnectionUsageElements();
		this.pConnectorPart = new ConnectorPartElements();
		this.pBinaryConnectorPart = new BinaryConnectorPartElements();
		this.pNaryConnectorPart = new NaryConnectorPartElements();
		this.pEmptySourceEndMember = new EmptySourceEndMemberElements();
		this.pEmptySourceEnd = new EmptySourceEndElements();
		this.pInterfaceKeyword = new InterfaceKeywordElements();
		this.pInterfaceDefKeyword = new InterfaceDefKeywordElements();
		this.pInterfaceDefinition = new InterfaceDefinitionElements();
		this.pInterfaceDefDeclaration = new InterfaceDefDeclarationElements();
		this.pInterfaceDefBody = new InterfaceDefBodyElements();
		this.pInterfaceUsageMember = new InterfaceUsageMemberElements();
		this.pInterfaceEndMember = new InterfaceEndMemberElements();
		this.pInterfaceUsageKeyword = new InterfaceUsageKeywordElements();
		this.pInterfaceUsage = new InterfaceUsageElements();
		this.pInterfaceUsageDeclaration = new InterfaceUsageDeclarationElements();
		this.pIndividualKeyword = new IndividualKeywordElements();
		this.pIndividualDefKeyword = new IndividualDefKeywordElements();
		this.pIndividualDefinition = new IndividualDefinitionElements();
		this.pLifeClassMembership = new LifeClassMembershipElements();
		this.pLifeClass = new LifeClassElements();
		this.pIndividualUsageKeyword = new IndividualUsageKeywordElements();
		this.pTimeSliceKeyword = new TimeSliceKeywordElements();
		this.pSnapshotKeyword = new SnapshotKeywordElements();
		this.pIndividualUsage = new IndividualUsageElements();
		this.pIndividualRefUsage = new IndividualRefUsageElements();
		this.pTimeSliceUsage = new TimeSliceUsageElements();
		this.pTimeSliceRefUsage = new TimeSliceRefUsageElements();
		this.pTimeSliceFeatureMember = new TimeSliceFeatureMemberElements();
		this.pTimeSliceFeature = new TimeSliceFeatureElements();
		this.pSnapshotUsage = new SnapshotUsageElements();
		this.pSnapshotRefUsage = new SnapshotRefUsageElements();
		this.pSnapshotFeatureMember = new SnapshotFeatureMemberElements();
		this.pSnapshotFeature = new SnapshotFeatureElements();
		this.pEmptySuccessionMember = new EmptySuccessionMemberElements();
		this.pEmptySuccession = new EmptySuccessionElements();
		this.pMultiplicitySourceEndMember = new MultiplicitySourceEndMemberElements();
		this.pMultiplicitySourceEnd = new MultiplicitySourceEndElements();
		this.pEmptyTargetEndMember = new EmptyTargetEndMemberElements();
		this.pEmptyTargetEnd = new EmptyTargetEndElements();
		this.pActionKeyword = new ActionKeywordElements();
		this.pActionDefKeyword = new ActionDefKeywordElements();
		this.pActionDefinition = new ActionDefinitionElements();
		this.pActionDeclaration = new ActionDeclarationElements();
		this.pParameterList = new ParameterListElements();
		this.pParameterMember = new ParameterMemberElements();
		this.pActionBody = new ActionBodyElements();
		this.pActionBodyItem = new ActionBodyItemElements();
		this.pParameterFlowUsageMember = new ParameterFlowUsageMemberElements();
		this.pInitialNodeMember = new InitialNodeMemberElements();
		this.pActionNodeMember = new ActionNodeMemberElements();
		this.pTargetSuccessionMember = new TargetSuccessionMemberElements();
		this.pGuardedSuccessionMember = new GuardedSuccessionMemberElements();
		this.pParameter = new ParameterElements();
		this.pParameterDeclaration = new ParameterDeclarationElements();
		this.pParameterSpecializationPart = new ParameterSpecializationPartElements();
		this.pParameterSpecialization = new ParameterSpecializationElements();
		this.pActionUsageKeyword = new ActionUsageKeywordElements();
		this.pActionUsage = new ActionUsageElements();
		this.pActionFlowUsage = new ActionFlowUsageElements();
		this.pActionRefUsage = new ActionRefUsageElements();
		this.pPerformActionUsage = new PerformActionUsageElements();
		this.pPerformActionUsageDeclaration = new PerformActionUsageDeclarationElements();
		this.pActionUsageDeclaration = new ActionUsageDeclarationElements();
		this.pActionUsageParameterList = new ActionUsageParameterListElements();
		this.pActionUsageParameterMember = new ActionUsageParameterMemberElements();
		this.pActionUsageParameter = new ActionUsageParameterElements();
		this.pActionNode = new ActionNodeElements();
		this.pAcceptNode = new AcceptNodeElements();
		this.pAcceptNodeDeclaration = new AcceptNodeDeclarationElements();
		this.pSendNode = new SendNodeElements();
		this.pSendNodeDeclaration = new SendNodeDeclarationElements();
		this.pControlNode = new ControlNodeElements();
		this.pMergeNode = new MergeNodeElements();
		this.pDecisionNode = new DecisionNodeElements();
		this.pJoinNode = new JoinNodeElements();
		this.pForkNode = new ForkNodeElements();
		this.pEmptyParameterMember = new EmptyParameterMemberElements();
		this.pEmptyParameter = new EmptyParameterElements();
		this.pActionTargetSuccession = new ActionTargetSuccessionElements();
		this.pTargetSuccession = new TargetSuccessionElements();
		this.pGuardedTargetSuccession = new GuardedTargetSuccessionElements();
		this.pDefaultTargetSuccession = new DefaultTargetSuccessionElements();
		this.pGuardedSuccession = new GuardedSuccessionElements();
		this.pStateKeyword = new StateKeywordElements();
		this.pStateDefKeyword = new StateDefKeywordElements();
		this.pStateDefinition = new StateDefinitionElements();
		this.pStateBody = new StateBodyElements();
		this.pStateBodyPart = new StateBodyPartElements();
		this.pStateDefBodyItem = new StateDefBodyItemElements();
		this.pEntryActionMember = new EntryActionMemberElements();
		this.pEntryActionKind = new EntryActionKindElements();
		this.pDoActionMember = new DoActionMemberElements();
		this.pDoActionKind = new DoActionKindElements();
		this.pExitActionMember = new ExitActionMemberElements();
		this.pExitActionKind = new ExitActionKindElements();
		this.pEntryTransitionMember = new EntryTransitionMemberElements();
		this.pStateActionUsage = new StateActionUsageElements();
		this.pEmptyActionUsage = new EmptyActionUsageElements();
		this.pPerformedActionUsage = new PerformedActionUsageElements();
		this.pTransitionUsageMember = new TransitionUsageMemberElements();
		this.pTargetTransitionUsageMember = new TargetTransitionUsageMemberElements();
		this.pStateUsageKeyword = new StateUsageKeywordElements();
		this.pStateUsage = new StateUsageElements();
		this.pStateFlowUsage = new StateFlowUsageElements();
		this.pStateRefUsage = new StateRefUsageElements();
		this.pExhibitStateUsage = new ExhibitStateUsageElements();
		this.pTransitionUsageKeyword = new TransitionUsageKeywordElements();
		this.pTransitionUsage = new TransitionUsageElements();
		this.pTargetTransitionUsage = new TargetTransitionUsageElements();
		this.pEmptyImport = new EmptyImportElements();
		this.pTransitionSourceMember = new TransitionSourceMemberElements();
		this.pTriggerActionMember = new TriggerActionMemberElements();
		this.eTriggerFeatureKind = new TriggerFeatureKindElements();
		this.pTriggerAction = new TriggerActionElements();
		this.pGuardExpressionMember = new GuardExpressionMemberElements();
		this.eGuardFeatureKind = new GuardFeatureKindElements();
		this.pEffectBehaviorMember = new EffectBehaviorMemberElements();
		this.eEffectFeatureKind = new EffectFeatureKindElements();
		this.pEffectBehaviorUsage = new EffectBehaviorUsageElements();
		this.pTransitionSuccessionMember = new TransitionSuccessionMemberElements();
		this.pTransitionSuccession = new TransitionSuccessionElements();
		this.pCalculationKeyword = new CalculationKeywordElements();
		this.pCalculationDefKeyword = new CalculationDefKeywordElements();
		this.pCalculationDefinition = new CalculationDefinitionElements();
		this.pCalculationDeclaration = new CalculationDeclarationElements();
		this.pReturnParameterPart = new ReturnParameterPartElements();
		this.pReturnParameterMember = new ReturnParameterMemberElements();
		this.pCalculationBody = new CalculationBodyElements();
		this.pCalculationBodyItem = new CalculationBodyItemElements();
		this.pReturnParameterFlowUsageMember = new ReturnParameterFlowUsageMemberElements();
		this.pResultExpressionMember = new ResultExpressionMemberElements();
		this.pCalculationUsageKeyword = new CalculationUsageKeywordElements();
		this.pCalculationUsage = new CalculationUsageElements();
		this.pCalculationFlowUsage = new CalculationFlowUsageElements();
		this.pCalculationRefUsage = new CalculationRefUsageElements();
		this.pCalculationUsageDeclaration = new CalculationUsageDeclarationElements();
		this.pCalculationUsageParameterPart = new CalculationUsageParameterPartElements();
		this.pCalculationReturnParameterPart = new CalculationReturnParameterPartElements();
		this.pCalculationReturnParameterMember = new CalculationReturnParameterMemberElements();
		this.pConstraintKeyword = new ConstraintKeywordElements();
		this.pConstraintDefKeyword = new ConstraintDefKeywordElements();
		this.pConstraintDefinition = new ConstraintDefinitionElements();
		this.pConstraintDeclaration = new ConstraintDeclarationElements();
		this.pEmptyReturnParameterPart = new EmptyReturnParameterPartElements();
		this.pEmptyReturnParameterMember = new EmptyReturnParameterMemberElements();
		this.pConstraintUsageKeyword = new ConstraintUsageKeywordElements();
		this.pConstraintUsage = new ConstraintUsageElements();
		this.pConstraintFlowUsage = new ConstraintFlowUsageElements();
		this.pConstraintRefUsage = new ConstraintRefUsageElements();
		this.pAssertConstraintUsage = new AssertConstraintUsageElements();
		this.pInvariantPart = new InvariantPartElements();
		this.pTrueLiteralMember = new TrueLiteralMemberElements();
		this.pTrueLiteralExpression = new TrueLiteralExpressionElements();
		this.pRequirementKeyword = new RequirementKeywordElements();
		this.pRequirementDefKeyword = new RequirementDefKeywordElements();
		this.pRequirementDefinition = new RequirementDefinitionElements();
		this.pRequirementBody = new RequirementBodyElements();
		this.pRequirementBodyItem = new RequirementBodyItemElements();
		this.pSubjectMember = new SubjectMemberElements();
		this.pSubjectUsage = new SubjectUsageElements();
		this.pRequirementConstraintMember = new RequirementConstraintMemberElements();
		this.eRequirementConstraintKind = new RequirementConstraintKindElements();
		this.pRequirementConstraintUsage = new RequirementConstraintUsageElements();
		this.pRequirementUsageKeyword = new RequirementUsageKeywordElements();
		this.pRequirementUsage = new RequirementUsageElements();
		this.pRequirementFlowUsage = new RequirementFlowUsageElements();
		this.pRequirementRefUsage = new RequirementRefUsageElements();
		this.pSatisfyRequirementUsage = new SatisfyRequirementUsageElements();
		this.pSatisfactionConnectorMember = new SatisfactionConnectorMemberElements();
		this.pSatisfactionConnector = new SatisfactionConnectorElements();
		this.pCaseKeyword = new CaseKeywordElements();
		this.pCaseDefKeyword = new CaseDefKeywordElements();
		this.pCaseDefinition = new CaseDefinitionElements();
		this.pCaseBody = new CaseBodyElements();
		this.pCaseBodyItem = new CaseBodyItemElements();
		this.pObjectiveMember = new ObjectiveMemberElements();
		this.pObjectiveRequirementUsage = new ObjectiveRequirementUsageElements();
		this.pCaseUsageKeyword = new CaseUsageKeywordElements();
		this.pCaseUsage = new CaseUsageElements();
		this.pCaseFlowUsage = new CaseFlowUsageElements();
		this.pCaseRefUsage = new CaseRefUsageElements();
		this.pAnalysisCaseKeyword = new AnalysisCaseKeywordElements();
		this.pAnalysisCaseDefKeyword = new AnalysisCaseDefKeywordElements();
		this.pAnalysisCaseUsageKeyword = new AnalysisCaseUsageKeywordElements();
		this.pAnalysisCaseDefinition = new AnalysisCaseDefinitionElements();
		this.pAnalysisCaseUsage = new AnalysisCaseUsageElements();
		this.pAnalysisCaseFlowUsage = new AnalysisCaseFlowUsageElements();
		this.pAnalysisCaseRefUsage = new AnalysisCaseRefUsageElements();
		this.pVerificationCaseKeyword = new VerificationCaseKeywordElements();
		this.pVerificationCaseDefKeyword = new VerificationCaseDefKeywordElements();
		this.pVerificationCaseUsageKeyword = new VerificationCaseUsageKeywordElements();
		this.pVerificationCaseDefinition = new VerificationCaseDefinitionElements();
		this.pVerificationCaseUsage = new VerificationCaseUsageElements();
		this.pVerificationCaseFlowUsage = new VerificationCaseFlowUsageElements();
		this.pVerificationCaseRefUsage = new VerificationCaseRefUsageElements();
		this.pViewKeyword = new ViewKeywordElements();
		this.pViewDefKeyword = new ViewDefKeywordElements();
		this.pViewDefinition = new ViewDefinitionElements();
		this.pViewUsageKeyword = new ViewUsageKeywordElements();
		this.pViewUsage = new ViewUsageElements();
		this.pViewFlowUsage = new ViewFlowUsageElements();
		this.pViewRefUsage = new ViewRefUsageElements();
		this.pViewBody = new ViewBodyElements();
		this.pViewBodyItem = new ViewBodyItemElements();
		this.pExpose = new ExposeElements();
		this.pViewpointKeyword = new ViewpointKeywordElements();
		this.pViewpointDefKeyword = new ViewpointDefKeywordElements();
		this.pViewpointUsageKeyword = new ViewpointUsageKeywordElements();
		this.pViewpointDefinition = new ViewpointDefinitionElements();
		this.pViewpointUsage = new ViewpointUsageElements();
		this.pViewpointFlowUsage = new ViewpointFlowUsageElements();
		this.pViewpointRefUsage = new ViewpointRefUsageElements();
		this.pRenderingKeyword = new RenderingKeywordElements();
		this.pRenderingDefKeyword = new RenderingDefKeywordElements();
		this.pRenderingDefinition = new RenderingDefinitionElements();
		this.pRenderingUsageKeyword = new RenderingUsageKeywordElements();
		this.pRenderingUsage = new RenderingUsageElements();
		this.pRenderingFlowUsage = new RenderingFlowUsageElements();
		this.pRenderingRefUsage = new RenderingRefUsageElements();
		this.pOwnedExpressionMember = new OwnedExpressionMemberElements();
		this.pOwnedExpression = new OwnedExpressionElements();
		this.pConditionalExpression = new ConditionalExpressionElements();
		this.pConditionalTestOperator = new ConditionalTestOperatorElements();
		this.pNullCoalescingExpression = new NullCoalescingExpressionElements();
		this.pNullCoalescingOperator = new NullCoalescingOperatorElements();
		this.pConditionalOrExpression = new ConditionalOrExpressionElements();
		this.pConditionalOrOperator = new ConditionalOrOperatorElements();
		this.pConditionalAndExpression = new ConditionalAndExpressionElements();
		this.pConditionalAndOperator = new ConditionalAndOperatorElements();
		this.pOrExpression = new OrExpressionElements();
		this.pOrOperator = new OrOperatorElements();
		this.pXorExpression = new XorExpressionElements();
		this.pXorOperator = new XorOperatorElements();
		this.pAndExpression = new AndExpressionElements();
		this.pAndOperator = new AndOperatorElements();
		this.pEqualityExpression = new EqualityExpressionElements();
		this.pEqualityOperator = new EqualityOperatorElements();
		this.pClassificationExpression = new ClassificationExpressionElements();
		this.pClassificationOperator = new ClassificationOperatorElements();
		this.pTypeReferenceMember = new TypeReferenceMemberElements();
		this.pTypeReference = new TypeReferenceElements();
		this.pRelationalExpression = new RelationalExpressionElements();
		this.pRelationalOperator = new RelationalOperatorElements();
		this.pAdditiveExpression = new AdditiveExpressionElements();
		this.pAdditiveOperator = new AdditiveOperatorElements();
		this.pMultiplicativeExpression = new MultiplicativeExpressionElements();
		this.pMultiplicativeOperator = new MultiplicativeOperatorElements();
		this.pExponentiationExpression = new ExponentiationExpressionElements();
		this.pExponentiationOperator = new ExponentiationOperatorElements();
		this.pUnitsExpression = new UnitsExpressionElements();
		this.pUnaryExpression = new UnaryExpressionElements();
		this.pUnaryOperator = new UnaryOperatorElements();
		this.pExtentExpression = new ExtentExpressionElements();
		this.pSequenceExpression = new SequenceExpressionElements();
		this.pBodyExpressionMember = new BodyExpressionMemberElements();
		this.pBodyExpression = new BodyExpressionElements();
		this.pBodyParameterMember = new BodyParameterMemberElements();
		this.pBodyParameter = new BodyParameterElements();
		this.pExpressionTyping = new ExpressionTypingElements();
		this.pSequenceConstructionExpression = new SequenceConstructionExpressionElements();
		this.pSequenceElementList = new SequenceElementListElements();
		this.pBaseExpression = new BaseExpressionElements();
		this.pNullExpression = new NullExpressionElements();
		this.pFeatureReferenceExpression = new FeatureReferenceExpressionElements();
		this.pFeatureReferenceMember = new FeatureReferenceMemberElements();
		this.pFeatureReference = new FeatureReferenceElements();
		this.pInvocationExpression = new InvocationExpressionElements();
		this.pArgumentList = new ArgumentListElements();
		this.pPositionalArgumentList = new PositionalArgumentListElements();
		this.pNamedArgumentList = new NamedArgumentListElements();
		this.pNamedExpressionMember = new NamedExpressionMemberElements();
		this.pExtentExpression_Deprecated = new ExtentExpression_DeprecatedElements();
		this.pLiteralExpression = new LiteralExpressionElements();
		this.pLiteralBoolean = new LiteralBooleanElements();
		this.pBooleanValue = new BooleanValueElements();
		this.pLiteralString = new LiteralStringElements();
		this.pLiteralInteger = new LiteralIntegerElements();
		this.pLiteralReal = new LiteralRealElements();
		this.pRealValue = new RealValueElements();
		this.pLiteralUnbounded = new LiteralUnboundedElements();
		this.pLiteralUnlimitedNatural = new LiteralUnlimitedNaturalElements();
		this.pQueryPathExpression = new QueryPathExpressionElements();
		this.pQueryNameExpression = new QueryNameExpressionElements();
		this.pQueryHeadExpression = new QueryHeadExpressionElements();
		this.pName = new NameElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pColonQualifiedName = new ColonQualifiedNameElements();
		this.pDotQualifiedName = new DotQualifiedNameElements();
		this.tDECIMAL_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DECIMAL_VALUE");
		this.tEXP_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EXP_VALUE");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ID");
		this.tUNRESTRICTED_NAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UNRESTRICTED_NAME");
		this.tSTRING_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.STRING_VALUE");
		this.tREGULAR_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.REGULAR_COMMENT");
		this.tDOCUMENTATION_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DOCUMENTATION_COMMENT");
		this.tML_NOTE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ML_NOTE");
		this.tSL_NOTE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SL_NOTE");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.omg.sysml.xtext.SysML".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	///* ROOT PACKAGE */ RootPackage SysML::Package:
	//	{SysML::Package} PackageBodyElement*;
	public RootPackageElements getRootPackageAccess() {
		return pRootPackage;
	}
	
	public ParserRule getRootPackageRule() {
		return getRootPackageAccess().getRule();
	}
	
	///* BASIC ELEMENTS */ fragment Identification returns SysML::Element:
	//	'id' humanId=Name name=Name?
	//	| name=Name;
	public IdentificationElements getIdentificationAccess() {
		return pIdentification;
	}
	
	public ParserRule getIdentificationRule() {
		return getIdentificationAccess().getRule();
	}
	
	///* ANNOTATIONS */ /* Comments */ Comment SysML::Comment:
	//	('comment' Identification? 'about' ownedRelationship_comp+=Annotation (',' ownedRelationship_comp+=Annotation)*
	//	| ('comment' Identification?)? ownedRelationship_comp+=EmptyAnnotation) body=REGULAR_COMMENT;
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}
	
	//Annotation SysML::Annotation:
	//	annotatedElement=[SysML::Element|QualifiedName];
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}
	
	//EmptyAnnotation SysML::Annotation:
	//	{SysML::Annotation};
	public EmptyAnnotationElements getEmptyAnnotationAccess() {
		return pEmptyAnnotation;
	}
	
	public ParserRule getEmptyAnnotationRule() {
		return getEmptyAnnotationAccess().getRule();
	}
	
	///* Documentation */ OwnedDocumentation SysML::Documentation:
	//	documentingComment_comp=DocumentationComment;
	public OwnedDocumentationElements getOwnedDocumentationAccess() {
		return pOwnedDocumentation;
	}
	
	public ParserRule getOwnedDocumentationRule() {
		return getOwnedDocumentationAccess().getRule();
	}
	
	//DocumentationComment SysML::Comment:
	//	'doc' ('id' humanId=Name)? body=REGULAR_COMMENT;
	public DocumentationCommentElements getDocumentationCommentAccess() {
		return pDocumentationComment;
	}
	
	public ParserRule getDocumentationCommentRule() {
		return getDocumentationCommentAccess().getRule();
	}
	
	//PrefixDocumentation SysML::Annotation:
	//	ownedRelatedElement_comp+=PrefixDocumentationComment;
	public PrefixDocumentationElements getPrefixDocumentationAccess() {
		return pPrefixDocumentation;
	}
	
	public ParserRule getPrefixDocumentationRule() {
		return getPrefixDocumentationAccess().getRule();
	}
	
	//PrefixDocumentationComment SysML::Comment:
	//	('doc' ('id' humanId=Name)?)? body=DOCUMENTATION_COMMENT;
	public PrefixDocumentationCommentElements getPrefixDocumentationCommentAccess() {
		return pPrefixDocumentationComment;
	}
	
	public ParserRule getPrefixDocumentationCommentRule() {
		return getPrefixDocumentationCommentAccess().getRule();
	}
	
	///* Textual Representation */ TextualRepresentation SysML::TextualRepresentation:
	//	('rep' Identification? 'about' ownedRelationship_comp+=Annotation
	//	| ('rep' Identification?)? ownedRelationship_comp+=EmptyAnnotation)
	//	'language' language=STRING_VALUE
	//	body=REGULAR_COMMENT;
	public TextualRepresentationElements getTextualRepresentationAccess() {
		return pTextualRepresentation;
	}
	
	public ParserRule getTextualRepresentationRule() {
		return getTextualRepresentationAccess().getRule();
	}
	
	///* PACKAGES */ /* Packages */ Package SysML::Package:
	//	PackageDeclaration PackageBody;
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}
	
	//fragment PackageDeclaration returns SysML::Package:
	//	'package' Identification?;
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return pPackageDeclaration;
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}
	
	//fragment PackageBody returns SysML::Package:
	//	';'
	//	| '{' (documentation_comp+=OwnedDocumentation
	//	| ownedMembership_comp+=PackageMember
	//	| ownedImport_comp+=PackageImport)*
	//	'}';
	public PackageBodyElements getPackageBodyAccess() {
		return pPackageBody;
	}
	
	public ParserRule getPackageBodyRule() {
		return getPackageBodyAccess().getRule();
	}
	
	///* Package Bodies */ fragment PackageBodyElement returns SysML::Package:
	//	documentation_comp+=OwnedDocumentation
	//	| ownedMembership_comp+=PackageMember
	//	| ownedImport_comp+=PackageImport;
	public PackageBodyElementElements getPackageBodyElementAccess() {
		return pPackageBodyElement;
	}
	
	public ParserRule getPackageBodyElementRule() {
		return getPackageBodyElementAccess().getRule();
	}
	
	//PackageMember SysML::Membership:
	//	ownedRelationship_comp+=PrefixDocumentation*
	//	visibility=BasicVisibilityIndicator? (NonUsagePackageMember | UsagePackageMember);
	public PackageMemberElements getPackageMemberAccess() {
		return pPackageMember;
	}
	
	public ParserRule getPackageMemberRule() {
		return getPackageMemberAccess().getRule();
	}
	
	//fragment NonUsagePackageMember returns SysML::Membership:
	//	ownedMemberElement_comp=DefinitionElement
	//	| ('alias' | 'import') memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
	public NonUsagePackageMemberElements getNonUsagePackageMemberAccess() {
		return pNonUsagePackageMember;
	}
	
	public ParserRule getNonUsagePackageMemberRule() {
		return getNonUsagePackageMemberAccess().getRule();
	}
	
	//fragment UsagePackageMember returns SysML::Membership:
	//	ownedMemberElement_comp=UsageElement;
	public UsagePackageMemberElements getUsagePackageMemberAccess() {
		return pUsagePackageMember;
	}
	
	public ParserRule getUsagePackageMemberRule() {
		return getUsagePackageMemberAccess().getRule();
	}
	
	//PackageImport SysML::Import:
	//	ownedRelationship_comp+=PrefixDocumentation*
	//	visibility=BasicVisibilityIndicator?
	//	'import' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
	//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
	//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
	public PackageImportElements getPackageImportAccess() {
		return pPackageImport;
	}
	
	public ParserRule getPackageImportRule() {
		return getPackageImportAccess().getRule();
	}
	
	//enum BasicVisibilityIndicator returns SysML::VisibilityKind:
	//	public | private;
	public BasicVisibilityIndicatorElements getBasicVisibilityIndicatorAccess() {
		return eBasicVisibilityIndicator;
	}
	
	public EnumRule getBasicVisibilityIndicatorRule() {
		return getBasicVisibilityIndicatorAccess().getRule();
	}
	
	///* Package Elements */ DefinitionElement SysML::Element:
	//	Package
	//	| Comment
	//	| TextualRepresentation
	//	| Dependency
	//	| AttributeDefinition
	//	| ItemDefinition
	//	| PartDefinition
	//	| IndividualDefinition
	//	| ConnectionDefinition
	//	| InterfaceDefinition
	//	| PortDefinition
	//	| ActionDefinition
	//	| CalculationDefinition
	//	| StateDefinition
	//	| ConstraintDefinition
	//	| RequirementDefinition
	//	| CaseDefinition
	//	| AnalysisCaseDefinition
	//	| VerificationCaseDefinition
	//	| ViewDefinition
	//	| ViewpointDefinition
	//	| RenderingDefinition
	//	| BindingConnector
	//	| Succession
	//	| ItemFlow
	//	| SuccessionItemFlow
	//	| ConnectionUsage
	//	| Connector;
	public DefinitionElementElements getDefinitionElementAccess() {
		return pDefinitionElement;
	}
	
	public ParserRule getDefinitionElementRule() {
		return getDefinitionElementAccess().getRule();
	}
	
	//UsageElement SysML::Usage:
	//	AttributeUsage
	//	| ItemUsage
	//	| PartUsage
	//	| IndividualUsage
	//	| TimeSliceUsage
	//	| SnapshotUsage
	//	| PortUsage
	//	| InterfaceUsage
	//	| ActionUsage
	//	| CalculationUsage
	//	| StateUsage
	//	| ConstraintUsage
	//	| RequirementUsage
	//	| CaseUsage
	//	| AnalysisCaseUsage
	//	| VerificationCaseUsage
	//	| ViewUsage
	//	| ViewpointUsage
	//	| RenderingUsage;
	public UsageElementElements getUsageElementAccess() {
		return pUsageElement;
	}
	
	public ParserRule getUsageElementRule() {
		return getUsageElementAccess().getRule();
	}
	
	///* TYPES */ fragment TypeBody returns SysML::Type:
	//	';' |
	//	'{' (documentation_comp+=OwnedDocumentation
	//	| ownedMembership_comp+=NonFeatureTypeMember
	//	| ownedFeatureMembership_comp+=FeatureTypeMember
	//	| ownedImport_comp+=PackageImport)* '}';
	public TypeBodyElements getTypeBodyAccess() {
		return pTypeBody;
	}
	
	public ParserRule getTypeBodyRule() {
		return getTypeBodyAccess().getRule();
	}
	
	//NonFeatureTypeMember SysML::Membership:
	//	TypeMemberPrefix NonUsagePackageMember;
	public NonFeatureTypeMemberElements getNonFeatureTypeMemberAccess() {
		return pNonFeatureTypeMember;
	}
	
	public ParserRule getNonFeatureTypeMemberRule() {
		return getNonFeatureTypeMemberAccess().getRule();
	}
	
	//FeatureTypeMember SysML::FeatureMembership:
	//	FeatureMember | EndFeatureMember;
	public FeatureTypeMemberElements getFeatureTypeMemberAccess() {
		return pFeatureTypeMember;
	}
	
	public ParserRule getFeatureTypeMemberRule() {
		return getFeatureTypeMemberAccess().getRule();
	}
	
	//fragment TypeMemberPrefix returns SysML::Membership:
	//	ownedRelationship_comp+=PrefixDocumentation*
	//	visibility=VisibilityIndicator?;
	public TypeMemberPrefixElements getTypeMemberPrefixAccess() {
		return pTypeMemberPrefix;
	}
	
	public ParserRule getTypeMemberPrefixRule() {
		return getTypeMemberPrefixAccess().getRule();
	}
	
	//enum VisibilityIndicator returns SysML::VisibilityKind:
	//	public | private | protected;
	public VisibilityIndicatorElements getVisibilityIndicatorAccess() {
		return eVisibilityIndicator;
	}
	
	public EnumRule getVisibilityIndicatorRule() {
		return getVisibilityIndicatorAccess().getRule();
	}
	
	///* Feature Memberships */ FeatureMember SysML::FeatureMembership:
	//	TypeMemberPrefix direction=FeatureDirection
	//	ownedMemberFeature_comp=FeatureElement;
	public FeatureMemberElements getFeatureMemberAccess() {
		return pFeatureMember;
	}
	
	public ParserRule getFeatureMemberRule() {
		return getFeatureMemberAccess().getRule();
	}
	
	//EndFeatureMember SysML::EndFeatureMembership:
	//	TypeMemberPrefix 'end' direction=FeatureDirection
	//	ownedMemberFeature_comp=FeatureElement;
	public EndFeatureMemberElements getEndFeatureMemberAccess() {
		return pEndFeatureMember;
	}
	
	public ParserRule getEndFeatureMemberRule() {
		return getEndFeatureMemberAccess().getRule();
	}
	
	//enum FeatureDirection returns SysML::FeatureDirectionKind:
	//	in | out | inout;
	public FeatureDirectionElements getFeatureDirectionAccess() {
		return eFeatureDirection;
	}
	
	public EnumRule getFeatureDirectionRule() {
		return getFeatureDirectionAccess().getRule();
	}
	
	//FeatureElement SysML::Feature:
	//	UsageElement;
	public FeatureElementElements getFeatureElementAccess() {
		return pFeatureElement;
	}
	
	public ParserRule getFeatureElementRule() {
		return getFeatureElementAccess().getRule();
	}
	
	///* CLASSIFIERS */ /* Superclassing */ fragment SuperclassingPart returns SysML::Classifier:
	//	SpecializesKeyword ownedRelationship_comp+=OwnedSuperclassing (',' ownedRelationship_comp+=OwnedSuperclassing)*;
	public SuperclassingPartElements getSuperclassingPartAccess() {
		return pSuperclassingPart;
	}
	
	public ParserRule getSuperclassingPartRule() {
		return getSuperclassingPartAccess().getRule();
	}
	
	//SpecializesKeyword:
	//	':>' | 'specializes';
	public SpecializesKeywordElements getSpecializesKeywordAccess() {
		return pSpecializesKeyword;
	}
	
	public ParserRule getSpecializesKeywordRule() {
		return getSpecializesKeywordAccess().getRule();
	}
	
	//OwnedSuperclassing SysML::Superclassing:
	//	superclass=[SysML::Classifier|QualifiedName];
	public OwnedSuperclassingElements getOwnedSuperclassingAccess() {
		return pOwnedSuperclassing;
	}
	
	public ParserRule getOwnedSuperclassingRule() {
		return getOwnedSuperclassingAccess().getRule();
	}
	
	///* FEATURES */ /* Features */ fragment FeatureDeclaration returns SysML::Feature:
	//	Identification FeatureSpecializationPart?
	//	| FeatureSpecializationPart;
	public FeatureDeclarationElements getFeatureDeclarationAccess() {
		return pFeatureDeclaration;
	}
	
	public ParserRule getFeatureDeclarationRule() {
		return getFeatureDeclarationAccess().getRule();
	}
	
	//fragment FeatureSpecializationPart returns SysML::Feature:
	//	-> FeatureSpecialization+ MultiplicityPart? FeatureSpecialization*
	//	| MultiplicityPart FeatureSpecialization*;
	public FeatureSpecializationPartElements getFeatureSpecializationPartAccess() {
		return pFeatureSpecializationPart;
	}
	
	public ParserRule getFeatureSpecializationPartRule() {
		return getFeatureSpecializationPartAccess().getRule();
	}
	
	//fragment MultiplicityPart returns SysML::Feature:
	//	ownedMembership_comp+=MultiplicityMember (isOrdered?='ordered'? & isNonunique?='nonunique'?);
	public MultiplicityPartElements getMultiplicityPartAccess() {
		return pMultiplicityPart;
	}
	
	public ParserRule getMultiplicityPartRule() {
		return getMultiplicityPartAccess().getRule();
	}
	
	//fragment FeatureSpecialization returns SysML::Feature:
	//	Typings | Subsettings | Redefinitions;
	public FeatureSpecializationElements getFeatureSpecializationAccess() {
		return pFeatureSpecialization;
	}
	
	public ParserRule getFeatureSpecializationRule() {
		return getFeatureSpecializationAccess().getRule();
	}
	
	//fragment Typings returns SysML::Feature:
	//	TypedBy (',' ownedRelationship_comp+=OwnedFeatureTyping)*;
	public TypingsElements getTypingsAccess() {
		return pTypings;
	}
	
	public ParserRule getTypingsRule() {
		return getTypingsAccess().getRule();
	}
	
	//fragment TypedBy returns SysML::Feature:
	//	DefinedByKeyword ownedRelationship_comp+=OwnedFeatureTyping;
	public TypedByElements getTypedByAccess() {
		return pTypedBy;
	}
	
	public ParserRule getTypedByRule() {
		return getTypedByAccess().getRule();
	}
	
	//DefinedByKeyword:
	//	':' | 'defined' 'by';
	public DefinedByKeywordElements getDefinedByKeywordAccess() {
		return pDefinedByKeyword;
	}
	
	public ParserRule getDefinedByKeywordRule() {
		return getDefinedByKeywordAccess().getRule();
	}
	
	//fragment Subsettings returns SysML::Feature:
	//	Subsets (',' ownedRelationship_comp+=OwnedSubsetting)*;
	public SubsettingsElements getSubsettingsAccess() {
		return pSubsettings;
	}
	
	public ParserRule getSubsettingsRule() {
		return getSubsettingsAccess().getRule();
	}
	
	//fragment Subsets returns SysML::Feature:
	//	SubsetsKeyword ownedRelationship_comp+=OwnedSubsetting;
	public SubsetsElements getSubsetsAccess() {
		return pSubsets;
	}
	
	public ParserRule getSubsetsRule() {
		return getSubsetsAccess().getRule();
	}
	
	//SubsetsKeyword:
	//	':>' | 'subsets';
	public SubsetsKeywordElements getSubsetsKeywordAccess() {
		return pSubsetsKeyword;
	}
	
	public ParserRule getSubsetsKeywordRule() {
		return getSubsetsKeywordAccess().getRule();
	}
	
	//fragment Redefinitions returns SysML::Feature:
	//	Redefines (',' ownedRelationship_comp+=OwnedRedefinition)*;
	public RedefinitionsElements getRedefinitionsAccess() {
		return pRedefinitions;
	}
	
	public ParserRule getRedefinitionsRule() {
		return getRedefinitionsAccess().getRule();
	}
	
	//fragment Redefines returns SysML::Feature:
	//	RedefinesKeyword ownedRelationship_comp+=OwnedRedefinition;
	public RedefinesElements getRedefinesAccess() {
		return pRedefines;
	}
	
	public ParserRule getRedefinesRule() {
		return getRedefinesAccess().getRule();
	}
	
	//RedefinesKeyword:
	//	':>>' | 'redefines';
	public RedefinesKeywordElements getRedefinesKeywordAccess() {
		return pRedefinesKeyword;
	}
	
	public ParserRule getRedefinesKeywordRule() {
		return getRedefinesKeywordAccess().getRule();
	}
	
	///* Feature Typing, Subsetting and Redefinition */ OwnedFeatureTyping SysML::FeatureTyping:
	//	type=[SysML::Type|QualifiedName];
	public OwnedFeatureTypingElements getOwnedFeatureTypingAccess() {
		return pOwnedFeatureTyping;
	}
	
	public ParserRule getOwnedFeatureTypingRule() {
		return getOwnedFeatureTypingAccess().getRule();
	}
	
	//OwnedSubsetting SysML::Subsetting:
	//	subsettedFeature=[SysML::Feature|QualifiedName];
	public OwnedSubsettingElements getOwnedSubsettingAccess() {
		return pOwnedSubsetting;
	}
	
	public ParserRule getOwnedSubsettingRule() {
		return getOwnedSubsettingAccess().getRule();
	}
	
	//OwnedRedefinition SysML::Redefinition:
	//	redefinedFeature=[SysML::Feature|QualifiedName];
	public OwnedRedefinitionElements getOwnedRedefinitionAccess() {
		return pOwnedRedefinition;
	}
	
	public ParserRule getOwnedRedefinitionRule() {
		return getOwnedRedefinitionAccess().getRule();
	}
	
	///* Multiplicity */ MultiplicityMember SysML::Membership:
	//	ownedMemberElement_comp=Multiplicity;
	public MultiplicityMemberElements getMultiplicityMemberAccess() {
		return pMultiplicityMember;
	}
	
	public ParserRule getMultiplicityMemberRule() {
		return getMultiplicityMemberAccess().getRule();
	}
	
	//Multiplicity SysML::MultiplicityRange: // TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
	//	'[' (ownedMembership_comp+=LiteralIntegerMember '..')? ownedMembership_comp+=LiteralUnlimitedNaturalMember ']';
	public MultiplicityElements getMultiplicityAccess() {
		return pMultiplicity;
	}
	
	public ParserRule getMultiplicityRule() {
		return getMultiplicityAccess().getRule();
	}
	
	//LiteralIntegerMember SysML::Membership:
	//	ownedMemberElement_comp=LiteralInteger;
	public LiteralIntegerMemberElements getLiteralIntegerMemberAccess() {
		return pLiteralIntegerMember;
	}
	
	public ParserRule getLiteralIntegerMemberRule() {
		return getLiteralIntegerMemberAccess().getRule();
	}
	
	//LiteralUnlimitedNaturalMember SysML::Membership:
	//	ownedMemberElement_comp=LiteralUnlimitedNatural;
	public LiteralUnlimitedNaturalMemberElements getLiteralUnlimitedNaturalMemberAccess() {
		return pLiteralUnlimitedNaturalMember;
	}
	
	public ParserRule getLiteralUnlimitedNaturalMemberRule() {
		return getLiteralUnlimitedNaturalMemberAccess().getRule();
	}
	
	///* CONNECTORS */ /* Connectors */ ConnectorEndMember SysML::EndFeatureMembership:
	//	(memberName=Name '=>')? ownedMemberFeature_comp=ConnectorEnd;
	public ConnectorEndMemberElements getConnectorEndMemberAccess() {
		return pConnectorEndMember;
	}
	
	public ParserRule getConnectorEndMemberRule() {
		return getConnectorEndMemberAccess().getRule();
	}
	
	//ConnectorEnd SysML::Feature:
	//	ownedRelationship_comp+=OwnedSubsetting
	//	ownedMembership_comp+=MultiplicityMember?;
	public ConnectorEndElements getConnectorEndAccess() {
		return pConnectorEnd;
	}
	
	public ParserRule getConnectorEndRule() {
		return getConnectorEndAccess().getRule();
	}
	
	///* Binding Connectors */ BindingKeyword:
	//	'bind';
	public BindingKeywordElements getBindingKeywordAccess() {
		return pBindingKeyword;
	}
	
	public ParserRule getBindingKeywordRule() {
		return getBindingKeywordAccess().getRule();
	}
	
	//BindingConnector SysML::BindingConnector:
	//	isAbstract?='abstract'? BindingKeyword
	//	BindingConnectorDeclaration TypeBody;
	public BindingConnectorElements getBindingConnectorAccess() {
		return pBindingConnector;
	}
	
	public ParserRule getBindingConnectorRule() {
		return getBindingConnectorAccess().getRule();
	}
	
	//fragment BindingConnectorDeclaration returns SysML::BindingConnector:
	//	(FeatureDeclaration 'as')?
	//	ownedFeatureMembership_comp+=ConnectorEndMember '='
	//	ownedFeatureMembership_comp+=ConnectorEndMember;
	public BindingConnectorDeclarationElements getBindingConnectorDeclarationAccess() {
		return pBindingConnectorDeclaration;
	}
	
	public ParserRule getBindingConnectorDeclarationRule() {
		return getBindingConnectorDeclarationAccess().getRule();
	}
	
	///* Successions */ SuccessionKeyword:
	//	'succession';
	public SuccessionKeywordElements getSuccessionKeywordAccess() {
		return pSuccessionKeyword;
	}
	
	public ParserRule getSuccessionKeywordRule() {
		return getSuccessionKeywordAccess().getRule();
	}
	
	//Succession SysML::Succession:
	//	isAbstract?='abstract'? SuccessionKeyword SuccessionDeclaration TypeBody;
	public SuccessionElements getSuccessionAccess() {
		return pSuccession;
	}
	
	public ParserRule getSuccessionRule() {
		return getSuccessionAccess().getRule();
	}
	
	//fragment SuccessionDeclaration returns SysML::Succession:
	//	(FeatureDeclaration? 'first')?
	//	ownedFeatureMembership_comp+=ConnectorEndMember 'then'
	//	ownedFeatureMembership_comp+=ConnectorEndMember;
	public SuccessionDeclarationElements getSuccessionDeclarationAccess() {
		return pSuccessionDeclaration;
	}
	
	public ParserRule getSuccessionDeclarationRule() {
		return getSuccessionDeclarationAccess().getRule();
	}
	
	///* INTERACTIONS */ /* Item Flows */ ItemFlowKeyword:
	//	'stream';
	public ItemFlowKeywordElements getItemFlowKeywordAccess() {
		return pItemFlowKeyword;
	}
	
	public ParserRule getItemFlowKeywordRule() {
		return getItemFlowKeywordAccess().getRule();
	}
	
	//ItemFlow SysML::ItemFlow:
	//	isAbstract?='abstract'? ItemFlowKeyword
	//	ItemFlowDeclaration TypeBody;
	public ItemFlowElements getItemFlowAccess() {
		return pItemFlow;
	}
	
	public ParserRule getItemFlowRule() {
		return getItemFlowAccess().getRule();
	}
	
	//SuccessionItemFlowKeyword:
	//	'flow';
	public SuccessionItemFlowKeywordElements getSuccessionItemFlowKeywordAccess() {
		return pSuccessionItemFlowKeyword;
	}
	
	public ParserRule getSuccessionItemFlowKeywordRule() {
		return getSuccessionItemFlowKeywordAccess().getRule();
	}
	
	//SuccessionItemFlow SysML::SuccessionItemFlow:
	//	isAbstract?='abstract'? SuccessionItemFlowKeyword
	//	ItemFlowDeclaration TypeBody;
	public SuccessionItemFlowElements getSuccessionItemFlowAccess() {
		return pSuccessionItemFlow;
	}
	
	public ParserRule getSuccessionItemFlowRule() {
		return getSuccessionItemFlowAccess().getRule();
	}
	
	//fragment ItemFlowDeclaration returns SysML::ItemFlow:
	//	(FeatureDeclaration? ('of' ownedFeatureMembership_comp+=ItemFeatureMember
	//	| ownedFeatureMembership_comp+=EmptyItemFeatureMember) 'from'
	//	| ownedFeatureMembership_comp+=EmptyItemFeatureMember) ownedFeatureMembership_comp+=ItemFlowEndMember 'to'
	//	ownedFeatureMembership_comp+=ItemFlowEndMember;
	public ItemFlowDeclarationElements getItemFlowDeclarationAccess() {
		return pItemFlowDeclaration;
	}
	
	public ParserRule getItemFlowDeclarationRule() {
		return getItemFlowDeclarationAccess().getRule();
	}
	
	//ItemFeatureMember SysML::FeatureMembership:
	//	(memberName=Name DefinedByKeyword)? ownedMemberFeature_comp=ItemFeature;
	public ItemFeatureMemberElements getItemFeatureMemberAccess() {
		return pItemFeatureMember;
	}
	
	public ParserRule getItemFeatureMemberRule() {
		return getItemFeatureMemberAccess().getRule();
	}
	
	//ItemFeature SysML::ItemFeature:
	//	ownedRelationship_comp+=OwnedFeatureTyping
	//	ownedMembership_comp+=MultiplicityMember?
	//	| ownedMembership_comp+=MultiplicityMember
	//	ownedRelationship_comp+=OwnedFeatureTyping?;
	public ItemFeatureElements getItemFeatureAccess() {
		return pItemFeature;
	}
	
	public ParserRule getItemFeatureRule() {
		return getItemFeatureAccess().getRule();
	}
	
	//EmptyItemFeature SysML::ItemFeature:
	//	{SysML::ItemFeature};
	public EmptyItemFeatureElements getEmptyItemFeatureAccess() {
		return pEmptyItemFeature;
	}
	
	public ParserRule getEmptyItemFeatureRule() {
		return getEmptyItemFeatureAccess().getRule();
	}
	
	//ItemFlowEndMember SysML::EndFeatureMembership:
	//	ownedMemberFeature_comp=ItemFlowEnd;
	public ItemFlowEndMemberElements getItemFlowEndMemberAccess() {
		return pItemFlowEndMember;
	}
	
	public ParserRule getItemFlowEndMemberRule() {
		return getItemFlowEndMemberAccess().getRule();
	}
	
	//ItemFlowEnd SysML::ItemFlowEnd:
	//	ownedFeatureMembership_comp+=ItemFlowFeatureMember;
	public ItemFlowEndElements getItemFlowEndAccess() {
		return pItemFlowEnd;
	}
	
	public ParserRule getItemFlowEndRule() {
		return getItemFlowEndAccess().getRule();
	}
	
	//EmptyItemFeatureMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=EmptyItemFeature;
	public EmptyItemFeatureMemberElements getEmptyItemFeatureMemberAccess() {
		return pEmptyItemFeatureMember;
	}
	
	public ParserRule getEmptyItemFeatureMemberRule() {
		return getEmptyItemFeatureMemberAccess().getRule();
	}
	
	//EmptyItemFlowEnd SysML::ItemFlowEnd:
	//	ownedFeatureMembership_comp+=EmptyItemFlowFeatureMember;
	public EmptyItemFlowEndElements getEmptyItemFlowEndAccess() {
		return pEmptyItemFlowEnd;
	}
	
	public ParserRule getEmptyItemFlowEndRule() {
		return getEmptyItemFlowEndAccess().getRule();
	}
	
	//ItemFlowFeatureMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=ItemFlowFeature;
	public ItemFlowFeatureMemberElements getItemFlowFeatureMemberAccess() {
		return pItemFlowFeatureMember;
	}
	
	public ParserRule getItemFlowFeatureMemberRule() {
		return getItemFlowFeatureMemberAccess().getRule();
	}
	
	//ItemFlowFeature SysML::ItemFlowFeature:
	//	ownedRelationship_comp+=OwnedRedefinition;
	public ItemFlowFeatureElements getItemFlowFeatureAccess() {
		return pItemFlowFeature;
	}
	
	public ParserRule getItemFlowFeatureRule() {
		return getItemFlowFeatureAccess().getRule();
	}
	
	//EmptyItemFlowEndMember SysML::EndFeatureMembership:
	//	ownedMemberFeature_comp=EmptyItemFlowEnd;
	public EmptyItemFlowEndMemberElements getEmptyItemFlowEndMemberAccess() {
		return pEmptyItemFlowEndMember;
	}
	
	public ParserRule getEmptyItemFlowEndMemberRule() {
		return getEmptyItemFlowEndMemberAccess().getRule();
	}
	
	//EmptyItemFlowFeatureMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=EmptyItemFlowFeature;
	public EmptyItemFlowFeatureMemberElements getEmptyItemFlowFeatureMemberAccess() {
		return pEmptyItemFlowFeatureMember;
	}
	
	public ParserRule getEmptyItemFlowFeatureMemberRule() {
		return getEmptyItemFlowFeatureMemberAccess().getRule();
	}
	
	//EmptyItemFlowFeature SysML::ItemFlowFeature:
	//	ownedRelationship_comp+=EmptyRedefinition;
	public EmptyItemFlowFeatureElements getEmptyItemFlowFeatureAccess() {
		return pEmptyItemFlowFeature;
	}
	
	public ParserRule getEmptyItemFlowFeatureRule() {
		return getEmptyItemFlowFeatureAccess().getRule();
	}
	
	//EmptyRedefinition SysML::Redefinition:
	//	{SysML::Redefinition};
	public EmptyRedefinitionElements getEmptyRedefinitionAccess() {
		return pEmptyRedefinition;
	}
	
	public ParserRule getEmptyRedefinitionRule() {
		return getEmptyRedefinitionAccess().getRule();
	}
	
	///* DEPENDENCIES */ Dependency SysML::Dependency:
	//	'dependency' (Identification? 'from')?
	//	client+=[SysML::Element|QualifiedName] (',' client+=[SysML::Element|QualifiedName])* 'to'
	//	supplier+=[SysML::Element|QualifiedName] (',' supplier+=[SysML::Element|QualifiedName])* ';';
	public DependencyElements getDependencyAccess() {
		return pDependency;
	}
	
	public ParserRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}
	
	///* DEFINITION AND USAGE */ /* Definitions */ fragment DefinitionPrefix returns SysML::Definition:
	//	isAbstract?='abstract' | isVariation?='variation';
	public DefinitionPrefixElements getDefinitionPrefixAccess() {
		return pDefinitionPrefix;
	}
	
	public ParserRule getDefinitionPrefixRule() {
		return getDefinitionPrefixAccess().getRule();
	}
	
	//fragment Definition returns SysML::Definition:
	//	DefinitionDeclaration DefinitionBody;
	public DefinitionElements getDefinitionAccess() {
		return pDefinition;
	}
	
	public ParserRule getDefinitionRule() {
		return getDefinitionAccess().getRule();
	}
	
	//fragment DefinitionDeclaration returns SysML::Definition:
	//	Identification? SuperclassingPart?;
	public DefinitionDeclarationElements getDefinitionDeclarationAccess() {
		return pDefinitionDeclaration;
	}
	
	public ParserRule getDefinitionDeclarationRule() {
		return getDefinitionDeclarationAccess().getRule();
	}
	
	//fragment DefinitionBody returns SysML::Type:
	//	';'
	//	| '{' DefinitionBodyItem* '}';
	public DefinitionBodyElements getDefinitionBodyAccess() {
		return pDefinitionBody;
	}
	
	public ParserRule getDefinitionBodyRule() {
		return getDefinitionBodyAccess().getRule();
	}
	
	//fragment DefinitionBodyItem returns SysML::Type:
	//	documentation_comp+=OwnedDocumentation
	//	| ownedMembership_comp+=NestedDefinitionMember
	//	| ownedMembership_comp+=VariantUsageMember
	//	| ownedFeatureMembership_comp+=NestedUsageMember
	//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
	//	ownedFeatureMembership_comp+=IndividualUsageMember
	//	| => ownedImport_comp+=PackageImport;
	public DefinitionBodyItemElements getDefinitionBodyItemAccess() {
		return pDefinitionBodyItem;
	}
	
	public ParserRule getDefinitionBodyItemRule() {
		return getDefinitionBodyItemAccess().getRule();
	}
	
	//NestedDefinitionMember SysML::Membership:
	//	NonFeatureTypeMember;
	public NestedDefinitionMemberElements getNestedDefinitionMemberAccess() {
		return pNestedDefinitionMember;
	}
	
	public ParserRule getNestedDefinitionMemberRule() {
		return getNestedDefinitionMemberAccess().getRule();
	}
	
	//VariantUsageMember SysML::VariantMembership:
	//	DefinitionMemberPrefix 'variant'
	//	ownedVariantUsage_comp=VariantUsageElement;
	public VariantUsageMemberElements getVariantUsageMemberAccess() {
		return pVariantUsageMember;
	}
	
	public ParserRule getVariantUsageMemberRule() {
		return getVariantUsageMemberAccess().getRule();
	}
	
	//NestedUsageMember SysML::FeatureMembership:
	//	StructureUsageMember | BehaviorUsageMember | FlowUsageMember;
	public NestedUsageMemberElements getNestedUsageMemberAccess() {
		return pNestedUsageMember;
	}
	
	public ParserRule getNestedUsageMemberRule() {
		return getNestedUsageMemberAccess().getRule();
	}
	
	//StructureUsageMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=StructureUsageElement;
	public StructureUsageMemberElements getStructureUsageMemberAccess() {
		return pStructureUsageMember;
	}
	
	public ParserRule getStructureUsageMemberRule() {
		return getStructureUsageMemberAccess().getRule();
	}
	
	//BehaviorUsageMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=BehaviorUsageElement;
	public BehaviorUsageMemberElements getBehaviorUsageMemberAccess() {
		return pBehaviorUsageMember;
	}
	
	public ParserRule getBehaviorUsageMemberRule() {
		return getBehaviorUsageMemberAccess().getRule();
	}
	
	//IndividualUsageMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=IndividualUsageElement;
	public IndividualUsageMemberElements getIndividualUsageMemberAccess() {
		return pIndividualUsageMember;
	}
	
	public ParserRule getIndividualUsageMemberRule() {
		return getIndividualUsageMemberAccess().getRule();
	}
	
	//FlowUsageMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix direction=FeatureDirection
	//	ownedMemberFeature_comp=FlowUsageElement;
	public FlowUsageMemberElements getFlowUsageMemberAccess() {
		return pFlowUsageMember;
	}
	
	public ParserRule getFlowUsageMemberRule() {
		return getFlowUsageMemberAccess().getRule();
	}
	
	//fragment DefinitionMemberPrefix returns SysML::Membership:
	//	ownedRelationship_comp+=PrefixDocumentation*
	//	visibility=VisibilityIndicator?;
	public DefinitionMemberPrefixElements getDefinitionMemberPrefixAccess() {
		return pDefinitionMemberPrefix;
	}
	
	public ParserRule getDefinitionMemberPrefixRule() {
		return getDefinitionMemberPrefixAccess().getRule();
	}
	
	///* Usages */ fragment UsagePrefix returns SysML::Usage:
	//	isAbstract?='abstract' | isVariation?='variation';
	public UsagePrefixElements getUsagePrefixAccess() {
		return pUsagePrefix;
	}
	
	public ParserRule getUsagePrefixRule() {
		return getUsagePrefixAccess().getRule();
	}
	
	//fragment Usage returns SysML::Usage:
	//	UsageDeclaration? UsageCompletion;
	public UsageElements getUsageAccess() {
		return pUsage;
	}
	
	public ParserRule getUsageRule() {
		return getUsageAccess().getRule();
	}
	
	//fragment UsageDeclaration returns SysML::Feature:
	//	FeatureDeclaration;
	public UsageDeclarationElements getUsageDeclarationAccess() {
		return pUsageDeclaration;
	}
	
	public ParserRule getUsageDeclarationRule() {
		return getUsageDeclarationAccess().getRule();
	}
	
	//fragment UsageCompletion returns SysML::Usage:
	//	ValueOrFlowPart? UsageBody;
	public UsageCompletionElements getUsageCompletionAccess() {
		return pUsageCompletion;
	}
	
	public ParserRule getUsageCompletionRule() {
		return getUsageCompletionAccess().getRule();
	}
	
	//fragment UsageBody returns SysML::Usage:
	//	DefinitionBody;
	public UsageBodyElements getUsageBodyAccess() {
		return pUsageBody;
	}
	
	public ParserRule getUsageBodyRule() {
		return getUsageBodyAccess().getRule();
	}
	
	//fragment ValuePart returns SysML::Feature:
	//	ownedMembership_comp+=FeatureValue;
	public ValuePartElements getValuePartAccess() {
		return pValuePart;
	}
	
	public ParserRule getValuePartRule() {
		return getValuePartAccess().getRule();
	}
	
	//fragment ValueOrFlowPart returns SysML::Feature:
	//	ownedMembership_comp+=(FeatureValue | SourceItemFlowMember);
	public ValueOrFlowPartElements getValueOrFlowPartAccess() {
		return pValueOrFlowPart;
	}
	
	public ParserRule getValueOrFlowPartRule() {
		return getValueOrFlowPartAccess().getRule();
	}
	
	//FeatureValue SysML::FeatureValue:
	//	'=' value_comp=OwnedExpression;
	public FeatureValueElements getFeatureValueAccess() {
		return pFeatureValue;
	}
	
	public ParserRule getFeatureValueRule() {
		return getFeatureValueAccess().getRule();
	}
	
	//SourceItemFlowMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=SourceItemFlow;
	public SourceItemFlowMemberElements getSourceItemFlowMemberAccess() {
		return pSourceItemFlowMember;
	}
	
	public ParserRule getSourceItemFlowMemberRule() {
		return getSourceItemFlowMemberAccess().getRule();
	}
	
	//SourceItemFlow SysML::ItemFlow:
	//	(ItemFlowKeyword | {SysML::SuccessionItemFlow} SuccessionItemFlowKeyword)
	//	ownedFeatureMembership_comp+=EmptyItemFeatureMember
	//	'from' ownedFeatureMembership_comp+=ItemFlowEndMember
	//	ownedFeatureMembership_comp+=EmptyItemFlowEndMember;
	public SourceItemFlowElements getSourceItemFlowAccess() {
		return pSourceItemFlow;
	}
	
	public ParserRule getSourceItemFlowRule() {
		return getSourceItemFlowAccess().getRule();
	}
	
	///* Reference Usages */ ReferenceKeyword:
	//	'ref';
	public ReferenceKeywordElements getReferenceKeywordAccess() {
		return pReferenceKeyword;
	}
	
	public ParserRule getReferenceKeywordRule() {
		return getReferenceKeywordAccess().getRule();
	}
	
	//ReferenceUsageKeyword:
	//	ReferenceKeyword;
	public ReferenceUsageKeywordElements getReferenceUsageKeywordAccess() {
		return pReferenceUsageKeyword;
	}
	
	public ParserRule getReferenceUsageKeywordRule() {
		return getReferenceUsageKeywordAccess().getRule();
	}
	
	//ReferenceUsage SysML::ReferenceUsage:
	//	UsagePrefix? ReferenceUsageKeyword Usage;
	public ReferenceUsageElements getReferenceUsageAccess() {
		return pReferenceUsage;
	}
	
	public ParserRule getReferenceUsageRule() {
		return getReferenceUsageAccess().getRule();
	}
	
	//ReferenceEndUsage SysML::ReferenceUsage:
	//	UsagePrefix? ReferenceUsageKeyword? Usage;
	public ReferenceEndUsageElements getReferenceEndUsageAccess() {
		return pReferenceEndUsage;
	}
	
	public ParserRule getReferenceEndUsageRule() {
		return getReferenceEndUsageAccess().getRule();
	}
	
	//// TODO: Find a better way to handle variant references that using ReferenceUsage.
	//ReferenceVariantUsage SysML::ReferenceUsage:
	//	ReferenceUsage
	//	| ownedRelationship_comp+=OwnedSubsetting
	//	FeatureSpecialization* UsageBody;
	public ReferenceVariantUsageElements getReferenceVariantUsageAccess() {
		return pReferenceVariantUsage;
	}
	
	public ParserRule getReferenceVariantUsageRule() {
		return getReferenceVariantUsageAccess().getRule();
	}
	
	///* Body Elements */ StructureUsageElement SysML::Feature:
	//	ReferenceUsage
	//	| AttributeUsage
	//	| ItemRefUsage
	//	| PartRefUsage
	//	| ViewRefUsage
	//	| RenderingRefUsage
	//	| PortUsage
	//	| InterfaceUsage;
	public StructureUsageElementElements getStructureUsageElementAccess() {
		return pStructureUsageElement;
	}
	
	public ParserRule getStructureUsageElementRule() {
		return getStructureUsageElementAccess().getRule();
	}
	
	//IndividualUsageElement SysML::Usage:
	//	IndividualRefUsage
	//	| TimeSliceRefUsage
	//	| SnapshotRefUsage;
	public IndividualUsageElementElements getIndividualUsageElementAccess() {
		return pIndividualUsageElement;
	}
	
	public ParserRule getIndividualUsageElementRule() {
		return getIndividualUsageElementAccess().getRule();
	}
	
	//BehaviorUsageElement SysML::Usage:
	//	ActionRefUsage
	//	| CalculationRefUsage
	//	| StateRefUsage
	//	| ConstraintRefUsage
	//	| RequirementRefUsage
	//	| CaseRefUsage
	//	| AnalysisCaseRefUsage
	//	| VerificationCaseRefUsage
	//	| ViewpointRefUsage
	//	| PerformActionUsage
	//	| ExhibitStateUsage
	//	| AssertConstraintUsage
	//	| SatisfyRequirementUsage;
	public BehaviorUsageElementElements getBehaviorUsageElementAccess() {
		return pBehaviorUsageElement;
	}
	
	public ParserRule getBehaviorUsageElementRule() {
		return getBehaviorUsageElementAccess().getRule();
	}
	
	//VariantUsageElement SysML::Usage:
	//	ReferenceVariantUsage
	//	| AttributeVariantUsage
	//	| ItemRefUsage
	//	| PartRefUsage
	//	| PortUsage
	//	| ConnectionUsage
	//	| Connector
	//	| InterfaceUsage
	//	| IndividualUsageElement
	//	| BehaviorUsageElement;
	public VariantUsageElementElements getVariantUsageElementAccess() {
		return pVariantUsageElement;
	}
	
	public ParserRule getVariantUsageElementRule() {
		return getVariantUsageElementAccess().getRule();
	}
	
	//FlowUsageElement SysML::Usage:
	//	ReferenceUsage
	//	| AttributeUsage
	//	| ItemFlowUsage
	//	| PartFlowUsage
	//	| ViewFlowUsage
	//	| RenderingFlowUsage
	//	| ActionFlowUsage
	//	| CalculationFlowUsage
	//	| StateFlowUsage
	//	| ConstraintFlowUsage
	//	| RequirementFlowUsage
	//	| CaseFlowUsage
	//	| AnalysisCaseFlowUsage
	//	| VerificationCaseFlowUsage
	//	| ViewpointFlowUsage;
	public FlowUsageElementElements getFlowUsageElementAccess() {
		return pFlowUsageElement;
	}
	
	public ParserRule getFlowUsageElementRule() {
		return getFlowUsageElementAccess().getRule();
	}
	
	///* ATTRIBUTES */ AttributeKeyword:
	//	'attribute';
	public AttributeKeywordElements getAttributeKeywordAccess() {
		return pAttributeKeyword;
	}
	
	public ParserRule getAttributeKeywordRule() {
		return getAttributeKeywordAccess().getRule();
	}
	
	//AttributeDefKeyword:
	//	AttributeKeyword 'def' | 'value' 'type';
	public AttributeDefKeywordElements getAttributeDefKeywordAccess() {
		return pAttributeDefKeyword;
	}
	
	public ParserRule getAttributeDefKeywordRule() {
		return getAttributeDefKeywordAccess().getRule();
	}
	
	//AttributeUsageKeyword:
	//	AttributeKeyword | 'value';
	public AttributeUsageKeywordElements getAttributeUsageKeywordAccess() {
		return pAttributeUsageKeyword;
	}
	
	public ParserRule getAttributeUsageKeywordRule() {
		return getAttributeUsageKeywordAccess().getRule();
	}
	
	//AttributeDefinition SysML::AttributeDefinition:
	//	DefinitionPrefix? AttributeDefKeyword Definition;
	public AttributeDefinitionElements getAttributeDefinitionAccess() {
		return pAttributeDefinition;
	}
	
	public ParserRule getAttributeDefinitionRule() {
		return getAttributeDefinitionAccess().getRule();
	}
	
	//AttributeUsage SysML::AttributeUsage:
	//	UsagePrefix? (AttributeUsageKeyword Usage
	//	| UsageDeclaration ValueOrFlowPart? UsageBody);
	public AttributeUsageElements getAttributeUsageAccess() {
		return pAttributeUsage;
	}
	
	public ParserRule getAttributeUsageRule() {
		return getAttributeUsageAccess().getRule();
	}
	
	//AttributeVariantUsage SysML::AttributeUsage:
	//	UsagePrefix? AttributeUsageKeyword Usage;
	public AttributeVariantUsageElements getAttributeVariantUsageAccess() {
		return pAttributeVariantUsage;
	}
	
	public ParserRule getAttributeVariantUsageRule() {
		return getAttributeVariantUsageAccess().getRule();
	}
	
	///* ITEM DEFINITIONS */ ItemKeyword:
	//	'item';
	public ItemKeywordElements getItemKeywordAccess() {
		return pItemKeyword;
	}
	
	public ParserRule getItemKeywordRule() {
		return getItemKeywordAccess().getRule();
	}
	
	//ItemDefKeyword:
	//	ItemKeyword 'def';
	public ItemDefKeywordElements getItemDefKeywordAccess() {
		return pItemDefKeyword;
	}
	
	public ParserRule getItemDefKeywordRule() {
		return getItemDefKeywordAccess().getRule();
	}
	
	//ItemUsageKeyword:
	//	ItemKeyword;
	public ItemUsageKeywordElements getItemUsageKeywordAccess() {
		return pItemUsageKeyword;
	}
	
	public ParserRule getItemUsageKeywordRule() {
		return getItemUsageKeywordAccess().getRule();
	}
	
	//ItemDefinition SysML::ItemDefinition:
	//	DefinitionPrefix? ItemDefKeyword Definition;
	public ItemDefinitionElements getItemDefinitionAccess() {
		return pItemDefinition;
	}
	
	public ParserRule getItemDefinitionRule() {
		return getItemDefinitionAccess().getRule();
	}
	
	//ItemUsage SysML::ItemUsage:
	//	UsagePrefix? ItemUsageKeyword Usage;
	public ItemUsageElements getItemUsageAccess() {
		return pItemUsage;
	}
	
	public ParserRule getItemUsageRule() {
		return getItemUsageAccess().getRule();
	}
	
	//ItemFlowUsage SysML::ItemUsage:
	//	UsagePrefix? 'ref'? ItemUsageKeyword Usage;
	public ItemFlowUsageElements getItemFlowUsageAccess() {
		return pItemFlowUsage;
	}
	
	public ParserRule getItemFlowUsageRule() {
		return getItemFlowUsageAccess().getRule();
	}
	
	//ItemRefUsage SysML::ItemUsage:
	//	UsagePrefix? ('ref' ItemUsageKeyword | isComposite?=ItemUsageKeyword) Usage;
	public ItemRefUsageElements getItemRefUsageAccess() {
		return pItemRefUsage;
	}
	
	public ParserRule getItemRefUsageRule() {
		return getItemRefUsageAccess().getRule();
	}
	
	///* PART DEFINITIONS */ PartKeyword:
	//	'part';
	public PartKeywordElements getPartKeywordAccess() {
		return pPartKeyword;
	}
	
	public ParserRule getPartKeywordRule() {
		return getPartKeywordAccess().getRule();
	}
	
	//PartDefKeyword:
	//	PartKeyword 'def' | 'block';
	public PartDefKeywordElements getPartDefKeywordAccess() {
		return pPartDefKeyword;
	}
	
	public ParserRule getPartDefKeywordRule() {
		return getPartDefKeywordAccess().getRule();
	}
	
	//PartUsageKeyword:
	//	PartKeyword;
	public PartUsageKeywordElements getPartUsageKeywordAccess() {
		return pPartUsageKeyword;
	}
	
	public ParserRule getPartUsageKeywordRule() {
		return getPartUsageKeywordAccess().getRule();
	}
	
	//PartDefinition SysML::PartDefinition:
	//	DefinitionPrefix? PartDefKeyword Definition;
	public PartDefinitionElements getPartDefinitionAccess() {
		return pPartDefinition;
	}
	
	public ParserRule getPartDefinitionRule() {
		return getPartDefinitionAccess().getRule();
	}
	
	//PartUsage SysML::PartUsage:
	//	UsagePrefix? PartUsageKeyword Usage;
	public PartUsageElements getPartUsageAccess() {
		return pPartUsage;
	}
	
	public ParserRule getPartUsageRule() {
		return getPartUsageAccess().getRule();
	}
	
	//PartFlowUsage SysML::PartUsage:
	//	UsagePrefix? 'ref'? PartUsageKeyword Usage;
	public PartFlowUsageElements getPartFlowUsageAccess() {
		return pPartFlowUsage;
	}
	
	public ParserRule getPartFlowUsageRule() {
		return getPartFlowUsageAccess().getRule();
	}
	
	//PartRefUsage SysML::PartUsage:
	//	UsagePrefix? ('ref' PartUsageKeyword | isComposite?=PartUsageKeyword) Usage;
	public PartRefUsageElements getPartRefUsageAccess() {
		return pPartRefUsage;
	}
	
	public ParserRule getPartRefUsageRule() {
		return getPartRefUsageAccess().getRule();
	}
	
	///* PORTS */ /* Port Definitions */ PortKeyword:
	//	'port';
	public PortKeywordElements getPortKeywordAccess() {
		return pPortKeyword;
	}
	
	public ParserRule getPortKeywordRule() {
		return getPortKeywordAccess().getRule();
	}
	
	//PortDefKeyword:
	//	PortKeyword 'def' | 'interface' 'block';
	public PortDefKeywordElements getPortDefKeywordAccess() {
		return pPortDefKeyword;
	}
	
	public ParserRule getPortDefKeywordRule() {
		return getPortDefKeywordAccess().getRule();
	}
	
	//PortDefinition SysML::PortDefinition:
	//	DefinitionPrefix? PortDefKeyword Definition
	//	ownedMembership_comp+=ConjugatedPortDefinitionMember;
	public PortDefinitionElements getPortDefinitionAccess() {
		return pPortDefinition;
	}
	
	public ParserRule getPortDefinitionRule() {
		return getPortDefinitionAccess().getRule();
	}
	
	//ConjugatedPortDefinitionMember SysML::Membership:
	//	ownedMemberElement_comp=ConjugatedPortDefinition;
	public ConjugatedPortDefinitionMemberElements getConjugatedPortDefinitionMemberAccess() {
		return pConjugatedPortDefinitionMember;
	}
	
	public ParserRule getConjugatedPortDefinitionMemberRule() {
		return getConjugatedPortDefinitionMemberAccess().getRule();
	}
	
	//ConjugatedPortDefinition SysML::ConjugatedPortDefinition:
	//	ownedRelationship_comp+=PortConjugation;
	public ConjugatedPortDefinitionElements getConjugatedPortDefinitionAccess() {
		return pConjugatedPortDefinition;
	}
	
	public ParserRule getConjugatedPortDefinitionRule() {
		return getConjugatedPortDefinitionAccess().getRule();
	}
	
	//PortConjugation SysML::PortConjugation:
	//	{SysML::PortConjugation};
	public PortConjugationElements getPortConjugationAccess() {
		return pPortConjugation;
	}
	
	public ParserRule getPortConjugationRule() {
		return getPortConjugationAccess().getRule();
	}
	
	///* Port Usages */ PortUsageKeyword:
	//	PortKeyword;
	public PortUsageKeywordElements getPortUsageKeywordAccess() {
		return pPortUsageKeyword;
	}
	
	public ParserRule getPortUsageKeywordRule() {
		return getPortUsageKeywordAccess().getRule();
	}
	
	//PortUsage SysML::PortUsage:
	//	UsagePrefix? PortUsageKeyword PortUsageDeclaration UsageCompletion;
	public PortUsageElements getPortUsageAccess() {
		return pPortUsage;
	}
	
	public ParserRule getPortUsageRule() {
		return getPortUsageAccess().getRule();
	}
	
	//PortEndUsage SysML::PortUsage:
	//	UsagePrefix? PortUsageKeyword? PortUsageDeclaration UsageCompletion;
	public PortEndUsageElements getPortEndUsageAccess() {
		return pPortEndUsage;
	}
	
	public ParserRule getPortEndUsageRule() {
		return getPortEndUsageAccess().getRule();
	}
	
	//fragment PortUsageDeclaration returns SysML::Usage:
	//	Identification PortSpecializationPart?
	//	| PortSpecializationPart;
	public PortUsageDeclarationElements getPortUsageDeclarationAccess() {
		return pPortUsageDeclaration;
	}
	
	public ParserRule getPortUsageDeclarationRule() {
		return getPortUsageDeclarationAccess().getRule();
	}
	
	//fragment PortSpecializationPart returns SysML::Usage:
	//	-> PortSpecialization+ MultiplicityPart? PortSpecialization*
	//	| MultiplicityPart PortSpecialization*;
	public PortSpecializationPartElements getPortSpecializationPartAccess() {
		return pPortSpecializationPart;
	}
	
	public ParserRule getPortSpecializationPartRule() {
		return getPortSpecializationPartAccess().getRule();
	}
	
	//fragment PortSpecialization returns SysML::Usage:
	//	PortTypings | Subsettings | Redefinitions;
	public PortSpecializationElements getPortSpecializationAccess() {
		return pPortSpecialization;
	}
	
	public ParserRule getPortSpecializationRule() {
		return getPortSpecializationAccess().getRule();
	}
	
	//fragment PortTypings returns SysML::Feature:
	//	DefinedByKeyword ownedRelationship_comp+=PortTyping (',' ownedRelationship_comp+=PortTyping)*;
	public PortTypingsElements getPortTypingsAccess() {
		return pPortTypings;
	}
	
	public ParserRule getPortTypingsRule() {
		return getPortTypingsAccess().getRule();
	}
	
	//PortTyping SysML::FeatureTyping:
	//	OwnedFeatureTyping | ConjugatedPortTyping;
	public PortTypingElements getPortTypingAccess() {
		return pPortTyping;
	}
	
	public ParserRule getPortTypingRule() {
		return getPortTypingAccess().getRule();
	}
	
	//ConjugatedPortTyping SysML::ConjugatedPortTyping:
	//	'~' portDefinition=[SysML::PortDefinition|QualifiedName];
	public ConjugatedPortTypingElements getConjugatedPortTypingAccess() {
		return pConjugatedPortTyping;
	}
	
	public ParserRule getConjugatedPortTypingRule() {
		return getConjugatedPortTypingAccess().getRule();
	}
	
	///* CONNECTIONS */ /* Connection Definitions */ ConnectionKeyword:
	//	'connection';
	public ConnectionKeywordElements getConnectionKeywordAccess() {
		return pConnectionKeyword;
	}
	
	public ParserRule getConnectionKeywordRule() {
		return getConnectionKeywordAccess().getRule();
	}
	
	//ConnectionDefKeyword:
	//	ConnectionKeyword 'def' | 'assoc' 'block';
	public ConnectionDefKeywordElements getConnectionDefKeywordAccess() {
		return pConnectionDefKeyword;
	}
	
	public ParserRule getConnectionDefKeywordRule() {
		return getConnectionDefKeywordAccess().getRule();
	}
	
	//ConnectionDefinition SysML::ConnectionDefinition:
	//	DefinitionPrefix? ConnectionDefKeyword
	//	DefinitionDeclaration ConnectionBody;
	public ConnectionDefinitionElements getConnectionDefinitionAccess() {
		return pConnectionDefinition;
	}
	
	public ParserRule getConnectionDefinitionRule() {
		return getConnectionDefinitionAccess().getRule();
	}
	
	//fragment ConnectionBody returns SysML::Type:
	//	';'
	//	| '{' (documentation_comp+=OwnedDocumentation
	//	| ownedMembership_comp+=NestedDefinitionMember
	//	| ownedMembership_comp+=VariantUsageMember
	//	| ownedFeatureMembership_comp+=ConnectionUsageMember
	//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
	//	ownedFeatureMembership_comp+=IndividualUsageMember
	//	| ownedImport_comp+=PackageImport)* '}';
	public ConnectionBodyElements getConnectionBodyAccess() {
		return pConnectionBody;
	}
	
	public ParserRule getConnectionBodyRule() {
		return getConnectionBodyAccess().getRule();
	}
	
	//ConnectionUsageMember SysML::FeatureMembership:
	//	NestedUsageMember | ConnectionEndMember;
	public ConnectionUsageMemberElements getConnectionUsageMemberAccess() {
		return pConnectionUsageMember;
	}
	
	public ParserRule getConnectionUsageMemberRule() {
		return getConnectionUsageMemberAccess().getRule();
	}
	
	//ConnectionEndMember SysML::EndFeatureMembership:
	//	DefinitionMemberPrefix 'end' ownedMemberFeature_comp=ConnectionEndElement;
	public ConnectionEndMemberElements getConnectionEndMemberAccess() {
		return pConnectionEndMember;
	}
	
	public ParserRule getConnectionEndMemberRule() {
		return getConnectionEndMemberAccess().getRule();
	}
	
	//ConnectionEndElement SysML::Feature:
	//	ReferenceEndUsage
	//	| ItemRefUsage
	//	| PartRefUsage
	//	| PortUsage
	//	| ActionRefUsage
	//	| CalculationRefUsage
	//	| StateRefUsage;
	public ConnectionEndElementElements getConnectionEndElementAccess() {
		return pConnectionEndElement;
	}
	
	public ParserRule getConnectionEndElementRule() {
		return getConnectionEndElementAccess().getRule();
	}
	
	///* Connection Usages */ ConnectorKeyword:
	//	'connect';
	public ConnectorKeywordElements getConnectorKeywordAccess() {
		return pConnectorKeyword;
	}
	
	public ParserRule getConnectorKeywordRule() {
		return getConnectorKeywordAccess().getRule();
	}
	
	//Connector SysML::ConnectionUsage:
	//	UsagePrefix? ConnectorKeyword ConnectorPart ConnectionBody;
	public ConnectorElements getConnectorAccess() {
		return pConnector;
	}
	
	public ParserRule getConnectorRule() {
		return getConnectorAccess().getRule();
	}
	
	//ConnectionUsageKeyword:
	//	ConnectionKeyword | 'link';
	public ConnectionUsageKeywordElements getConnectionUsageKeywordAccess() {
		return pConnectionUsageKeyword;
	}
	
	public ParserRule getConnectionUsageKeywordRule() {
		return getConnectionUsageKeywordAccess().getRule();
	}
	
	//ConnectionUsage SysML::ConnectionUsage:
	//	UsagePrefix? ConnectionUsageKeyword UsageDeclaration? (ConnectorKeyword ConnectorPart)? ConnectionBody;
	public ConnectionUsageElements getConnectionUsageAccess() {
		return pConnectionUsage;
	}
	
	public ParserRule getConnectionUsageRule() {
		return getConnectionUsageAccess().getRule();
	}
	
	//fragment ConnectorPart returns SysML::ConnectionUsage:
	//	BinaryConnectorPart | NaryConnectorPart;
	public ConnectorPartElements getConnectorPartAccess() {
		return pConnectorPart;
	}
	
	public ParserRule getConnectorPartRule() {
		return getConnectorPartAccess().getRule();
	}
	
	//fragment BinaryConnectorPart returns SysML::Connector:
	//	ownedFeatureMembership_comp+=ConnectorEndMember 'to'
	//	ownedFeatureMembership_comp+=ConnectorEndMember;
	public BinaryConnectorPartElements getBinaryConnectorPartAccess() {
		return pBinaryConnectorPart;
	}
	
	public ParserRule getBinaryConnectorPartRule() {
		return getBinaryConnectorPartAccess().getRule();
	}
	
	//fragment NaryConnectorPart returns SysML::Connector:
	//	'(' ownedFeatureMembership_comp+=ConnectorEndMember ','
	//	ownedFeatureMembership_comp+=ConnectorEndMember (',' ownedFeatureMembership_comp+=ConnectorEndMember)* ')';
	public NaryConnectorPartElements getNaryConnectorPartAccess() {
		return pNaryConnectorPart;
	}
	
	public ParserRule getNaryConnectorPartRule() {
		return getNaryConnectorPartAccess().getRule();
	}
	
	//EmptySourceEndMember SysML::EndFeatureMembership:
	//	ownedMemberFeature_comp=EmptySourceEnd;
	public EmptySourceEndMemberElements getEmptySourceEndMemberAccess() {
		return pEmptySourceEndMember;
	}
	
	public ParserRule getEmptySourceEndMemberRule() {
		return getEmptySourceEndMemberAccess().getRule();
	}
	
	//EmptySourceEnd SysML::Feature:
	//	{SysML::SourceEnd};
	public EmptySourceEndElements getEmptySourceEndAccess() {
		return pEmptySourceEnd;
	}
	
	public ParserRule getEmptySourceEndRule() {
		return getEmptySourceEndAccess().getRule();
	}
	
	///* INTERFACES */ /* Interface Definitions */ InterfaceKeyword:
	//	'interface';
	public InterfaceKeywordElements getInterfaceKeywordAccess() {
		return pInterfaceKeyword;
	}
	
	public ParserRule getInterfaceKeywordRule() {
		return getInterfaceKeywordAccess().getRule();
	}
	
	//InterfaceDefKeyword:
	//	InterfaceKeyword 'def';
	public InterfaceDefKeywordElements getInterfaceDefKeywordAccess() {
		return pInterfaceDefKeyword;
	}
	
	public ParserRule getInterfaceDefKeywordRule() {
		return getInterfaceDefKeywordAccess().getRule();
	}
	
	//InterfaceDefinition SysML::InterfaceDefinition:
	//	InterfaceDefDeclaration InterfaceDefBody;
	public InterfaceDefinitionElements getInterfaceDefinitionAccess() {
		return pInterfaceDefinition;
	}
	
	public ParserRule getInterfaceDefinitionRule() {
		return getInterfaceDefinitionAccess().getRule();
	}
	
	//fragment InterfaceDefDeclaration returns SysML::InterfaceDefinition:
	//	DefinitionPrefix? InterfaceDefKeyword DefinitionDeclaration;
	public InterfaceDefDeclarationElements getInterfaceDefDeclarationAccess() {
		return pInterfaceDefDeclaration;
	}
	
	public ParserRule getInterfaceDefDeclarationRule() {
		return getInterfaceDefDeclarationAccess().getRule();
	}
	
	//fragment InterfaceDefBody returns SysML::Type:
	//	';'
	//	| '{' (documentation_comp+=OwnedDocumentation
	//	| ownedMembership_comp+=NestedDefinitionMember
	//	| ownedMembership_comp+=VariantUsageMember
	//	| ownedFeatureMembership_comp+=InterfaceUsageMember
	//	| ownedImport_comp+=PackageImport)* '}';
	public InterfaceDefBodyElements getInterfaceDefBodyAccess() {
		return pInterfaceDefBody;
	}
	
	public ParserRule getInterfaceDefBodyRule() {
		return getInterfaceDefBodyAccess().getRule();
	}
	
	//InterfaceUsageMember SysML::FeatureMembership:
	//	NestedUsageMember | InterfaceEndMember;
	public InterfaceUsageMemberElements getInterfaceUsageMemberAccess() {
		return pInterfaceUsageMember;
	}
	
	public ParserRule getInterfaceUsageMemberRule() {
		return getInterfaceUsageMemberAccess().getRule();
	}
	
	//InterfaceEndMember SysML::EndFeatureMembership:
	//	DefinitionMemberPrefix 'end' ownedMemberFeature_comp=PortEndUsage;
	public InterfaceEndMemberElements getInterfaceEndMemberAccess() {
		return pInterfaceEndMember;
	}
	
	public ParserRule getInterfaceEndMemberRule() {
		return getInterfaceEndMemberAccess().getRule();
	}
	
	///* Interface Usages */ InterfaceUsageKeyword:
	//	InterfaceKeyword;
	public InterfaceUsageKeywordElements getInterfaceUsageKeywordAccess() {
		return pInterfaceUsageKeyword;
	}
	
	public ParserRule getInterfaceUsageKeywordRule() {
		return getInterfaceUsageKeywordAccess().getRule();
	}
	
	//InterfaceUsage SysML::InterfaceUsage:
	//	UsagePrefix? InterfaceUsageKeyword InterfaceUsageDeclaration InterfaceDefBody;
	public InterfaceUsageElements getInterfaceUsageAccess() {
		return pInterfaceUsage;
	}
	
	public ParserRule getInterfaceUsageRule() {
		return getInterfaceUsageAccess().getRule();
	}
	
	//fragment InterfaceUsageDeclaration returns SysML::InterfaceUsage:
	//	UsageDeclaration? (ConnectorKeyword ConnectorPart)? | ConnectorPart;
	public InterfaceUsageDeclarationElements getInterfaceUsageDeclarationAccess() {
		return pInterfaceUsageDeclaration;
	}
	
	public ParserRule getInterfaceUsageDeclarationRule() {
		return getInterfaceUsageDeclarationAccess().getRule();
	}
	
	///* INDIVIDUALS */ /* Individual Definitions */ IndividualKeyword:
	//	'individual';
	public IndividualKeywordElements getIndividualKeywordAccess() {
		return pIndividualKeyword;
	}
	
	public ParserRule getIndividualKeywordRule() {
		return getIndividualKeywordAccess().getRule();
	}
	
	//IndividualDefKeyword:
	//	IndividualKeyword 'def';
	public IndividualDefKeywordElements getIndividualDefKeywordAccess() {
		return pIndividualDefKeyword;
	}
	
	public ParserRule getIndividualDefKeywordRule() {
		return getIndividualDefKeywordAccess().getRule();
	}
	
	//IndividualDefinition SysML::IndividualDefinition:
	//	DefinitionPrefix? IndividualDefKeyword Definition
	//	ownedMembership_comp+=LifeClassMembership;
	public IndividualDefinitionElements getIndividualDefinitionAccess() {
		return pIndividualDefinition;
	}
	
	public ParserRule getIndividualDefinitionRule() {
		return getIndividualDefinitionAccess().getRule();
	}
	
	//LifeClassMembership SysML::Membership:
	//	ownedMemberElement_comp=LifeClass;
	public LifeClassMembershipElements getLifeClassMembershipAccess() {
		return pLifeClassMembership;
	}
	
	public ParserRule getLifeClassMembershipRule() {
		return getLifeClassMembershipAccess().getRule();
	}
	
	//LifeClass SysML::LifeClass:
	//	{SysML::LifeClass};
	public LifeClassElements getLifeClassAccess() {
		return pLifeClass;
	}
	
	public ParserRule getLifeClassRule() {
		return getLifeClassAccess().getRule();
	}
	
	///* Individual Usages */ IndividualUsageKeyword:
	//	IndividualKeyword;
	public IndividualUsageKeywordElements getIndividualUsageKeywordAccess() {
		return pIndividualUsageKeyword;
	}
	
	public ParserRule getIndividualUsageKeywordRule() {
		return getIndividualUsageKeywordAccess().getRule();
	}
	
	//TimeSliceKeyword:
	//	'timeslice';
	public TimeSliceKeywordElements getTimeSliceKeywordAccess() {
		return pTimeSliceKeyword;
	}
	
	public ParserRule getTimeSliceKeywordRule() {
		return getTimeSliceKeywordAccess().getRule();
	}
	
	//SnapshotKeyword:
	//	'snapshot';
	public SnapshotKeywordElements getSnapshotKeywordAccess() {
		return pSnapshotKeyword;
	}
	
	public ParserRule getSnapshotKeywordRule() {
		return getSnapshotKeywordAccess().getRule();
	}
	
	//IndividualUsage SysML::IndividualUsage:
	//	UsagePrefix? IndividualUsageKeyword Usage;
	public IndividualUsageElements getIndividualUsageAccess() {
		return pIndividualUsage;
	}
	
	public ParserRule getIndividualUsageRule() {
		return getIndividualUsageAccess().getRule();
	}
	
	//IndividualRefUsage SysML::IndividualUsage:
	//	UsagePrefix? ('ref' IndividualUsageKeyword | isComposite?=IndividualUsageKeyword) Usage;
	public IndividualRefUsageElements getIndividualRefUsageAccess() {
		return pIndividualRefUsage;
	}
	
	public ParserRule getIndividualRefUsageRule() {
		return getIndividualRefUsageAccess().getRule();
	}
	
	//TimeSliceUsage SysML::IndividualUsage:
	//	UsagePrefix? TimeSliceKeyword Usage
	//	ownedFeatureMembership_comp+=TimeSliceFeatureMember;
	public TimeSliceUsageElements getTimeSliceUsageAccess() {
		return pTimeSliceUsage;
	}
	
	public ParserRule getTimeSliceUsageRule() {
		return getTimeSliceUsageAccess().getRule();
	}
	
	//TimeSliceRefUsage SysML::IndividualUsage:
	//	UsagePrefix? ('ref' TimeSliceKeyword | isComposite?=TimeSliceKeyword) Usage
	//	ownedFeatureMembership_comp+=TimeSliceFeatureMember;
	public TimeSliceRefUsageElements getTimeSliceRefUsageAccess() {
		return pTimeSliceRefUsage;
	}
	
	public ParserRule getTimeSliceRefUsageRule() {
		return getTimeSliceRefUsageAccess().getRule();
	}
	
	//TimeSliceFeatureMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=TimeSliceFeature;
	public TimeSliceFeatureMemberElements getTimeSliceFeatureMemberAccess() {
		return pTimeSliceFeatureMember;
	}
	
	public ParserRule getTimeSliceFeatureMemberRule() {
		return getTimeSliceFeatureMemberAccess().getRule();
	}
	
	//TimeSliceFeature SysML::TimeSliceFeature:
	//	{SysML::TimeSliceFeature};
	public TimeSliceFeatureElements getTimeSliceFeatureAccess() {
		return pTimeSliceFeature;
	}
	
	public ParserRule getTimeSliceFeatureRule() {
		return getTimeSliceFeatureAccess().getRule();
	}
	
	//SnapshotUsage SysML::IndividualUsage:
	//	UsagePrefix? SnapshotKeyword Usage
	//	ownedFeatureMembership_comp+=SnapshotFeatureMember;
	public SnapshotUsageElements getSnapshotUsageAccess() {
		return pSnapshotUsage;
	}
	
	public ParserRule getSnapshotUsageRule() {
		return getSnapshotUsageAccess().getRule();
	}
	
	//SnapshotRefUsage SysML::IndividualUsage:
	//	UsagePrefix? ('ref' SnapshotKeyword | isComposite?=SnapshotKeyword) Usage
	//	ownedFeatureMembership_comp+=SnapshotFeatureMember;
	public SnapshotRefUsageElements getSnapshotRefUsageAccess() {
		return pSnapshotRefUsage;
	}
	
	public ParserRule getSnapshotRefUsageRule() {
		return getSnapshotRefUsageAccess().getRule();
	}
	
	//SnapshotFeatureMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=SnapshotFeature;
	public SnapshotFeatureMemberElements getSnapshotFeatureMemberAccess() {
		return pSnapshotFeatureMember;
	}
	
	public ParserRule getSnapshotFeatureMemberRule() {
		return getSnapshotFeatureMemberAccess().getRule();
	}
	
	//SnapshotFeature SysML::SnapshotFeature:
	//	{SysML::SnapshotFeature};
	public SnapshotFeatureElements getSnapshotFeatureAccess() {
		return pSnapshotFeature;
	}
	
	public ParserRule getSnapshotFeatureRule() {
		return getSnapshotFeatureAccess().getRule();
	}
	
	///* Individual Succession */ EmptySuccessionMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=EmptySuccession;
	public EmptySuccessionMemberElements getEmptySuccessionMemberAccess() {
		return pEmptySuccessionMember;
	}
	
	public ParserRule getEmptySuccessionMemberRule() {
		return getEmptySuccessionMemberAccess().getRule();
	}
	
	//EmptySuccession SysML::Succession:
	//	'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember
	//	ownedFeatureMembership_comp+=EmptyTargetEndMember;
	public EmptySuccessionElements getEmptySuccessionAccess() {
		return pEmptySuccession;
	}
	
	public ParserRule getEmptySuccessionRule() {
		return getEmptySuccessionAccess().getRule();
	}
	
	//MultiplicitySourceEndMember SysML::EndFeatureMembership:
	//	ownedMemberFeature_comp=MultiplicitySourceEnd;
	public MultiplicitySourceEndMemberElements getMultiplicitySourceEndMemberAccess() {
		return pMultiplicitySourceEndMember;
	}
	
	public ParserRule getMultiplicitySourceEndMemberRule() {
		return getMultiplicitySourceEndMemberAccess().getRule();
	}
	
	//MultiplicitySourceEnd SysML::Feature:
	//	{SysML::SourceEnd} ownedMembership_comp+=MultiplicityMember?;
	public MultiplicitySourceEndElements getMultiplicitySourceEndAccess() {
		return pMultiplicitySourceEnd;
	}
	
	public ParserRule getMultiplicitySourceEndRule() {
		return getMultiplicitySourceEndAccess().getRule();
	}
	
	//EmptyTargetEndMember SysML::EndFeatureMembership:
	//	ownedMemberFeature_comp=EmptyTargetEnd;
	public EmptyTargetEndMemberElements getEmptyTargetEndMemberAccess() {
		return pEmptyTargetEndMember;
	}
	
	public ParserRule getEmptyTargetEndMemberRule() {
		return getEmptyTargetEndMemberAccess().getRule();
	}
	
	//EmptyTargetEnd SysML::Feature:
	//	{SysML::TargetEnd};
	public EmptyTargetEndElements getEmptyTargetEndAccess() {
		return pEmptyTargetEnd;
	}
	
	public ParserRule getEmptyTargetEndRule() {
		return getEmptyTargetEndAccess().getRule();
	}
	
	///* ACTION */ /* Action Definitions */ ActionKeyword:
	//	'action';
	public ActionKeywordElements getActionKeywordAccess() {
		return pActionKeyword;
	}
	
	public ParserRule getActionKeywordRule() {
		return getActionKeywordAccess().getRule();
	}
	
	//ActionDefKeyword:
	//	ActionKeyword 'def' | 'activity';
	public ActionDefKeywordElements getActionDefKeywordAccess() {
		return pActionDefKeyword;
	}
	
	public ParserRule getActionDefKeywordRule() {
		return getActionDefKeywordAccess().getRule();
	}
	
	//ActionDefinition SysML::ActionDefinition:
	//	DefinitionPrefix? ActionDefKeyword ActionDeclaration ActionBody;
	public ActionDefinitionElements getActionDefinitionAccess() {
		return pActionDefinition;
	}
	
	public ParserRule getActionDefinitionRule() {
		return getActionDefinitionAccess().getRule();
	}
	
	//fragment ActionDeclaration returns SysML::ActionDefinition:
	//	DefinitionDeclaration ParameterList?;
	public ActionDeclarationElements getActionDeclarationAccess() {
		return pActionDeclaration;
	}
	
	public ParserRule getActionDeclarationRule() {
		return getActionDeclarationAccess().getRule();
	}
	
	//fragment ParameterList returns SysML::Type:
	//	'(' (ownedFeatureMembership_comp+=ParameterMember (',' ownedFeatureMembership_comp+=ParameterMember)*)? ')';
	public ParameterListElements getParameterListAccess() {
		return pParameterList;
	}
	
	public ParserRule getParameterListRule() {
		return getParameterListAccess().getRule();
	}
	
	//ParameterMember SysML::ParameterMembership:
	//	direction=FeatureDirection? ownedMemberParameter_comp=Parameter;
	public ParameterMemberElements getParameterMemberAccess() {
		return pParameterMember;
	}
	
	public ParserRule getParameterMemberRule() {
		return getParameterMemberAccess().getRule();
	}
	
	//fragment ActionBody returns SysML::Type:
	//	';'
	//	// Note: Using a syntactic predicate here seems to avoid a possible infinite loop
	//	// while incrementally parsing.
	//	| '{' => ActionBodyItem* '}';
	public ActionBodyElements getActionBodyAccess() {
		return pActionBody;
	}
	
	public ParserRule getActionBodyRule() {
		return getActionBodyAccess().getRule();
	}
	
	//fragment ActionBodyItem returns SysML::Type:
	//	documentation_comp+=OwnedDocumentation
	//	| ownedMembership_comp+=NestedDefinitionMember
	//	| ownedMembership_comp+=VariantUsageMember
	//	| ownedFeatureMembership_comp+=ParameterFlowUsageMember
	//	| ownedFeatureMembership_comp+=StructureUsageMember
	//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
	//	ownedFeatureMembership_comp+=IndividualUsageMember
	//	| ownedFeatureMembership_comp+=InitialNodeMember
	//	ownedFeatureMembership_comp+=TargetSuccessionMember*
	//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
	//	ownedFeatureMembership_comp+=(BehaviorUsageMember | ActionNodeMember)
	//	ownedFeatureMembership_comp+=TargetSuccessionMember*
	//	| ownedFeatureMembership_comp+=GuardedSuccessionMember
	//	| ownedImport_comp+=PackageImport;
	public ActionBodyItemElements getActionBodyItemAccess() {
		return pActionBodyItem;
	}
	
	public ParserRule getActionBodyItemRule() {
		return getActionBodyItemAccess().getRule();
	}
	
	//ParameterFlowUsageMember SysML::ParameterMembership:
	//	DefinitionMemberPrefix direction=FeatureDirection
	//	ownedMemberParameter_comp=FlowUsageElement;
	public ParameterFlowUsageMemberElements getParameterFlowUsageMemberAccess() {
		return pParameterFlowUsageMember;
	}
	
	public ParserRule getParameterFlowUsageMemberRule() {
		return getParameterFlowUsageMemberAccess().getRule();
	}
	
	//InitialNodeMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix 'first' memberFeature=[SysML::Feature|QualifiedName] ';';
	public InitialNodeMemberElements getInitialNodeMemberAccess() {
		return pInitialNodeMember;
	}
	
	public ParserRule getInitialNodeMemberRule() {
		return getInitialNodeMemberAccess().getRule();
	}
	
	//ActionNodeMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=ActionNode;
	public ActionNodeMemberElements getActionNodeMemberAccess() {
		return pActionNodeMember;
	}
	
	public ParserRule getActionNodeMemberRule() {
		return getActionNodeMemberAccess().getRule();
	}
	
	//TargetSuccessionMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=ActionTargetSuccession ';';
	public TargetSuccessionMemberElements getTargetSuccessionMemberAccess() {
		return pTargetSuccessionMember;
	}
	
	public ParserRule getTargetSuccessionMemberRule() {
		return getTargetSuccessionMemberAccess().getRule();
	}
	
	//GuardedSuccessionMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=GuardedSuccession ';';
	public GuardedSuccessionMemberElements getGuardedSuccessionMemberAccess() {
		return pGuardedSuccessionMember;
	}
	
	public ParserRule getGuardedSuccessionMemberRule() {
		return getGuardedSuccessionMemberAccess().getRule();
	}
	
	///* Parameters */ Parameter SysML::Usage:
	//	{SysML::ReferenceUsage} (ParameterDeclaration | ReferenceUsageKeyword ParameterDeclaration?) | {SysML::AttributeUsage}
	//	AttributeUsageKeyword ParameterDeclaration?
	//	| {SysML::ItemUsage} ItemUsageKeyword ParameterDeclaration?
	//	| {SysML::PartUsage} PartUsageKeyword ParameterDeclaration?
	//	| {SysML::ViewUsage} ViewUsageKeyword ParameterDeclaration?
	//	| {SysML::RenderingUsage} RenderingUsageKeyword ParameterDeclaration?
	//	| {SysML::ActionUsage} ActionUsageKeyword ParameterDeclaration?
	//	| {SysML::CalculationUsage} CalculationUsageKeyword ParameterDeclaration?
	//	| {SysML::StateUsage} StateUsageKeyword ParameterDeclaration?
	//	| {SysML::ConstraintUsage} ConstraintUsageKeyword ParameterDeclaration?
	//	| {SysML::RequirementUsage} RequirementUsageKeyword ParameterDeclaration?
	//	| {SysML::AnalysisCaseUsage} AnalysisCaseUsageKeyword ParameterDeclaration?
	//	| {SysML::VerificationCaseUsage} VerificationCaseUsageKeyword ParameterDeclaration?
	//	| {SysML::ViewpointUsage} ViewpointUsageKeyword ParameterDeclaration?;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//fragment ParameterDeclaration returns SysML::Usage:
	//	Identification ParameterSpecializationPart?
	//	| ParameterSpecializationPart;
	public ParameterDeclarationElements getParameterDeclarationAccess() {
		return pParameterDeclaration;
	}
	
	public ParserRule getParameterDeclarationRule() {
		return getParameterDeclarationAccess().getRule();
	}
	
	//fragment ParameterSpecializationPart returns SysML::Feature:
	//	-> ParameterSpecialization+ MultiplicityPart? ParameterSpecialization*
	//	| MultiplicityPart ParameterSpecialization*;
	public ParameterSpecializationPartElements getParameterSpecializationPartAccess() {
		return pParameterSpecializationPart;
	}
	
	public ParserRule getParameterSpecializationPartRule() {
		return getParameterSpecializationPartAccess().getRule();
	}
	
	//fragment ParameterSpecialization returns SysML::Feature:
	//	TypedBy | Subsets | Redefines;
	public ParameterSpecializationElements getParameterSpecializationAccess() {
		return pParameterSpecialization;
	}
	
	public ParserRule getParameterSpecializationRule() {
		return getParameterSpecializationAccess().getRule();
	}
	
	///* Action Usages */ ActionUsageKeyword:
	//	ActionKeyword;
	public ActionUsageKeywordElements getActionUsageKeywordAccess() {
		return pActionUsageKeyword;
	}
	
	public ParserRule getActionUsageKeywordRule() {
		return getActionUsageKeywordAccess().getRule();
	}
	
	//ActionUsage SysML::ActionUsage:
	//	UsagePrefix? ActionUsageKeyword ActionUsageDeclaration ActionBody;
	public ActionUsageElements getActionUsageAccess() {
		return pActionUsage;
	}
	
	public ParserRule getActionUsageRule() {
		return getActionUsageAccess().getRule();
	}
	
	//ActionFlowUsage SysML::ActionUsage:
	//	UsagePrefix? 'ref'? ActionUsageKeyword ActionUsageDeclaration ActionBody;
	public ActionFlowUsageElements getActionFlowUsageAccess() {
		return pActionFlowUsage;
	}
	
	public ParserRule getActionFlowUsageRule() {
		return getActionFlowUsageAccess().getRule();
	}
	
	//ActionRefUsage SysML::ActionUsage:
	//	UsagePrefix? ('ref' ActionUsageKeyword | isComposite?=ActionUsageKeyword) ActionUsageDeclaration ActionBody;
	public ActionRefUsageElements getActionRefUsageAccess() {
		return pActionRefUsage;
	}
	
	public ParserRule getActionRefUsageRule() {
		return getActionRefUsageAccess().getRule();
	}
	
	//PerformActionUsage SysML::PerformActionUsage:
	//	UsagePrefix? 'perform' PerformActionUsageDeclaration ActionBody;
	public PerformActionUsageElements getPerformActionUsageAccess() {
		return pPerformActionUsage;
	}
	
	public ParserRule getPerformActionUsageRule() {
		return getPerformActionUsageAccess().getRule();
	}
	
	//fragment PerformActionUsageDeclaration returns SysML::ActionUsage:
	//	(ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
	//	| ActionUsageKeyword UsageDeclaration?) (ValuePart | ActionUsageParameterList)?;
	public PerformActionUsageDeclarationElements getPerformActionUsageDeclarationAccess() {
		return pPerformActionUsageDeclaration;
	}
	
	public ParserRule getPerformActionUsageDeclarationRule() {
		return getPerformActionUsageDeclarationAccess().getRule();
	}
	
	//fragment ActionUsageDeclaration returns SysML::Step:
	//	UsageDeclaration? (ValuePart | ActionUsageParameterList)?;
	public ActionUsageDeclarationElements getActionUsageDeclarationAccess() {
		return pActionUsageDeclaration;
	}
	
	public ParserRule getActionUsageDeclarationRule() {
		return getActionUsageDeclarationAccess().getRule();
	}
	
	//fragment ActionUsageParameterList returns SysML::Type:
	//	'(' (ownedFeatureMembership_comp+=ActionUsageParameterMember (','
	//	ownedFeatureMembership_comp+=ActionUsageParameterMember)*)? ')';
	public ActionUsageParameterListElements getActionUsageParameterListAccess() {
		return pActionUsageParameterList;
	}
	
	public ParserRule getActionUsageParameterListRule() {
		return getActionUsageParameterListAccess().getRule();
	}
	
	//ActionUsageParameterMember SysML::ParameterMembership:
	//	direction=FeatureDirection? ownedMemberParameter_comp=ActionUsageParameter;
	public ActionUsageParameterMemberElements getActionUsageParameterMemberAccess() {
		return pActionUsageParameterMember;
	}
	
	public ParserRule getActionUsageParameterMemberRule() {
		return getActionUsageParameterMemberAccess().getRule();
	}
	
	//ActionUsageParameter SysML::Usage:
	//	Parameter ValueOrFlowPart? | {SysML::ReferenceUsage} ValueOrFlowPart;
	public ActionUsageParameterElements getActionUsageParameterAccess() {
		return pActionUsageParameter;
	}
	
	public ParserRule getActionUsageParameterRule() {
		return getActionUsageParameterAccess().getRule();
	}
	
	///* Action Nodes */ ActionNode SysML::ActionUsage:
	//	SendNode | AcceptNode | ControlNode;
	public ActionNodeElements getActionNodeAccess() {
		return pActionNode;
	}
	
	public ParserRule getActionNodeRule() {
		return getActionNodeAccess().getRule();
	}
	
	//AcceptNode SysML::AcceptActionUsage:
	//	UsagePrefix? AcceptNodeDeclaration ActionBody;
	public AcceptNodeElements getAcceptNodeAccess() {
		return pAcceptNode;
	}
	
	public ParserRule getAcceptNodeRule() {
		return getAcceptNodeAccess().getRule();
	}
	
	//fragment AcceptNodeDeclaration returns SysML::ActionUsage:
	//	ownedFeatureMembership_comp+=EmptyParameterMember ('action' UsageDeclaration)? 'accept'
	//	ownedFeatureMembership_comp+=ItemFeatureMember;
	public AcceptNodeDeclarationElements getAcceptNodeDeclarationAccess() {
		return pAcceptNodeDeclaration;
	}
	
	public ParserRule getAcceptNodeDeclarationRule() {
		return getAcceptNodeDeclarationAccess().getRule();
	}
	
	//SendNode SysML::SendActionUsage:
	//	UsagePrefix? SendNodeDeclaration ActionBody;
	public SendNodeElements getSendNodeAccess() {
		return pSendNode;
	}
	
	public ParserRule getSendNodeRule() {
		return getSendNodeAccess().getRule();
	}
	
	//fragment SendNodeDeclaration returns SysML::ActionUsage:
	//	ownedFeatureMembership_comp+=EmptyParameterMember ownedFeatureMembership_comp+=EmptyItemFeatureMember ('action'
	//	UsageDeclaration)? 'send' ownedFeatureMembership_comp+=OwnedExpressionMember
	//	'to' ownedFeatureMembership_comp+=OwnedExpressionMember;
	public SendNodeDeclarationElements getSendNodeDeclarationAccess() {
		return pSendNodeDeclaration;
	}
	
	public ParserRule getSendNodeDeclarationRule() {
		return getSendNodeDeclarationAccess().getRule();
	}
	
	//ControlNode SysML::ControlNode:
	//	MergeNode
	//	| DecisionNode
	//	| JoinNode
	//	| ForkNode;
	public ControlNodeElements getControlNodeAccess() {
		return pControlNode;
	}
	
	public ParserRule getControlNodeRule() {
		return getControlNodeAccess().getRule();
	}
	
	//MergeNode SysML::MergeNode:
	//	UsagePrefix? isComposite?='merge' UsageDeclaration? ';';
	public MergeNodeElements getMergeNodeAccess() {
		return pMergeNode;
	}
	
	public ParserRule getMergeNodeRule() {
		return getMergeNodeAccess().getRule();
	}
	
	//DecisionNode SysML::DecisionNode:
	//	UsagePrefix? isComposite?='decide' UsageDeclaration? ';';
	public DecisionNodeElements getDecisionNodeAccess() {
		return pDecisionNode;
	}
	
	public ParserRule getDecisionNodeRule() {
		return getDecisionNodeAccess().getRule();
	}
	
	//JoinNode SysML::JoinNode:
	//	UsagePrefix? isComposite?='join' UsageDeclaration? ';';
	public JoinNodeElements getJoinNodeAccess() {
		return pJoinNode;
	}
	
	public ParserRule getJoinNodeRule() {
		return getJoinNodeAccess().getRule();
	}
	
	//ForkNode SysML::ForkNode:
	//	UsagePrefix? isComposite?='fork' UsageDeclaration? ';';
	public ForkNodeElements getForkNodeAccess() {
		return pForkNode;
	}
	
	public ParserRule getForkNodeRule() {
		return getForkNodeAccess().getRule();
	}
	
	//EmptyParameterMember SysML::ParameterMembership:
	//	ownedMemberParameter_comp=EmptyParameter;
	public EmptyParameterMemberElements getEmptyParameterMemberAccess() {
		return pEmptyParameterMember;
	}
	
	public ParserRule getEmptyParameterMemberRule() {
		return getEmptyParameterMemberAccess().getRule();
	}
	
	//EmptyParameter SysML::Usage:
	//	{SysML::ReferenceUsage};
	public EmptyParameterElements getEmptyParameterAccess() {
		return pEmptyParameter;
	}
	
	public ParserRule getEmptyParameterRule() {
		return getEmptyParameterAccess().getRule();
	}
	
	///* Action Succession */ ActionTargetSuccession SysML::Feature:
	//	TargetSuccession | GuardedTargetSuccession | DefaultTargetSuccession;
	public ActionTargetSuccessionElements getActionTargetSuccessionAccess() {
		return pActionTargetSuccession;
	}
	
	public ParserRule getActionTargetSuccessionRule() {
		return getActionTargetSuccessionAccess().getRule();
	}
	
	//TargetSuccession SysML::Succession:
	//	'then' ownedFeatureMembership_comp+=MultiplicitySourceEndMember
	//	ownedFeatureMembership_comp+=ConnectorEndMember;
	public TargetSuccessionElements getTargetSuccessionAccess() {
		return pTargetSuccession;
	}
	
	public ParserRule getTargetSuccessionRule() {
		return getTargetSuccessionAccess().getRule();
	}
	
	//GuardedTargetSuccession SysML::TransitionUsage:
	//	ownedFeatureMembership_comp+=GuardExpressionMember
	//	'then' ownedFeatureMembership_comp+=TransitionSuccessionMember;
	public GuardedTargetSuccessionElements getGuardedTargetSuccessionAccess() {
		return pGuardedTargetSuccession;
	}
	
	public ParserRule getGuardedTargetSuccessionRule() {
		return getGuardedTargetSuccessionAccess().getRule();
	}
	
	//DefaultTargetSuccession SysML::TransitionUsage:
	//	'else' ownedFeatureMembership_comp+=TransitionSuccessionMember;
	public DefaultTargetSuccessionElements getDefaultTargetSuccessionAccess() {
		return pDefaultTargetSuccession;
	}
	
	public ParserRule getDefaultTargetSuccessionRule() {
		return getDefaultTargetSuccessionAccess().getRule();
	}
	
	//GuardedSuccession SysML::TransitionUsage:
	//	SuccessionKeyword (UsageDeclaration? 'first')?
	//	ownedFeatureMembership_comp+=TransitionSourceMember
	//	ownedFeatureMembership_comp+=GuardExpressionMember
	//	'then' ownedFeatureMembership_comp+=TransitionSuccessionMember;
	public GuardedSuccessionElements getGuardedSuccessionAccess() {
		return pGuardedSuccession;
	}
	
	public ParserRule getGuardedSuccessionRule() {
		return getGuardedSuccessionAccess().getRule();
	}
	
	///* STATES */ /* State Definitions */ StateKeyword:
	//	'state';
	public StateKeywordElements getStateKeywordAccess() {
		return pStateKeyword;
	}
	
	public ParserRule getStateKeywordRule() {
		return getStateKeywordAccess().getRule();
	}
	
	//StateDefKeyword:
	//	StateKeyword 'def';
	public StateDefKeywordElements getStateDefKeywordAccess() {
		return pStateDefKeyword;
	}
	
	public ParserRule getStateDefKeywordRule() {
		return getStateDefKeywordAccess().getRule();
	}
	
	//StateDefinition SysML::StateDefinition:
	//	isAbstract?='abstract'? StateDefKeyword ActionDeclaration StateBody;
	public StateDefinitionElements getStateDefinitionAccess() {
		return pStateDefinition;
	}
	
	public ParserRule getStateDefinitionRule() {
		return getStateDefinitionAccess().getRule();
	}
	
	//fragment StateBody returns SysML::Type:
	//	';' | '{' StateBodyPart '}';
	public StateBodyElements getStateBodyAccess() {
		return pStateBody;
	}
	
	public ParserRule getStateBodyRule() {
		return getStateBodyAccess().getRule();
	}
	
	//fragment StateBodyPart returns SysML::Type:
	//	(ownedFeatureMembership_comp+=EntryActionMember
	//	ownedFeatureMembership_comp+=EntryTransitionMember*)?
	//	ownedFeatureMembership_comp+=DoActionMember?
	//	ownedFeatureMembership_comp+=ExitActionMember?
	//	// Note: Using a syntactic predicate here seems to avoid a possible infinite loop
	//	// while incrementally parsing.
	//	=> StateDefBodyItem*;
	public StateBodyPartElements getStateBodyPartAccess() {
		return pStateBodyPart;
	}
	
	public ParserRule getStateBodyPartRule() {
		return getStateBodyPartAccess().getRule();
	}
	
	//fragment StateDefBodyItem returns SysML::Type:
	//	documentation_comp+=OwnedDocumentation
	//	| ownedMembership_comp+=NestedDefinitionMember
	//	| ownedMembership_comp+=VariantUsageMember
	//	| ownedFeatureMembership_comp+=ParameterFlowUsageMember
	//	| ownedFeatureMembership_comp+=StructureUsageMember
	//	| ownedFeatureMembership_comp+=EmptySuccessionMember?
	//	ownedFeatureMembership_comp+=IndividualUsageMember
	//	| ownedFeatureMembership_comp+=BehaviorUsageMember
	//	ownedFeatureMembership_comp+=TargetTransitionUsageMember*
	//	| ownedFeatureMembership_comp+=TransitionUsageMember
	//	| ownedImport_comp+=PackageImport;
	public StateDefBodyItemElements getStateDefBodyItemAccess() {
		return pStateDefBodyItem;
	}
	
	public ParserRule getStateDefBodyItemRule() {
		return getStateDefBodyItemAccess().getRule();
	}
	
	//EntryActionMember SysML::StateSubactionMembership:
	//	DefinitionMemberPrefix kind=EntryActionKind ownedMemberFeature_comp=StateActionUsage;
	public EntryActionMemberElements getEntryActionMemberAccess() {
		return pEntryActionMember;
	}
	
	public ParserRule getEntryActionMemberRule() {
		return getEntryActionMemberAccess().getRule();
	}
	
	//EntryActionKind SysML::StateSubactionKind:
	//	'entry';
	public EntryActionKindElements getEntryActionKindAccess() {
		return pEntryActionKind;
	}
	
	public ParserRule getEntryActionKindRule() {
		return getEntryActionKindAccess().getRule();
	}
	
	//DoActionMember SysML::StateSubactionMembership:
	//	DefinitionMemberPrefix kind=DoActionKind ownedMemberFeature_comp=StateActionUsage;
	public DoActionMemberElements getDoActionMemberAccess() {
		return pDoActionMember;
	}
	
	public ParserRule getDoActionMemberRule() {
		return getDoActionMemberAccess().getRule();
	}
	
	//DoActionKind SysML::StateSubactionKind:
	//	'do';
	public DoActionKindElements getDoActionKindAccess() {
		return pDoActionKind;
	}
	
	public ParserRule getDoActionKindRule() {
		return getDoActionKindAccess().getRule();
	}
	
	//ExitActionMember SysML::StateSubactionMembership:
	//	DefinitionMemberPrefix kind=ExitActionKind ownedMemberFeature_comp=StateActionUsage;
	public ExitActionMemberElements getExitActionMemberAccess() {
		return pExitActionMember;
	}
	
	public ParserRule getExitActionMemberRule() {
		return getExitActionMemberAccess().getRule();
	}
	
	//ExitActionKind SysML::StateSubactionKind:
	//	'exit';
	public ExitActionKindElements getExitActionKindAccess() {
		return pExitActionKind;
	}
	
	public ParserRule getExitActionKindRule() {
		return getExitActionKindAccess().getRule();
	}
	
	//EntryTransitionMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix (ownedMemberFeature_comp=GuardedTargetSuccession
	//	| 'then' ownedMemberFeature_comp=TransitionSuccession) ';';
	public EntryTransitionMemberElements getEntryTransitionMemberAccess() {
		return pEntryTransitionMember;
	}
	
	public ParserRule getEntryTransitionMemberRule() {
		return getEntryTransitionMemberAccess().getRule();
	}
	
	//StateActionUsage SysML::ActionUsage:
	//	EmptyActionUsage ';' | PerformedActionUsage ActionBody;
	public StateActionUsageElements getStateActionUsageAccess() {
		return pStateActionUsage;
	}
	
	public ParserRule getStateActionUsageRule() {
		return getStateActionUsageAccess().getRule();
	}
	
	//EmptyActionUsage SysML::ActionUsage:
	//	{SysML::ActionUsage};
	public EmptyActionUsageElements getEmptyActionUsageAccess() {
		return pEmptyActionUsage;
	}
	
	public ParserRule getEmptyActionUsageRule() {
		return getEmptyActionUsageAccess().getRule();
	}
	
	//PerformedActionUsage SysML::ActionUsage:
	//	{SysML::PerformActionUsage} PerformActionUsageDeclaration
	//	| {SysML::AcceptActionUsage} AcceptNodeDeclaration
	//	| {SysML::SendActionUsage} SendNodeDeclaration;
	public PerformedActionUsageElements getPerformedActionUsageAccess() {
		return pPerformedActionUsage;
	}
	
	public ParserRule getPerformedActionUsageRule() {
		return getPerformedActionUsageAccess().getRule();
	}
	
	//TransitionUsageMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=TransitionUsage ';';
	public TransitionUsageMemberElements getTransitionUsageMemberAccess() {
		return pTransitionUsageMember;
	}
	
	public ParserRule getTransitionUsageMemberRule() {
		return getTransitionUsageMemberAccess().getRule();
	}
	
	//TargetTransitionUsageMember SysML::FeatureMembership:
	//	DefinitionMemberPrefix ownedMemberFeature_comp=TargetTransitionUsage ';';
	public TargetTransitionUsageMemberElements getTargetTransitionUsageMemberAccess() {
		return pTargetTransitionUsageMember;
	}
	
	public ParserRule getTargetTransitionUsageMemberRule() {
		return getTargetTransitionUsageMemberAccess().getRule();
	}
	
	///* State Usages */ StateUsageKeyword:
	//	StateKeyword;
	public StateUsageKeywordElements getStateUsageKeywordAccess() {
		return pStateUsageKeyword;
	}
	
	public ParserRule getStateUsageKeywordRule() {
		return getStateUsageKeywordAccess().getRule();
	}
	
	//StateUsage SysML::StateUsage:
	//	UsagePrefix? StateUsageKeyword ActionUsageDeclaration StateBody;
	public StateUsageElements getStateUsageAccess() {
		return pStateUsage;
	}
	
	public ParserRule getStateUsageRule() {
		return getStateUsageAccess().getRule();
	}
	
	//StateFlowUsage SysML::StateUsage:
	//	UsagePrefix? 'ref'? StateUsageKeyword ActionUsageDeclaration StateBody;
	public StateFlowUsageElements getStateFlowUsageAccess() {
		return pStateFlowUsage;
	}
	
	public ParserRule getStateFlowUsageRule() {
		return getStateFlowUsageAccess().getRule();
	}
	
	//StateRefUsage SysML::StateUsage:
	//	UsagePrefix? ('ref' StateUsageKeyword | isComposite?=StateUsageKeyword) ActionUsageDeclaration StateBody;
	public StateRefUsageElements getStateRefUsageAccess() {
		return pStateRefUsage;
	}
	
	public ParserRule getStateRefUsageRule() {
		return getStateRefUsageAccess().getRule();
	}
	
	//ExhibitStateUsage SysML::ExhibitStateUsage:
	//	UsagePrefix? 'exhibit' (ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
	//	| StateUsageKeyword UsageDeclaration?) (ValuePart | ActionUsageParameterList)? StateBody;
	public ExhibitStateUsageElements getExhibitStateUsageAccess() {
		return pExhibitStateUsage;
	}
	
	public ParserRule getExhibitStateUsageRule() {
		return getExhibitStateUsageAccess().getRule();
	}
	
	///* Transition Usages */ TransitionUsageKeyword:
	//	'transition';
	public TransitionUsageKeywordElements getTransitionUsageKeywordAccess() {
		return pTransitionUsageKeyword;
	}
	
	public ParserRule getTransitionUsageKeywordRule() {
		return getTransitionUsageKeywordAccess().getRule();
	}
	
	//TransitionUsage SysML::TransitionUsage:
	//	TransitionUsageKeyword (UsageDeclaration? 'first')?
	//	ownedFeatureMembership_comp+=TransitionSourceMember (ownedImport_comp+=EmptyImport
	//	ownedFeatureMembership_comp+=TriggerActionMember)?
	//	ownedFeatureMembership_comp+=GuardExpressionMember?
	//	ownedFeatureMembership_comp+=EffectBehaviorMember?
	//	'then' ownedFeatureMembership_comp+=TransitionSuccessionMember;
	public TransitionUsageElements getTransitionUsageAccess() {
		return pTransitionUsage;
	}
	
	public ParserRule getTransitionUsageRule() {
		return getTransitionUsageAccess().getRule();
	}
	
	//TargetTransitionUsage SysML::TransitionUsage:
	//	(ownedImport_comp+=EmptyImport
	//	ownedFeatureMembership_comp+=TriggerActionMember)?
	//	ownedFeatureMembership_comp+=GuardExpressionMember?
	//	ownedFeatureMembership_comp+=EffectBehaviorMember?
	//	'then' ownedFeatureMembership_comp+=TransitionSuccessionMember;
	public TargetTransitionUsageElements getTargetTransitionUsageAccess() {
		return pTargetTransitionUsage;
	}
	
	public ParserRule getTargetTransitionUsageRule() {
		return getTargetTransitionUsageAccess().getRule();
	}
	
	//EmptyImport SysML::Import:
	//	{SysML::Import};
	public EmptyImportElements getEmptyImportAccess() {
		return pEmptyImport;
	}
	
	public ParserRule getEmptyImportRule() {
		return getEmptyImportAccess().getRule();
	}
	
	//TransitionSourceMember SysML::FeatureMembership:
	//	memberFeature=[SysML::Feature|QualifiedName];
	public TransitionSourceMemberElements getTransitionSourceMemberAccess() {
		return pTransitionSourceMember;
	}
	
	public ParserRule getTransitionSourceMemberRule() {
		return getTransitionSourceMemberAccess().getRule();
	}
	
	//TriggerActionMember SysML::TransitionFeatureMembership:
	//	kind=TriggerFeatureKind ownedMemberFeature_comp=TriggerAction;
	public TriggerActionMemberElements getTriggerActionMemberAccess() {
		return pTriggerActionMember;
	}
	
	public ParserRule getTriggerActionMemberRule() {
		return getTriggerActionMemberAccess().getRule();
	}
	
	//enum TriggerFeatureKind returns SysML::TransitionFeatureKind:
	//	trigger='accept';
	public TriggerFeatureKindElements getTriggerFeatureKindAccess() {
		return eTriggerFeatureKind;
	}
	
	public EnumRule getTriggerFeatureKindRule() {
		return getTriggerFeatureKindAccess().getRule();
	}
	
	//TriggerAction SysML::AcceptActionUsage:
	//	ownedFeatureMembership_comp+=EmptyParameterMember
	//	ownedFeatureMembership_comp+=ItemFeatureMember;
	public TriggerActionElements getTriggerActionAccess() {
		return pTriggerAction;
	}
	
	public ParserRule getTriggerActionRule() {
		return getTriggerActionAccess().getRule();
	}
	
	//GuardExpressionMember SysML::TransitionFeatureMembership:
	//	kind=GuardFeatureKind ownedMemberFeature_comp=OwnedExpression;
	public GuardExpressionMemberElements getGuardExpressionMemberAccess() {
		return pGuardExpressionMember;
	}
	
	public ParserRule getGuardExpressionMemberRule() {
		return getGuardExpressionMemberAccess().getRule();
	}
	
	//enum GuardFeatureKind returns SysML::TransitionFeatureKind:
	//	guard='if';
	public GuardFeatureKindElements getGuardFeatureKindAccess() {
		return eGuardFeatureKind;
	}
	
	public EnumRule getGuardFeatureKindRule() {
		return getGuardFeatureKindAccess().getRule();
	}
	
	//EffectBehaviorMember SysML::TransitionFeatureMembership:
	//	kind=EffectFeatureKind ownedMemberFeature_comp=EffectBehaviorUsage;
	public EffectBehaviorMemberElements getEffectBehaviorMemberAccess() {
		return pEffectBehaviorMember;
	}
	
	public ParserRule getEffectBehaviorMemberRule() {
		return getEffectBehaviorMemberAccess().getRule();
	}
	
	//enum EffectFeatureKind returns SysML::TransitionFeatureKind:
	//	effect='do';
	public EffectFeatureKindElements getEffectFeatureKindAccess() {
		return eEffectFeatureKind;
	}
	
	public EnumRule getEffectFeatureKindRule() {
		return getEffectFeatureKindAccess().getRule();
	}
	
	//EffectBehaviorUsage SysML::ActionUsage:
	//	EmptyActionUsage | PerformedActionUsage ('{' ActionBodyItem* '}')?;
	public EffectBehaviorUsageElements getEffectBehaviorUsageAccess() {
		return pEffectBehaviorUsage;
	}
	
	public ParserRule getEffectBehaviorUsageRule() {
		return getEffectBehaviorUsageAccess().getRule();
	}
	
	//TransitionSuccessionMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=TransitionSuccession;
	public TransitionSuccessionMemberElements getTransitionSuccessionMemberAccess() {
		return pTransitionSuccessionMember;
	}
	
	public ParserRule getTransitionSuccessionMemberRule() {
		return getTransitionSuccessionMemberAccess().getRule();
	}
	
	//TransitionSuccession SysML::Succession:
	//	ownedFeatureMembership_comp+=EmptySourceEndMember
	//	ownedFeatureMembership_comp+=ConnectorEndMember;
	public TransitionSuccessionElements getTransitionSuccessionAccess() {
		return pTransitionSuccession;
	}
	
	public ParserRule getTransitionSuccessionRule() {
		return getTransitionSuccessionAccess().getRule();
	}
	
	///* CALCULATIONS */ /* Calculation Definitions */ CalculationKeyword:
	//	'calc';
	public CalculationKeywordElements getCalculationKeywordAccess() {
		return pCalculationKeyword;
	}
	
	public ParserRule getCalculationKeywordRule() {
		return getCalculationKeywordAccess().getRule();
	}
	
	//CalculationDefKeyword:
	//	CalculationKeyword 'def';
	public CalculationDefKeywordElements getCalculationDefKeywordAccess() {
		return pCalculationDefKeyword;
	}
	
	public ParserRule getCalculationDefKeywordRule() {
		return getCalculationDefKeywordAccess().getRule();
	}
	
	//CalculationDefinition SysML::CalculationDefinition:
	//	DefinitionPrefix? CalculationDefKeyword CalculationDeclaration (CalculationBody
	//	| '=' ownedFeatureMembership_comp+=ResultExpressionMember ';');
	public CalculationDefinitionElements getCalculationDefinitionAccess() {
		return pCalculationDefinition;
	}
	
	public ParserRule getCalculationDefinitionRule() {
		return getCalculationDefinitionAccess().getRule();
	}
	
	//fragment CalculationDeclaration returns SysML::CalculationDefinition:
	//	DefinitionDeclaration (ParameterList ReturnParameterPart?)?;
	public CalculationDeclarationElements getCalculationDeclarationAccess() {
		return pCalculationDeclaration;
	}
	
	public ParserRule getCalculationDeclarationRule() {
		return getCalculationDeclarationAccess().getRule();
	}
	
	//fragment ReturnParameterPart returns SysML::Type:
	//	ownedFeatureMembership_comp+=ReturnParameterMember;
	public ReturnParameterPartElements getReturnParameterPartAccess() {
		return pReturnParameterPart;
	}
	
	public ParserRule getReturnParameterPartRule() {
		return getReturnParameterPartAccess().getRule();
	}
	
	//ReturnParameterMember SysML::ReturnParameterMembership:
	//	'return'? ownedMemberParameter_comp=Parameter;
	public ReturnParameterMemberElements getReturnParameterMemberAccess() {
		return pReturnParameterMember;
	}
	
	public ParserRule getReturnParameterMemberRule() {
		return getReturnParameterMemberAccess().getRule();
	}
	
	//fragment CalculationBody returns SysML::Type:
	//	';'
	//	| '{' => CalculationBodyItem*
	//	ownedFeatureMembership_comp+=ResultExpressionMember?
	//	'}';
	public CalculationBodyElements getCalculationBodyAccess() {
		return pCalculationBody;
	}
	
	public ParserRule getCalculationBodyRule() {
		return getCalculationBodyAccess().getRule();
	}
	
	//fragment CalculationBodyItem returns SysML::Type:
	//	ActionBodyItem
	//	| ownedFeatureMembership_comp+=ReturnParameterFlowUsageMember;
	public CalculationBodyItemElements getCalculationBodyItemAccess() {
		return pCalculationBodyItem;
	}
	
	public ParserRule getCalculationBodyItemRule() {
		return getCalculationBodyItemAccess().getRule();
	}
	
	//ReturnParameterFlowUsageMember SysML::ReturnParameterMembership:
	//	DefinitionMemberPrefix 'return'
	//	ownedMemberParameter_comp=FlowUsageElement;
	public ReturnParameterFlowUsageMemberElements getReturnParameterFlowUsageMemberAccess() {
		return pReturnParameterFlowUsageMember;
	}
	
	public ParserRule getReturnParameterFlowUsageMemberRule() {
		return getReturnParameterFlowUsageMemberAccess().getRule();
	}
	
	//ResultExpressionMember SysML::ResultExpressionMembership:
	//	DefinitionMemberPrefix ownedResultExpression_comp=OwnedExpression;
	public ResultExpressionMemberElements getResultExpressionMemberAccess() {
		return pResultExpressionMember;
	}
	
	public ParserRule getResultExpressionMemberRule() {
		return getResultExpressionMemberAccess().getRule();
	}
	
	///* Calculation Usages */ CalculationUsageKeyword:
	//	CalculationKeyword;
	public CalculationUsageKeywordElements getCalculationUsageKeywordAccess() {
		return pCalculationUsageKeyword;
	}
	
	public ParserRule getCalculationUsageKeywordRule() {
		return getCalculationUsageKeywordAccess().getRule();
	}
	
	//CalculationUsage SysML::CalculationUsage:
	//	UsagePrefix? CalculationUsageKeyword CalculationUsageDeclaration CalculationBody;
	public CalculationUsageElements getCalculationUsageAccess() {
		return pCalculationUsage;
	}
	
	public ParserRule getCalculationUsageRule() {
		return getCalculationUsageAccess().getRule();
	}
	
	//CalculationFlowUsage SysML::CalculationUsage:
	//	UsagePrefix? 'ref'? CalculationUsageKeyword CalculationUsageDeclaration CalculationBody;
	public CalculationFlowUsageElements getCalculationFlowUsageAccess() {
		return pCalculationFlowUsage;
	}
	
	public ParserRule getCalculationFlowUsageRule() {
		return getCalculationFlowUsageAccess().getRule();
	}
	
	//CalculationRefUsage SysML::CalculationUsage:
	//	UsagePrefix? ('ref' CalculationUsageKeyword | isComposite?=CalculationUsageKeyword) CalculationUsageDeclaration
	//	CalculationBody;
	public CalculationRefUsageElements getCalculationRefUsageAccess() {
		return pCalculationRefUsage;
	}
	
	public ParserRule getCalculationRefUsageRule() {
		return getCalculationRefUsageAccess().getRule();
	}
	
	//fragment CalculationUsageDeclaration returns SysML::Step:
	//	UsageDeclaration? (ValuePart | CalculationUsageParameterPart)?;
	public CalculationUsageDeclarationElements getCalculationUsageDeclarationAccess() {
		return pCalculationUsageDeclaration;
	}
	
	public ParserRule getCalculationUsageDeclarationRule() {
		return getCalculationUsageDeclarationAccess().getRule();
	}
	
	//fragment CalculationUsageParameterPart returns SysML::Feature:
	//	ActionUsageParameterList CalculationReturnParameterPart?;
	public CalculationUsageParameterPartElements getCalculationUsageParameterPartAccess() {
		return pCalculationUsageParameterPart;
	}
	
	public ParserRule getCalculationUsageParameterPartRule() {
		return getCalculationUsageParameterPartAccess().getRule();
	}
	
	//fragment CalculationReturnParameterPart returns SysML::Feature:
	//	ownedFeatureMembership_comp+=CalculationReturnParameterMember;
	public CalculationReturnParameterPartElements getCalculationReturnParameterPartAccess() {
		return pCalculationReturnParameterPart;
	}
	
	public ParserRule getCalculationReturnParameterPartRule() {
		return getCalculationReturnParameterPartAccess().getRule();
	}
	
	//CalculationReturnParameterMember SysML::ReturnParameterMembership:
	//	'return'? ownedMemberParameter_comp=ActionUsageParameter;
	public CalculationReturnParameterMemberElements getCalculationReturnParameterMemberAccess() {
		return pCalculationReturnParameterMember;
	}
	
	public ParserRule getCalculationReturnParameterMemberRule() {
		return getCalculationReturnParameterMemberAccess().getRule();
	}
	
	///* CONSTRAINTS */ /* Constraint Definitions */ ConstraintKeyword:
	//	'constraint';
	public ConstraintKeywordElements getConstraintKeywordAccess() {
		return pConstraintKeyword;
	}
	
	public ParserRule getConstraintKeywordRule() {
		return getConstraintKeywordAccess().getRule();
	}
	
	//ConstraintDefKeyword:
	//	ConstraintKeyword 'def';
	public ConstraintDefKeywordElements getConstraintDefKeywordAccess() {
		return pConstraintDefKeyword;
	}
	
	public ParserRule getConstraintDefKeywordRule() {
		return getConstraintDefKeywordAccess().getRule();
	}
	
	//ConstraintDefinition SysML::ConstraintDefinition:
	//	DefinitionPrefix? ConstraintDefKeyword ConstraintDeclaration CalculationBody;
	public ConstraintDefinitionElements getConstraintDefinitionAccess() {
		return pConstraintDefinition;
	}
	
	public ParserRule getConstraintDefinitionRule() {
		return getConstraintDefinitionAccess().getRule();
	}
	
	//fragment ConstraintDeclaration returns SysML::ConstraintDefinition:
	//	DefinitionDeclaration ParameterList? EmptyReturnParameterPart;
	public ConstraintDeclarationElements getConstraintDeclarationAccess() {
		return pConstraintDeclaration;
	}
	
	public ParserRule getConstraintDeclarationRule() {
		return getConstraintDeclarationAccess().getRule();
	}
	
	//fragment EmptyReturnParameterPart returns SysML::Type:
	//	ownedFeatureMembership_comp+=EmptyReturnParameterMember;
	public EmptyReturnParameterPartElements getEmptyReturnParameterPartAccess() {
		return pEmptyReturnParameterPart;
	}
	
	public ParserRule getEmptyReturnParameterPartRule() {
		return getEmptyReturnParameterPartAccess().getRule();
	}
	
	//EmptyReturnParameterMember SysML::ReturnParameterMembership:
	//	ownedMemberParameter_comp=EmptyParameter;
	public EmptyReturnParameterMemberElements getEmptyReturnParameterMemberAccess() {
		return pEmptyReturnParameterMember;
	}
	
	public ParserRule getEmptyReturnParameterMemberRule() {
		return getEmptyReturnParameterMemberAccess().getRule();
	}
	
	///* Constraint Usages */ ConstraintUsageKeyword:
	//	ConstraintKeyword;
	public ConstraintUsageKeywordElements getConstraintUsageKeywordAccess() {
		return pConstraintUsageKeyword;
	}
	
	public ParserRule getConstraintUsageKeywordRule() {
		return getConstraintUsageKeywordAccess().getRule();
	}
	
	//ConstraintUsage SysML::ConstraintUsage:
	//	UsagePrefix? ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody;
	public ConstraintUsageElements getConstraintUsageAccess() {
		return pConstraintUsage;
	}
	
	public ParserRule getConstraintUsageRule() {
		return getConstraintUsageAccess().getRule();
	}
	
	//ConstraintFlowUsage SysML::ConstraintUsage:
	//	UsagePrefix? 'ref'? ConstraintUsageKeyword CalculationUsageDeclaration CalculationBody;
	public ConstraintFlowUsageElements getConstraintFlowUsageAccess() {
		return pConstraintFlowUsage;
	}
	
	public ParserRule getConstraintFlowUsageRule() {
		return getConstraintFlowUsageAccess().getRule();
	}
	
	//ConstraintRefUsage SysML::ConstraintUsage:
	//	UsagePrefix? ('ref' ConstraintUsageKeyword | isComposite?=ConstraintUsageKeyword) CalculationUsageDeclaration
	//	CalculationBody;
	public ConstraintRefUsageElements getConstraintRefUsageAccess() {
		return pConstraintRefUsage;
	}
	
	public ParserRule getConstraintRefUsageRule() {
		return getConstraintRefUsageAccess().getRule();
	}
	
	//AssertConstraintUsage SysML::AssertConstraintUsage:
	//	UsagePrefix? 'assert' (ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
	//	| ConstraintUsageKeyword UsageDeclaration?) CalculationUsageParameterPart? InvariantPart CalculationBody;
	public AssertConstraintUsageElements getAssertConstraintUsageAccess() {
		return pAssertConstraintUsage;
	}
	
	public ParserRule getAssertConstraintUsageRule() {
		return getAssertConstraintUsageAccess().getRule();
	}
	
	//fragment InvariantPart returns SysML::Invariant:
	//	ownedFeatureMembership_comp+=TrueLiteralMember;
	public InvariantPartElements getInvariantPartAccess() {
		return pInvariantPart;
	}
	
	public ParserRule getInvariantPartRule() {
		return getInvariantPartAccess().getRule();
	}
	
	//TrueLiteralMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=TrueLiteralExpression;
	public TrueLiteralMemberElements getTrueLiteralMemberAccess() {
		return pTrueLiteralMember;
	}
	
	public ParserRule getTrueLiteralMemberRule() {
		return getTrueLiteralMemberAccess().getRule();
	}
	
	//TrueLiteralExpression SysML::LiteralBoolean:
	//	{SysML::LiteralBoolean};
	public TrueLiteralExpressionElements getTrueLiteralExpressionAccess() {
		return pTrueLiteralExpression;
	}
	
	public ParserRule getTrueLiteralExpressionRule() {
		return getTrueLiteralExpressionAccess().getRule();
	}
	
	///* REQUIREMENTS */ /* Requirement Definitions */ RequirementKeyword:
	//	'requirement';
	public RequirementKeywordElements getRequirementKeywordAccess() {
		return pRequirementKeyword;
	}
	
	public ParserRule getRequirementKeywordRule() {
		return getRequirementKeywordAccess().getRule();
	}
	
	//RequirementDefKeyword:
	//	RequirementKeyword 'def';
	public RequirementDefKeywordElements getRequirementDefKeywordAccess() {
		return pRequirementDefKeyword;
	}
	
	public ParserRule getRequirementDefKeywordRule() {
		return getRequirementDefKeywordAccess().getRule();
	}
	
	//RequirementDefinition SysML::RequirementDefinition:
	//	DefinitionPrefix? RequirementDefKeyword ConstraintDeclaration RequirementBody;
	public RequirementDefinitionElements getRequirementDefinitionAccess() {
		return pRequirementDefinition;
	}
	
	public ParserRule getRequirementDefinitionRule() {
		return getRequirementDefinitionAccess().getRule();
	}
	
	//fragment RequirementBody returns SysML::Type:
	//	';' | '{' => RequirementBodyItem* '}';
	public RequirementBodyElements getRequirementBodyAccess() {
		return pRequirementBody;
	}
	
	public ParserRule getRequirementBodyRule() {
		return getRequirementBodyAccess().getRule();
	}
	
	//fragment RequirementBodyItem returns SysML::Type:
	//	DefinitionBodyItem
	//	| ownedFeatureMembership_comp+=SubjectMember
	//	| ownedFeatureMembership_comp+=RequirementConstraintMember;
	public RequirementBodyItemElements getRequirementBodyItemAccess() {
		return pRequirementBodyItem;
	}
	
	public ParserRule getRequirementBodyItemRule() {
		return getRequirementBodyItemAccess().getRule();
	}
	
	//SubjectMember SysML::SubjectMembership:
	//	DefinitionMemberPrefix ownedSubjectParameter_comp=SubjectUsage;
	public SubjectMemberElements getSubjectMemberAccess() {
		return pSubjectMember;
	}
	
	public ParserRule getSubjectMemberRule() {
		return getSubjectMemberAccess().getRule();
	}
	
	//SubjectUsage SysML::ReferenceUsage:
	//	'subject' Usage;
	public SubjectUsageElements getSubjectUsageAccess() {
		return pSubjectUsage;
	}
	
	public ParserRule getSubjectUsageRule() {
		return getSubjectUsageAccess().getRule();
	}
	
	//RequirementConstraintMember SysML::RequirementConstraintMembership:
	//	DefinitionMemberPrefix kind=RequirementConstraintKind
	//	ownedMemberFeature_comp=RequirementConstraintUsage;
	public RequirementConstraintMemberElements getRequirementConstraintMemberAccess() {
		return pRequirementConstraintMember;
	}
	
	public ParserRule getRequirementConstraintMemberRule() {
		return getRequirementConstraintMemberAccess().getRule();
	}
	
	//enum RequirementConstraintKind returns SysML::RequirementConstraintKind:
	//	assumption='assume' | requirement='require';
	public RequirementConstraintKindElements getRequirementConstraintKindAccess() {
		return eRequirementConstraintKind;
	}
	
	public EnumRule getRequirementConstraintKindRule() {
		return getRequirementConstraintKindAccess().getRule();
	}
	
	//RequirementConstraintUsage SysML::ConstraintUsage:
	//	ownedRelationship_comp+=OwnedSubsetting FeatureSpecialization*
	//	CalculationUsageParameterPart? RequirementBody
	//	| 'constraint' CalculationUsageDeclaration CalculationBody;
	public RequirementConstraintUsageElements getRequirementConstraintUsageAccess() {
		return pRequirementConstraintUsage;
	}
	
	public ParserRule getRequirementConstraintUsageRule() {
		return getRequirementConstraintUsageAccess().getRule();
	}
	
	///* Requirement Usages */ RequirementUsageKeyword:
	//	RequirementKeyword;
	public RequirementUsageKeywordElements getRequirementUsageKeywordAccess() {
		return pRequirementUsageKeyword;
	}
	
	public ParserRule getRequirementUsageKeywordRule() {
		return getRequirementUsageKeywordAccess().getRule();
	}
	
	//RequirementUsage SysML::RequirementUsage:
	//	UsagePrefix? RequirementUsageKeyword CalculationUsageDeclaration RequirementBody;
	public RequirementUsageElements getRequirementUsageAccess() {
		return pRequirementUsage;
	}
	
	public ParserRule getRequirementUsageRule() {
		return getRequirementUsageAccess().getRule();
	}
	
	//RequirementFlowUsage SysML::RequirementUsage:
	//	UsagePrefix? 'ref'? RequirementUsageKeyword CalculationUsageDeclaration RequirementBody;
	public RequirementFlowUsageElements getRequirementFlowUsageAccess() {
		return pRequirementFlowUsage;
	}
	
	public ParserRule getRequirementFlowUsageRule() {
		return getRequirementFlowUsageAccess().getRule();
	}
	
	//RequirementRefUsage SysML::RequirementUsage:
	//	UsagePrefix? ('ref' RequirementUsageKeyword | isComposite?=RequirementUsageKeyword) CalculationUsageDeclaration
	//	RequirementBody;
	public RequirementRefUsageElements getRequirementRefUsageAccess() {
		return pRequirementRefUsage;
	}
	
	public ParserRule getRequirementRefUsageRule() {
		return getRequirementRefUsageAccess().getRule();
	}
	
	//SatisfyRequirementUsage SysML::SatisfyRequirementUsage:
	//	UsagePrefix? 'satisfy' (ownedRelationship_comp+=OwnedSubsetting FeatureSpecializationPart?
	//	| RequirementUsageKeyword UsageDeclaration?) (ValuePart | ActionUsageParameterList)? ('by'
	//	ownedMembership_comp+=SatisfactionConnectorMember)?
	//	InvariantPart RequirementBody;
	public SatisfyRequirementUsageElements getSatisfyRequirementUsageAccess() {
		return pSatisfyRequirementUsage;
	}
	
	public ParserRule getSatisfyRequirementUsageRule() {
		return getSatisfyRequirementUsageAccess().getRule();
	}
	
	//SatisfactionConnectorMember SysML::Membership:
	//	ownedMemberElement_comp=SatisfactionConnector;
	public SatisfactionConnectorMemberElements getSatisfactionConnectorMemberAccess() {
		return pSatisfactionConnectorMember;
	}
	
	public ParserRule getSatisfactionConnectorMemberRule() {
		return getSatisfactionConnectorMemberAccess().getRule();
	}
	
	//SatisfactionConnector SysML::BindingConnector:
	//	ownedFeatureMembership_comp+=EmptySourceEndMember ownedFeatureMembership_comp+=ConnectorEndMember;
	public SatisfactionConnectorElements getSatisfactionConnectorAccess() {
		return pSatisfactionConnector;
	}
	
	public ParserRule getSatisfactionConnectorRule() {
		return getSatisfactionConnectorAccess().getRule();
	}
	
	///* CASES */ /* Case Definitions */ CaseKeyword:
	//	'case';
	public CaseKeywordElements getCaseKeywordAccess() {
		return pCaseKeyword;
	}
	
	public ParserRule getCaseKeywordRule() {
		return getCaseKeywordAccess().getRule();
	}
	
	//CaseDefKeyword:
	//	CaseKeyword 'def';
	public CaseDefKeywordElements getCaseDefKeywordAccess() {
		return pCaseDefKeyword;
	}
	
	public ParserRule getCaseDefKeywordRule() {
		return getCaseDefKeywordAccess().getRule();
	}
	
	//CaseDefinition SysML::CaseDefinition:
	//	DefinitionPrefix? CaseDefKeyword CalculationDeclaration CaseBody;
	public CaseDefinitionElements getCaseDefinitionAccess() {
		return pCaseDefinition;
	}
	
	public ParserRule getCaseDefinitionRule() {
		return getCaseDefinitionAccess().getRule();
	}
	
	//fragment CaseBody returns SysML::Type:
	//	';'
	//	| '{' => CaseBodyItem*
	//	ownedFeatureMembership_comp+=ResultExpressionMember?
	//	'}';
	public CaseBodyElements getCaseBodyAccess() {
		return pCaseBody;
	}
	
	public ParserRule getCaseBodyRule() {
		return getCaseBodyAccess().getRule();
	}
	
	//fragment CaseBodyItem returns SysML::Type:
	//	CalculationBodyItem
	//	| ownedFeatureMembership_comp+=SubjectMember
	//	| ownedFeatureMembership_comp+=ObjectiveMember;
	public CaseBodyItemElements getCaseBodyItemAccess() {
		return pCaseBodyItem;
	}
	
	public ParserRule getCaseBodyItemRule() {
		return getCaseBodyItemAccess().getRule();
	}
	
	//ObjectiveMember SysML::ObjectiveMembership:
	//	DefinitionMemberPrefix 'objective' ownedObjectiveRequirement_comp=ObjectiveRequirementUsage;
	public ObjectiveMemberElements getObjectiveMemberAccess() {
		return pObjectiveMember;
	}
	
	public ParserRule getObjectiveMemberRule() {
		return getObjectiveMemberAccess().getRule();
	}
	
	//ObjectiveRequirementUsage SysML::RequirementUsage:
	//	CalculationUsageDeclaration RequirementBody;
	public ObjectiveRequirementUsageElements getObjectiveRequirementUsageAccess() {
		return pObjectiveRequirementUsage;
	}
	
	public ParserRule getObjectiveRequirementUsageRule() {
		return getObjectiveRequirementUsageAccess().getRule();
	}
	
	///* Case Usages */ CaseUsageKeyword:
	//	CaseKeyword;
	public CaseUsageKeywordElements getCaseUsageKeywordAccess() {
		return pCaseUsageKeyword;
	}
	
	public ParserRule getCaseUsageKeywordRule() {
		return getCaseUsageKeywordAccess().getRule();
	}
	
	//CaseUsage SysML::CaseUsage:
	//	UsagePrefix? CaseUsageKeyword CalculationUsageDeclaration CaseBody;
	public CaseUsageElements getCaseUsageAccess() {
		return pCaseUsage;
	}
	
	public ParserRule getCaseUsageRule() {
		return getCaseUsageAccess().getRule();
	}
	
	//CaseFlowUsage SysML::CaseUsage:
	//	UsagePrefix? 'ref'? CaseUsageKeyword CalculationUsageDeclaration CaseBody;
	public CaseFlowUsageElements getCaseFlowUsageAccess() {
		return pCaseFlowUsage;
	}
	
	public ParserRule getCaseFlowUsageRule() {
		return getCaseFlowUsageAccess().getRule();
	}
	
	//CaseRefUsage SysML::CaseUsage:
	//	UsagePrefix? ('ref' CaseUsageKeyword | isComposite?=CaseUsageKeyword) CalculationUsageDeclaration CaseBody;
	public CaseRefUsageElements getCaseRefUsageAccess() {
		return pCaseRefUsage;
	}
	
	public ParserRule getCaseRefUsageRule() {
		return getCaseRefUsageAccess().getRule();
	}
	
	///* ANALYSIS CASES */ AnalysisCaseKeyword:
	//	'analysis';
	public AnalysisCaseKeywordElements getAnalysisCaseKeywordAccess() {
		return pAnalysisCaseKeyword;
	}
	
	public ParserRule getAnalysisCaseKeywordRule() {
		return getAnalysisCaseKeywordAccess().getRule();
	}
	
	//AnalysisCaseDefKeyword:
	//	AnalysisCaseKeyword 'def';
	public AnalysisCaseDefKeywordElements getAnalysisCaseDefKeywordAccess() {
		return pAnalysisCaseDefKeyword;
	}
	
	public ParserRule getAnalysisCaseDefKeywordRule() {
		return getAnalysisCaseDefKeywordAccess().getRule();
	}
	
	//AnalysisCaseUsageKeyword:
	//	AnalysisCaseKeyword;
	public AnalysisCaseUsageKeywordElements getAnalysisCaseUsageKeywordAccess() {
		return pAnalysisCaseUsageKeyword;
	}
	
	public ParserRule getAnalysisCaseUsageKeywordRule() {
		return getAnalysisCaseUsageKeywordAccess().getRule();
	}
	
	//AnalysisCaseDefinition SysML::AnalysisCaseDefinition:
	//	DefinitionPrefix? AnalysisCaseDefKeyword CalculationDeclaration CaseBody;
	public AnalysisCaseDefinitionElements getAnalysisCaseDefinitionAccess() {
		return pAnalysisCaseDefinition;
	}
	
	public ParserRule getAnalysisCaseDefinitionRule() {
		return getAnalysisCaseDefinitionAccess().getRule();
	}
	
	//AnalysisCaseUsage SysML::AnalysisCaseUsage:
	//	UsagePrefix? AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody;
	public AnalysisCaseUsageElements getAnalysisCaseUsageAccess() {
		return pAnalysisCaseUsage;
	}
	
	public ParserRule getAnalysisCaseUsageRule() {
		return getAnalysisCaseUsageAccess().getRule();
	}
	
	//AnalysisCaseFlowUsage SysML::AnalysisCaseUsage:
	//	UsagePrefix? 'ref'? AnalysisCaseUsageKeyword CalculationUsageDeclaration CaseBody;
	public AnalysisCaseFlowUsageElements getAnalysisCaseFlowUsageAccess() {
		return pAnalysisCaseFlowUsage;
	}
	
	public ParserRule getAnalysisCaseFlowUsageRule() {
		return getAnalysisCaseFlowUsageAccess().getRule();
	}
	
	//AnalysisCaseRefUsage SysML::AnalysisCaseUsage:
	//	UsagePrefix? ('ref' AnalysisCaseUsageKeyword | isComposite?=AnalysisCaseUsageKeyword) CalculationUsageDeclaration
	//	CaseBody;
	public AnalysisCaseRefUsageElements getAnalysisCaseRefUsageAccess() {
		return pAnalysisCaseRefUsage;
	}
	
	public ParserRule getAnalysisCaseRefUsageRule() {
		return getAnalysisCaseRefUsageAccess().getRule();
	}
	
	///* VERIFICATION CASES */ VerificationCaseKeyword:
	//	'verification';
	public VerificationCaseKeywordElements getVerificationCaseKeywordAccess() {
		return pVerificationCaseKeyword;
	}
	
	public ParserRule getVerificationCaseKeywordRule() {
		return getVerificationCaseKeywordAccess().getRule();
	}
	
	//VerificationCaseDefKeyword:
	//	VerificationCaseKeyword 'def';
	public VerificationCaseDefKeywordElements getVerificationCaseDefKeywordAccess() {
		return pVerificationCaseDefKeyword;
	}
	
	public ParserRule getVerificationCaseDefKeywordRule() {
		return getVerificationCaseDefKeywordAccess().getRule();
	}
	
	//VerificationCaseUsageKeyword:
	//	VerificationCaseKeyword;
	public VerificationCaseUsageKeywordElements getVerificationCaseUsageKeywordAccess() {
		return pVerificationCaseUsageKeyword;
	}
	
	public ParserRule getVerificationCaseUsageKeywordRule() {
		return getVerificationCaseUsageKeywordAccess().getRule();
	}
	
	//VerificationCaseDefinition SysML::VerificationCaseDefinition:
	//	DefinitionPrefix? VerificationCaseDefKeyword CalculationDeclaration CaseBody;
	public VerificationCaseDefinitionElements getVerificationCaseDefinitionAccess() {
		return pVerificationCaseDefinition;
	}
	
	public ParserRule getVerificationCaseDefinitionRule() {
		return getVerificationCaseDefinitionAccess().getRule();
	}
	
	//VerificationCaseUsage SysML::VerificationCaseUsage:
	//	UsagePrefix? VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody;
	public VerificationCaseUsageElements getVerificationCaseUsageAccess() {
		return pVerificationCaseUsage;
	}
	
	public ParserRule getVerificationCaseUsageRule() {
		return getVerificationCaseUsageAccess().getRule();
	}
	
	//VerificationCaseFlowUsage SysML::VerificationCaseUsage:
	//	UsagePrefix? 'ref'? VerificationCaseUsageKeyword CalculationUsageDeclaration CaseBody;
	public VerificationCaseFlowUsageElements getVerificationCaseFlowUsageAccess() {
		return pVerificationCaseFlowUsage;
	}
	
	public ParserRule getVerificationCaseFlowUsageRule() {
		return getVerificationCaseFlowUsageAccess().getRule();
	}
	
	//VerificationCaseRefUsage SysML::VerificationCaseUsage:
	//	UsagePrefix? ('ref' VerificationCaseUsageKeyword | isComposite?=VerificationCaseUsageKeyword)
	//	CalculationUsageDeclaration CaseBody;
	public VerificationCaseRefUsageElements getVerificationCaseRefUsageAccess() {
		return pVerificationCaseRefUsage;
	}
	
	public ParserRule getVerificationCaseRefUsageRule() {
		return getVerificationCaseRefUsageAccess().getRule();
	}
	
	///* VIEWS */ /* View Definitions */ ViewKeyword:
	//	'view';
	public ViewKeywordElements getViewKeywordAccess() {
		return pViewKeyword;
	}
	
	public ParserRule getViewKeywordRule() {
		return getViewKeywordAccess().getRule();
	}
	
	//ViewDefKeyword:
	//	ViewKeyword 'def';
	public ViewDefKeywordElements getViewDefKeywordAccess() {
		return pViewDefKeyword;
	}
	
	public ParserRule getViewDefKeywordRule() {
		return getViewDefKeywordAccess().getRule();
	}
	
	//ViewDefinition SysML::ViewDefinition:
	//	DefinitionPrefix? ViewDefKeyword DefinitionDeclaration DefinitionBody;
	public ViewDefinitionElements getViewDefinitionAccess() {
		return pViewDefinition;
	}
	
	public ParserRule getViewDefinitionRule() {
		return getViewDefinitionAccess().getRule();
	}
	
	///* View Usages */ ViewUsageKeyword:
	//	ViewKeyword;
	public ViewUsageKeywordElements getViewUsageKeywordAccess() {
		return pViewUsageKeyword;
	}
	
	public ParserRule getViewUsageKeywordRule() {
		return getViewUsageKeywordAccess().getRule();
	}
	
	//ViewUsage SysML::ViewUsage:
	//	UsagePrefix? ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody;
	public ViewUsageElements getViewUsageAccess() {
		return pViewUsage;
	}
	
	public ParserRule getViewUsageRule() {
		return getViewUsageAccess().getRule();
	}
	
	//ViewFlowUsage SysML::ViewUsage:
	//	UsagePrefix? 'ref'? ViewUsageKeyword UsageDeclaration? ValueOrFlowPart? ViewBody;
	public ViewFlowUsageElements getViewFlowUsageAccess() {
		return pViewFlowUsage;
	}
	
	public ParserRule getViewFlowUsageRule() {
		return getViewFlowUsageAccess().getRule();
	}
	
	//ViewRefUsage SysML::ViewUsage:
	//	UsagePrefix? ('ref' ViewUsageKeyword | isComposite?=ViewUsageKeyword) UsageDeclaration? ValueOrFlowPart? ViewBody;
	public ViewRefUsageElements getViewRefUsageAccess() {
		return pViewRefUsage;
	}
	
	public ParserRule getViewRefUsageRule() {
		return getViewRefUsageAccess().getRule();
	}
	
	//fragment ViewBody returns SysML::ViewUsage:
	//	';' | '{' ViewBodyItem* '}';
	public ViewBodyElements getViewBodyAccess() {
		return pViewBody;
	}
	
	public ParserRule getViewBodyRule() {
		return getViewBodyAccess().getRule();
	}
	
	//fragment ViewBodyItem returns SysML::ViewUsage:
	//	DefinitionBodyItem
	//	| ownedImport_comp+=Expose;
	public ViewBodyItemElements getViewBodyItemAccess() {
		return pViewBodyItem;
	}
	
	public ParserRule getViewBodyItemRule() {
		return getViewBodyItemAccess().getRule();
	}
	
	//Expose SysML::Expose:
	//	ownedRelationship_comp+=PrefixDocumentation*
	//	visibility=BasicVisibilityIndicator?
	//	'expose' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
	//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
	//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
	public ExposeElements getExposeAccess() {
		return pExpose;
	}
	
	public ParserRule getExposeRule() {
		return getExposeAccess().getRule();
	}
	
	///* VIEWPOINTS */ ViewpointKeyword:
	//	'viewpoint';
	public ViewpointKeywordElements getViewpointKeywordAccess() {
		return pViewpointKeyword;
	}
	
	public ParserRule getViewpointKeywordRule() {
		return getViewpointKeywordAccess().getRule();
	}
	
	//ViewpointDefKeyword:
	//	ViewpointKeyword 'def';
	public ViewpointDefKeywordElements getViewpointDefKeywordAccess() {
		return pViewpointDefKeyword;
	}
	
	public ParserRule getViewpointDefKeywordRule() {
		return getViewpointDefKeywordAccess().getRule();
	}
	
	//ViewpointUsageKeyword:
	//	ViewpointKeyword;
	public ViewpointUsageKeywordElements getViewpointUsageKeywordAccess() {
		return pViewpointUsageKeyword;
	}
	
	public ParserRule getViewpointUsageKeywordRule() {
		return getViewpointUsageKeywordAccess().getRule();
	}
	
	//ViewpointDefinition SysML::ViewpointDefinition:
	//	DefinitionPrefix? ViewpointDefKeyword ConstraintDeclaration RequirementBody;
	public ViewpointDefinitionElements getViewpointDefinitionAccess() {
		return pViewpointDefinition;
	}
	
	public ParserRule getViewpointDefinitionRule() {
		return getViewpointDefinitionAccess().getRule();
	}
	
	//ViewpointUsage SysML::ViewpointUsage:
	//	UsagePrefix? ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody;
	public ViewpointUsageElements getViewpointUsageAccess() {
		return pViewpointUsage;
	}
	
	public ParserRule getViewpointUsageRule() {
		return getViewpointUsageAccess().getRule();
	}
	
	//ViewpointFlowUsage SysML::ViewpointUsage:
	//	UsagePrefix? 'ref'? ViewpointUsageKeyword CalculationUsageDeclaration RequirementBody;
	public ViewpointFlowUsageElements getViewpointFlowUsageAccess() {
		return pViewpointFlowUsage;
	}
	
	public ParserRule getViewpointFlowUsageRule() {
		return getViewpointFlowUsageAccess().getRule();
	}
	
	//ViewpointRefUsage SysML::ViewpointUsage:
	//	UsagePrefix? ('ref' ViewpointUsageKeyword | isComposite?=ViewpointUsageKeyword) CalculationUsageDeclaration
	//	RequirementBody;
	public ViewpointRefUsageElements getViewpointRefUsageAccess() {
		return pViewpointRefUsage;
	}
	
	public ParserRule getViewpointRefUsageRule() {
		return getViewpointRefUsageAccess().getRule();
	}
	
	///* RENDERINGS */ RenderingKeyword:
	//	'rendering';
	public RenderingKeywordElements getRenderingKeywordAccess() {
		return pRenderingKeyword;
	}
	
	public ParserRule getRenderingKeywordRule() {
		return getRenderingKeywordAccess().getRule();
	}
	
	//RenderingDefKeyword:
	//	RenderingKeyword 'def';
	public RenderingDefKeywordElements getRenderingDefKeywordAccess() {
		return pRenderingDefKeyword;
	}
	
	public ParserRule getRenderingDefKeywordRule() {
		return getRenderingDefKeywordAccess().getRule();
	}
	
	//RenderingDefinition SysML::RenderingDefinition:
	//	DefinitionPrefix? RenderingDefKeyword Definition;
	public RenderingDefinitionElements getRenderingDefinitionAccess() {
		return pRenderingDefinition;
	}
	
	public ParserRule getRenderingDefinitionRule() {
		return getRenderingDefinitionAccess().getRule();
	}
	
	//RenderingUsageKeyword:
	//	RenderingKeyword;
	public RenderingUsageKeywordElements getRenderingUsageKeywordAccess() {
		return pRenderingUsageKeyword;
	}
	
	public ParserRule getRenderingUsageKeywordRule() {
		return getRenderingUsageKeywordAccess().getRule();
	}
	
	//RenderingUsage SysML::RenderingUsage:
	//	UsagePrefix? RenderingUsageKeyword Usage;
	public RenderingUsageElements getRenderingUsageAccess() {
		return pRenderingUsage;
	}
	
	public ParserRule getRenderingUsageRule() {
		return getRenderingUsageAccess().getRule();
	}
	
	//RenderingFlowUsage SysML::RenderingUsage:
	//	UsagePrefix? 'ref' RenderingUsageKeyword Usage;
	public RenderingFlowUsageElements getRenderingFlowUsageAccess() {
		return pRenderingFlowUsage;
	}
	
	public ParserRule getRenderingFlowUsageRule() {
		return getRenderingFlowUsageAccess().getRule();
	}
	
	//RenderingRefUsage SysML::RenderingUsage:
	//	UsagePrefix? ('ref' RenderingUsageKeyword | isComposite?=RenderingUsageKeyword) Usage;
	public RenderingRefUsageElements getRenderingRefUsageAccess() {
		return pRenderingRefUsage;
	}
	
	public ParserRule getRenderingRefUsageRule() {
		return getRenderingRefUsageAccess().getRule();
	}
	
	///* EXPRESSIONS */ /* Operator Expressions */ OwnedExpressionMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=OwnedExpression;
	public OwnedExpressionMemberElements getOwnedExpressionMemberAccess() {
		return pOwnedExpressionMember;
	}
	
	public ParserRule getOwnedExpressionMemberRule() {
		return getOwnedExpressionMemberAccess().getRule();
	}
	
	//OwnedExpression SysML::Expression:
	//	ConditionalExpression | QueryPathExpression;
	public OwnedExpressionElements getOwnedExpressionAccess() {
		return pOwnedExpression;
	}
	
	public ParserRule getOwnedExpressionRule() {
		return getOwnedExpressionAccess().getRule();
	}
	
	//// Conditional Test Expressions
	//ConditionalExpression SysML::Expression:
	//	NullCoalescingExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalTestOperator
	//	operand_comp+=OwnedExpression ':' operand_comp+=ConditionalExpression)?;
	public ConditionalExpressionElements getConditionalExpressionAccess() {
		return pConditionalExpression;
	}
	
	public ParserRule getConditionalExpressionRule() {
		return getConditionalExpressionAccess().getRule();
	}
	
	//ConditionalTestOperator:
	//	'?';
	public ConditionalTestOperatorElements getConditionalTestOperatorAccess() {
		return pConditionalTestOperator;
	}
	
	public ParserRule getConditionalTestOperatorRule() {
		return getConditionalTestOperatorAccess().getRule();
	}
	
	//// Null Coalescing Expressions
	//NullCoalescingExpression SysML::Expression:
	//	ConditionalOrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=NullCoalescingOperator
	//	operand_comp+=ConditionalOrExpression)*;
	public NullCoalescingExpressionElements getNullCoalescingExpressionAccess() {
		return pNullCoalescingExpression;
	}
	
	public ParserRule getNullCoalescingExpressionRule() {
		return getNullCoalescingExpressionAccess().getRule();
	}
	
	//NullCoalescingOperator:
	//	'??';
	public NullCoalescingOperatorElements getNullCoalescingOperatorAccess() {
		return pNullCoalescingOperator;
	}
	
	public ParserRule getNullCoalescingOperatorRule() {
		return getNullCoalescingOperatorAccess().getRule();
	}
	
	//// Conditional Logical Expressions
	//ConditionalOrExpression SysML::Expression:
	//	ConditionalAndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalOrOperator
	//	operand_comp+=ConditionalAndExpression)*;
	public ConditionalOrExpressionElements getConditionalOrExpressionAccess() {
		return pConditionalOrExpression;
	}
	
	public ParserRule getConditionalOrExpressionRule() {
		return getConditionalOrExpressionAccess().getRule();
	}
	
	//ConditionalOrOperator:
	//	'||';
	public ConditionalOrOperatorElements getConditionalOrOperatorAccess() {
		return pConditionalOrOperator;
	}
	
	public ParserRule getConditionalOrOperatorRule() {
		return getConditionalOrOperatorAccess().getRule();
	}
	
	//ConditionalAndExpression SysML::Expression:
	//	OrExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ConditionalAndOperator
	//	operand_comp+=OrExpression)*;
	public ConditionalAndExpressionElements getConditionalAndExpressionAccess() {
		return pConditionalAndExpression;
	}
	
	public ParserRule getConditionalAndExpressionRule() {
		return getConditionalAndExpressionAccess().getRule();
	}
	
	//ConditionalAndOperator:
	//	'&&';
	public ConditionalAndOperatorElements getConditionalAndOperatorAccess() {
		return pConditionalAndOperator;
	}
	
	public ParserRule getConditionalAndOperatorRule() {
		return getConditionalAndOperatorAccess().getRule();
	}
	
	//// Logical Expressions
	//OrExpression SysML::Expression:
	//	XorExpression ({SysML::OperatorExpression.operand_comp+=current} operator=OrOperator operand_comp+=XorExpression)*;
	public OrExpressionElements getOrExpressionAccess() {
		return pOrExpression;
	}
	
	public ParserRule getOrExpressionRule() {
		return getOrExpressionAccess().getRule();
	}
	
	//OrOperator:
	//	'|';
	public OrOperatorElements getOrOperatorAccess() {
		return pOrOperator;
	}
	
	public ParserRule getOrOperatorRule() {
		return getOrOperatorAccess().getRule();
	}
	
	//XorExpression SysML::Expression:
	//	AndExpression ({SysML::OperatorExpression.operand_comp+=current} operator=XorOperator operand_comp+=AndExpression)*;
	public XorExpressionElements getXorExpressionAccess() {
		return pXorExpression;
	}
	
	public ParserRule getXorExpressionRule() {
		return getXorExpressionAccess().getRule();
	}
	
	//XorOperator:
	//	'^';
	public XorOperatorElements getXorOperatorAccess() {
		return pXorOperator;
	}
	
	public ParserRule getXorOperatorRule() {
		return getXorOperatorAccess().getRule();
	}
	
	//AndExpression SysML::Expression:
	//	EqualityExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AndOperator
	//	operand_comp+=EqualityExpression)*;
	public AndExpressionElements getAndExpressionAccess() {
		return pAndExpression;
	}
	
	public ParserRule getAndExpressionRule() {
		return getAndExpressionAccess().getRule();
	}
	
	//AndOperator:
	//	'&';
	public AndOperatorElements getAndOperatorAccess() {
		return pAndOperator;
	}
	
	public ParserRule getAndOperatorRule() {
		return getAndOperatorAccess().getRule();
	}
	
	//// Equality Expressions
	//EqualityExpression SysML::Expression:
	//	ClassificationExpression ({SysML::OperatorExpression.operand_comp+=current} operator=EqualityOperator
	//	operand_comp+=ClassificationExpression)*;
	public EqualityExpressionElements getEqualityExpressionAccess() {
		return pEqualityExpression;
	}
	
	public ParserRule getEqualityExpressionRule() {
		return getEqualityExpressionAccess().getRule();
	}
	
	//EqualityOperator:
	//	'==' | '!=';
	public EqualityOperatorElements getEqualityOperatorAccess() {
		return pEqualityOperator;
	}
	
	public ParserRule getEqualityOperatorRule() {
		return getEqualityOperatorAccess().getRule();
	}
	
	//// Classification Expressions
	//ClassificationExpression SysML::Expression:
	//	RelationalExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ClassificationOperator
	//	ownedFeatureMembership_comp+=TypeReferenceMember)?;
	public ClassificationExpressionElements getClassificationExpressionAccess() {
		return pClassificationExpression;
	}
	
	public ParserRule getClassificationExpressionRule() {
		return getClassificationExpressionAccess().getRule();
	}
	
	//ClassificationOperator:
	//	'instanceof' | 'hastype' | 'istype';
	public ClassificationOperatorElements getClassificationOperatorAccess() {
		return pClassificationOperator;
	}
	
	public ParserRule getClassificationOperatorRule() {
		return getClassificationOperatorAccess().getRule();
	}
	
	//TypeReferenceMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=TypeReference;
	public TypeReferenceMemberElements getTypeReferenceMemberAccess() {
		return pTypeReferenceMember;
	}
	
	public ParserRule getTypeReferenceMemberRule() {
		return getTypeReferenceMemberAccess().getRule();
	}
	
	//TypeReference SysML::Feature:
	//	ownedRelationship_comp+=OwnedFeatureTyping;
	public TypeReferenceElements getTypeReferenceAccess() {
		return pTypeReference;
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}
	
	//// Relational Expressions
	//RelationalExpression SysML::Expression:
	//	AdditiveExpression ({SysML::OperatorExpression.operand_comp+=current} operator=RelationalOperator
	//	operand_comp+=AdditiveExpression)*;
	public RelationalExpressionElements getRelationalExpressionAccess() {
		return pRelationalExpression;
	}
	
	public ParserRule getRelationalExpressionRule() {
		return getRelationalExpressionAccess().getRule();
	}
	
	//RelationalOperator:
	//	'<' | '>' | '<=' | '>=';
	public RelationalOperatorElements getRelationalOperatorAccess() {
		return pRelationalOperator;
	}
	
	public ParserRule getRelationalOperatorRule() {
		return getRelationalOperatorAccess().getRule();
	}
	
	//// Arithmetic Expressions
	//AdditiveExpression SysML::Expression:
	//	MultiplicativeExpression ({SysML::OperatorExpression.operand_comp+=current} operator=AdditiveOperator
	//	operand_comp+=MultiplicativeExpression)*;
	public AdditiveExpressionElements getAdditiveExpressionAccess() {
		return pAdditiveExpression;
	}
	
	public ParserRule getAdditiveExpressionRule() {
		return getAdditiveExpressionAccess().getRule();
	}
	
	//AdditiveOperator:
	//	'+' | '-';
	public AdditiveOperatorElements getAdditiveOperatorAccess() {
		return pAdditiveOperator;
	}
	
	public ParserRule getAdditiveOperatorRule() {
		return getAdditiveOperatorAccess().getRule();
	}
	
	//MultiplicativeExpression SysML::Expression:
	//	ExponentiationExpression ({SysML::OperatorExpression.operand_comp+=current} operator=MultiplicativeOperator
	//	operand_comp+=ExponentiationExpression)*;
	public MultiplicativeExpressionElements getMultiplicativeExpressionAccess() {
		return pMultiplicativeExpression;
	}
	
	public ParserRule getMultiplicativeExpressionRule() {
		return getMultiplicativeExpressionAccess().getRule();
	}
	
	//MultiplicativeOperator:
	//	'*' | '/';
	public MultiplicativeOperatorElements getMultiplicativeOperatorAccess() {
		return pMultiplicativeOperator;
	}
	
	public ParserRule getMultiplicativeOperatorRule() {
		return getMultiplicativeOperatorAccess().getRule();
	}
	
	//ExponentiationExpression SysML::Expression:
	//	UnitsExpression ({SysML::OperatorExpression.operand_comp+=current} operator=ExponentiationOperator
	//	operand_comp+=UnitsExpression)*;
	public ExponentiationExpressionElements getExponentiationExpressionAccess() {
		return pExponentiationExpression;
	}
	
	public ParserRule getExponentiationExpressionRule() {
		return getExponentiationExpressionAccess().getRule();
	}
	
	//ExponentiationOperator:
	//	'**';
	public ExponentiationOperatorElements getExponentiationOperatorAccess() {
		return pExponentiationOperator;
	}
	
	public ParserRule getExponentiationOperatorRule() {
		return getExponentiationOperatorAccess().getRule();
	}
	
	//// Units Expressions
	//UnitsExpression SysML::Expression:
	//	UnaryExpression ({SysML::OperatorExpression.operand_comp+=current} operator='@' '[' operand_comp+=OwnedExpression
	//	']')?;
	public UnitsExpressionElements getUnitsExpressionAccess() {
		return pUnitsExpression;
	}
	
	public ParserRule getUnitsExpressionRule() {
		return getUnitsExpressionAccess().getRule();
	}
	
	//// Unary Expressions
	//UnaryExpression SysML::Expression:
	//	{SysML::OperatorExpression} operator=UnaryOperator operand_comp+=ExtentExpression
	//	| ExtentExpression;
	public UnaryExpressionElements getUnaryExpressionAccess() {
		return pUnaryExpression;
	}
	
	public ParserRule getUnaryExpressionRule() {
		return getUnaryExpressionAccess().getRule();
	}
	
	//UnaryOperator:
	//	'+' | '-' | '!' | '~';
	public UnaryOperatorElements getUnaryOperatorAccess() {
		return pUnaryOperator;
	}
	
	public ParserRule getUnaryOperatorRule() {
		return getUnaryOperatorAccess().getRule();
	}
	
	//// Extent Expressions
	//ExtentExpression SysML::Expression:
	//	{SysML::OperatorExpression} operator='all' ownedFeatureMembership_comp+=TypeReferenceMember
	//	| SequenceExpression;
	public ExtentExpressionElements getExtentExpressionAccess() {
		return pExtentExpression;
	}
	
	public ParserRule getExtentExpressionRule() {
		return getExtentExpressionAccess().getRule();
	}
	
	///* Sequence Expressions */ SequenceExpression SysML::Expression:
	//	(SequenceConstructionExpression | BaseExpression) ({SysML::OperatorExpression.operand_comp+=current} operator='['
	//	operand_comp+=OwnedExpression ']'
	//	| {SysML::OperatorExpression.operand_comp+=current} '->'
	//	operator=Name ownedFeatureMembership_comp+=BodyExpressionMember+)*;
	public SequenceExpressionElements getSequenceExpressionAccess() {
		return pSequenceExpression;
	}
	
	public ParserRule getSequenceExpressionRule() {
		return getSequenceExpressionAccess().getRule();
	}
	
	//BodyExpressionMember SysML::FeatureMembership:
	//	ownedMemberFeature_comp=BodyExpression;
	public BodyExpressionMemberElements getBodyExpressionMemberAccess() {
		return pBodyExpressionMember;
	}
	
	public ParserRule getBodyExpressionMemberRule() {
		return getBodyExpressionMemberAccess().getRule();
	}
	
	//BodyExpression SysML::BlockExpression:
	//	=> (ownedFeatureMembership_comp+=BodyParameterMember
	//	ownedFeatureMembership_comp+=BodyParameterMember*
	//	'(' ownedFeatureMembership_comp+=ResultExpressionMember ')') | ownedRelationship_comp+=ExpressionTyping;
	public BodyExpressionElements getBodyExpressionAccess() {
		return pBodyExpression;
	}
	
	public ParserRule getBodyExpressionRule() {
		return getBodyExpressionAccess().getRule();
	}
	
	//BodyParameterMember SysML::ParameterMembership:
	//	memberName=Name ownedMemberParameter_comp=BodyParameter;
	public BodyParameterMemberElements getBodyParameterMemberAccess() {
		return pBodyParameterMember;
	}
	
	public ParserRule getBodyParameterMemberRule() {
		return getBodyParameterMemberAccess().getRule();
	}
	
	//BodyParameter SysML::Usage:
	//	{SysML::ReferenceUsage} (TypedBy MultiplicityPart? | MultiplicityPart TypedBy?)?;
	public BodyParameterElements getBodyParameterAccess() {
		return pBodyParameter;
	}
	
	public ParserRule getBodyParameterRule() {
		return getBodyParameterAccess().getRule();
	}
	
	//ExpressionTyping SysML::FeatureTyping:
	//	type=[SysML::Function|QualifiedName];
	public ExpressionTypingElements getExpressionTypingAccess() {
		return pExpressionTyping;
	}
	
	public ParserRule getExpressionTypingRule() {
		return getExpressionTypingAccess().getRule();
	}
	
	//SequenceConstructionExpression SysML::Expression:
	//	{SysML::NullExpression} '{' '}'
	//	| '{' OwnedExpression ({SysML::OperatorExpression.operand_comp+=current} operator=','
	//	operand_comp+=SequenceElementList
	//	| {SysML::OperatorExpression.operand_comp+=current} operator='..' operand_comp+=OwnedExpression)?
	//	'}';
	public SequenceConstructionExpressionElements getSequenceConstructionExpressionAccess() {
		return pSequenceConstructionExpression;
	}
	
	public ParserRule getSequenceConstructionExpressionRule() {
		return getSequenceConstructionExpressionAccess().getRule();
	}
	
	//SequenceElementList SysML::Expression:
	//	OwnedExpression ({SysML::OperatorExpression.operand_comp+=current} operator=',' operand_comp+=SequenceElementList)?;
	public SequenceElementListElements getSequenceElementListAccess() {
		return pSequenceElementList;
	}
	
	public ParserRule getSequenceElementListRule() {
		return getSequenceElementListAccess().getRule();
	}
	
	///* Base Expressions */ BaseExpression SysML::Expression:
	//	NullExpression
	//	| LiteralExpression
	//	| FeatureReferenceExpression
	//	| InvocationExpression
	//	| ExtentExpression_Deprecated
	//	| '(' OwnedExpression ')';
	public BaseExpressionElements getBaseExpressionAccess() {
		return pBaseExpression;
	}
	
	public ParserRule getBaseExpressionRule() {
		return getBaseExpressionAccess().getRule();
	}
	
	//// Null Expressions
	//NullExpression SysML::NullExpression:
	//	{SysML::NullExpression} 'null';
	public NullExpressionElements getNullExpressionAccess() {
		return pNullExpression;
	}
	
	public ParserRule getNullExpressionRule() {
		return getNullExpressionAccess().getRule();
	}
	
	//// Feature Reference Expressions
	//FeatureReferenceExpression SysML::FeatureReferenceExpression:
	//	ownedFeatureMembership_comp+=FeatureReferenceMember;
	public FeatureReferenceExpressionElements getFeatureReferenceExpressionAccess() {
		return pFeatureReferenceExpression;
	}
	
	public ParserRule getFeatureReferenceExpressionRule() {
		return getFeatureReferenceExpressionAccess().getRule();
	}
	
	//FeatureReferenceMember SysML::ReturnParameterMembership:
	//	ownedMemberFeature_comp=FeatureReference;
	public FeatureReferenceMemberElements getFeatureReferenceMemberAccess() {
		return pFeatureReferenceMember;
	}
	
	public ParserRule getFeatureReferenceMemberRule() {
		return getFeatureReferenceMemberAccess().getRule();
	}
	
	//FeatureReference SysML::ReferenceUsage:
	//	ownedRelationship_comp+=OwnedSubsetting;
	public FeatureReferenceElements getFeatureReferenceAccess() {
		return pFeatureReference;
	}
	
	public ParserRule getFeatureReferenceRule() {
		return getFeatureReferenceAccess().getRule();
	}
	
	//// Invocation Expressions
	//InvocationExpression SysML::InvocationExpression:
	//	ownedRelationship_comp+=OwnedFeatureTyping '(' ArgumentList? ')';
	public InvocationExpressionElements getInvocationExpressionAccess() {
		return pInvocationExpression;
	}
	
	public ParserRule getInvocationExpressionRule() {
		return getInvocationExpressionAccess().getRule();
	}
	
	//fragment ArgumentList returns SysML::Expression:
	//	PositionalArgumentList | NamedArgumentList;
	public ArgumentListElements getArgumentListAccess() {
		return pArgumentList;
	}
	
	public ParserRule getArgumentListRule() {
		return getArgumentListAccess().getRule();
	}
	
	//fragment PositionalArgumentList returns SysML::Expression:
	//	ownedFeatureMembership_comp+=OwnedExpressionMember (',' ownedFeatureMembership_comp+=OwnedExpressionMember)*;
	public PositionalArgumentListElements getPositionalArgumentListAccess() {
		return pPositionalArgumentList;
	}
	
	public ParserRule getPositionalArgumentListRule() {
		return getPositionalArgumentListAccess().getRule();
	}
	
	//fragment NamedArgumentList returns SysML::Expression:
	//	ownedFeatureMembership_comp+=NamedExpressionMember (',' ownedFeatureMembership_comp+=NamedExpressionMember)*;
	public NamedArgumentListElements getNamedArgumentListAccess() {
		return pNamedArgumentList;
	}
	
	public ParserRule getNamedArgumentListRule() {
		return getNamedArgumentListAccess().getRule();
	}
	
	//NamedExpressionMember SysML::FeatureMembership:
	//	memberName=Name '=>' ownedMemberFeature_comp=OwnedExpression;
	public NamedExpressionMemberElements getNamedExpressionMemberAccess() {
		return pNamedExpressionMember;
	}
	
	public ParserRule getNamedExpressionMemberRule() {
		return getNamedExpressionMemberAccess().getRule();
	}
	
	//// Extent Expressions (Deprecated)
	//ExtentExpression_Deprecated SysML::OperatorExpression:
	//	ownedFeatureMembership_comp+=TypeReferenceMember '.' operator='allInstances' '(' ')';
	public ExtentExpression_DeprecatedElements getExtentExpression_DeprecatedAccess() {
		return pExtentExpression_Deprecated;
	}
	
	public ParserRule getExtentExpression_DeprecatedRule() {
		return getExtentExpression_DeprecatedAccess().getRule();
	}
	
	///* Literal Expressions */ LiteralExpression SysML::LiteralExpression:
	//	LiteralBoolean
	//	| LiteralString
	//	| LiteralInteger
	//	| LiteralReal
	//	| LiteralUnbounded;
	public LiteralExpressionElements getLiteralExpressionAccess() {
		return pLiteralExpression;
	}
	
	public ParserRule getLiteralExpressionRule() {
		return getLiteralExpressionAccess().getRule();
	}
	
	//LiteralBoolean SysML::LiteralBoolean:
	//	value=BooleanValue;
	public LiteralBooleanElements getLiteralBooleanAccess() {
		return pLiteralBoolean;
	}
	
	public ParserRule getLiteralBooleanRule() {
		return getLiteralBooleanAccess().getRule();
	}
	
	//BooleanValue Ecore::EBoolean:
	//	'true' | 'false';
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//LiteralString SysML::LiteralString:
	//	value=STRING_VALUE;
	public LiteralStringElements getLiteralStringAccess() {
		return pLiteralString;
	}
	
	public ParserRule getLiteralStringRule() {
		return getLiteralStringAccess().getRule();
	}
	
	//LiteralInteger SysML::LiteralInteger:
	//	value=DECIMAL_VALUE;
	public LiteralIntegerElements getLiteralIntegerAccess() {
		return pLiteralInteger;
	}
	
	public ParserRule getLiteralIntegerRule() {
		return getLiteralIntegerAccess().getRule();
	}
	
	//LiteralReal SysML::LiteralReal:
	//	value=RealValue;
	public LiteralRealElements getLiteralRealAccess() {
		return pLiteralReal;
	}
	
	public ParserRule getLiteralRealRule() {
		return getLiteralRealAccess().getRule();
	}
	
	//RealValue Ecore::EDouble:
	//	DECIMAL_VALUE? '.' (DECIMAL_VALUE | EXP_VALUE) | EXP_VALUE;
	public RealValueElements getRealValueAccess() {
		return pRealValue;
	}
	
	public ParserRule getRealValueRule() {
		return getRealValueAccess().getRule();
	}
	
	//LiteralUnbounded SysML::LiteralUnbounded:
	//	{SysML::LiteralUnbounded} '*';
	public LiteralUnboundedElements getLiteralUnboundedAccess() {
		return pLiteralUnbounded;
	}
	
	public ParserRule getLiteralUnboundedRule() {
		return getLiteralUnboundedAccess().getRule();
	}
	
	//LiteralUnlimitedNatural SysML::LiteralExpression:
	//	LiteralInteger | LiteralUnbounded;
	public LiteralUnlimitedNaturalElements getLiteralUnlimitedNaturalAccess() {
		return pLiteralUnlimitedNatural;
	}
	
	public ParserRule getLiteralUnlimitedNaturalRule() {
		return getLiteralUnlimitedNaturalAccess().getRule();
	}
	
	///* QUERY PATH EXPRESSIONS */ QueryPathExpression SysML::Expression:
	//	QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current}
	//	ownedFeatureMembership_comp+=BodyExpressionMember ']')? ('/' {SysML::QueryPathStepExpression.operand_comp+=current}
	//	operand_comp+=QueryNameExpression ('[' {SysML::QueryQualifierExpression.operand_comp+=current}
	//	ownedFeatureMembership_comp+=BodyExpressionMember ']')?)*;
	public QueryPathExpressionElements getQueryPathExpressionAccess() {
		return pQueryPathExpression;
	}
	
	public ParserRule getQueryPathExpressionRule() {
		return getQueryPathExpressionAccess().getRule();
	}
	
	//QueryNameExpression SysML::QueryPathExpression:
	//	ownedFeatureMembership_comp+=FeatureReferenceMember;
	public QueryNameExpressionElements getQueryNameExpressionAccess() {
		return pQueryNameExpression;
	}
	
	public ParserRule getQueryNameExpressionRule() {
		return getQueryNameExpressionAccess().getRule();
	}
	
	//QueryHeadExpression SysML::QueryPathExpression:
	//	'./' ownedFeatureMembership_comp+=FeatureReferenceMember;
	public QueryHeadExpressionElements getQueryHeadExpressionAccess() {
		return pQueryHeadExpression;
	}
	
	public ParserRule getQueryHeadExpressionRule() {
		return getQueryHeadExpressionAccess().getRule();
	}
	
	///* NAMES */ Name:
	//	ID | UNRESTRICTED_NAME;
	public NameElements getNameAccess() {
		return pName;
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//QualifiedName:
	//	Name | ColonQualifiedName | DotQualifiedName;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//ColonQualifiedName:
	//	Name ('::' Name)+;
	public ColonQualifiedNameElements getColonQualifiedNameAccess() {
		return pColonQualifiedName;
	}
	
	public ParserRule getColonQualifiedNameRule() {
		return getColonQualifiedNameAccess().getRule();
	}
	
	//DotQualifiedName:
	//	Name ('.' Name)+;
	public DotQualifiedNameElements getDotQualifiedNameAccess() {
		return pDotQualifiedName;
	}
	
	public ParserRule getDotQualifiedNameRule() {
		return getDotQualifiedNameAccess().getRule();
	}
	
	//terminal DECIMAL_VALUE returns Ecore::EInt:
	//	'0'..'9' '0'..'9'*;
	public TerminalRule getDECIMAL_VALUERule() {
		return tDECIMAL_VALUE;
	}
	
	//terminal EXP_VALUE:
	//	DECIMAL_VALUE ('e' | 'E') ('+' | '-')? DECIMAL_VALUE;
	public TerminalRule getEXP_VALUERule() {
		return tEXP_VALUE;
	}
	
	//terminal ID:
	//	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal UNRESTRICTED_NAME:
	//	'\'' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '\''))* '\'';
	public TerminalRule getUNRESTRICTED_NAMERule() {
		return tUNRESTRICTED_NAME;
	}
	
	//terminal STRING_VALUE:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '"'))* '"';
	public TerminalRule getSTRING_VALUERule() {
		return tSTRING_VALUE;
	}
	
	//terminal REGULAR_COMMENT:
	//	'/*' !'*'->'*/';
	public TerminalRule getREGULAR_COMMENTRule() {
		return tREGULAR_COMMENT;
	}
	
	//terminal DOCUMENTATION_COMMENT:
	//	'/**'->'*/';
	public TerminalRule getDOCUMENTATION_COMMENTRule() {
		return tDOCUMENTATION_COMMENT;
	}
	
	//terminal ML_NOTE:
	//	'//*'->'*/';
	public TerminalRule getML_NOTERule() {
		return tML_NOTE;
	}
	
	//terminal SL_NOTE:
	//	'//' (!('\n' | '\r') !('\n' | '\r')*)? ('\r'? '\n')?;
	public TerminalRule getSL_NOTERule() {
		return tSL_NOTE;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
}
