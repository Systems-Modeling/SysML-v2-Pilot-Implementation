/*
 * generated by Xtext 2.16.0
 */
package org.omg.sysml.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class AlfGrammarAccess extends AbstractGrammarElementFinder {
	
	public class UnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageUnitDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClassUnitDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cObjectClassUnitDefinitionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cValueClassUnitDefinitionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAssociationUnitDefinitionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cInteractionUnitDefinitionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cBehaviorUnitDefinitionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cFunctionUnitDefinitionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cFeatureUnitDefinitionParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		///* UNITS */ UnitDefinition SysML::Package:
		//	PackageUnitDefinition
		//	| ClassUnitDefinition
		//	| ObjectClassUnitDefinition
		//	| ValueClassUnitDefinition
		//	| AssociationUnitDefinition
		//	| InteractionUnitDefinition
		//	| BehaviorUnitDefinition
		//	| FunctionUnitDefinition
		//	| FeatureUnitDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageUnitDefinition | ClassUnitDefinition | ObjectClassUnitDefinition | ValueClassUnitDefinition |
		//AssociationUnitDefinition | InteractionUnitDefinition | BehaviorUnitDefinition | FunctionUnitDefinition |
		//FeatureUnitDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PackageUnitDefinition
		public RuleCall getPackageUnitDefinitionParserRuleCall_0() { return cPackageUnitDefinitionParserRuleCall_0; }
		
		//ClassUnitDefinition
		public RuleCall getClassUnitDefinitionParserRuleCall_1() { return cClassUnitDefinitionParserRuleCall_1; }
		
		//ObjectClassUnitDefinition
		public RuleCall getObjectClassUnitDefinitionParserRuleCall_2() { return cObjectClassUnitDefinitionParserRuleCall_2; }
		
		//ValueClassUnitDefinition
		public RuleCall getValueClassUnitDefinitionParserRuleCall_3() { return cValueClassUnitDefinitionParserRuleCall_3; }
		
		//AssociationUnitDefinition
		public RuleCall getAssociationUnitDefinitionParserRuleCall_4() { return cAssociationUnitDefinitionParserRuleCall_4; }
		
		//InteractionUnitDefinition
		public RuleCall getInteractionUnitDefinitionParserRuleCall_5() { return cInteractionUnitDefinitionParserRuleCall_5; }
		
		//BehaviorUnitDefinition
		public RuleCall getBehaviorUnitDefinitionParserRuleCall_6() { return cBehaviorUnitDefinitionParserRuleCall_6; }
		
		//FunctionUnitDefinition
		public RuleCall getFunctionUnitDefinitionParserRuleCall_7() { return cFunctionUnitDefinitionParserRuleCall_7; }
		
		//FeatureUnitDefinition
		public RuleCall getFeatureUnitDefinitionParserRuleCall_8() { return cFeatureUnitDefinitionParserRuleCall_8; }
	}
	public class PackageUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPackageDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//PackageUnitDefinition SysML::Package:
		//	UnitPrefix PackageDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix PackageDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//PackageDefinition
		public RuleCall getPackageDefinitionParserRuleCall_1() { return cPackageDefinitionParserRuleCall_1; }
	}
	public class ClassUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cClassDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ClassUnitDefinition SysML::ObjectClass:
		//	UnitPrefix ClassDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ClassDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ClassDefinition
		public RuleCall getClassDefinitionParserRuleCall_1() { return cClassDefinitionParserRuleCall_1; }
	}
	public class ObjectClassUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ObjectClassUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cObjectClassDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ObjectClassUnitDefinition SysML::ObjectClass:
		//	UnitPrefix ObjectClassDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ObjectClassDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ObjectClassDefinition
		public RuleCall getObjectClassDefinitionParserRuleCall_1() { return cObjectClassDefinitionParserRuleCall_1; }
	}
	public class ValueClassUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ValueClassUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cValueClassDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ValueClassUnitDefinition SysML::ValueClass:
		//	UnitPrefix ValueClassDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix ValueClassDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//ValueClassDefinition
		public RuleCall getValueClassDefinitionParserRuleCall_1() { return cValueClassDefinitionParserRuleCall_1; }
	}
	public class AssociationUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAssociationDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AssociationUnitDefinition SysML::Association:
		//	UnitPrefix AssociationDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix AssociationDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//AssociationDefinition
		public RuleCall getAssociationDefinitionParserRuleCall_1() { return cAssociationDefinitionParserRuleCall_1; }
	}
	public class InteractionUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.InteractionUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInteractionDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//InteractionUnitDefinition SysML::Interaction:
		//	UnitPrefix InteractionDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix InteractionDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//InteractionDefinition
		public RuleCall getInteractionDefinitionParserRuleCall_1() { return cInteractionDefinitionParserRuleCall_1; }
	}
	public class BehaviorUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BehaviorUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cBehaviorDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//BehaviorUnitDefinition SysML::Behavior:
		//	UnitPrefix BehaviorDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix BehaviorDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//BehaviorDefinition
		public RuleCall getBehaviorDefinitionParserRuleCall_1() { return cBehaviorDefinitionParserRuleCall_1; }
	}
	public class FunctionUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FunctionUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFunctionDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//FunctionUnitDefinition SysML::Function:
		//	UnitPrefix FunctionDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix FunctionDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//FunctionDefinition
		public RuleCall getFunctionDefinitionParserRuleCall_1() { return cFunctionDefinitionParserRuleCall_1; }
	}
	public class FeatureUnitDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureUnitDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFeatureBodyDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//FeatureUnitDefinition SysML::Feature:
		//	UnitPrefix FeatureBodyDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitPrefix FeatureBodyDefinition
		public Group getGroup() { return cGroup; }
		
		//UnitPrefix
		public RuleCall getUnitPrefixParserRuleCall_0() { return cUnitPrefixParserRuleCall_0; }
		
		//FeatureBodyDefinition
		public RuleCall getFeatureBodyDefinitionParserRuleCall_1() { return cFeatureBodyDefinitionParserRuleCall_1; }
	}
	public class UnitPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipPackageImportParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipElementImportParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment UnitPrefix returns SysML::Package:
		//	(ownedRelationship+=PackageImport | ownedRelationship+=ElementImport)*
		//	ownedRelationship+=Annotation*;
		@Override public ParserRule getRule() { return rule; }
		
		//(ownedRelationship+=PackageImport | ownedRelationship+=ElementImport)* ownedRelationship+=Annotation*
		public Group getGroup() { return cGroup; }
		
		//(ownedRelationship+=PackageImport | ownedRelationship+=ElementImport)*
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//ownedRelationship+=PackageImport
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//PackageImport
		public RuleCall getOwnedRelationshipPackageImportParserRuleCall_0_0_0() { return cOwnedRelationshipPackageImportParserRuleCall_0_0_0; }
		
		//ownedRelationship+=ElementImport
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//ElementImport
		public RuleCall getOwnedRelationshipElementImportParserRuleCall_0_1_0() { return cOwnedRelationshipElementImportParserRuleCall_0_1_0; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_1_0() { return cOwnedRelationshipAnnotationParserRuleCall_1_0; }
	}
	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Annotation");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementCommentParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* COMMENTS */ Annotation SysML::Annotation:
		//	ownedRelatedElement+=Comment;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=Comment
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//Comment
		public RuleCall getOwnedRelatedElementCommentParserRuleCall_0() { return cOwnedRelatedElementCommentParserRuleCall_0; }
	}
	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Comment");
		private final Assignment cBodyAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cBodyDOCUMENTATION_COMMENTTerminalRuleCall_0 = (RuleCall)cBodyAssignment.eContents().get(0);
		
		//Comment SysML::Comment:
		//	body=DOCUMENTATION_COMMENT;
		@Override public ParserRule getRule() { return rule; }
		
		//body=DOCUMENTATION_COMMENT
		public Assignment getBodyAssignment() { return cBodyAssignment; }
		
		//DOCUMENTATION_COMMENT
		public RuleCall getBodyDOCUMENTATION_COMMENTTerminalRuleCall_0() { return cBodyDOCUMENTATION_COMMENTTerminalRuleCall_0; }
	}
	public class PackageImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cImportKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cImportedPackageAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_0_0_0 = (CrossReference)cImportedPackageAssignment_3_0_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageNameParserRuleCall_3_0_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_0_0_0.eContents().get(1);
		private final Alternatives cAlternatives_3_0_1 = (Alternatives)cGroup_3_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_0_1_0 = (Keyword)cAlternatives_3_0_1.eContents().get(0);
		private final Keyword cFullStopKeyword_3_0_1_1 = (Keyword)cAlternatives_3_0_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cImportedPackageAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_1_0_0 = (CrossReference)cImportedPackageAssignment_3_1_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_1_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Assignment cImportedPackageAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final CrossReference cImportedPackagePackageCrossReference_3_2_0_0 = (CrossReference)cImportedPackageAssignment_3_2_0.eContents().get(0);
		private final RuleCall cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1 = (RuleCall)cImportedPackagePackageCrossReference_3_2_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Keyword cAsteriskKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		///* IMPORTS */ PackageImport SysML::Import:
		//	ownedRelationship+=Annotation*
		//	visibility=PackageElementVisibilityIndicator?
		//	'import' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Annotation* visibility=PackageElementVisibilityIndicator? 'import'
		//(importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		//| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0; }
		
		//visibility=PackageElementVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//PackageElementVisibilityIndicator
		public RuleCall getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0; }
		
		//'import'
		public Keyword getImportKeyword_2() { return cImportKeyword_2; }
		
		//importedPackage=[SysML::Package|Name] ('::' | '.') '*' | importedPackage=[SysML::Package|ColonQualifiedName] '::' '*' |
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*'
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//importedPackage=[SysML::Package|Name] ('::' | '.') '*'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//importedPackage=[SysML::Package|Name]
		public Assignment getImportedPackageAssignment_3_0_0() { return cImportedPackageAssignment_3_0_0; }
		
		//[SysML::Package|Name]
		public CrossReference getImportedPackagePackageCrossReference_3_0_0_0() { return cImportedPackagePackageCrossReference_3_0_0_0; }
		
		//Name
		public RuleCall getImportedPackagePackageNameParserRuleCall_3_0_0_0_1() { return cImportedPackagePackageNameParserRuleCall_3_0_0_0_1; }
		
		//'::' | '.'
		public Alternatives getAlternatives_3_0_1() { return cAlternatives_3_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_0_1_0() { return cColonColonKeyword_3_0_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_3_0_1_1() { return cFullStopKeyword_3_0_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_0_2() { return cAsteriskKeyword_3_0_2; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//importedPackage=[SysML::Package|ColonQualifiedName]
		public Assignment getImportedPackageAssignment_3_1_0() { return cImportedPackageAssignment_3_1_0; }
		
		//[SysML::Package|ColonQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_1_0_0() { return cImportedPackagePackageCrossReference_3_1_0_0; }
		
		//ColonQualifiedName
		public RuleCall getImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1() { return cImportedPackagePackageColonQualifiedNameParserRuleCall_3_1_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_3_1_1() { return cColonColonKeyword_3_1_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_1_2() { return cAsteriskKeyword_3_1_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName] '.' '*'
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//importedPackage=[SysML::Package|DotQualifiedName]
		public Assignment getImportedPackageAssignment_3_2_0() { return cImportedPackageAssignment_3_2_0; }
		
		//[SysML::Package|DotQualifiedName]
		public CrossReference getImportedPackagePackageCrossReference_3_2_0_0() { return cImportedPackagePackageCrossReference_3_2_0_0; }
		
		//DotQualifiedName
		public RuleCall getImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1() { return cImportedPackagePackageDotQualifiedNameParserRuleCall_3_2_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_3_2_1() { return cFullStopKeyword_3_2_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_3_2_2() { return cAsteriskKeyword_3_2_2; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class ElementImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ElementImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPackageMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMemberElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMemberElementElementCrossReference_2_0 = (CrossReference)cMemberElementAssignment_2.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cMemberElementElementCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMemberNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_3_1_0 = (RuleCall)cMemberNameAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ElementImport SysML::Membership:
		//	PackageMemberPrefix
		//	'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//PackageMemberPrefix 'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';'
		public Group getGroup() { return cGroup; }
		
		//PackageMemberPrefix
		public RuleCall getPackageMemberPrefixParserRuleCall_0() { return cPackageMemberPrefixParserRuleCall_0; }
		
		//'import'
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_2() { return cMemberElementAssignment_2; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_2_0() { return cMemberElementElementCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_2_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_2_0_1; }
		
		//('as' memberName=Name)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'as'
		public Keyword getAsKeyword_3_0() { return cAsKeyword_3_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_3_1() { return cMemberNameAssignment_3_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_3_1_0() { return cMemberNameNameParserRuleCall_3_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class NonFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NonFeatureDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageDefinitionOrStubParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cClassDefinitionOrStubParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cObjectClassDefinitionOrStubParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cValueClassDefinitionOrStubParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAssociationDefinitionOrStubParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cInteractionDefinitionOrStubParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cBehaviorDefinitionOrStubParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cFunctionDefinitionOrStubParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		///* PACKAGES */ NonFeatureDefinition SysML::Package:
		//	PackageDefinitionOrStub
		//	| ClassDefinitionOrStub
		//	| ObjectClassDefinitionOrStub
		//	| ValueClassDefinitionOrStub
		//	| AssociationDefinitionOrStub
		//	| InteractionDefinitionOrStub
		//	| BehaviorDefinitionOrStub
		//	| FunctionDefinitionOrStub;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDefinitionOrStub | ClassDefinitionOrStub | ObjectClassDefinitionOrStub | ValueClassDefinitionOrStub |
		//AssociationDefinitionOrStub | InteractionDefinitionOrStub | BehaviorDefinitionOrStub | FunctionDefinitionOrStub
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PackageDefinitionOrStub
		public RuleCall getPackageDefinitionOrStubParserRuleCall_0() { return cPackageDefinitionOrStubParserRuleCall_0; }
		
		//ClassDefinitionOrStub
		public RuleCall getClassDefinitionOrStubParserRuleCall_1() { return cClassDefinitionOrStubParserRuleCall_1; }
		
		//ObjectClassDefinitionOrStub
		public RuleCall getObjectClassDefinitionOrStubParserRuleCall_2() { return cObjectClassDefinitionOrStubParserRuleCall_2; }
		
		//ValueClassDefinitionOrStub
		public RuleCall getValueClassDefinitionOrStubParserRuleCall_3() { return cValueClassDefinitionOrStubParserRuleCall_3; }
		
		//AssociationDefinitionOrStub
		public RuleCall getAssociationDefinitionOrStubParserRuleCall_4() { return cAssociationDefinitionOrStubParserRuleCall_4; }
		
		//InteractionDefinitionOrStub
		public RuleCall getInteractionDefinitionOrStubParserRuleCall_5() { return cInteractionDefinitionOrStubParserRuleCall_5; }
		
		//BehaviorDefinitionOrStub
		public RuleCall getBehaviorDefinitionOrStubParserRuleCall_6() { return cBehaviorDefinitionOrStubParserRuleCall_6; }
		
		//FunctionDefinitionOrStub
		public RuleCall getFunctionDefinitionOrStubParserRuleCall_7() { return cFunctionDefinitionOrStubParserRuleCall_7; }
	}
	public class PackageDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageDefinitionOrStub");
		private final RuleCall cPackageDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PackageDefinitionOrStub SysML::Package:
		//	PackageDefinition
		//	//	'package' name = Name ( isStub ?= ';' | '{' ( ownedRelationship += PackageMember )* '}' )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDefinition
		public RuleCall getPackageDefinitionParserRuleCall() { return cPackageDefinitionParserRuleCall; }
	}
	public class PackageDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cOwnedRelationshipPackageMemberParserRuleCall_3_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipPackageImportParserRuleCall_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//fragment PackageDefinition returns SysML::Package:
		//	'package' name=Name '{' (ownedRelationship+=PackageMember | ownedRelationship+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'package' name=Name '{' (ownedRelationship+=PackageMember | ownedRelationship+=PackageImport)* '}'
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//name=Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(ownedRelationship+=PackageMember | ownedRelationship+=PackageImport)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ownedRelationship+=PackageMember
		public Assignment getOwnedRelationshipAssignment_3_0() { return cOwnedRelationshipAssignment_3_0; }
		
		//PackageMember
		public RuleCall getOwnedRelationshipPackageMemberParserRuleCall_3_0_0() { return cOwnedRelationshipPackageMemberParserRuleCall_3_0_0; }
		
		//ownedRelationship+=PackageImport
		public Assignment getOwnedRelationshipAssignment_3_1() { return cOwnedRelationshipAssignment_3_1; }
		
		//PackageImport
		public RuleCall getOwnedRelationshipPackageImportParserRuleCall_3_1_0() { return cOwnedRelationshipPackageImportParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPackageMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cNonFeatureMemberElementParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cFeaturePackageMemberElementParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		///* PACKAGE MEMBERSHIPS */ PackageMember SysML::Membership:
		//	PackageMemberPrefix (NonFeatureMemberElement
		//	| FeaturePackageMemberElement);
		@Override public ParserRule getRule() { return rule; }
		
		//PackageMemberPrefix (NonFeatureMemberElement | FeaturePackageMemberElement)
		public Group getGroup() { return cGroup; }
		
		//PackageMemberPrefix
		public RuleCall getPackageMemberPrefixParserRuleCall_0() { return cPackageMemberPrefixParserRuleCall_0; }
		
		//NonFeatureMemberElement | FeaturePackageMemberElement
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//NonFeatureMemberElement
		public RuleCall getNonFeatureMemberElementParserRuleCall_1_0() { return cNonFeatureMemberElementParserRuleCall_1_0; }
		
		//FeaturePackageMemberElement
		public RuleCall getFeaturePackageMemberElementParserRuleCall_1_1() { return cFeaturePackageMemberElementParserRuleCall_1_1; }
	}
	public class PackageMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment PackageMemberPrefix returns SysML::Membership:
		//	ownedRelationship+=Annotation*
		//	//  ( annotation += StereotypeAnnotation )*
		//	visibility=PackageElementVisibilityIndicator?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Annotation* //  ( annotation += StereotypeAnnotation )*
		//visibility=PackageElementVisibilityIndicator?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=PackageElementVisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//PackageElementVisibilityIndicator
		public RuleCall getVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityPackageElementVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class NonFeatureMemberElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NonFeatureMemberElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelatedElementNonFeatureDefinitionParserRuleCall_0_0 = (RuleCall)cOwnedRelatedElementAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cPackageKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_1_0 = (RuleCall)cMemberNameAssignment_1_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cMemberElementAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cMemberElementPackageCrossReference_1_3_0 = (CrossReference)cMemberElementAssignment_1_3.eContents().get(0);
		private final RuleCall cMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1 = (RuleCall)cMemberElementPackageCrossReference_1_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cClassKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_2_1_0 = (RuleCall)cMemberNameAssignment_2_1.eContents().get(0);
		private final Keyword cIsKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cMemberElementAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final CrossReference cMemberElementClassCrossReference_2_3_0 = (CrossReference)cMemberElementAssignment_2_3.eContents().get(0);
		private final RuleCall cMemberElementClassQualifiedNameParserRuleCall_2_3_0_1 = (RuleCall)cMemberElementClassCrossReference_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cClassKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMemberNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_3_1_0 = (RuleCall)cMemberNameAssignment_3_1.eContents().get(0);
		private final Keyword cIsKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMemberElementAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final CrossReference cMemberElementObjectClassCrossReference_3_3_0 = (CrossReference)cMemberElementAssignment_3_3.eContents().get(0);
		private final RuleCall cMemberElementObjectClassQualifiedNameParserRuleCall_3_3_0_1 = (RuleCall)cMemberElementObjectClassCrossReference_3_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cDatatypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMemberNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_4_1_0 = (RuleCall)cMemberNameAssignment_4_1.eContents().get(0);
		private final Keyword cIsKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cMemberElementAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final CrossReference cMemberElementValueClassCrossReference_4_3_0 = (CrossReference)cMemberElementAssignment_4_3.eContents().get(0);
		private final RuleCall cMemberElementValueClassQualifiedNameParserRuleCall_4_3_0_1 = (RuleCall)cMemberElementValueClassCrossReference_4_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cAssocKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMemberNameAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_5_1_0 = (RuleCall)cMemberNameAssignment_5_1.eContents().get(0);
		private final Keyword cIsKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cMemberElementAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final CrossReference cMemberElementAssociationCrossReference_5_3_0 = (CrossReference)cMemberElementAssignment_5_3.eContents().get(0);
		private final RuleCall cMemberElementAssociationQualifiedNameParserRuleCall_5_3_0_1 = (RuleCall)cMemberElementAssociationCrossReference_5_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cBehaviorKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMemberNameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_6_1_0 = (RuleCall)cMemberNameAssignment_6_1.eContents().get(0);
		private final Keyword cIsKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cMemberElementAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cMemberElementBehaviorCrossReference_6_3_0 = (CrossReference)cMemberElementAssignment_6_3.eContents().get(0);
		private final RuleCall cMemberElementBehaviorQualifiedNameParserRuleCall_6_3_0_1 = (RuleCall)cMemberElementBehaviorCrossReference_6_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Keyword cFunctionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMemberNameAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_7_1_0 = (RuleCall)cMemberNameAssignment_7_1.eContents().get(0);
		private final Keyword cIsKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cMemberElementAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final CrossReference cMemberElementFunctionCrossReference_7_3_0 = (CrossReference)cMemberElementAssignment_7_3.eContents().get(0);
		private final RuleCall cMemberElementFunctionQualifiedNameParserRuleCall_7_3_0_1 = (RuleCall)cMemberElementFunctionCrossReference_7_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Keyword cImportKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cMemberElementAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cMemberElementElementCrossReference_8_1_0 = (CrossReference)cMemberElementAssignment_8_1.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_8_1_0_1 = (RuleCall)cMemberElementElementCrossReference_8_1_0.eContents().get(1);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cAsKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cMemberNameAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_8_2_1_0 = (RuleCall)cMemberNameAssignment_8_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		
		//fragment NonFeatureMemberElement returns SysML::Membership:
		//	ownedRelatedElement+=NonFeatureDefinition
		//	| 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
		//	| 'Class' memberName=Name? 'is' memberElement=[SysML::Class|QualifiedName] ';'
		//	| 'class' memberName=Name? 'is' memberElement=[SysML::ObjectClass|QualifiedName] ';'
		//	| 'datatype' memberName=Name? 'is' memberElement=[SysML::ValueClass|QualifiedName] ';'
		//	| 'assoc' memberName=Name? 'is' memberElement=[SysML::Association|QualifiedName] ';'
		//	| 'behavior' memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
		//	| 'function' memberName=Name? 'is' memberElement=[SysML::Function|QualifiedName] ';'
		//	| 'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=NonFeatureDefinition | 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName]
		//';' | 'Class' memberName=Name? 'is' memberElement=[SysML::Class|QualifiedName] ';' | 'class' memberName=Name? 'is'
		//memberElement=[SysML::ObjectClass|QualifiedName] ';' | 'datatype' memberName=Name? 'is'
		//memberElement=[SysML::ValueClass|QualifiedName] ';' | 'assoc' memberName=Name? 'is'
		//memberElement=[SysML::Association|QualifiedName] ';' | 'behavior' memberName=Name? 'is'
		//memberElement=[SysML::Behavior|QualifiedName] ';' | 'function' memberName=Name? 'is'
		//memberElement=[SysML::Function|QualifiedName] ';' | 'import' memberElement=[SysML::Element|QualifiedName] ('as'
		//memberName=Name)? ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelatedElement+=NonFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_0() { return cOwnedRelatedElementAssignment_0; }
		
		//NonFeatureDefinition
		public RuleCall getOwnedRelatedElementNonFeatureDefinitionParserRuleCall_0_0() { return cOwnedRelatedElementNonFeatureDefinitionParserRuleCall_0_0; }
		
		//'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'package'
		public Keyword getPackageKeyword_1_0() { return cPackageKeyword_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_1() { return cMemberNameAssignment_1_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_1_0() { return cMemberNameNameParserRuleCall_1_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2() { return cIsKeyword_1_2; }
		
		//memberElement=[SysML::Package|QualifiedName]
		public Assignment getMemberElementAssignment_1_3() { return cMemberElementAssignment_1_3; }
		
		//[SysML::Package|QualifiedName]
		public CrossReference getMemberElementPackageCrossReference_1_3_0() { return cMemberElementPackageCrossReference_1_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1() { return cMemberElementPackageQualifiedNameParserRuleCall_1_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_4() { return cSemicolonKeyword_1_4; }
		
		//'Class' memberName=Name? 'is' memberElement=[SysML::Class|QualifiedName] ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//'Class'
		public Keyword getClassKeyword_2_0() { return cClassKeyword_2_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_2_1() { return cMemberNameAssignment_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_2_1_0() { return cMemberNameNameParserRuleCall_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_2_2() { return cIsKeyword_2_2; }
		
		//memberElement=[SysML::Class|QualifiedName]
		public Assignment getMemberElementAssignment_2_3() { return cMemberElementAssignment_2_3; }
		
		//[SysML::Class|QualifiedName]
		public CrossReference getMemberElementClassCrossReference_2_3_0() { return cMemberElementClassCrossReference_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementClassQualifiedNameParserRuleCall_2_3_0_1() { return cMemberElementClassQualifiedNameParserRuleCall_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_2_4() { return cSemicolonKeyword_2_4; }
		
		//'class' memberName=Name? 'is' memberElement=[SysML::ObjectClass|QualifiedName] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'class'
		public Keyword getClassKeyword_3_0() { return cClassKeyword_3_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_3_1() { return cMemberNameAssignment_3_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_3_1_0() { return cMemberNameNameParserRuleCall_3_1_0; }
		
		//'is'
		public Keyword getIsKeyword_3_2() { return cIsKeyword_3_2; }
		
		//memberElement=[SysML::ObjectClass|QualifiedName]
		public Assignment getMemberElementAssignment_3_3() { return cMemberElementAssignment_3_3; }
		
		//[SysML::ObjectClass|QualifiedName]
		public CrossReference getMemberElementObjectClassCrossReference_3_3_0() { return cMemberElementObjectClassCrossReference_3_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementObjectClassQualifiedNameParserRuleCall_3_3_0_1() { return cMemberElementObjectClassQualifiedNameParserRuleCall_3_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_4() { return cSemicolonKeyword_3_4; }
		
		//'datatype' memberName=Name? 'is' memberElement=[SysML::ValueClass|QualifiedName] ';'
		public Group getGroup_4() { return cGroup_4; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_4_0() { return cDatatypeKeyword_4_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_4_1() { return cMemberNameAssignment_4_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_4_1_0() { return cMemberNameNameParserRuleCall_4_1_0; }
		
		//'is'
		public Keyword getIsKeyword_4_2() { return cIsKeyword_4_2; }
		
		//memberElement=[SysML::ValueClass|QualifiedName]
		public Assignment getMemberElementAssignment_4_3() { return cMemberElementAssignment_4_3; }
		
		//[SysML::ValueClass|QualifiedName]
		public CrossReference getMemberElementValueClassCrossReference_4_3_0() { return cMemberElementValueClassCrossReference_4_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementValueClassQualifiedNameParserRuleCall_4_3_0_1() { return cMemberElementValueClassQualifiedNameParserRuleCall_4_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4_4() { return cSemicolonKeyword_4_4; }
		
		//'assoc' memberName=Name? 'is' memberElement=[SysML::Association|QualifiedName] ';'
		public Group getGroup_5() { return cGroup_5; }
		
		//'assoc'
		public Keyword getAssocKeyword_5_0() { return cAssocKeyword_5_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_5_1() { return cMemberNameAssignment_5_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_5_1_0() { return cMemberNameNameParserRuleCall_5_1_0; }
		
		//'is'
		public Keyword getIsKeyword_5_2() { return cIsKeyword_5_2; }
		
		//memberElement=[SysML::Association|QualifiedName]
		public Assignment getMemberElementAssignment_5_3() { return cMemberElementAssignment_5_3; }
		
		//[SysML::Association|QualifiedName]
		public CrossReference getMemberElementAssociationCrossReference_5_3_0() { return cMemberElementAssociationCrossReference_5_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementAssociationQualifiedNameParserRuleCall_5_3_0_1() { return cMemberElementAssociationQualifiedNameParserRuleCall_5_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5_4() { return cSemicolonKeyword_5_4; }
		
		//'behavior' memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
		public Group getGroup_6() { return cGroup_6; }
		
		//'behavior'
		public Keyword getBehaviorKeyword_6_0() { return cBehaviorKeyword_6_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_6_1() { return cMemberNameAssignment_6_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_6_1_0() { return cMemberNameNameParserRuleCall_6_1_0; }
		
		//'is'
		public Keyword getIsKeyword_6_2() { return cIsKeyword_6_2; }
		
		//memberElement=[SysML::Behavior|QualifiedName]
		public Assignment getMemberElementAssignment_6_3() { return cMemberElementAssignment_6_3; }
		
		//[SysML::Behavior|QualifiedName]
		public CrossReference getMemberElementBehaviorCrossReference_6_3_0() { return cMemberElementBehaviorCrossReference_6_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementBehaviorQualifiedNameParserRuleCall_6_3_0_1() { return cMemberElementBehaviorQualifiedNameParserRuleCall_6_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_6_4() { return cSemicolonKeyword_6_4; }
		
		//'function' memberName=Name? 'is' memberElement=[SysML::Function|QualifiedName] ';'
		public Group getGroup_7() { return cGroup_7; }
		
		//'function'
		public Keyword getFunctionKeyword_7_0() { return cFunctionKeyword_7_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_7_1() { return cMemberNameAssignment_7_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_7_1_0() { return cMemberNameNameParserRuleCall_7_1_0; }
		
		//'is'
		public Keyword getIsKeyword_7_2() { return cIsKeyword_7_2; }
		
		//memberElement=[SysML::Function|QualifiedName]
		public Assignment getMemberElementAssignment_7_3() { return cMemberElementAssignment_7_3; }
		
		//[SysML::Function|QualifiedName]
		public CrossReference getMemberElementFunctionCrossReference_7_3_0() { return cMemberElementFunctionCrossReference_7_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementFunctionQualifiedNameParserRuleCall_7_3_0_1() { return cMemberElementFunctionQualifiedNameParserRuleCall_7_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_7_4() { return cSemicolonKeyword_7_4; }
		
		//'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';'
		public Group getGroup_8() { return cGroup_8; }
		
		//'import'
		public Keyword getImportKeyword_8_0() { return cImportKeyword_8_0; }
		
		//memberElement=[SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_8_1() { return cMemberElementAssignment_8_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_8_1_0() { return cMemberElementElementCrossReference_8_1_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_8_1_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_8_1_0_1; }
		
		//('as' memberName=Name)?
		public Group getGroup_8_2() { return cGroup_8_2; }
		
		//'as'
		public Keyword getAsKeyword_8_2_0() { return cAsKeyword_8_2_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_8_2_1() { return cMemberNameAssignment_8_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_8_2_1_0() { return cMemberNameNameParserRuleCall_8_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8_3() { return cSemicolonKeyword_8_3; }
	}
	public class FeaturePackageMemberElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeaturePackageMemberElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cFeatureKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_0_1_0 = (RuleCall)cOwnedRelatedElementAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cAbstractKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cFeatureKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cFeatureKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelatedElementUnnamedFeatureDefinitionParserRuleCall_2_1_0 = (RuleCall)cOwnedRelatedElementAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cAbstractKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cFeatureKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractUnnamedFeatureDefinitionParserRuleCall_3_2_0 = (RuleCall)cOwnedRelatedElementAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Group cGroup_4_0_0 = (Group)cAlternatives_4_0.eContents().get(0);
		private final Keyword cFeatureKeyword_4_0_0_0 = (Keyword)cGroup_4_0_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_4_0_0_1 = (Assignment)cGroup_4_0_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_4_0_0_1_0 = (RuleCall)cMemberNameAssignment_4_0_0_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_4_0_1 = (Assignment)cAlternatives_4_0.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_4_0_1_0 = (RuleCall)cMemberNameAssignment_4_0_1.eContents().get(0);
		private final Keyword cIsKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cMemberElementAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cMemberElementFeatureCrossReference_4_2_0 = (CrossReference)cMemberElementAssignment_4_2.eContents().get(0);
		private final RuleCall cMemberElementFeatureQualifiedNameParserRuleCall_4_2_0_1 = (RuleCall)cMemberElementFeatureCrossReference_4_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cOwnedRelatedElementAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cOwnedRelatedElementStepDefinitionParserRuleCall_5_0 = (RuleCall)cOwnedRelatedElementAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cStepKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cMemberNameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_6_1_0 = (RuleCall)cMemberNameAssignment_6_1.eContents().get(0);
		private final Keyword cIsKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cMemberElementAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cMemberElementStepCrossReference_6_3_0 = (CrossReference)cMemberElementAssignment_6_3.eContents().get(0);
		private final RuleCall cMemberElementStepQualifiedNameParserRuleCall_6_3_0_1 = (RuleCall)cMemberElementStepCrossReference_6_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Assignment cOwnedRelatedElementAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cOwnedRelatedElementExpressionDefinitionParserRuleCall_7_0 = (RuleCall)cOwnedRelatedElementAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Keyword cExprKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cMemberNameAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_8_1_0 = (RuleCall)cMemberNameAssignment_8_1.eContents().get(0);
		private final Keyword cIsKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cMemberElementAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final CrossReference cMemberElementExpressionCrossReference_8_3_0 = (CrossReference)cMemberElementAssignment_8_3.eContents().get(0);
		private final RuleCall cMemberElementExpressionQualifiedNameParserRuleCall_8_3_0_1 = (RuleCall)cMemberElementExpressionCrossReference_8_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		
		////NonFeatureMemberKind :
		////	'package' | 'class' | 'assoc'
		////;
		//fragment FeaturePackageMemberElement returns SysML::Membership:
		//	'feature'? ownedRelatedElement+=NamedFeatureDefinition
		//	| 'abstract' 'feature'? ownedRelatedElement+=AbstractNamedFeatureDefinition
		//	| 'feature' ownedRelatedElement+=UnnamedFeatureDefinition
		//	| 'abstract' 'feature' ownedRelatedElement+=AbstractUnnamedFeatureDefinition
		//	| ('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';'
		//	| ownedRelatedElement+=StepDefinition
		//	| 'step' memberName=Name? 'is' memberElement=[SysML::Step|QualifiedName] ';'
		//	| ownedRelatedElement+=ExpressionDefinition
		//	| 'expr' memberName=Name? 'is' memberElement=[SysML::Expression|QualifiedName] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'feature'? ownedRelatedElement+=NamedFeatureDefinition | 'abstract' 'feature'?
		//ownedRelatedElement+=AbstractNamedFeatureDefinition | 'feature' ownedRelatedElement+=UnnamedFeatureDefinition |
		//'abstract' 'feature' ownedRelatedElement+=AbstractUnnamedFeatureDefinition | ('feature' memberName=Name? |
		//memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';' | ownedRelatedElement+=StepDefinition | 'step'
		//memberName=Name? 'is' memberElement=[SysML::Step|QualifiedName] ';' | ownedRelatedElement+=ExpressionDefinition |
		//'expr' memberName=Name? 'is' memberElement=[SysML::Expression|QualifiedName] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'feature'? ownedRelatedElement+=NamedFeatureDefinition
		public Group getGroup_0() { return cGroup_0; }
		
		//'feature'?
		public Keyword getFeatureKeyword_0_0() { return cFeatureKeyword_0_0; }
		
		//ownedRelatedElement+=NamedFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_0_1() { return cOwnedRelatedElementAssignment_0_1; }
		
		//NamedFeatureDefinition
		public RuleCall getOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_0_1_0() { return cOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_0_1_0; }
		
		//'abstract' 'feature'? ownedRelatedElement+=AbstractNamedFeatureDefinition
		public Group getGroup_1() { return cGroup_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_0() { return cAbstractKeyword_1_0; }
		
		//'feature'?
		public Keyword getFeatureKeyword_1_1() { return cFeatureKeyword_1_1; }
		
		//ownedRelatedElement+=AbstractNamedFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_1_2() { return cOwnedRelatedElementAssignment_1_2; }
		
		//AbstractNamedFeatureDefinition
		public RuleCall getOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_2_0() { return cOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_2_0; }
		
		//'feature' ownedRelatedElement+=UnnamedFeatureDefinition
		public Group getGroup_2() { return cGroup_2; }
		
		//'feature'
		public Keyword getFeatureKeyword_2_0() { return cFeatureKeyword_2_0; }
		
		//ownedRelatedElement+=UnnamedFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_2_1() { return cOwnedRelatedElementAssignment_2_1; }
		
		//UnnamedFeatureDefinition
		public RuleCall getOwnedRelatedElementUnnamedFeatureDefinitionParserRuleCall_2_1_0() { return cOwnedRelatedElementUnnamedFeatureDefinitionParserRuleCall_2_1_0; }
		
		//'abstract' 'feature' ownedRelatedElement+=AbstractUnnamedFeatureDefinition
		public Group getGroup_3() { return cGroup_3; }
		
		//'abstract'
		public Keyword getAbstractKeyword_3_0() { return cAbstractKeyword_3_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_3_1() { return cFeatureKeyword_3_1; }
		
		//ownedRelatedElement+=AbstractUnnamedFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_3_2() { return cOwnedRelatedElementAssignment_3_2; }
		
		//AbstractUnnamedFeatureDefinition
		public RuleCall getOwnedRelatedElementAbstractUnnamedFeatureDefinitionParserRuleCall_3_2_0() { return cOwnedRelatedElementAbstractUnnamedFeatureDefinitionParserRuleCall_3_2_0; }
		
		//('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_4() { return cGroup_4; }
		
		//'feature' memberName=Name? | memberName=Name
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'feature' memberName=Name?
		public Group getGroup_4_0_0() { return cGroup_4_0_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_4_0_0_0() { return cFeatureKeyword_4_0_0_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_4_0_0_1() { return cMemberNameAssignment_4_0_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_4_0_0_1_0() { return cMemberNameNameParserRuleCall_4_0_0_1_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_4_0_1() { return cMemberNameAssignment_4_0_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_4_0_1_0() { return cMemberNameNameParserRuleCall_4_0_1_0; }
		
		//'is'
		public Keyword getIsKeyword_4_1() { return cIsKeyword_4_1; }
		
		//memberElement=[SysML::Feature|QualifiedName]
		public Assignment getMemberElementAssignment_4_2() { return cMemberElementAssignment_4_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberElementFeatureCrossReference_4_2_0() { return cMemberElementFeatureCrossReference_4_2_0; }
		
		//QualifiedName
		public RuleCall getMemberElementFeatureQualifiedNameParserRuleCall_4_2_0_1() { return cMemberElementFeatureQualifiedNameParserRuleCall_4_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_4_3() { return cSemicolonKeyword_4_3; }
		
		//ownedRelatedElement+=StepDefinition
		public Assignment getOwnedRelatedElementAssignment_5() { return cOwnedRelatedElementAssignment_5; }
		
		//StepDefinition
		public RuleCall getOwnedRelatedElementStepDefinitionParserRuleCall_5_0() { return cOwnedRelatedElementStepDefinitionParserRuleCall_5_0; }
		
		//'step' memberName=Name? 'is' memberElement=[SysML::Step|QualifiedName] ';'
		public Group getGroup_6() { return cGroup_6; }
		
		//'step'
		public Keyword getStepKeyword_6_0() { return cStepKeyword_6_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_6_1() { return cMemberNameAssignment_6_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_6_1_0() { return cMemberNameNameParserRuleCall_6_1_0; }
		
		//'is'
		public Keyword getIsKeyword_6_2() { return cIsKeyword_6_2; }
		
		//memberElement=[SysML::Step|QualifiedName]
		public Assignment getMemberElementAssignment_6_3() { return cMemberElementAssignment_6_3; }
		
		//[SysML::Step|QualifiedName]
		public CrossReference getMemberElementStepCrossReference_6_3_0() { return cMemberElementStepCrossReference_6_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementStepQualifiedNameParserRuleCall_6_3_0_1() { return cMemberElementStepQualifiedNameParserRuleCall_6_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_6_4() { return cSemicolonKeyword_6_4; }
		
		//ownedRelatedElement+=ExpressionDefinition
		public Assignment getOwnedRelatedElementAssignment_7() { return cOwnedRelatedElementAssignment_7; }
		
		//ExpressionDefinition
		public RuleCall getOwnedRelatedElementExpressionDefinitionParserRuleCall_7_0() { return cOwnedRelatedElementExpressionDefinitionParserRuleCall_7_0; }
		
		//'expr' memberName=Name? 'is' memberElement=[SysML::Expression|QualifiedName] ';'
		public Group getGroup_8() { return cGroup_8; }
		
		//'expr'
		public Keyword getExprKeyword_8_0() { return cExprKeyword_8_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_8_1() { return cMemberNameAssignment_8_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_8_1_0() { return cMemberNameNameParserRuleCall_8_1_0; }
		
		//'is'
		public Keyword getIsKeyword_8_2() { return cIsKeyword_8_2; }
		
		//memberElement=[SysML::Expression|QualifiedName]
		public Assignment getMemberElementAssignment_8_3() { return cMemberElementAssignment_8_3; }
		
		//[SysML::Expression|QualifiedName]
		public CrossReference getMemberElementExpressionCrossReference_8_3_0() { return cMemberElementExpressionCrossReference_8_3_0; }
		
		//QualifiedName
		public RuleCall getMemberElementExpressionQualifiedNameParserRuleCall_8_3_0_1() { return cMemberElementExpressionQualifiedNameParserRuleCall_8_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_8_4() { return cSemicolonKeyword_8_4; }
	}
	public class CategoryBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.CategoryBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipCategoryMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipPackageImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		///* CATEGORIES */ fragment CategoryBody returns SysML::Category:
		//	';' | '{' (ownedRelationship+=CategoryMember | ownedRelationship+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedRelationship+=CategoryMember | ownedRelationship+=PackageImport)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedRelationship+=CategoryMember | ownedRelationship+=PackageImport)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedRelationship+=CategoryMember | ownedRelationship+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship+=CategoryMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//CategoryMember
		public RuleCall getOwnedRelationshipCategoryMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipCategoryMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship+=PackageImport
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//PackageImport
		public RuleCall getOwnedRelationshipPackageImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipPackageImportParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class AbstractCategoryBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AbstractCategoryBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractSemicolonKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIsAbstractAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsAbstractLeftCurlyBracketKeyword_1_0_0 = (Keyword)cIsAbstractAssignment_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipCategoryMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipPackageImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment AbstractCategoryBody returns SysML::Category:
		//	isAbstract?=';' | isAbstract?='{' (ownedRelationship+=CategoryMember | ownedRelationship+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?=';' | isAbstract?='{' (ownedRelationship+=CategoryMember | ownedRelationship+=PackageImport)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract?=';'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//';'
		public Keyword getIsAbstractSemicolonKeyword_0_0() { return cIsAbstractSemicolonKeyword_0_0; }
		
		//isAbstract?='{' (ownedRelationship+=CategoryMember | ownedRelationship+=PackageImport)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//isAbstract?='{'
		public Assignment getIsAbstractAssignment_1_0() { return cIsAbstractAssignment_1_0; }
		
		//'{'
		public Keyword getIsAbstractLeftCurlyBracketKeyword_1_0_0() { return cIsAbstractLeftCurlyBracketKeyword_1_0_0; }
		
		//(ownedRelationship+=CategoryMember | ownedRelationship+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship+=CategoryMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//CategoryMember
		public RuleCall getOwnedRelationshipCategoryMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipCategoryMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship+=PackageImport
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//PackageImport
		public RuleCall getOwnedRelationshipPackageImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipPackageImportParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class CategoryMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.CategoryMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonFeatureCategoryMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEndFeatureMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFeatureCategoryMemberParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		///* CATEGORY MEMBERSHIPS */ CategoryMember SysML::Membership:
		//	NonFeatureCategoryMember | FeatureMember | EndFeatureMember | FeatureCategoryMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonFeatureCategoryMember | FeatureMember | EndFeatureMember | FeatureCategoryMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonFeatureCategoryMember
		public RuleCall getNonFeatureCategoryMemberParserRuleCall_0() { return cNonFeatureCategoryMemberParserRuleCall_0; }
		
		//FeatureMember
		public RuleCall getFeatureMemberParserRuleCall_1() { return cFeatureMemberParserRuleCall_1; }
		
		//EndFeatureMember
		public RuleCall getEndFeatureMemberParserRuleCall_2() { return cEndFeatureMemberParserRuleCall_2; }
		
		//FeatureCategoryMember
		public RuleCall getFeatureCategoryMemberParserRuleCall_3() { return cFeatureCategoryMemberParserRuleCall_3; }
	}
	public class NonFeatureCategoryMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NonFeatureCategoryMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCategoryMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cNonFeatureMemberElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//NonFeatureCategoryMember SysML::Membership:
		//	CategoryMemberPrefix NonFeatureMemberElement;
		@Override public ParserRule getRule() { return rule; }
		
		//CategoryMemberPrefix NonFeatureMemberElement
		public Group getGroup() { return cGroup; }
		
		//CategoryMemberPrefix
		public RuleCall getCategoryMemberPrefixParserRuleCall_0() { return cCategoryMemberPrefixParserRuleCall_0; }
		
		//NonFeatureMemberElement
		public RuleCall getNonFeatureMemberElementParserRuleCall_1() { return cNonFeatureMemberElementParserRuleCall_1; }
	}
	public class FeatureCategoryMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureCategoryMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCategoryMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cDirectionAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0_0_0 = (RuleCall)cDirectionAssignment_1_0_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_1_0_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDirectionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_1_1_0 = (RuleCall)cDirectionAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_1_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Assignment cDirectionAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_2_0_0 = (RuleCall)cDirectionAssignment_1_2_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_1_0 = (RuleCall)cMemberNameAssignment_1_2_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_2_3 = (Assignment)cGroup_1_2.eContents().get(3);
		private final CrossReference cMemberFeatureFeatureCrossReference_1_2_3_0 = (CrossReference)cMemberFeatureAssignment_1_2_3.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_3_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_1_2_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_4 = (Keyword)cGroup_1_2.eContents().get(4);
		
		//FeatureCategoryMember SysML::FeatureMembership:
		//	CategoryMemberPrefix (direction=FeatureDirection? ownedRelatedElement+=NamedFeatureDefinition
		//	| 'abstract' direction=FeatureDirection? ownedRelatedElement+=AbstractNamedFeatureDefinition
		//	| direction=FeatureDirection? memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		//CategoryMemberPrefix (direction=FeatureDirection? ownedRelatedElement+=NamedFeatureDefinition | 'abstract'
		//direction=FeatureDirection? ownedRelatedElement+=AbstractNamedFeatureDefinition | direction=FeatureDirection?
		//memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		//CategoryMemberPrefix
		public RuleCall getCategoryMemberPrefixParserRuleCall_0() { return cCategoryMemberPrefixParserRuleCall_0; }
		
		//direction=FeatureDirection? ownedRelatedElement+=NamedFeatureDefinition | 'abstract' direction=FeatureDirection?
		//ownedRelatedElement+=AbstractNamedFeatureDefinition | direction=FeatureDirection? memberName=Name 'is'
		//memberFeature=[SysML::Feature|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//// These alternatives are provided for legacy Alf backwards compatibility.	
		//direction=FeatureDirection? ownedRelatedElement+=NamedFeatureDefinition
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//// These alternatives are provided for legacy Alf backwards compatibility.	
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_0_0() { return cDirectionAssignment_1_0_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0_0_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0_0_0; }
		
		//ownedRelatedElement+=NamedFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_1_0_1() { return cOwnedRelatedElementAssignment_1_0_1; }
		
		//NamedFeatureDefinition
		public RuleCall getOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_1_0_1_0() { return cOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_1_0_1_0; }
		
		//'abstract' direction=FeatureDirection? ownedRelatedElement+=AbstractNamedFeatureDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_1_1() { return cDirectionAssignment_1_1_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_1_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_1_1_0; }
		
		//ownedRelatedElement+=AbstractNamedFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_1_1_2() { return cOwnedRelatedElementAssignment_1_1_2; }
		
		//AbstractNamedFeatureDefinition
		public RuleCall getOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_1_2_0() { return cOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_1_2_0; }
		
		//direction=FeatureDirection? memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_2_0() { return cDirectionAssignment_1_2_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_2_0_0() { return cDirectionFeatureDirectionEnumRuleCall_1_2_0_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1_2_1() { return cMemberNameAssignment_1_2_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_1_0() { return cMemberNameNameParserRuleCall_1_2_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_2() { return cIsKeyword_1_2_2; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_2_3() { return cMemberFeatureAssignment_1_2_3; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_1_2_3_0() { return cMemberFeatureFeatureCrossReference_1_2_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_3_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_4() { return cSemicolonKeyword_1_2_4; }
	}
	public class FeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCategoryMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_0 = (Alternatives)cGroup_1_0.eContents().get(0);
		private final Keyword cFeatureKeyword_1_0_0_0 = (Keyword)cAlternatives_1_0_0.eContents().get(0);
		private final Assignment cIsPartAssignment_1_0_0_1 = (Assignment)cAlternatives_1_0_0.eContents().get(1);
		private final Keyword cIsPartPartKeyword_1_0_0_1_0 = (Keyword)cIsPartAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cIsPortionAssignment_1_0_0_2 = (Assignment)cAlternatives_1_0_0.eContents().get(2);
		private final Keyword cIsPortionPortionKeyword_1_0_0_2_0 = (Keyword)cIsPortionAssignment_1_0_0_2.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_0_3 = (Assignment)cAlternatives_1_0_0.eContents().get(3);
		private final Keyword cIsPortPortKeyword_1_0_0_3_0 = (Keyword)cIsPortAssignment_1_0_0_3.eContents().get(0);
		private final Assignment cDirectionAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0_1_0 = (RuleCall)cDirectionAssignment_1_0_1.eContents().get(0);
		private final Alternatives cAlternatives_1_0_2 = (Alternatives)cGroup_1_0.eContents().get(2);
		private final Assignment cOwnedRelatedElementAssignment_1_0_2_0 = (Assignment)cAlternatives_1_0_2.eContents().get(0);
		private final RuleCall cOwnedRelatedElementFeatureDefinitionParserRuleCall_1_0_2_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0_2_0.eContents().get(0);
		private final Group cGroup_1_0_2_1 = (Group)cAlternatives_1_0_2.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_0_2_1_0 = (Assignment)cGroup_1_0_2_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_0_2_1_0_0 = (RuleCall)cMemberNameAssignment_1_0_2_1_0.eContents().get(0);
		private final Keyword cIsKeyword_1_0_2_1_1 = (Keyword)cGroup_1_0_2_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_0_2_1_2 = (Assignment)cGroup_1_0_2_1.eContents().get(2);
		private final CrossReference cMemberFeatureFeatureCrossReference_1_0_2_1_2_0 = (CrossReference)cMemberFeatureAssignment_1_0_2_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_1_0_2_1_2_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_1_0_2_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_0_2_1_3 = (Keyword)cGroup_1_0_2_1.eContents().get(3);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1 = (Alternatives)cGroup_1_1.eContents().get(1);
		private final Keyword cFeatureKeyword_1_1_1_0 = (Keyword)cAlternatives_1_1_1.eContents().get(0);
		private final Assignment cIsPartAssignment_1_1_1_1 = (Assignment)cAlternatives_1_1_1.eContents().get(1);
		private final Keyword cIsPartPartKeyword_1_1_1_1_0 = (Keyword)cIsPartAssignment_1_1_1_1.eContents().get(0);
		private final Assignment cIsPortionAssignment_1_1_1_2 = (Assignment)cAlternatives_1_1_1.eContents().get(2);
		private final Keyword cIsPortionPortionKeyword_1_1_1_2_0 = (Keyword)cIsPortionAssignment_1_1_1_2.eContents().get(0);
		private final Assignment cIsPortAssignment_1_1_1_3 = (Assignment)cAlternatives_1_1_1.eContents().get(3);
		private final Keyword cIsPortPortKeyword_1_1_1_3_0 = (Keyword)cIsPortAssignment_1_1_1_3.eContents().get(0);
		private final Assignment cDirectionAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_1_2_0 = (RuleCall)cDirectionAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cOwnedRelatedElementAbstractFeatureDefinitionParserRuleCall_1_1_3_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1_3.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Keyword cConnectorKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Alternatives cAlternatives_1_2_1 = (Alternatives)cGroup_1_2.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_2_1_0 = (Assignment)cAlternatives_1_2_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementConnectorDefinitionParserRuleCall_1_2_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_2_1_0.eContents().get(0);
		private final Group cGroup_1_2_1_1 = (Group)cAlternatives_1_2_1.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_2_1_1_0 = (Assignment)cGroup_1_2_1_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_1_1_0_0 = (RuleCall)cMemberNameAssignment_1_2_1_1_0.eContents().get(0);
		private final Keyword cIsKeyword_1_2_1_1_1 = (Keyword)cGroup_1_2_1_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_2_1_1_2 = (Assignment)cGroup_1_2_1_1.eContents().get(2);
		private final CrossReference cMemberFeatureConnectorCrossReference_1_2_1_1_2_0 = (CrossReference)cMemberFeatureAssignment_1_2_1_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureConnectorQualifiedNameParserRuleCall_1_2_1_1_2_0_1 = (RuleCall)cMemberFeatureConnectorCrossReference_1_2_1_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_1_1_3 = (Keyword)cGroup_1_2_1_1.eContents().get(3);
		private final Group cGroup_1_3 = (Group)cAlternatives_1.eContents().get(3);
		private final Keyword cAbstractKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Keyword cConnectorKeyword_1_3_1 = (Keyword)cGroup_1_3.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractConnectorDefinitionParserRuleCall_1_3_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_3_2.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cAlternatives_1.eContents().get(4);
		private final Keyword cBindingKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cOwnedRelatedElementBindingConnectorDefinitionParserRuleCall_1_4_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_5 = (Group)cAlternatives_1.eContents().get(5);
		private final Keyword cSuccessionKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Alternatives cAlternatives_1_5_1 = (Alternatives)cGroup_1_5.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_5_1_0 = (Assignment)cAlternatives_1_5_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementSuccessionDefinitionParserRuleCall_1_5_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_5_1_0.eContents().get(0);
		private final Group cGroup_1_5_1_1 = (Group)cAlternatives_1_5_1.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_5_1_1_0 = (Assignment)cGroup_1_5_1_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_5_1_1_0_0 = (RuleCall)cMemberNameAssignment_1_5_1_1_0.eContents().get(0);
		private final Keyword cIsKeyword_1_5_1_1_1 = (Keyword)cGroup_1_5_1_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_5_1_1_2 = (Assignment)cGroup_1_5_1_1.eContents().get(2);
		private final CrossReference cMemberFeatureSuccessionCrossReference_1_5_1_1_2_0 = (CrossReference)cMemberFeatureAssignment_1_5_1_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureSuccessionQualifiedNameParserRuleCall_1_5_1_1_2_0_1 = (RuleCall)cMemberFeatureSuccessionCrossReference_1_5_1_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_5_1_1_3 = (Keyword)cGroup_1_5_1_1.eContents().get(3);
		private final Group cGroup_1_6 = (Group)cAlternatives_1.eContents().get(6);
		private final Keyword cAbstractKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Keyword cSuccessionKeyword_1_6_1 = (Keyword)cGroup_1_6.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_6_2 = (Assignment)cGroup_1_6.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractSuccessionDefinitionParserRuleCall_1_6_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_6_2.eContents().get(0);
		private final Group cGroup_1_7 = (Group)cAlternatives_1.eContents().get(7);
		private final Keyword cThenKeyword_1_7_0 = (Keyword)cGroup_1_7.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_7_1 = (Assignment)cGroup_1_7.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTargetSuccessionDefinitionParserRuleCall_1_7_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_7_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_7_2 = (Keyword)cGroup_1_7.eContents().get(2);
		private final Group cGroup_1_8 = (Group)cAlternatives_1.eContents().get(8);
		private final Keyword cStreamKeyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Alternatives cAlternatives_1_8_1 = (Alternatives)cGroup_1_8.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_8_1_0 = (Assignment)cAlternatives_1_8_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementItemFlowDefinitionParserRuleCall_1_8_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_8_1_0.eContents().get(0);
		private final Group cGroup_1_8_1_1 = (Group)cAlternatives_1_8_1.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_8_1_1_0 = (Assignment)cGroup_1_8_1_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_8_1_1_0_0 = (RuleCall)cMemberNameAssignment_1_8_1_1_0.eContents().get(0);
		private final Keyword cIsKeyword_1_8_1_1_1 = (Keyword)cGroup_1_8_1_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_8_1_1_2 = (Assignment)cGroup_1_8_1_1.eContents().get(2);
		private final CrossReference cMemberFeatureItemFlowCrossReference_1_8_1_1_2_0 = (CrossReference)cMemberFeatureAssignment_1_8_1_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureItemFlowQualifiedNameParserRuleCall_1_8_1_1_2_0_1 = (RuleCall)cMemberFeatureItemFlowCrossReference_1_8_1_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_8_1_1_3 = (Keyword)cGroup_1_8_1_1.eContents().get(3);
		private final Group cGroup_1_9 = (Group)cAlternatives_1.eContents().get(9);
		private final Keyword cAbstractKeyword_1_9_0 = (Keyword)cGroup_1_9.eContents().get(0);
		private final Keyword cStreamKeyword_1_9_1 = (Keyword)cGroup_1_9.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_9_2 = (Assignment)cGroup_1_9.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractItemFlowDefinitionParserRuleCall_1_9_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_9_2.eContents().get(0);
		private final Group cGroup_1_10 = (Group)cAlternatives_1.eContents().get(10);
		private final Keyword cFlowKeyword_1_10_0 = (Keyword)cGroup_1_10.eContents().get(0);
		private final Alternatives cAlternatives_1_10_1 = (Alternatives)cGroup_1_10.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_10_1_0 = (Assignment)cAlternatives_1_10_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementSuccessionItemFlowDefinitionParserRuleCall_1_10_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_10_1_0.eContents().get(0);
		private final Group cGroup_1_10_1_1 = (Group)cAlternatives_1_10_1.eContents().get(1);
		private final Assignment cMemberNameAssignment_1_10_1_1_0 = (Assignment)cGroup_1_10_1_1.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_10_1_1_0_0 = (RuleCall)cMemberNameAssignment_1_10_1_1_0.eContents().get(0);
		private final Keyword cIsKeyword_1_10_1_1_1 = (Keyword)cGroup_1_10_1_1.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_10_1_1_2 = (Assignment)cGroup_1_10_1_1.eContents().get(2);
		private final CrossReference cMemberFeatureSuccessionItemFlowCrossReference_1_10_1_1_2_0 = (CrossReference)cMemberFeatureAssignment_1_10_1_1_2.eContents().get(0);
		private final RuleCall cMemberFeatureSuccessionItemFlowQualifiedNameParserRuleCall_1_10_1_1_2_0_1 = (RuleCall)cMemberFeatureSuccessionItemFlowCrossReference_1_10_1_1_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_10_1_1_3 = (Keyword)cGroup_1_10_1_1.eContents().get(3);
		private final Group cGroup_1_11 = (Group)cAlternatives_1.eContents().get(11);
		private final Keyword cAbstractKeyword_1_11_0 = (Keyword)cGroup_1_11.eContents().get(0);
		private final Keyword cFlowKeyword_1_11_1 = (Keyword)cGroup_1_11.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_11_2 = (Assignment)cGroup_1_11.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractSuccessionItemFlowDefinitionParserRuleCall_1_11_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_11_2.eContents().get(0);
		
		//FeatureMember SysML::FeatureMembership:
		//	CategoryMemberPrefix (('feature' | isPart?='part' | isPortion?='portion' | isPort?='port') direction=FeatureDirection?
		//	(ownedRelatedElement+=FeatureDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';') | 'abstract' ('feature' | isPart?='part' |
		//	isPortion?='portion' | isPort?='port') direction=FeatureDirection?
		//	ownedRelatedElement+=AbstractFeatureDefinition
		//	| 'connector' (ownedRelatedElement+=ConnectorDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';') | 'abstract' 'connector'
		//	ownedRelatedElement+=AbstractConnectorDefinition
		//	| 'binding' ownedRelatedElement+=BindingConnectorDefinition
		//	| 'succession' (ownedRelatedElement+=SuccessionDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';') | 'abstract' 'succession'
		//	ownedRelatedElement+=AbstractSuccessionDefinition
		//	| 'then' ownedRelatedElement+=TargetSuccessionDefinition ';'
		//	| 'stream' (ownedRelatedElement+=ItemFlowDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';') | 'abstract' 'stream'
		//	ownedRelatedElement+=AbstractItemFlowDefinition
		//	| 'flow' (ownedRelatedElement+=SuccessionItemFlowDefinition
		//	| memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';') | 'abstract' 'flow'
		//	ownedRelatedElement+=AbstractSuccessionItemFlowDefinition);
		@Override public ParserRule getRule() { return rule; }
		
		//CategoryMemberPrefix (('feature' | isPart?='part' | isPortion?='portion' | isPort?='port') direction=FeatureDirection?
		//(ownedRelatedElement+=FeatureDefinition | memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';') |
		//'abstract' ('feature' | isPart?='part' | isPortion?='portion' | isPort?='port') direction=FeatureDirection?
		//ownedRelatedElement+=AbstractFeatureDefinition | 'connector' (ownedRelatedElement+=ConnectorDefinition |
		//memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';') | 'abstract' 'connector'
		//ownedRelatedElement+=AbstractConnectorDefinition | 'binding' ownedRelatedElement+=BindingConnectorDefinition |
		//'succession' (ownedRelatedElement+=SuccessionDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::Succession|QualifiedName] ';') | 'abstract' 'succession'
		//ownedRelatedElement+=AbstractSuccessionDefinition | 'then' ownedRelatedElement+=TargetSuccessionDefinition ';' |
		//'stream' (ownedRelatedElement+=ItemFlowDefinition | memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName]
		//';') | 'abstract' 'stream' ownedRelatedElement+=AbstractItemFlowDefinition | 'flow'
		//(ownedRelatedElement+=SuccessionItemFlowDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';') | 'abstract' 'flow'
		//ownedRelatedElement+=AbstractSuccessionItemFlowDefinition)
		public Group getGroup() { return cGroup; }
		
		//CategoryMemberPrefix
		public RuleCall getCategoryMemberPrefixParserRuleCall_0() { return cCategoryMemberPrefixParserRuleCall_0; }
		
		//('feature' | isPart?='part' | isPortion?='portion' | isPort?='port') direction=FeatureDirection?
		//(ownedRelatedElement+=FeatureDefinition | memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';') |
		//'abstract' ('feature' | isPart?='part' | isPortion?='portion' | isPort?='port') direction=FeatureDirection?
		//ownedRelatedElement+=AbstractFeatureDefinition | 'connector' (ownedRelatedElement+=ConnectorDefinition |
		//memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';') | 'abstract' 'connector'
		//ownedRelatedElement+=AbstractConnectorDefinition | 'binding' ownedRelatedElement+=BindingConnectorDefinition |
		//'succession' (ownedRelatedElement+=SuccessionDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::Succession|QualifiedName] ';') | 'abstract' 'succession'
		//ownedRelatedElement+=AbstractSuccessionDefinition | 'then' ownedRelatedElement+=TargetSuccessionDefinition ';' |
		//'stream' (ownedRelatedElement+=ItemFlowDefinition | memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName]
		//';') | 'abstract' 'stream' ownedRelatedElement+=AbstractItemFlowDefinition | 'flow'
		//(ownedRelatedElement+=SuccessionItemFlowDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';') | 'abstract' 'flow'
		//ownedRelatedElement+=AbstractSuccessionItemFlowDefinition
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//('feature' | isPart?='part' | isPortion?='portion' | isPort?='port') direction=FeatureDirection?
		//(ownedRelatedElement+=FeatureDefinition | memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';')
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'feature' | isPart?='part' | isPortion?='portion' | isPort?='port'
		public Alternatives getAlternatives_1_0_0() { return cAlternatives_1_0_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_1_0_0_0() { return cFeatureKeyword_1_0_0_0; }
		
		//isPart?='part'
		public Assignment getIsPartAssignment_1_0_0_1() { return cIsPartAssignment_1_0_0_1; }
		
		//'part'
		public Keyword getIsPartPartKeyword_1_0_0_1_0() { return cIsPartPartKeyword_1_0_0_1_0; }
		
		//isPortion?='portion'
		public Assignment getIsPortionAssignment_1_0_0_2() { return cIsPortionAssignment_1_0_0_2; }
		
		//'portion'
		public Keyword getIsPortionPortionKeyword_1_0_0_2_0() { return cIsPortionPortionKeyword_1_0_0_2_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_0_0_3() { return cIsPortAssignment_1_0_0_3; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_0_0_3_0() { return cIsPortPortKeyword_1_0_0_3_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_0_1() { return cDirectionAssignment_1_0_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0_1_0; }
		
		//ownedRelatedElement+=FeatureDefinition | memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Alternatives getAlternatives_1_0_2() { return cAlternatives_1_0_2; }
		
		//ownedRelatedElement+=FeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_1_0_2_0() { return cOwnedRelatedElementAssignment_1_0_2_0; }
		
		//FeatureDefinition
		public RuleCall getOwnedRelatedElementFeatureDefinitionParserRuleCall_1_0_2_0_0() { return cOwnedRelatedElementFeatureDefinitionParserRuleCall_1_0_2_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_1_0_2_1() { return cGroup_1_0_2_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_0_2_1_0() { return cMemberNameAssignment_1_0_2_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_0_2_1_0_0() { return cMemberNameNameParserRuleCall_1_0_2_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_0_2_1_1() { return cIsKeyword_1_0_2_1_1; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_0_2_1_2() { return cMemberFeatureAssignment_1_0_2_1_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_1_0_2_1_2_0() { return cMemberFeatureFeatureCrossReference_1_0_2_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_1_0_2_1_2_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_1_0_2_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_0_2_1_3() { return cSemicolonKeyword_1_0_2_1_3; }
		
		//'abstract' ('feature' | isPart?='part' | isPortion?='portion' | isPort?='port') direction=FeatureDirection?
		//ownedRelatedElement+=AbstractFeatureDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//'feature' | isPart?='part' | isPortion?='portion' | isPort?='port'
		public Alternatives getAlternatives_1_1_1() { return cAlternatives_1_1_1; }
		
		//'feature'
		public Keyword getFeatureKeyword_1_1_1_0() { return cFeatureKeyword_1_1_1_0; }
		
		//isPart?='part'
		public Assignment getIsPartAssignment_1_1_1_1() { return cIsPartAssignment_1_1_1_1; }
		
		//'part'
		public Keyword getIsPartPartKeyword_1_1_1_1_0() { return cIsPartPartKeyword_1_1_1_1_0; }
		
		//isPortion?='portion'
		public Assignment getIsPortionAssignment_1_1_1_2() { return cIsPortionAssignment_1_1_1_2; }
		
		//'portion'
		public Keyword getIsPortionPortionKeyword_1_1_1_2_0() { return cIsPortionPortionKeyword_1_1_1_2_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_1_1_3() { return cIsPortAssignment_1_1_1_3; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_1_1_3_0() { return cIsPortPortKeyword_1_1_1_3_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_1_2() { return cDirectionAssignment_1_1_2; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_1_2_0() { return cDirectionFeatureDirectionEnumRuleCall_1_1_2_0; }
		
		//ownedRelatedElement+=AbstractFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_1_1_3() { return cOwnedRelatedElementAssignment_1_1_3; }
		
		//AbstractFeatureDefinition
		public RuleCall getOwnedRelatedElementAbstractFeatureDefinitionParserRuleCall_1_1_3_0() { return cOwnedRelatedElementAbstractFeatureDefinitionParserRuleCall_1_1_3_0; }
		
		//'connector' (ownedRelatedElement+=ConnectorDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::Connector|QualifiedName] ';')
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'connector'
		public Keyword getConnectorKeyword_1_2_0() { return cConnectorKeyword_1_2_0; }
		
		//ownedRelatedElement+=ConnectorDefinition | memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';'
		public Alternatives getAlternatives_1_2_1() { return cAlternatives_1_2_1; }
		
		//ownedRelatedElement+=ConnectorDefinition
		public Assignment getOwnedRelatedElementAssignment_1_2_1_0() { return cOwnedRelatedElementAssignment_1_2_1_0; }
		
		//ConnectorDefinition
		public RuleCall getOwnedRelatedElementConnectorDefinitionParserRuleCall_1_2_1_0_0() { return cOwnedRelatedElementConnectorDefinitionParserRuleCall_1_2_1_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';'
		public Group getGroup_1_2_1_1() { return cGroup_1_2_1_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_2_1_1_0() { return cMemberNameAssignment_1_2_1_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_1_1_0_0() { return cMemberNameNameParserRuleCall_1_2_1_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_1_1_1() { return cIsKeyword_1_2_1_1_1; }
		
		//memberFeature=[SysML::Connector|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_2_1_1_2() { return cMemberFeatureAssignment_1_2_1_1_2; }
		
		//[SysML::Connector|QualifiedName]
		public CrossReference getMemberFeatureConnectorCrossReference_1_2_1_1_2_0() { return cMemberFeatureConnectorCrossReference_1_2_1_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureConnectorQualifiedNameParserRuleCall_1_2_1_1_2_0_1() { return cMemberFeatureConnectorQualifiedNameParserRuleCall_1_2_1_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_1_1_3() { return cSemicolonKeyword_1_2_1_1_3; }
		
		//'abstract' 'connector' ownedRelatedElement+=AbstractConnectorDefinition
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_3_0() { return cAbstractKeyword_1_3_0; }
		
		//'connector'
		public Keyword getConnectorKeyword_1_3_1() { return cConnectorKeyword_1_3_1; }
		
		//ownedRelatedElement+=AbstractConnectorDefinition
		public Assignment getOwnedRelatedElementAssignment_1_3_2() { return cOwnedRelatedElementAssignment_1_3_2; }
		
		//AbstractConnectorDefinition
		public RuleCall getOwnedRelatedElementAbstractConnectorDefinitionParserRuleCall_1_3_2_0() { return cOwnedRelatedElementAbstractConnectorDefinitionParserRuleCall_1_3_2_0; }
		
		//'binding' ownedRelatedElement+=BindingConnectorDefinition
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'binding'
		public Keyword getBindingKeyword_1_4_0() { return cBindingKeyword_1_4_0; }
		
		//ownedRelatedElement+=BindingConnectorDefinition
		public Assignment getOwnedRelatedElementAssignment_1_4_1() { return cOwnedRelatedElementAssignment_1_4_1; }
		
		//BindingConnectorDefinition
		public RuleCall getOwnedRelatedElementBindingConnectorDefinitionParserRuleCall_1_4_1_0() { return cOwnedRelatedElementBindingConnectorDefinitionParserRuleCall_1_4_1_0; }
		
		//'succession' (ownedRelatedElement+=SuccessionDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::Succession|QualifiedName] ';')
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//'succession'
		public Keyword getSuccessionKeyword_1_5_0() { return cSuccessionKeyword_1_5_0; }
		
		//ownedRelatedElement+=SuccessionDefinition | memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';'
		public Alternatives getAlternatives_1_5_1() { return cAlternatives_1_5_1; }
		
		//ownedRelatedElement+=SuccessionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_5_1_0() { return cOwnedRelatedElementAssignment_1_5_1_0; }
		
		//SuccessionDefinition
		public RuleCall getOwnedRelatedElementSuccessionDefinitionParserRuleCall_1_5_1_0_0() { return cOwnedRelatedElementSuccessionDefinitionParserRuleCall_1_5_1_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';'
		public Group getGroup_1_5_1_1() { return cGroup_1_5_1_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_5_1_1_0() { return cMemberNameAssignment_1_5_1_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_5_1_1_0_0() { return cMemberNameNameParserRuleCall_1_5_1_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_5_1_1_1() { return cIsKeyword_1_5_1_1_1; }
		
		//memberFeature=[SysML::Succession|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_5_1_1_2() { return cMemberFeatureAssignment_1_5_1_1_2; }
		
		//[SysML::Succession|QualifiedName]
		public CrossReference getMemberFeatureSuccessionCrossReference_1_5_1_1_2_0() { return cMemberFeatureSuccessionCrossReference_1_5_1_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureSuccessionQualifiedNameParserRuleCall_1_5_1_1_2_0_1() { return cMemberFeatureSuccessionQualifiedNameParserRuleCall_1_5_1_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_5_1_1_3() { return cSemicolonKeyword_1_5_1_1_3; }
		
		//'abstract' 'succession' ownedRelatedElement+=AbstractSuccessionDefinition
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_6_0() { return cAbstractKeyword_1_6_0; }
		
		//'succession'
		public Keyword getSuccessionKeyword_1_6_1() { return cSuccessionKeyword_1_6_1; }
		
		//ownedRelatedElement+=AbstractSuccessionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_6_2() { return cOwnedRelatedElementAssignment_1_6_2; }
		
		//AbstractSuccessionDefinition
		public RuleCall getOwnedRelatedElementAbstractSuccessionDefinitionParserRuleCall_1_6_2_0() { return cOwnedRelatedElementAbstractSuccessionDefinitionParserRuleCall_1_6_2_0; }
		
		//'then' ownedRelatedElement+=TargetSuccessionDefinition ';'
		public Group getGroup_1_7() { return cGroup_1_7; }
		
		//'then'
		public Keyword getThenKeyword_1_7_0() { return cThenKeyword_1_7_0; }
		
		//ownedRelatedElement+=TargetSuccessionDefinition
		public Assignment getOwnedRelatedElementAssignment_1_7_1() { return cOwnedRelatedElementAssignment_1_7_1; }
		
		//TargetSuccessionDefinition
		public RuleCall getOwnedRelatedElementTargetSuccessionDefinitionParserRuleCall_1_7_1_0() { return cOwnedRelatedElementTargetSuccessionDefinitionParserRuleCall_1_7_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_7_2() { return cSemicolonKeyword_1_7_2; }
		
		//'stream' (ownedRelatedElement+=ItemFlowDefinition | memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName]
		//';')
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//'stream'
		public Keyword getStreamKeyword_1_8_0() { return cStreamKeyword_1_8_0; }
		
		//ownedRelatedElement+=ItemFlowDefinition | memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';'
		public Alternatives getAlternatives_1_8_1() { return cAlternatives_1_8_1; }
		
		//ownedRelatedElement+=ItemFlowDefinition
		public Assignment getOwnedRelatedElementAssignment_1_8_1_0() { return cOwnedRelatedElementAssignment_1_8_1_0; }
		
		//ItemFlowDefinition
		public RuleCall getOwnedRelatedElementItemFlowDefinitionParserRuleCall_1_8_1_0_0() { return cOwnedRelatedElementItemFlowDefinitionParserRuleCall_1_8_1_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';'
		public Group getGroup_1_8_1_1() { return cGroup_1_8_1_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_8_1_1_0() { return cMemberNameAssignment_1_8_1_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_8_1_1_0_0() { return cMemberNameNameParserRuleCall_1_8_1_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_8_1_1_1() { return cIsKeyword_1_8_1_1_1; }
		
		//memberFeature=[SysML::ItemFlow|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_8_1_1_2() { return cMemberFeatureAssignment_1_8_1_1_2; }
		
		//[SysML::ItemFlow|QualifiedName]
		public CrossReference getMemberFeatureItemFlowCrossReference_1_8_1_1_2_0() { return cMemberFeatureItemFlowCrossReference_1_8_1_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureItemFlowQualifiedNameParserRuleCall_1_8_1_1_2_0_1() { return cMemberFeatureItemFlowQualifiedNameParserRuleCall_1_8_1_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_8_1_1_3() { return cSemicolonKeyword_1_8_1_1_3; }
		
		//'abstract' 'stream' ownedRelatedElement+=AbstractItemFlowDefinition
		public Group getGroup_1_9() { return cGroup_1_9; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_9_0() { return cAbstractKeyword_1_9_0; }
		
		//'stream'
		public Keyword getStreamKeyword_1_9_1() { return cStreamKeyword_1_9_1; }
		
		//ownedRelatedElement+=AbstractItemFlowDefinition
		public Assignment getOwnedRelatedElementAssignment_1_9_2() { return cOwnedRelatedElementAssignment_1_9_2; }
		
		//AbstractItemFlowDefinition
		public RuleCall getOwnedRelatedElementAbstractItemFlowDefinitionParserRuleCall_1_9_2_0() { return cOwnedRelatedElementAbstractItemFlowDefinitionParserRuleCall_1_9_2_0; }
		
		//'flow' (ownedRelatedElement+=SuccessionItemFlowDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';')
		public Group getGroup_1_10() { return cGroup_1_10; }
		
		//'flow'
		public Keyword getFlowKeyword_1_10_0() { return cFlowKeyword_1_10_0; }
		
		//ownedRelatedElement+=SuccessionItemFlowDefinition | memberName=Name? 'is'
		//memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';'
		public Alternatives getAlternatives_1_10_1() { return cAlternatives_1_10_1; }
		
		//ownedRelatedElement+=SuccessionItemFlowDefinition
		public Assignment getOwnedRelatedElementAssignment_1_10_1_0() { return cOwnedRelatedElementAssignment_1_10_1_0; }
		
		//SuccessionItemFlowDefinition
		public RuleCall getOwnedRelatedElementSuccessionItemFlowDefinitionParserRuleCall_1_10_1_0_0() { return cOwnedRelatedElementSuccessionItemFlowDefinitionParserRuleCall_1_10_1_0_0; }
		
		//memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';'
		public Group getGroup_1_10_1_1() { return cGroup_1_10_1_1; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_10_1_1_0() { return cMemberNameAssignment_1_10_1_1_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_10_1_1_0_0() { return cMemberNameNameParserRuleCall_1_10_1_1_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_10_1_1_1() { return cIsKeyword_1_10_1_1_1; }
		
		//memberFeature=[SysML::SuccessionItemFlow|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_10_1_1_2() { return cMemberFeatureAssignment_1_10_1_1_2; }
		
		//[SysML::SuccessionItemFlow|QualifiedName]
		public CrossReference getMemberFeatureSuccessionItemFlowCrossReference_1_10_1_1_2_0() { return cMemberFeatureSuccessionItemFlowCrossReference_1_10_1_1_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureSuccessionItemFlowQualifiedNameParserRuleCall_1_10_1_1_2_0_1() { return cMemberFeatureSuccessionItemFlowQualifiedNameParserRuleCall_1_10_1_1_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_10_1_1_3() { return cSemicolonKeyword_1_10_1_1_3; }
		
		//'abstract' 'flow' ownedRelatedElement+=AbstractSuccessionItemFlowDefinition
		public Group getGroup_1_11() { return cGroup_1_11; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_11_0() { return cAbstractKeyword_1_11_0; }
		
		//'flow'
		public Keyword getFlowKeyword_1_11_1() { return cFlowKeyword_1_11_1; }
		
		//ownedRelatedElement+=AbstractSuccessionItemFlowDefinition
		public Assignment getOwnedRelatedElementAssignment_1_11_2() { return cOwnedRelatedElementAssignment_1_11_2; }
		
		//AbstractSuccessionItemFlowDefinition
		public RuleCall getOwnedRelatedElementAbstractSuccessionItemFlowDefinitionParserRuleCall_1_11_2_0() { return cOwnedRelatedElementAbstractSuccessionItemFlowDefinitionParserRuleCall_1_11_2_0; }
	}
	public class EndFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.EndFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCategoryMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cEndKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Assignment cIsPartAssignment_1_0_1_0 = (Assignment)cAlternatives_1_0_1.eContents().get(0);
		private final Keyword cIsPartPartKeyword_1_0_1_0_0 = (Keyword)cIsPartAssignment_1_0_1_0.eContents().get(0);
		private final Assignment cIsPortionAssignment_1_0_1_1 = (Assignment)cAlternatives_1_0_1.eContents().get(1);
		private final Keyword cIsPortionPortionKeyword_1_0_1_1_0 = (Keyword)cIsPortionAssignment_1_0_1_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_0_1_2 = (Assignment)cAlternatives_1_0_1.eContents().get(2);
		private final Keyword cIsPortPortKeyword_1_0_1_2_0 = (Keyword)cIsPortAssignment_1_0_1_2.eContents().get(0);
		private final Assignment cDirectionAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0_2_0 = (RuleCall)cDirectionAssignment_1_0_2.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_0_3 = (Assignment)cGroup_1_0.eContents().get(3);
		private final RuleCall cOwnedRelatedElementFeatureDefinitionParserRuleCall_1_0_3_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0_3.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Keyword cEndKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Alternatives cAlternatives_1_1_2 = (Alternatives)cGroup_1_1.eContents().get(2);
		private final Assignment cIsPartAssignment_1_1_2_0 = (Assignment)cAlternatives_1_1_2.eContents().get(0);
		private final Keyword cIsPartPartKeyword_1_1_2_0_0 = (Keyword)cIsPartAssignment_1_1_2_0.eContents().get(0);
		private final Assignment cIsPortionAssignment_1_1_2_1 = (Assignment)cAlternatives_1_1_2.eContents().get(1);
		private final Keyword cIsPortionPortionKeyword_1_1_2_1_0 = (Keyword)cIsPortionAssignment_1_1_2_1.eContents().get(0);
		private final Assignment cIsPortAssignment_1_1_2_2 = (Assignment)cAlternatives_1_1_2.eContents().get(2);
		private final Keyword cIsPortPortKeyword_1_1_2_2_0 = (Keyword)cIsPortAssignment_1_1_2_2.eContents().get(0);
		private final Assignment cDirectionAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_1_3_0 = (RuleCall)cDirectionAssignment_1_1_3.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1_4 = (Assignment)cGroup_1_1.eContents().get(4);
		private final RuleCall cOwnedRelatedElementAbstractFeatureDefinitionParserRuleCall_1_1_4_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1_4.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Keyword cEndKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Alternatives cAlternatives_1_2_1 = (Alternatives)cGroup_1_2.eContents().get(1);
		private final Assignment cIsPartAssignment_1_2_1_0 = (Assignment)cAlternatives_1_2_1.eContents().get(0);
		private final Keyword cIsPartPartKeyword_1_2_1_0_0 = (Keyword)cIsPartAssignment_1_2_1_0.eContents().get(0);
		private final Assignment cIsPortionAssignment_1_2_1_1 = (Assignment)cAlternatives_1_2_1.eContents().get(1);
		private final Keyword cIsPortionPortionKeyword_1_2_1_1_0 = (Keyword)cIsPortionAssignment_1_2_1_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_2_0 = (RuleCall)cMemberNameAssignment_1_2_2.eContents().get(0);
		private final Keyword cIsKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);
		private final Assignment cMemberFeatureAssignment_1_2_4 = (Assignment)cGroup_1_2.eContents().get(4);
		private final CrossReference cMemberFeatureFeatureCrossReference_1_2_4_0 = (CrossReference)cMemberFeatureAssignment_1_2_4.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_4_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_1_2_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_5 = (Keyword)cGroup_1_2.eContents().get(5);
		
		//EndFeatureMember SysML::EndFeatureMembership:
		//	CategoryMemberPrefix ('end' (isPart?='part' | isPortion?='portion' | isPort?='port')? direction=FeatureDirection?
		//	ownedRelatedElement+=FeatureDefinition
		//	| 'abstract' 'end' (isPart?='part' | isPortion?='portion' | isPort?='port')? direction=FeatureDirection?
		//	ownedRelatedElement+=AbstractFeatureDefinition
		//	| 'end' (isPart?='part' | isPortion?='portion') memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName]
		//	';');
		@Override public ParserRule getRule() { return rule; }
		
		//CategoryMemberPrefix ('end' (isPart?='part' | isPortion?='portion' | isPort?='port')? direction=FeatureDirection?
		//ownedRelatedElement+=FeatureDefinition | 'abstract' 'end' (isPart?='part' | isPortion?='portion' | isPort?='port')?
		//direction=FeatureDirection? ownedRelatedElement+=AbstractFeatureDefinition | 'end' (isPart?='part' |
		//isPortion?='portion') memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		//CategoryMemberPrefix
		public RuleCall getCategoryMemberPrefixParserRuleCall_0() { return cCategoryMemberPrefixParserRuleCall_0; }
		
		//'end' (isPart?='part' | isPortion?='portion' | isPort?='port')? direction=FeatureDirection?
		//ownedRelatedElement+=FeatureDefinition | 'abstract' 'end' (isPart?='part' | isPortion?='portion' | isPort?='port')?
		//direction=FeatureDirection? ownedRelatedElement+=AbstractFeatureDefinition | 'end' (isPart?='part' |
		//isPortion?='portion') memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'end' (isPart?='part' | isPortion?='portion' | isPort?='port')? direction=FeatureDirection?
		//ownedRelatedElement+=FeatureDefinition
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'end'
		public Keyword getEndKeyword_1_0_0() { return cEndKeyword_1_0_0; }
		
		//(isPart?='part' | isPortion?='portion' | isPort?='port')?
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }
		
		//isPart?='part'
		public Assignment getIsPartAssignment_1_0_1_0() { return cIsPartAssignment_1_0_1_0; }
		
		//'part'
		public Keyword getIsPartPartKeyword_1_0_1_0_0() { return cIsPartPartKeyword_1_0_1_0_0; }
		
		//isPortion?='portion'
		public Assignment getIsPortionAssignment_1_0_1_1() { return cIsPortionAssignment_1_0_1_1; }
		
		//'portion'
		public Keyword getIsPortionPortionKeyword_1_0_1_1_0() { return cIsPortionPortionKeyword_1_0_1_1_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_0_1_2() { return cIsPortAssignment_1_0_1_2; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_0_1_2_0() { return cIsPortPortKeyword_1_0_1_2_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_0_2() { return cDirectionAssignment_1_0_2; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0_2_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0_2_0; }
		
		//ownedRelatedElement+=FeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_1_0_3() { return cOwnedRelatedElementAssignment_1_0_3; }
		
		//FeatureDefinition
		public RuleCall getOwnedRelatedElementFeatureDefinitionParserRuleCall_1_0_3_0() { return cOwnedRelatedElementFeatureDefinitionParserRuleCall_1_0_3_0; }
		
		//'abstract' 'end' (isPart?='part' | isPortion?='portion' | isPort?='port')? direction=FeatureDirection?
		//ownedRelatedElement+=AbstractFeatureDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//'end'
		public Keyword getEndKeyword_1_1_1() { return cEndKeyword_1_1_1; }
		
		//(isPart?='part' | isPortion?='portion' | isPort?='port')?
		public Alternatives getAlternatives_1_1_2() { return cAlternatives_1_1_2; }
		
		//isPart?='part'
		public Assignment getIsPartAssignment_1_1_2_0() { return cIsPartAssignment_1_1_2_0; }
		
		//'part'
		public Keyword getIsPartPartKeyword_1_1_2_0_0() { return cIsPartPartKeyword_1_1_2_0_0; }
		
		//isPortion?='portion'
		public Assignment getIsPortionAssignment_1_1_2_1() { return cIsPortionAssignment_1_1_2_1; }
		
		//'portion'
		public Keyword getIsPortionPortionKeyword_1_1_2_1_0() { return cIsPortionPortionKeyword_1_1_2_1_0; }
		
		//isPort?='port'
		public Assignment getIsPortAssignment_1_1_2_2() { return cIsPortAssignment_1_1_2_2; }
		
		//'port'
		public Keyword getIsPortPortKeyword_1_1_2_2_0() { return cIsPortPortKeyword_1_1_2_2_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_1_3() { return cDirectionAssignment_1_1_3; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_1_3_0() { return cDirectionFeatureDirectionEnumRuleCall_1_1_3_0; }
		
		//ownedRelatedElement+=AbstractFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_1_1_4() { return cOwnedRelatedElementAssignment_1_1_4; }
		
		//AbstractFeatureDefinition
		public RuleCall getOwnedRelatedElementAbstractFeatureDefinitionParserRuleCall_1_1_4_0() { return cOwnedRelatedElementAbstractFeatureDefinitionParserRuleCall_1_1_4_0; }
		
		//'end' (isPart?='part' | isPortion?='portion') memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'end'
		public Keyword getEndKeyword_1_2_0() { return cEndKeyword_1_2_0; }
		
		//isPart?='part' | isPortion?='portion'
		public Alternatives getAlternatives_1_2_1() { return cAlternatives_1_2_1; }
		
		//isPart?='part'
		public Assignment getIsPartAssignment_1_2_1_0() { return cIsPartAssignment_1_2_1_0; }
		
		//'part'
		public Keyword getIsPartPartKeyword_1_2_1_0_0() { return cIsPartPartKeyword_1_2_1_0_0; }
		
		//isPortion?='portion'
		public Assignment getIsPortionAssignment_1_2_1_1() { return cIsPortionAssignment_1_2_1_1; }
		
		//'portion'
		public Keyword getIsPortionPortionKeyword_1_2_1_1_0() { return cIsPortionPortionKeyword_1_2_1_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_2_2() { return cMemberNameAssignment_1_2_2; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_2_0() { return cMemberNameNameParserRuleCall_1_2_2_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_3() { return cIsKeyword_1_2_3; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_2_4() { return cMemberFeatureAssignment_1_2_4; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_1_2_4_0() { return cMemberFeatureFeatureCrossReference_1_2_4_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_4_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_5() { return cSemicolonKeyword_1_2_5; }
	}
	public class CategoryMemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.CategoryMemberPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		
		//fragment CategoryMemberPrefix returns SysML::Membership:
		//	ownedRelationship+=Annotation*
		//	//  ( annotation += StereotypeAnnotation )*
		//	visibility=VisibilityIndicator?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Annotation* //  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Annotation*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_0; }
		
		////  ( annotation += StereotypeAnnotation )*
		//visibility=VisibilityIndicator?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_1_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_1_0; }
	}
	public class ClassDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDefinitionOrStub");
		private final RuleCall cClassDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* CLASSES */ ClassDefinitionOrStub SysML::Class:
		//	ClassDefinition
		//	//	ClassDeclaration ( isStub ?= ';' | CategoryBody )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassDefinition
		public RuleCall getClassDefinitionParserRuleCall() { return cClassDefinitionParserRuleCall; }
	}
	public class ClassDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cClassDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ClassDefinition returns SysML::Class:
		//	ClassDeclaration CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassDeclaration CategoryBody
		public Group getGroup() { return cGroup; }
		
		//ClassDeclaration
		public RuleCall getClassDeclarationParserRuleCall_0() { return cClassDeclarationParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class ClassDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment ClassDeclaration returns SysML::Class:
		//	isAbstract?='abstract'? 'Class' ClassDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'Class' ClassDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'Class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//ClassDeclarationCompletion
		public RuleCall getClassDeclarationCompletionParserRuleCall_2() { return cClassDeclarationCompletionParserRuleCall_2; }
	}
	public class ClassDeclarationCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassDeclarationCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cSpecializationListParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ClassDeclarationCompletion returns SysML::Class:
		//	name=Name
		//	//  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//	SpecializationList?;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name //  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//SpecializationList?
		public Group getGroup() { return cGroup; }
		
		//name=Name
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0() { return cNameNameParserRuleCall_0_0; }
		
		////  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
		//SpecializationList?
		public RuleCall getSpecializationListParserRuleCall_1() { return cSpecializationListParserRuleCall_1; }
	}
	public class SpecializationListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SpecializationList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpecializesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipSuperclassingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipSuperclassingParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1.eContents().get(0);
		
		//fragment SpecializationList returns SysML::Class:
		//	'specializes' ownedRelationship+=Superclassing (',' ownedRelationship+=Superclassing)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'specializes' ownedRelationship+=Superclassing (',' ownedRelationship+=Superclassing)*
		public Group getGroup() { return cGroup; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_0() { return cSpecializesKeyword_0; }
		
		//ownedRelationship+=Superclassing
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Superclassing
		public RuleCall getOwnedRelationshipSuperclassingParserRuleCall_1_0() { return cOwnedRelationshipSuperclassingParserRuleCall_1_0; }
		
		//(',' ownedRelationship+=Superclassing)*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//ownedRelationship+=Superclassing
		public Assignment getOwnedRelationshipAssignment_2_1() { return cOwnedRelationshipAssignment_2_1; }
		
		//Superclassing
		public RuleCall getOwnedRelationshipSuperclassingParserRuleCall_2_1_0() { return cOwnedRelationshipSuperclassingParserRuleCall_2_1_0; }
	}
	public class SuperclassingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Superclassing");
		private final Assignment cSuperclassAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSuperclassClassCrossReference_0 = (CrossReference)cSuperclassAssignment.eContents().get(0);
		private final RuleCall cSuperclassClassQualifiedNameParserRuleCall_0_1 = (RuleCall)cSuperclassClassCrossReference_0.eContents().get(1);
		
		//Superclassing SysML::Superclassing:
		//	superclass=[SysML::Class|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//superclass=[SysML::Class|QualifiedName]
		public Assignment getSuperclassAssignment() { return cSuperclassAssignment; }
		
		//[SysML::Class|QualifiedName]
		public CrossReference getSuperclassClassCrossReference_0() { return cSuperclassClassCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSuperclassClassQualifiedNameParserRuleCall_0_1() { return cSuperclassClassQualifiedNameParserRuleCall_0_1; }
	}
	public class ObjectClassDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ObjectClassDefinitionOrStub");
		private final RuleCall cObjectClassDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* OBJECT CLASSES */ ObjectClassDefinitionOrStub SysML::ObjectClass:
		//	ObjectClassDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ObjectClassDefinition
		public RuleCall getObjectClassDefinitionParserRuleCall() { return cObjectClassDefinitionParserRuleCall; }
	}
	public class ObjectClassDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ObjectClassDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cObjectClassDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ObjectClassDefinition returns SysML::ObjectClass:
		//	ObjectClassDeclaration CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ObjectClassDeclaration CategoryBody
		public Group getGroup() { return cGroup; }
		
		//ObjectClassDeclaration
		public RuleCall getObjectClassDeclarationParserRuleCall_0() { return cObjectClassDeclarationParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class ObjectClassDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ObjectClassDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment ObjectClassDeclaration returns SysML::ObjectClass:
		//	isAbstract?='abstract'? 'class' ClassDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'class' ClassDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//ClassDeclarationCompletion
		public RuleCall getClassDeclarationCompletionParserRuleCall_2() { return cClassDeclarationCompletionParserRuleCall_2; }
	}
	public class ValueClassDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ValueClassDefinitionOrStub");
		private final RuleCall cValueClassDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* VALUE CLASSES (DATA TYPES) */ ValueClassDefinitionOrStub SysML::ValueClass:
		//	ValueClassDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ValueClassDefinition
		public RuleCall getValueClassDefinitionParserRuleCall() { return cValueClassDefinitionParserRuleCall; }
	}
	public class ValueClassDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ValueClassDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValueClassDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ValueClassDefinition returns SysML::ValueClass:
		//	ValueClassDeclaration CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValueClassDeclaration CategoryBody
		public Group getGroup() { return cGroup; }
		
		//ValueClassDeclaration
		public RuleCall getValueClassDeclarationParserRuleCall_0() { return cValueClassDeclarationParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class ValueClassDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ValueClassDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cDatatypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment ValueClassDeclaration returns SysML::ValueClass:
		//	isAbstract?='abstract'? 'datatype' ClassDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'datatype' ClassDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'datatype'
		public Keyword getDatatypeKeyword_1() { return cDatatypeKeyword_1; }
		
		//ClassDeclarationCompletion
		public RuleCall getClassDeclarationCompletionParserRuleCall_2() { return cClassDeclarationCompletionParserRuleCall_2; }
	}
	public class AssociationDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationDefinitionOrStub");
		private final RuleCall cAssociationDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* ASSOCIATIONS */ AssociationDefinitionOrStub SysML::Association:
		//	AssociationDefinition
		//	// AssociationDeclaration { isStub = ';' | AssociationBody }
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AssociationDefinition
		public RuleCall getAssociationDefinitionParserRuleCall() { return cAssociationDefinitionParserRuleCall; }
	}
	public class AssociationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAssociationDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAssociationBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment AssociationDefinition returns SysML::Association:
		//	AssociationDeclaration AssociationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//AssociationDeclaration AssociationBody
		public Group getGroup() { return cGroup; }
		
		//AssociationDeclaration
		public RuleCall getAssociationDeclarationParserRuleCall_0() { return cAssociationDeclarationParserRuleCall_0; }
		
		//AssociationBody
		public RuleCall getAssociationBodyParserRuleCall_1() { return cAssociationBodyParserRuleCall_1; }
	}
	public class AssociationDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cAssocKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment AssociationDeclaration returns SysML::Association:
		//	isAbstract?='abstract'? 'assoc' ClassDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'assoc' ClassDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'assoc'
		public Keyword getAssocKeyword_1() { return cAssocKeyword_1; }
		
		//ClassDeclarationCompletion
		public RuleCall getClassDeclarationCompletionParserRuleCall_2() { return cClassDeclarationCompletionParserRuleCall_2; }
	}
	public class AssociationBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipAssociationMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipPackageImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment AssociationBody returns SysML::Association:
		//	';' | '{' (ownedRelationship+=AssociationMember | ownedRelationship+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedRelationship+=AssociationMember | ownedRelationship+=PackageImport)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedRelationship+=AssociationMember | ownedRelationship+=PackageImport)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedRelationship+=AssociationMember | ownedRelationship+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship+=AssociationMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//AssociationMember
		public RuleCall getOwnedRelationshipAssociationMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipAssociationMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship+=PackageImport
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//PackageImport
		public RuleCall getOwnedRelationshipPackageImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipPackageImportParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class AssociationMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonFeatureCategoryMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEndFeatureMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAssociationEndFeatureMemberParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		///* ASSOCIATION MEMBERSHIPS */ AssociationMember SysML::Membership:
		//	NonFeatureCategoryMember | FeatureMember | EndFeatureMember | AssociationEndFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonFeatureCategoryMember | FeatureMember | EndFeatureMember | AssociationEndFeatureMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonFeatureCategoryMember
		public RuleCall getNonFeatureCategoryMemberParserRuleCall_0() { return cNonFeatureCategoryMemberParserRuleCall_0; }
		
		//FeatureMember
		public RuleCall getFeatureMemberParserRuleCall_1() { return cFeatureMemberParserRuleCall_1; }
		
		//EndFeatureMember
		public RuleCall getEndFeatureMemberParserRuleCall_2() { return cEndFeatureMemberParserRuleCall_2; }
		
		//AssociationEndFeatureMember
		public RuleCall getAssociationEndFeatureMemberParserRuleCall_3() { return cAssociationEndFeatureMemberParserRuleCall_3; }
	}
	public class AssociationEndFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AssociationEndFeatureMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCategoryMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cDirectionAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_0_0_0 = (RuleCall)cDirectionAssignment_1_0_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_1_0_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAbstractKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cDirectionAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_1_1_1_0 = (RuleCall)cDirectionAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_1_2_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Assignment cMemberNameAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_1_2_0_0 = (RuleCall)cMemberNameAssignment_1_2_0.eContents().get(0);
		private final Keyword cIsKeyword_1_2_1 = (Keyword)cGroup_1_2.eContents().get(1);
		private final Assignment cMemberFeatureAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final CrossReference cMemberFeatureFeatureCrossReference_1_2_2_0 = (CrossReference)cMemberFeatureAssignment_1_2_2.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_2_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_1_2_2_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);
		
		//AssociationEndFeatureMember SysML::EndFeatureMembership:
		//	CategoryMemberPrefix (direction=FeatureDirection? ownedRelatedElement+=NamedFeatureDefinition
		//	| 'abstract' direction=FeatureDirection? ownedRelatedElement+=AbstractNamedFeatureDefinition
		//	| memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';');
		@Override public ParserRule getRule() { return rule; }
		
		//CategoryMemberPrefix (direction=FeatureDirection? ownedRelatedElement+=NamedFeatureDefinition | 'abstract'
		//direction=FeatureDirection? ownedRelatedElement+=AbstractNamedFeatureDefinition | memberName=Name 'is'
		//memberFeature=[SysML::Feature|QualifiedName] ';')
		public Group getGroup() { return cGroup; }
		
		//CategoryMemberPrefix
		public RuleCall getCategoryMemberPrefixParserRuleCall_0() { return cCategoryMemberPrefixParserRuleCall_0; }
		
		//direction=FeatureDirection? ownedRelatedElement+=NamedFeatureDefinition | 'abstract' direction=FeatureDirection?
		//ownedRelatedElement+=AbstractNamedFeatureDefinition | memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName]
		//';'
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//// These alternatives are provided for legacy Alf backwards compatibility;
		//direction=FeatureDirection? ownedRelatedElement+=NamedFeatureDefinition
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//// These alternatives are provided for legacy Alf backwards compatibility;
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_0_0() { return cDirectionAssignment_1_0_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_0_0_0() { return cDirectionFeatureDirectionEnumRuleCall_1_0_0_0; }
		
		//ownedRelatedElement+=NamedFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_1_0_1() { return cOwnedRelatedElementAssignment_1_0_1; }
		
		//NamedFeatureDefinition
		public RuleCall getOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_1_0_1_0() { return cOwnedRelatedElementNamedFeatureDefinitionParserRuleCall_1_0_1_0; }
		
		//'abstract' direction=FeatureDirection? ownedRelatedElement+=AbstractNamedFeatureDefinition
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'abstract'
		public Keyword getAbstractKeyword_1_1_0() { return cAbstractKeyword_1_1_0; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_1_1_1() { return cDirectionAssignment_1_1_1; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_1_1_1_0() { return cDirectionFeatureDirectionEnumRuleCall_1_1_1_0; }
		
		//ownedRelatedElement+=AbstractNamedFeatureDefinition
		public Assignment getOwnedRelatedElementAssignment_1_1_2() { return cOwnedRelatedElementAssignment_1_1_2; }
		
		//AbstractNamedFeatureDefinition
		public RuleCall getOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_1_2_0() { return cOwnedRelatedElementAbstractNamedFeatureDefinitionParserRuleCall_1_1_2_0; }
		
		//memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';'
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1_2_0() { return cMemberNameAssignment_1_2_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_2_0_0() { return cMemberNameNameParserRuleCall_1_2_0_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2_1() { return cIsKeyword_1_2_1; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_2_2() { return cMemberFeatureAssignment_1_2_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_1_2_2_0() { return cMemberFeatureFeatureCrossReference_1_2_2_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_2_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_1_2_2_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_2_3() { return cSemicolonKeyword_1_2_3; }
	}
	public class InteractionDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.InteractionDefinitionOrStub");
		private final RuleCall cInteractionDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* INTERACTIONS */ InteractionDefinitionOrStub SysML::Interaction:
		//	InteractionDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//InteractionDefinition
		public RuleCall getInteractionDefinitionParserRuleCall() { return cInteractionDefinitionParserRuleCall; }
	}
	public class InteractionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.InteractionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cInteractionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAssociationBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment InteractionDefinition returns SysML::Interaction:
		//	InteractionDeclaration AssociationBody;
		@Override public ParserRule getRule() { return rule; }
		
		//InteractionDeclaration AssociationBody
		public Group getGroup() { return cGroup; }
		
		//InteractionDeclaration
		public RuleCall getInteractionDeclarationParserRuleCall_0() { return cInteractionDeclarationParserRuleCall_0; }
		
		//AssociationBody
		public RuleCall getAssociationBodyParserRuleCall_1() { return cAssociationBodyParserRuleCall_1; }
	}
	public class InteractionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.InteractionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cInteractionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cClassDeclarationCompletionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment InteractionDeclaration returns SysML::Interaction:
		//	isAbstract?='abstract'? 'interaction' ClassDeclarationCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'interaction' ClassDeclarationCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'interaction'
		public Keyword getInteractionKeyword_1() { return cInteractionKeyword_1; }
		
		//ClassDeclarationCompletion
		public RuleCall getClassDeclarationCompletionParserRuleCall_2() { return cClassDeclarationCompletionParserRuleCall_2; }
	}
	public class BehaviorDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BehaviorDefinitionOrStub");
		private final RuleCall cBehaviorDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* BEHAVIORS */ BehaviorDefinitionOrStub SysML::Behavior:
		//	BehaviorDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//BehaviorDefinition
		public RuleCall getBehaviorDefinitionParserRuleCall() { return cBehaviorDefinitionParserRuleCall; }
	}
	public class BehaviorDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BehaviorDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBehaviorDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cBehaviorBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment BehaviorDefinition returns SysML::Behavior:
		//	BehaviorDeclaration BehaviorBody;
		@Override public ParserRule getRule() { return rule; }
		
		//BehaviorDeclaration BehaviorBody
		public Group getGroup() { return cGroup; }
		
		//BehaviorDeclaration
		public RuleCall getBehaviorDeclarationParserRuleCall_0() { return cBehaviorDeclarationParserRuleCall_0; }
		
		//BehaviorBody
		public RuleCall getBehaviorBodyParserRuleCall_1() { return cBehaviorBodyParserRuleCall_1; }
	}
	public class BehaviorDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BehaviorDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cBehaviorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cSpecializationListParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//fragment BehaviorDeclaration returns SysML::Behavior:
		//	isAbstract?='abstract'? 'behavior' name=Name ParameterList SpecializationList?;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'behavior' name=Name ParameterList SpecializationList?
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'behavior'
		public Keyword getBehaviorKeyword_1() { return cBehaviorKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//ParameterList
		public RuleCall getParameterListParserRuleCall_3() { return cParameterListParserRuleCall_3; }
		
		//SpecializationList?
		public RuleCall getSpecializationListParserRuleCall_4() { return cSpecializationListParserRuleCall_4; }
	}
	public class ParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment ParameterList returns SysML::Category:
		//	'(' (ownedRelationship+=ParameterMember (',' ownedRelationship+=ParameterMember)*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' (ownedRelationship+=ParameterMember (',' ownedRelationship+=ParameterMember)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(ownedRelationship+=ParameterMember (',' ownedRelationship+=ParameterMember)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship+=ParameterMember
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//ParameterMember
		public RuleCall getOwnedRelationshipParameterMemberParserRuleCall_1_0_0() { return cOwnedRelationshipParameterMemberParserRuleCall_1_0_0; }
		
		//(',' ownedRelationship+=ParameterMember)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedRelationship+=ParameterMember
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//ParameterMember
		public RuleCall getOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0() { return cOwnedRelationshipParameterMemberParserRuleCall_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class BehaviorBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BehaviorBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipBehaviorMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipPackageImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment BehaviorBody returns SysML::Category:
		//	';' | '{' (ownedRelationship+=BehaviorMember | ownedRelationship+=PackageImport)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedRelationship+=BehaviorMember | ownedRelationship+=PackageImport)* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedRelationship+=BehaviorMember | ownedRelationship+=PackageImport)* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedRelationship+=BehaviorMember | ownedRelationship+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship+=BehaviorMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//BehaviorMember
		public RuleCall getOwnedRelationshipBehaviorMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipBehaviorMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship+=PackageImport
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//PackageImport
		public RuleCall getOwnedRelationshipPackageImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipPackageImportParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_0 = (RuleCall)cMemberNameAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementParameterDefinitionParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		///* BEHAVIOR MEMBERSHIPS */ ParameterMember SysML::ParameterMembership:
		//	direction=FeatureDirection? memberName=Name ownedRelatedElement+=ParameterDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//direction=FeatureDirection? memberName=Name ownedRelatedElement+=ParameterDefinition
		public Group getGroup() { return cGroup; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_1() { return cMemberNameAssignment_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_0() { return cMemberNameNameParserRuleCall_1_0; }
		
		//ownedRelatedElement+=ParameterDefinition
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//ParameterDefinition
		public RuleCall getOwnedRelatedElementParameterDefinitionParserRuleCall_2_0() { return cOwnedRelatedElementParameterDefinitionParserRuleCall_2_0; }
	}
	public class BehaviorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BehaviorMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonFeatureCategoryMemberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureMemberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEndFeatureMemberParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBehaviorStepMemberParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//BehaviorMember SysML::Membership:
		//	NonFeatureCategoryMember | FeatureMember | EndFeatureMember | BehaviorStepMember;
		@Override public ParserRule getRule() { return rule; }
		
		//NonFeatureCategoryMember | FeatureMember | EndFeatureMember | BehaviorStepMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonFeatureCategoryMember
		public RuleCall getNonFeatureCategoryMemberParserRuleCall_0() { return cNonFeatureCategoryMemberParserRuleCall_0; }
		
		//FeatureMember
		public RuleCall getFeatureMemberParserRuleCall_1() { return cFeatureMemberParserRuleCall_1; }
		
		//EndFeatureMember
		public RuleCall getEndFeatureMemberParserRuleCall_2() { return cEndFeatureMemberParserRuleCall_2; }
		
		//BehaviorStepMember
		public RuleCall getBehaviorStepMemberParserRuleCall_3() { return cBehaviorStepMemberParserRuleCall_3; }
	}
	public class BehaviorStepMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BehaviorStepMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCategoryMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cBehaviorStepMemberDefinitionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//BehaviorStepMember SysML::FeatureMembership:
		//	CategoryMemberPrefix BehaviorStepMemberDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//CategoryMemberPrefix BehaviorStepMemberDefinition
		public Group getGroup() { return cGroup; }
		
		//CategoryMemberPrefix
		public RuleCall getCategoryMemberPrefixParserRuleCall_0() { return cCategoryMemberPrefixParserRuleCall_0; }
		
		//BehaviorStepMemberDefinition
		public RuleCall getBehaviorStepMemberDefinitionParserRuleCall_1() { return cBehaviorStepMemberDefinitionParserRuleCall_1; }
	}
	public class BehaviorStepMemberDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BehaviorStepMemberDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelatedElementStepDefinitionParserRuleCall_0_0 = (RuleCall)cOwnedRelatedElementAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cStepKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMemberNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_1_0 = (RuleCall)cMemberNameAssignment_1_1.eContents().get(0);
		private final Keyword cIsKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final CrossReference cMemberFeatureStepCrossReference_1_3_0 = (CrossReference)cMemberFeatureAssignment_1_3.eContents().get(0);
		private final RuleCall cMemberFeatureStepQualifiedNameParserRuleCall_1_3_0_1 = (RuleCall)cMemberFeatureStepCrossReference_1_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelatedElementExpressionDefinitionParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cExprKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMemberNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_3_1_0 = (RuleCall)cMemberNameAssignment_3_1.eContents().get(0);
		private final Keyword cIsKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cMemberFeatureAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final CrossReference cMemberFeatureExpressionCrossReference_3_3_0 = (CrossReference)cMemberFeatureAssignment_3_3.eContents().get(0);
		private final RuleCall cMemberFeatureExpressionQualifiedNameParserRuleCall_3_3_0_1 = (RuleCall)cMemberFeatureExpressionCrossReference_3_3_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		
		//fragment BehaviorStepMemberDefinition returns SysML::FeatureMembership:
		//	ownedRelatedElement+=StepDefinition
		//	| 'step' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName] ';'
		//	| ownedRelatedElement+=ExpressionDefinition
		//	| 'expr' memberName=Name? 'is' memberFeature=[SysML::Expression|QualifiedName] ';';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=StepDefinition | 'step' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName] ';' |
		//ownedRelatedElement+=ExpressionDefinition | 'expr' memberName=Name? 'is'
		//memberFeature=[SysML::Expression|QualifiedName] ';'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelatedElement+=StepDefinition
		public Assignment getOwnedRelatedElementAssignment_0() { return cOwnedRelatedElementAssignment_0; }
		
		//StepDefinition
		public RuleCall getOwnedRelatedElementStepDefinitionParserRuleCall_0_0() { return cOwnedRelatedElementStepDefinitionParserRuleCall_0_0; }
		
		//'step' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName] ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//'step'
		public Keyword getStepKeyword_1_0() { return cStepKeyword_1_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1_1() { return cMemberNameAssignment_1_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_1_0() { return cMemberNameNameParserRuleCall_1_1_0; }
		
		//'is'
		public Keyword getIsKeyword_1_2() { return cIsKeyword_1_2; }
		
		//memberFeature=[SysML::Step|QualifiedName]
		public Assignment getMemberFeatureAssignment_1_3() { return cMemberFeatureAssignment_1_3; }
		
		//[SysML::Step|QualifiedName]
		public CrossReference getMemberFeatureStepCrossReference_1_3_0() { return cMemberFeatureStepCrossReference_1_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureStepQualifiedNameParserRuleCall_1_3_0_1() { return cMemberFeatureStepQualifiedNameParserRuleCall_1_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1_4() { return cSemicolonKeyword_1_4; }
		
		//ownedRelatedElement+=ExpressionDefinition
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//ExpressionDefinition
		public RuleCall getOwnedRelatedElementExpressionDefinitionParserRuleCall_2_0() { return cOwnedRelatedElementExpressionDefinitionParserRuleCall_2_0; }
		
		//'expr' memberName=Name? 'is' memberFeature=[SysML::Expression|QualifiedName] ';'
		public Group getGroup_3() { return cGroup_3; }
		
		//'expr'
		public Keyword getExprKeyword_3_0() { return cExprKeyword_3_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_3_1() { return cMemberNameAssignment_3_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_3_1_0() { return cMemberNameNameParserRuleCall_3_1_0; }
		
		//'is'
		public Keyword getIsKeyword_3_2() { return cIsKeyword_3_2; }
		
		//memberFeature=[SysML::Expression|QualifiedName]
		public Assignment getMemberFeatureAssignment_3_3() { return cMemberFeatureAssignment_3_3; }
		
		//[SysML::Expression|QualifiedName]
		public CrossReference getMemberFeatureExpressionCrossReference_3_3_0() { return cMemberFeatureExpressionCrossReference_3_3_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureExpressionQualifiedNameParserRuleCall_3_3_0_1() { return cMemberFeatureExpressionQualifiedNameParserRuleCall_3_3_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_3_4() { return cSemicolonKeyword_3_4; }
	}
	public class FunctionDefinitionOrStubElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FunctionDefinitionOrStub");
		private final RuleCall cFunctionDefinitionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* FUNCTIONS */ FunctionDefinitionOrStub SysML::Function:
		//	FunctionDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//FunctionDefinition
		public RuleCall getFunctionDefinitionParserRuleCall() { return cFunctionDefinitionParserRuleCall; }
	}
	public class FunctionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FunctionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFunctionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFunctionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment FunctionDefinition returns SysML::Function:
		//	FunctionDeclaration FunctionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//FunctionDeclaration FunctionBody
		public Group getGroup() { return cGroup; }
		
		//FunctionDeclaration
		public RuleCall getFunctionDeclarationParserRuleCall_0() { return cFunctionDeclarationParserRuleCall_0; }
		
		//FunctionBody
		public RuleCall getFunctionBodyParserRuleCall_1() { return cFunctionBodyParserRuleCall_1; }
	}
	public class FunctionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FunctionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cFunctionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameNameParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cParameterListParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cReturnParameterPartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cSpecializationListParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//fragment FunctionDeclaration returns SysML::Function:
		//	isAbstract?='abstract'? 'function' name=Name ParameterList ReturnParameterPart SpecializationList?;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'function' name=Name ParameterList ReturnParameterPart SpecializationList?
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'function'
		public Keyword getFunctionKeyword_1() { return cFunctionKeyword_1; }
		
		//name=Name
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0() { return cNameNameParserRuleCall_2_0; }
		
		//ParameterList
		public RuleCall getParameterListParserRuleCall_3() { return cParameterListParserRuleCall_3; }
		
		//ReturnParameterPart
		public RuleCall getReturnParameterPartParserRuleCall_4() { return cReturnParameterPartParserRuleCall_4; }
		
		//SpecializationList?
		public RuleCall getSpecializationListParserRuleCall_5() { return cSpecializationListParserRuleCall_5; }
	}
	public class ReturnParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ReturnParameterPart");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipReturnParameterMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//fragment ReturnParameterPart returns SysML::Category:
		//	ownedRelationship+=ReturnParameterMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=ReturnParameterMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//ReturnParameterMember
		public RuleCall getOwnedRelationshipReturnParameterMemberParserRuleCall_0() { return cOwnedRelationshipReturnParameterMemberParserRuleCall_0; }
	}
	public class FunctionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FunctionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipBehaviorMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipPackageImportParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipExpressionMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment FunctionBody returns SysML::Category:
		//	';'
		//	| '{' (ownedRelationship+=BehaviorMember | ownedRelationship+=PackageImport)*
		//	ownedRelationship+=ExpressionMember? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' (ownedRelationship+=BehaviorMember | ownedRelationship+=PackageImport)* ownedRelationship+=ExpressionMember?
		//'}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' (ownedRelationship+=BehaviorMember | ownedRelationship+=PackageImport)* ownedRelationship+=ExpressionMember? '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(ownedRelationship+=BehaviorMember | ownedRelationship+=PackageImport)*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship+=BehaviorMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//BehaviorMember
		public RuleCall getOwnedRelationshipBehaviorMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipBehaviorMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship+=PackageImport
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//PackageImport
		public RuleCall getOwnedRelationshipPackageImportParserRuleCall_1_1_1_0() { return cOwnedRelationshipPackageImportParserRuleCall_1_1_1_0; }
		
		//ownedRelationship+=ExpressionMember?
		public Assignment getOwnedRelationshipAssignment_1_2() { return cOwnedRelationshipAssignment_1_2; }
		
		//ExpressionMember
		public RuleCall getOwnedRelationshipExpressionMemberParserRuleCall_1_2_0() { return cOwnedRelationshipExpressionMemberParserRuleCall_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class ReturnParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ReturnParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMemberNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0 = (RuleCall)cMemberNameAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementParameterDefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		///* FUNCTION MEMBERSHIPS */ ReturnParameterMember SysML::ReturnParameterMembership:
		//	memberName=Name? ownedRelatedElement+=ParameterDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//memberName=Name? ownedRelatedElement+=ParameterDefinition
		public Group getGroup() { return cGroup; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_0() { return cMemberNameAssignment_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0() { return cMemberNameNameParserRuleCall_0_0; }
		
		//ownedRelatedElement+=ParameterDefinition
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ParameterDefinition
		public RuleCall getOwnedRelatedElementParameterDefinitionParserRuleCall_1_0() { return cOwnedRelatedElementParameterDefinitionParserRuleCall_1_0; }
	}
	public class ExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ExpressionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ExpressionMember SysML::FeatureMembership:
		//	ownedRelatedElement+=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=Expression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//Expression
		public RuleCall getOwnedRelatedElementExpressionParserRuleCall_0() { return cOwnedRelatedElementExpressionParserRuleCall_0; }
	}
	public class FeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNamedFeatureDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUnnamedFeatureDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* FEATURES */ FeatureDefinition SysML::Feature:
		//	NamedFeatureDefinition | UnnamedFeatureDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//NamedFeatureDefinition | UnnamedFeatureDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NamedFeatureDefinition
		public RuleCall getNamedFeatureDefinitionParserRuleCall_0() { return cNamedFeatureDefinitionParserRuleCall_0; }
		
		//UnnamedFeatureDefinition
		public RuleCall getUnnamedFeatureDefinitionParserRuleCall_1() { return cUnnamedFeatureDefinitionParserRuleCall_1; }
	}
	public class AbstractFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AbstractFeatureDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAbstractNamedFeatureDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAbstractUnnamedFeatureDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractFeatureDefinition SysML::Feature:
		//	AbstractNamedFeatureDefinition | AbstractUnnamedFeatureDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//AbstractNamedFeatureDefinition | AbstractUnnamedFeatureDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AbstractNamedFeatureDefinition
		public RuleCall getAbstractNamedFeatureDefinitionParserRuleCall_0() { return cAbstractNamedFeatureDefinitionParserRuleCall_0; }
		
		//AbstractUnnamedFeatureDefinition
		public RuleCall getAbstractUnnamedFeatureDefinitionParserRuleCall_1() { return cAbstractUnnamedFeatureDefinitionParserRuleCall_1; }
	}
	public class NamedFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NamedFeatureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFeatureDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFeatureCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//NamedFeatureDefinition SysML::Feature:
		//	FeatureDeclaration FeatureCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureDeclaration FeatureCompletion
		public Group getGroup() { return cGroup; }
		
		//FeatureDeclaration
		public RuleCall getFeatureDeclarationParserRuleCall_0() { return cFeatureDeclarationParserRuleCall_0; }
		
		//FeatureCompletion
		public RuleCall getFeatureCompletionParserRuleCall_1() { return cFeatureCompletionParserRuleCall_1; }
	}
	public class AbstractNamedFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AbstractNamedFeatureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFeatureDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractFeatureCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractNamedFeatureDefinition SysML::Feature:
		//	FeatureDeclaration AbstractFeatureCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureDeclaration AbstractFeatureCompletion
		public Group getGroup() { return cGroup; }
		
		//FeatureDeclaration
		public RuleCall getFeatureDeclarationParserRuleCall_0() { return cFeatureDeclarationParserRuleCall_0; }
		
		//AbstractFeatureCompletion
		public RuleCall getAbstractFeatureCompletionParserRuleCall_1() { return cAbstractFeatureCompletionParserRuleCall_1; }
	}
	public class UnnamedFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnnamedFeatureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRedefinesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cFeatureCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//UnnamedFeatureDefinition SysML::Feature:
		//	'redefines' ownedRelationship+=Redefinition TypePart
		//	FeatureCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//'redefines' ownedRelationship+=Redefinition TypePart FeatureCompletion
		public Group getGroup() { return cGroup; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_0() { return cRedefinesKeyword_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_2() { return cTypePartParserRuleCall_2; }
		
		//FeatureCompletion
		public RuleCall getFeatureCompletionParserRuleCall_3() { return cFeatureCompletionParserRuleCall_3; }
	}
	public class AbstractUnnamedFeatureDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AbstractUnnamedFeatureDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRedefinesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cAbstractFeatureCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AbstractUnnamedFeatureDefinition SysML::Feature:
		//	'redefines' ownedRelationship+=Redefinition TypePart
		//	AbstractFeatureCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//'redefines' ownedRelationship+=Redefinition TypePart AbstractFeatureCompletion
		public Group getGroup() { return cGroup; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_0() { return cRedefinesKeyword_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_2() { return cTypePartParserRuleCall_2; }
		
		//AbstractFeatureCompletion
		public RuleCall getAbstractFeatureCompletionParserRuleCall_3() { return cAbstractFeatureCompletionParserRuleCall_3; }
	}
	public class FeatureBodyDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureBodyDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cFeatureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFeatureDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cFeatureCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//fragment FeatureBodyDefinition returns SysML::Feature:
		//	isAbstract?='abstract'? 'feature' FeatureDeclaration FeatureCompletion;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'feature' FeatureDeclaration FeatureCompletion
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'feature'
		public Keyword getFeatureKeyword_1() { return cFeatureKeyword_1; }
		
		//FeatureDeclaration
		public RuleCall getFeatureDeclarationParserRuleCall_2() { return cFeatureDeclarationParserRuleCall_2; }
		
		//FeatureCompletion
		public RuleCall getFeatureCompletionParserRuleCall_3() { return cFeatureCompletionParserRuleCall_3; }
	}
	public class FeatureDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cSubsettingPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment FeatureDeclaration returns SysML::Feature:
		//	name=Name TypePart SubsettingPart;
		@Override public ParserRule getRule() { return rule; }
		
		//name=Name TypePart SubsettingPart
		public Group getGroup() { return cGroup; }
		
		//name=Name
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0() { return cNameNameParserRuleCall_0_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_1() { return cTypePartParserRuleCall_1; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_2() { return cSubsettingPartParserRuleCall_2; }
	}
	public class FeatureCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment FeatureCompletion returns SysML::Feature:
		//	ValuePart? CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValuePart? CategoryBody
		public Group getGroup() { return cGroup; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0() { return cValuePartParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class AbstractFeatureCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AbstractFeatureCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment AbstractFeatureCompletion returns SysML::Feature:
		//	ValuePart? AbstractCategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ValuePart? AbstractCategoryBody
		public Group getGroup() { return cGroup; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0() { return cValuePartParserRuleCall_0; }
		
		//AbstractCategoryBody
		public RuleCall getAbstractCategoryBodyParserRuleCall_1() { return cAbstractCategoryBodyParserRuleCall_1; }
	}
	public class ValuePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ValuePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureValueParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment ValuePart returns SysML::Feature:
		//	'=' ownedRelationship+=FeatureValue;
		@Override public ParserRule getRule() { return rule; }
		
		//'=' ownedRelationship+=FeatureValue
		public Group getGroup() { return cGroup; }
		
		//'='
		public Keyword getEqualsSignKeyword_0() { return cEqualsSignKeyword_0; }
		
		//ownedRelationship+=FeatureValue
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//FeatureValue
		public RuleCall getOwnedRelationshipFeatureValueParserRuleCall_1_0() { return cOwnedRelationshipFeatureValueParserRuleCall_1_0; }
	}
	public class FeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureValue");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//FeatureValue SysML::FeatureValue:
		//	ownedRelatedElement+=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=Expression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//Expression
		public RuleCall getOwnedRelatedElementExpressionParserRuleCall_0() { return cOwnedRelatedElementExpressionParserRuleCall_0; }
	}
	public class TypePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.TypePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cIsCompositeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cIsCompositeComposeKeyword_0_1_0 = (Keyword)cIsCompositeAssignment_0_1.eContents().get(0);
		private final Alternatives cAlternatives_0_2 = (Alternatives)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_2_0 = (Assignment)cAlternatives_0_2.eContents().get(0);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_0_2_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_2_0.eContents().get(0);
		private final Keyword cAnyKeyword_0_2_1 = (Keyword)cAlternatives_0_2.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cIsOrderedAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIsOrderedOrderedKeyword_2_0_0 = (Keyword)cIsOrderedAssignment_2_0.eContents().get(0);
		private final Assignment cIsNonuniqueAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cIsNonuniqueNonuniqueKeyword_2_1_0 = (Keyword)cIsNonuniqueAssignment_2_1.eContents().get(0);
		
		//fragment TypePart returns SysML::Feature:
		//	(':' isComposite?='compose'? (ownedRelationship+=FeatureTyping | 'any'))?
		//	ownedRelationship+=Multiplicity? (isOrdered?='ordered'? & isNonunique?='nonunique'?);
		@Override public ParserRule getRule() { return rule; }
		
		//(':' isComposite?='compose'? (ownedRelationship+=FeatureTyping | 'any'))? ownedRelationship+=Multiplicity?
		//(isOrdered?='ordered'? & isNonunique?='nonunique'?)
		public Group getGroup() { return cGroup; }
		
		//(':' isComposite?='compose'? (ownedRelationship+=FeatureTyping | 'any'))?
		public Group getGroup_0() { return cGroup_0; }
		
		//':'
		public Keyword getColonKeyword_0_0() { return cColonKeyword_0_0; }
		
		//isComposite?='compose'?
		public Assignment getIsCompositeAssignment_0_1() { return cIsCompositeAssignment_0_1; }
		
		//'compose'
		public Keyword getIsCompositeComposeKeyword_0_1_0() { return cIsCompositeComposeKeyword_0_1_0; }
		
		//ownedRelationship+=FeatureTyping | 'any'
		public Alternatives getAlternatives_0_2() { return cAlternatives_0_2; }
		
		//ownedRelationship+=FeatureTyping
		public Assignment getOwnedRelationshipAssignment_0_2_0() { return cOwnedRelationshipAssignment_0_2_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_0_2_0_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_0_2_0_0; }
		
		//'any'
		public Keyword getAnyKeyword_0_2_1() { return cAnyKeyword_0_2_1; }
		
		//ownedRelationship+=Multiplicity?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Multiplicity
		public RuleCall getOwnedRelationshipMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityParserRuleCall_1_0; }
		
		//isOrdered?='ordered'? & isNonunique?='nonunique'?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//isOrdered?='ordered'?
		public Assignment getIsOrderedAssignment_2_0() { return cIsOrderedAssignment_2_0; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_2_0_0() { return cIsOrderedOrderedKeyword_2_0_0; }
		
		//isNonunique?='nonunique'?
		public Assignment getIsNonuniqueAssignment_2_1() { return cIsNonuniqueAssignment_2_1; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_2_1_0() { return cIsNonuniqueNonuniqueKeyword_2_1_0; }
	}
	public class FeatureTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeCategoryCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeCategoryQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeCategoryCrossReference_0.eContents().get(1);
		
		//FeatureTyping SysML::FeatureTyping:
		//	type=[SysML::Category|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Category|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Category|QualifiedName]
		public CrossReference getTypeCategoryCrossReference_0() { return cTypeCategoryCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeCategoryQualifiedNameParserRuleCall_0_1() { return cTypeCategoryQualifiedNameParserRuleCall_0_1; }
	}
	public class MultiplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Multiplicity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementNaturalLiteralExpressionParserRuleCall_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementUnlimitedNaturalLiteralExpressionParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Multiplicity SysML::Multiplicity:
		//	'[' (ownedRelatedElement+=NaturalLiteralExpression '..')? ownedRelatedElement+=UnlimitedNaturalLiteralExpression ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' (ownedRelatedElement+=NaturalLiteralExpression '..')? ownedRelatedElement+=UnlimitedNaturalLiteralExpression ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//(ownedRelatedElement+=NaturalLiteralExpression '..')?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelatedElement+=NaturalLiteralExpression
		public Assignment getOwnedRelatedElementAssignment_1_0() { return cOwnedRelatedElementAssignment_1_0; }
		
		//NaturalLiteralExpression
		public RuleCall getOwnedRelatedElementNaturalLiteralExpressionParserRuleCall_1_0_0() { return cOwnedRelatedElementNaturalLiteralExpressionParserRuleCall_1_0_0; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_1_1() { return cFullStopFullStopKeyword_1_1; }
		
		//ownedRelatedElement+=UnlimitedNaturalLiteralExpression
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getOwnedRelatedElementUnlimitedNaturalLiteralExpressionParserRuleCall_2_0() { return cOwnedRelatedElementUnlimitedNaturalLiteralExpressionParserRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class SubsettingPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SubsettingPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cSubsetsParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Keyword cCommaKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipSubsetParserRuleCall_0_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cRedefinesParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		
		//fragment SubsettingPart returns SysML::Feature:
		//	(Subsets (',' ownedRelationship+=Subset)*
		//	| Redefines (',' ownedRelationship+=Redefinition)*)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(Subsets (',' ownedRelationship+=Subset)* | Redefines (',' ownedRelationship+=Redefinition)*)*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Subsets (',' ownedRelationship+=Subset)*
		public Group getGroup_0() { return cGroup_0; }
		
		//Subsets
		public RuleCall getSubsetsParserRuleCall_0_0() { return cSubsetsParserRuleCall_0_0; }
		
		//(',' ownedRelationship+=Subset)*
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//','
		public Keyword getCommaKeyword_0_1_0() { return cCommaKeyword_0_1_0; }
		
		//ownedRelationship+=Subset
		public Assignment getOwnedRelationshipAssignment_0_1_1() { return cOwnedRelationshipAssignment_0_1_1; }
		
		//Subset
		public RuleCall getOwnedRelationshipSubsetParserRuleCall_0_1_1_0() { return cOwnedRelationshipSubsetParserRuleCall_0_1_1_0; }
		
		//Redefines (',' ownedRelationship+=Redefinition)*
		public Group getGroup_1() { return cGroup_1; }
		
		//Redefines
		public RuleCall getRedefinesParserRuleCall_1_0() { return cRedefinesParserRuleCall_1_0; }
		
		//(',' ownedRelationship+=Redefinition)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//','
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_1_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_1_1_0; }
	}
	public class SubsetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Subsets");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubsetsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipSubsetParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment Subsets returns SysML::Feature:
		//	'subsets' ownedRelationship+=Subset;
		@Override public ParserRule getRule() { return rule; }
		
		//'subsets' ownedRelationship+=Subset
		public Group getGroup() { return cGroup; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_0() { return cSubsetsKeyword_0; }
		
		//ownedRelationship+=Subset
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Subset
		public RuleCall getOwnedRelationshipSubsetParserRuleCall_1_0() { return cOwnedRelationshipSubsetParserRuleCall_1_0; }
	}
	public class SubsetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Subset");
		private final Assignment cSubsettedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSubsettedFeatureFeatureCrossReference_0 = (CrossReference)cSubsettedFeatureAssignment.eContents().get(0);
		private final RuleCall cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cSubsettedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//Subset SysML::Subsetting:
		//	subsettedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//subsettedFeature=[SysML::Feature|QualifiedName]
		public Assignment getSubsettedFeatureAssignment() { return cSubsettedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getSubsettedFeatureFeatureCrossReference_0() { return cSubsettedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class RedefinesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Redefines");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRedefinesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment Redefines returns SysML::Feature:
		//	'redefines' ownedRelationship+=Redefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//'redefines' ownedRelationship+=Redefinition
		public Group getGroup() { return cGroup; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_0() { return cRedefinesKeyword_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_1_0; }
	}
	public class RedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Redefinition");
		private final Assignment cRedefinedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRedefinedFeatureFeatureCrossReference_0 = (CrossReference)cRedefinedFeatureAssignment.eContents().get(0);
		private final RuleCall cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cRedefinedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//Redefinition SysML::Redefinition:
		//	redefinedFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//redefinedFeature=[SysML::Feature|QualifiedName]
		public Assignment getRedefinedFeatureAssignment() { return cRedefinedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getRedefinedFeatureFeatureCrossReference_0() { return cRedefinedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class ConnectorDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConnectorDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConnectorDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* CONNECTORS */ ConnectorDefinition SysML::Connector:
		//	ConnectorDeclaration CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectorDeclaration CategoryBody
		public Group getGroup() { return cGroup; }
		
		//ConnectorDeclaration
		public RuleCall getConnectorDeclarationParserRuleCall_0() { return cConnectorDeclarationParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class AbstractConnectorDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AbstractConnectorDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConnectorDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractConnectorDefinition SysML::Connector:
		//	ConnectorDeclaration AbstractCategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectorDeclaration AbstractCategoryBody
		public Group getGroup() { return cGroup; }
		
		//ConnectorDeclaration
		public RuleCall getConnectorDeclarationParserRuleCall_0() { return cConnectorDeclarationParserRuleCall_0; }
		
		//AbstractCategoryBody
		public RuleCall getAbstractCategoryBodyParserRuleCall_1() { return cAbstractCategoryBodyParserRuleCall_1; }
	}
	public class ConnectorDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConnectorDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0_0 = (RuleCall)cNameAssignment_0_0_0.eContents().get(0);
		private final RuleCall cConnectorTypePartParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Keyword cIsKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Keyword cToKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_0_3_0 = (RuleCall)cOwnedRelationshipAssignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final RuleCall cConnectorTypePartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_3_0 = (RuleCall)cOwnedRelationshipAssignment_1_3.eContents().get(0);
		private final Keyword cCommaKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cOwnedRelationshipAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_5_0 = (RuleCall)cOwnedRelationshipAssignment_1_5.eContents().get(0);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cCommaKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_6_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_7 = (Keyword)cGroup_1.eContents().get(7);
		
		//fragment ConnectorDeclaration returns SysML::Connector:
		//	(name=Name? ConnectorTypePart 'is')?
		//	ownedRelationship+=ConnectorEndMember 'to' ownedRelationship+=ConnectorEndMember
		//	| name=Name? ConnectorTypePart
		//	'(' ownedRelationship+=ConnectorEndMember ',' ownedRelationship+=ConnectorEndMember (','
		//	ownedRelationship+=ConnectorEndMember)*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? ConnectorTypePart 'is')? ownedRelationship+=ConnectorEndMember 'to' ownedRelationship+=ConnectorEndMember |
		//name=Name? ConnectorTypePart '(' ownedRelationship+=ConnectorEndMember ',' ownedRelationship+=ConnectorEndMember (','
		//ownedRelationship+=ConnectorEndMember)* ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(name=Name? ConnectorTypePart 'is')? ownedRelationship+=ConnectorEndMember 'to' ownedRelationship+=ConnectorEndMember
		public Group getGroup_0() { return cGroup_0; }
		
		//(name=Name? ConnectorTypePart 'is')?
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0_0() { return cNameAssignment_0_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0_0() { return cNameNameParserRuleCall_0_0_0_0; }
		
		//ConnectorTypePart
		public RuleCall getConnectorTypePartParserRuleCall_0_0_1() { return cConnectorTypePartParserRuleCall_0_0_1; }
		
		//'is'
		public Keyword getIsKeyword_0_0_2() { return cIsKeyword_0_0_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_0_1_0; }
		
		//'to'
		public Keyword getToKeyword_0_2() { return cToKeyword_0_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_0_3() { return cOwnedRelationshipAssignment_0_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_0_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_0_3_0; }
		
		//name=Name? ConnectorTypePart '(' ownedRelationship+=ConnectorEndMember ',' ownedRelationship+=ConnectorEndMember (','
		//ownedRelationship+=ConnectorEndMember)* ')'
		public Group getGroup_1() { return cGroup_1; }
		
		//name=Name?
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_1_0_0() { return cNameNameParserRuleCall_1_0_0; }
		
		//ConnectorTypePart
		public RuleCall getConnectorTypePartParserRuleCall_1_1() { return cConnectorTypePartParserRuleCall_1_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1_3() { return cOwnedRelationshipAssignment_1_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_3_0; }
		
		//','
		public Keyword getCommaKeyword_1_4() { return cCommaKeyword_1_4; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1_5() { return cOwnedRelationshipAssignment_1_5; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_5_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_5_0; }
		
		//(',' ownedRelationship+=ConnectorEndMember)*
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//','
		public Keyword getCommaKeyword_1_6_0() { return cCommaKeyword_1_6_0; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1_6_1() { return cOwnedRelationshipAssignment_1_6_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_6_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_7() { return cRightParenthesisKeyword_1_7; }
	}
	public class ConnectorTypePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConnectorTypePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorTypingParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Assignment cIsOrderedAssignment_2_0 = (Assignment)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cIsOrderedOrderedKeyword_2_0_0 = (Keyword)cIsOrderedAssignment_2_0.eContents().get(0);
		private final Assignment cIsNonuniqueAssignment_2_1 = (Assignment)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cIsNonuniqueNonuniqueKeyword_2_1_0 = (Keyword)cIsNonuniqueAssignment_2_1.eContents().get(0);
		
		//fragment ConnectorTypePart returns SysML::Feature:
		//	(':' ownedRelationship+=ConnectorTyping)?
		//	ownedRelationship+=Multiplicity? (isOrdered?='ordered'? & isNonunique?='nonunique'?);
		@Override public ParserRule getRule() { return rule; }
		
		//(':' ownedRelationship+=ConnectorTyping)? ownedRelationship+=Multiplicity? (isOrdered?='ordered'? &
		//isNonunique?='nonunique'?)
		public Group getGroup() { return cGroup; }
		
		//(':' ownedRelationship+=ConnectorTyping)?
		public Group getGroup_0() { return cGroup_0; }
		
		//':'
		public Keyword getColonKeyword_0_0() { return cColonKeyword_0_0; }
		
		//ownedRelationship+=ConnectorTyping
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//ConnectorTyping
		public RuleCall getOwnedRelationshipConnectorTypingParserRuleCall_0_1_0() { return cOwnedRelationshipConnectorTypingParserRuleCall_0_1_0; }
		
		//ownedRelationship+=Multiplicity?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Multiplicity
		public RuleCall getOwnedRelationshipMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityParserRuleCall_1_0; }
		
		//isOrdered?='ordered'? & isNonunique?='nonunique'?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }
		
		//isOrdered?='ordered'?
		public Assignment getIsOrderedAssignment_2_0() { return cIsOrderedAssignment_2_0; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_2_0_0() { return cIsOrderedOrderedKeyword_2_0_0; }
		
		//isNonunique?='nonunique'?
		public Assignment getIsNonuniqueAssignment_2_1() { return cIsNonuniqueAssignment_2_1; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_2_1_0() { return cIsNonuniqueNonuniqueKeyword_2_1_0; }
	}
	public class ConnectorTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConnectorTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeAssociationCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeAssociationQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeAssociationCrossReference_0.eContents().get(1);
		
		//ConnectorTyping SysML::FeatureTyping:
		//	type=[SysML::Association|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Association|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Association|QualifiedName]
		public CrossReference getTypeAssociationCrossReference_0() { return cTypeAssociationCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeAssociationQualifiedNameParserRuleCall_0_1() { return cTypeAssociationQualifiedNameParserRuleCall_0_1; }
	}
	public class ConnectorEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConnectorEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipSubsetParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//ConnectorEnd SysML::Feature:
		//	ownedRelationship+=Subset ownedRelationship+=Multiplicity?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Subset ownedRelationship+=Multiplicity?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=Subset
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Subset
		public RuleCall getOwnedRelationshipSubsetParserRuleCall_0_0() { return cOwnedRelationshipSubsetParserRuleCall_0_0; }
		
		//ownedRelationship+=Multiplicity?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Multiplicity
		public RuleCall getOwnedRelationshipMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityParserRuleCall_1_0; }
	}
	public class MultiplicityEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.MultiplicityEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSourceEndAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//MultiplicityEnd SysML::Feature:
		//	{SysML::SourceEnd} ownedRelationship+=Multiplicity?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SourceEnd} ownedRelationship+=Multiplicity?
		public Group getGroup() { return cGroup; }
		
		//{SysML::SourceEnd}
		public Action getSourceEndAction_0() { return cSourceEndAction_0; }
		
		//ownedRelationship+=Multiplicity?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Multiplicity
		public RuleCall getOwnedRelationshipMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityParserRuleCall_1_0; }
	}
	public class EmptyEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.EmptyEnd");
		private final Action cTargetEndAction = (Action)rule.eContents().get(1);
		
		//EmptyEnd SysML::Feature:
		//	{SysML::TargetEnd};
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::TargetEnd}
		public Action getTargetEndAction() { return cTargetEndAction; }
	}
	public class ConnectorEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConnectorEndMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cMemberNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0_0 = (RuleCall)cMemberNameAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementConnectorEndParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		///* CONNECTOR MEMBERSHIPS */ ConnectorEndMember SysML::EndFeatureMembership:
		//	(memberName=Name '=>')? ownedRelatedElement+=ConnectorEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//(memberName=Name '=>')? ownedRelatedElement+=ConnectorEnd
		public Group getGroup() { return cGroup; }
		
		//(memberName=Name '=>')?
		public Group getGroup_0() { return cGroup_0; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0_0() { return cMemberNameAssignment_0_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0_0() { return cMemberNameNameParserRuleCall_0_0_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_0_1() { return cEqualsSignGreaterThanSignKeyword_0_1; }
		
		//ownedRelatedElement+=ConnectorEnd
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ConnectorEnd
		public RuleCall getOwnedRelatedElementConnectorEndParserRuleCall_1_0() { return cOwnedRelatedElementConnectorEndParserRuleCall_1_0; }
	}
	public class MultiplicityEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.MultiplicityEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementMultiplicityEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//MultiplicityEndMember SysML::EndFeatureMembership:
		//	ownedRelatedElement+=MultiplicityEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=MultiplicityEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//MultiplicityEnd
		public RuleCall getOwnedRelatedElementMultiplicityEndParserRuleCall_0() { return cOwnedRelatedElementMultiplicityEndParserRuleCall_0; }
	}
	public class EmptyEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.EmptyEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptyEndMember SysML::EndFeatureMembership:
		//	ownedRelatedElement+=EmptyEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=EmptyEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyEnd
		public RuleCall getOwnedRelatedElementEmptyEndParserRuleCall_0() { return cOwnedRelatedElementEmptyEndParserRuleCall_0; }
	}
	public class BindingConnectorDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BindingConnectorDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cConnectorTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cIsKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		///* BINDING CONNECTORS */ BindingConnectorDefinition SysML::BindingConnector:
		//	(name=Name? ConnectorTypePart 'is')?
		//	ownedRelationship+=ConnectorEndMember '=' ownedRelationship+=ConnectorEndMember
		//	CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? ConnectorTypePart 'is')? ownedRelationship+=ConnectorEndMember '=' ownedRelationship+=ConnectorEndMember
		//CategoryBody
		public Group getGroup() { return cGroup; }
		
		//(name=Name? ConnectorTypePart 'is')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//ConnectorTypePart
		public RuleCall getConnectorTypePartParserRuleCall_0_1() { return cConnectorTypePartParserRuleCall_0_1; }
		
		//'is'
		public Keyword getIsKeyword_0_2() { return cIsKeyword_0_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_4() { return cCategoryBodyParserRuleCall_4; }
	}
	public class SuccessionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SuccessionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSuccessionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* SUCCESSIONS */ SuccessionDefinition SysML::Succession:
		//	SuccessionDeclaration CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//SuccessionDeclaration CategoryBody
		public Group getGroup() { return cGroup; }
		
		//SuccessionDeclaration
		public RuleCall getSuccessionDeclarationParserRuleCall_0() { return cSuccessionDeclarationParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class AbstractSuccessionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AbstractSuccessionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSuccessionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractSuccessionDefinition SysML::Succession:
		//	SuccessionDeclaration AbstractCategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//SuccessionDeclaration AbstractCategoryBody
		public Group getGroup() { return cGroup; }
		
		//SuccessionDeclaration
		public RuleCall getSuccessionDeclarationParserRuleCall_0() { return cSuccessionDeclarationParserRuleCall_0; }
		
		//AbstractCategoryBody
		public RuleCall getAbstractCategoryBodyParserRuleCall_1() { return cAbstractCategoryBodyParserRuleCall_1; }
	}
	public class SuccessionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SuccessionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cConnectorTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cIsKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//fragment SuccessionDeclaration returns SysML::Succession:
		//	(name=Name? ConnectorTypePart 'is')?
		//	ownedRelationship+=ConnectorEndMember 'then' ownedRelationship+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? ConnectorTypePart 'is')? ownedRelationship+=ConnectorEndMember 'then' ownedRelationship+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//(name=Name? ConnectorTypePart 'is')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//ConnectorTypePart
		public RuleCall getConnectorTypePartParserRuleCall_0_1() { return cConnectorTypePartParserRuleCall_0_1; }
		
		//'is'
		public Keyword getIsKeyword_0_2() { return cIsKeyword_0_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0; }
	}
	public class TargetSuccessionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.TargetSuccessionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//TargetSuccessionDefinition SysML::Succession:
		//	ownedRelationship+=MultiplicityEndMember ownedRelationship+=ConnectorEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=MultiplicityEndMember ownedRelationship+=ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=MultiplicityEndMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//MultiplicityEndMember
		public RuleCall getOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0() { return cOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0; }
		
		//ownedRelationship+=ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
	}
	public class EmptySuccessionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.EmptySuccessionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//EmptySuccessionDefinition SysML::Succession:
		//	ownedRelationship+=MultiplicityEndMember ownedRelationship+=EmptyEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=MultiplicityEndMember ownedRelationship+=EmptyEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=MultiplicityEndMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//MultiplicityEndMember
		public RuleCall getOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0() { return cOwnedRelationshipMultiplicityEndMemberParserRuleCall_0_0; }
		
		//ownedRelationship+=EmptyEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//EmptyEndMember
		public RuleCall getOwnedRelationshipEmptyEndMemberParserRuleCall_1_0() { return cOwnedRelationshipEmptyEndMemberParserRuleCall_1_0; }
	}
	public class SuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SuccessionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementSuccessionDefinitionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* SUCCESSION MEMBERSHIPS */ SuccessionMember SysML::FeatureMembership:
		//	ownedRelatedElement+=SuccessionDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=SuccessionDefinition
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//SuccessionDefinition
		public RuleCall getOwnedRelatedElementSuccessionDefinitionParserRuleCall_0() { return cOwnedRelatedElementSuccessionDefinitionParserRuleCall_0; }
	}
	public class ItemFlowDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ItemFlowDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* ITEM FLOWS */ ItemFlowDefinition SysML::ItemFlow:
		//	ItemFlowDeclaration CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration CategoryBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class AbstractItemFlowDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AbstractItemFlowDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractItemFlowDefinition SysML::ItemFlow:
		//	ItemFlowDeclaration AbstractCategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration AbstractCategoryBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//AbstractCategoryBody
		public RuleCall getAbstractCategoryBodyParserRuleCall_1() { return cAbstractCategoryBodyParserRuleCall_1; }
	}
	public class SuccessionItemFlowDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SuccessionItemFlowDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//SuccessionItemFlowDefinition SysML::SuccessionItemFlow:
		//	ItemFlowDeclaration CategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration CategoryBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//CategoryBody
		public RuleCall getCategoryBodyParserRuleCall_1() { return cCategoryBodyParserRuleCall_1; }
	}
	public class AbstractSuccessionItemFlowDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AbstractSuccessionItemFlowDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemFlowDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAbstractCategoryBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AbstractSuccessionItemFlowDefinition SysML::SuccessionItemFlow:
		//	ItemFlowDeclaration AbstractCategoryBody;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemFlowDeclaration AbstractCategoryBody
		public Group getGroup() { return cGroup; }
		
		//ItemFlowDeclaration
		public RuleCall getItemFlowDeclarationParserRuleCall_0() { return cItemFlowDeclarationParserRuleCall_0; }
		
		//AbstractCategoryBody
		public RuleCall getAbstractCategoryBodyParserRuleCall_1() { return cAbstractCategoryBodyParserRuleCall_1; }
	}
	public class ItemFlowDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ItemFlowDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final RuleCall cConnectorTypePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cIsKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipItemTypeMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Keyword cFromKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipItemFlowEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Keyword cToKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedRelationshipItemFlowEndMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		
		//fragment ItemFlowDeclaration returns SysML::ItemFlow:
		//	(name=Name? ConnectorTypePart 'is')? (ownedRelationship+=ItemTypeMember 'from')?
		//	ownedRelationship+=ItemFlowEndMember 'to' ownedRelationship+=ItemFlowEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=Name? ConnectorTypePart 'is')? (ownedRelationship+=ItemTypeMember 'from')? ownedRelationship+=ItemFlowEndMember
		//'to' ownedRelationship+=ItemFlowEndMember
		public Group getGroup() { return cGroup; }
		
		//(name=Name? ConnectorTypePart 'is')?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=Name?
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_0_0_0() { return cNameNameParserRuleCall_0_0_0; }
		
		//ConnectorTypePart
		public RuleCall getConnectorTypePartParserRuleCall_0_1() { return cConnectorTypePartParserRuleCall_0_1; }
		
		//'is'
		public Keyword getIsKeyword_0_2() { return cIsKeyword_0_2; }
		
		//(ownedRelationship+=ItemTypeMember 'from')?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship+=ItemTypeMember
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//ItemTypeMember
		public RuleCall getOwnedRelationshipItemTypeMemberParserRuleCall_1_0_0() { return cOwnedRelationshipItemTypeMemberParserRuleCall_1_0_0; }
		
		//'from'
		public Keyword getFromKeyword_1_1() { return cFromKeyword_1_1; }
		
		//ownedRelationship+=ItemFlowEndMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedRelationshipItemFlowEndMemberParserRuleCall_2_0() { return cOwnedRelationshipItemFlowEndMemberParserRuleCall_2_0; }
		
		//'to'
		public Keyword getToKeyword_3() { return cToKeyword_3; }
		
		//ownedRelationship+=ItemFlowEndMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedRelationshipItemFlowEndMemberParserRuleCall_4_0() { return cOwnedRelationshipItemFlowEndMemberParserRuleCall_4_0; }
	}
	public class ItemTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ItemTyping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//ItemTyping SysML::ItemFeature:
		//	ownedRelationship+=FeatureTyping ownedRelationship+=Multiplicity?;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=FeatureTyping ownedRelationship+=Multiplicity?
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=FeatureTyping
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_0_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_0_0; }
		
		//ownedRelationship+=Multiplicity?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//Multiplicity
		public RuleCall getOwnedRelationshipMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityParserRuleCall_1_0; }
	}
	public class ItemFlowEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ItemFlowEnd");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//ItemFlowEnd SysML::ItemFlowEnd:
		//	ownedRelationship+=ItemFlowFeatureMember;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=ItemFlowFeatureMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//ItemFlowFeatureMember
		public RuleCall getOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0() { return cOwnedRelationshipItemFlowFeatureMemberParserRuleCall_0; }
	}
	public class ItemFlowFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ItemFlowFeature");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//ItemFlowFeature SysML::ItemFlowFeature:
		//	ownedRelationship+=Redefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_0() { return cOwnedRelationshipRedefinitionParserRuleCall_0; }
	}
	public class ItemTypeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ItemTypeMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemTypingParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* ITEM FLOW MEMBERSHIPS */ ItemTypeMember SysML::FeatureMembership:
		//	ownedRelatedElement+=ItemTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=ItemTyping
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ItemTyping
		public RuleCall getOwnedRelatedElementItemTypingParserRuleCall_0() { return cOwnedRelatedElementItemTypingParserRuleCall_0; }
	}
	public class ItemFlowEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ItemFlowEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemFlowEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ItemFlowEndMember SysML::EndFeatureMembership:
		//	ownedRelatedElement+=ItemFlowEnd;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=ItemFlowEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ItemFlowEnd
		public RuleCall getOwnedRelatedElementItemFlowEndParserRuleCall_0() { return cOwnedRelatedElementItemFlowEndParserRuleCall_0; }
	}
	public class ItemFlowFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ItemFlowFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemFlowFeatureParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ItemFlowFeatureMember SysML::FeatureMembership:
		//	ownedRelatedElement+=ItemFlowFeature;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=ItemFlowFeature
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ItemFlowFeature
		public RuleCall getOwnedRelatedElementItemFlowFeatureParserRuleCall_0() { return cOwnedRelatedElementItemFlowFeatureParserRuleCall_0; }
	}
	public class ParameterDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ParameterDefinition");
		private final RuleCall cTypePartParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* PARAMETERS */ ParameterDefinition SysML::Parameter:
		//	TypePart // ( Subsets | Redefines )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall() { return cTypePartParserRuleCall; }
	}
	public class StepDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.StepDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cThenKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Assignment cIsAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsAbstractAbstractKeyword_1_0 = (Keyword)cIsAbstractAssignment_1.eContents().get(0);
		private final Keyword cStepKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cNameAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_3_0_0_0 = (RuleCall)cNameAssignment_3_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final RuleCall cStepParameterListParserRuleCall_3_0_2 = (RuleCall)cGroup_3_0.eContents().get(2);
		private final RuleCall cSubsettingPartParserRuleCall_3_0_3 = (RuleCall)cGroup_3_0.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_3_0_4 = (RuleCall)cGroup_3_0.eContents().get(4);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cRedefinesKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_3_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1_1.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_3_1_2 = (RuleCall)cGroup_3_1.eContents().get(2);
		private final RuleCall cStepParameterListParserRuleCall_3_1_3 = (RuleCall)cGroup_3_1.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_3_1_4 = (RuleCall)cGroup_3_1.eContents().get(4);
		private final RuleCall cBehaviorBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		///* STEPS */ StepDefinition SysML::Step:
		//	('then' ownedRelationship+=EmptySuccessionMember)?
		//	isAbstract?='abstract'? 'step' (name=Name TypePart StepParameterList? SubsettingPart ValuePart?
		//	| 'redefines' ownedRelationship+=Redefinition TypePart StepParameterList? ValuePart?) BehaviorBody;
		@Override public ParserRule getRule() { return rule; }
		
		//('then' ownedRelationship+=EmptySuccessionMember)? isAbstract?='abstract'? 'step' (name=Name TypePart StepParameterList?
		//SubsettingPart ValuePart? | 'redefines' ownedRelationship+=Redefinition TypePart StepParameterList? ValuePart?)
		//BehaviorBody
		public Group getGroup() { return cGroup; }
		
		//('then' ownedRelationship+=EmptySuccessionMember)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'then'
		public Keyword getThenKeyword_0_0() { return cThenKeyword_0_0; }
		
		//ownedRelationship+=EmptySuccessionMember
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_0_1_0; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_1() { return cIsAbstractAssignment_1; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_1_0() { return cIsAbstractAbstractKeyword_1_0; }
		
		//'step'
		public Keyword getStepKeyword_2() { return cStepKeyword_2; }
		
		//name=Name TypePart StepParameterList? SubsettingPart ValuePart? | 'redefines' ownedRelationship+=Redefinition TypePart
		//StepParameterList? ValuePart?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//name=Name TypePart StepParameterList? SubsettingPart ValuePart?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//name=Name
		public Assignment getNameAssignment_3_0_0() { return cNameAssignment_3_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_3_0_0_0() { return cNameNameParserRuleCall_3_0_0_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_3_0_1() { return cTypePartParserRuleCall_3_0_1; }
		
		//StepParameterList?
		public RuleCall getStepParameterListParserRuleCall_3_0_2() { return cStepParameterListParserRuleCall_3_0_2; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_3_0_3() { return cSubsettingPartParserRuleCall_3_0_3; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_3_0_4() { return cValuePartParserRuleCall_3_0_4; }
		
		//'redefines' ownedRelationship+=Redefinition TypePart StepParameterList? ValuePart?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_3_1_0() { return cRedefinesKeyword_3_1_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_3_1_1() { return cOwnedRelationshipAssignment_3_1_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_3_1_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_3_1_1_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_3_1_2() { return cTypePartParserRuleCall_3_1_2; }
		
		//StepParameterList?
		public RuleCall getStepParameterListParserRuleCall_3_1_3() { return cStepParameterListParserRuleCall_3_1_3; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_3_1_4() { return cValuePartParserRuleCall_3_1_4; }
		
		//BehaviorBody
		public RuleCall getBehaviorBodyParserRuleCall_4() { return cBehaviorBodyParserRuleCall_4; }
	}
	public class StepParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.StepParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipStepParameterMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipStepParameterMemberParserRuleCall_1_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_2_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_2_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//fragment StepParameterList returns SysML::Category:
		//	'(' (ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember? (','
		//	ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember?)*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' (ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember? (','
		//ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember?)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//(ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember? (','
		//ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember?)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship+=StepParameterMember
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//StepParameterMember
		public RuleCall getOwnedRelationshipStepParameterMemberParserRuleCall_1_0_0() { return cOwnedRelationshipStepParameterMemberParserRuleCall_1_0_0; }
		
		//ownedRelationship+=StepParameterFlowMember?
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//StepParameterFlowMember
		public RuleCall getOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_1_0() { return cOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_1_0; }
		
		//(',' ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember?)*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//','
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//ownedRelationship+=StepParameterMember
		public Assignment getOwnedRelationshipAssignment_1_2_1() { return cOwnedRelationshipAssignment_1_2_1; }
		
		//StepParameterMember
		public RuleCall getOwnedRelationshipStepParameterMemberParserRuleCall_1_2_1_0() { return cOwnedRelationshipStepParameterMemberParserRuleCall_1_2_1_0; }
		
		//ownedRelationship+=StepParameterFlowMember?
		public Assignment getOwnedRelationshipAssignment_1_2_2() { return cOwnedRelationshipAssignment_1_2_2; }
		
		//StepParameterFlowMember
		public RuleCall getOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_2_2_0() { return cOwnedRelationshipStepParameterFlowMemberParserRuleCall_1_2_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class StepParameterDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.StepParameterDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypePartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cValuePartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//StepParameterDefinition SysML::Parameter:
		//	TypePart ValuePart?;
		@Override public ParserRule getRule() { return rule; }
		
		//TypePart ValuePart?
		public Group getGroup() { return cGroup; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_0() { return cTypePartParserRuleCall_0; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_1() { return cValuePartParserRuleCall_1; }
	}
	public class StepParameterFlowDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.StepParameterFlowDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cStreamKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Action cSuccessionItemFlowAction_0_1_0 = (Action)cGroup_0_1.eContents().get(0);
		private final Keyword cFlowKeyword_0_1_1 = (Keyword)cGroup_0_1.eContents().get(1);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipItemFlowEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//StepParameterFlowDefinition SysML::ItemFlow:
		//	('stream' | {SysML::SuccessionItemFlow} 'flow')? 'from' ownedRelationship+=ItemFlowEndMember;
		@Override public ParserRule getRule() { return rule; }
		
		//('stream' | {SysML::SuccessionItemFlow} 'flow')? 'from' ownedRelationship+=ItemFlowEndMember
		public Group getGroup() { return cGroup; }
		
		//('stream' | {SysML::SuccessionItemFlow} 'flow')?
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'stream'
		public Keyword getStreamKeyword_0_0() { return cStreamKeyword_0_0; }
		
		//{SysML::SuccessionItemFlow} 'flow'
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//{SysML::SuccessionItemFlow}
		public Action getSuccessionItemFlowAction_0_1_0() { return cSuccessionItemFlowAction_0_1_0; }
		
		//'flow'
		public Keyword getFlowKeyword_0_1_1() { return cFlowKeyword_0_1_1; }
		
		//'from'
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }
		
		//ownedRelationship+=ItemFlowEndMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ItemFlowEndMember
		public RuleCall getOwnedRelationshipItemFlowEndMemberParserRuleCall_2_0() { return cOwnedRelationshipItemFlowEndMemberParserRuleCall_2_0; }
	}
	public class StepParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.StepParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Assignment cMemberNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMemberNameNameParserRuleCall_1_0 = (RuleCall)cMemberNameAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementStepParameterDefinitionParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		///* STEP MEMBERSHIPS */ StepParameterMember SysML::ParameterMembership:
		//	direction=FeatureDirection? memberName=Name? ownedRelatedElement+=StepParameterDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//direction=FeatureDirection? memberName=Name? ownedRelatedElement+=StepParameterDefinition
		public Group getGroup() { return cGroup; }
		
		//direction=FeatureDirection?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//memberName=Name?
		public Assignment getMemberNameAssignment_1() { return cMemberNameAssignment_1; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_1_0() { return cMemberNameNameParserRuleCall_1_0; }
		
		//ownedRelatedElement+=StepParameterDefinition
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//StepParameterDefinition
		public RuleCall getOwnedRelatedElementStepParameterDefinitionParserRuleCall_2_0() { return cOwnedRelatedElementStepParameterDefinitionParserRuleCall_2_0; }
	}
	public class StepParameterFlowMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.StepParameterFlowMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementStepParameterFlowDefinitionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//StepParameterFlowMember SysML::FeatureMembership:
		//	ownedRelatedElement+=StepParameterFlowDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=StepParameterFlowDefinition
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//StepParameterFlowDefinition
		public RuleCall getOwnedRelatedElementStepParameterFlowDefinitionParserRuleCall_0() { return cOwnedRelatedElementStepParameterFlowDefinitionParserRuleCall_0; }
	}
	public class EmptySuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.EmptySuccessionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptySuccessionDefinitionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptySuccessionMember SysML::FeatureMembership:
		//	ownedRelatedElement+=EmptySuccessionDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=EmptySuccessionDefinition
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptySuccessionDefinition
		public RuleCall getOwnedRelatedElementEmptySuccessionDefinitionParserRuleCall_0() { return cOwnedRelatedElementEmptySuccessionDefinitionParserRuleCall_0; }
	}
	public class ExpressionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ExpressionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Keyword cExprKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cNameAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cNameNameParserRuleCall_2_0_0_0 = (RuleCall)cNameAssignment_2_0_0.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_0_2 = (Group)cGroup_2_0.eContents().get(2);
		private final RuleCall cStepParameterListParserRuleCall_2_0_2_0 = (RuleCall)cGroup_2_0_2.eContents().get(0);
		private final RuleCall cReturnParameterPartParserRuleCall_2_0_2_1 = (RuleCall)cGroup_2_0_2.eContents().get(1);
		private final RuleCall cSubsettingPartParserRuleCall_2_0_3 = (RuleCall)cGroup_2_0.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_2_0_4 = (RuleCall)cGroup_2_0.eContents().get(4);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cRedefinesKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipRedefinitionParserRuleCall_2_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1_1.eContents().get(0);
		private final RuleCall cTypePartParserRuleCall_2_1_2 = (RuleCall)cGroup_2_1.eContents().get(2);
		private final Group cGroup_2_1_3 = (Group)cGroup_2_1.eContents().get(3);
		private final RuleCall cStepParameterListParserRuleCall_2_1_3_0 = (RuleCall)cGroup_2_1_3.eContents().get(0);
		private final RuleCall cReturnParameterPartParserRuleCall_2_1_3_1 = (RuleCall)cGroup_2_1_3.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_2_1_4 = (RuleCall)cGroup_2_1.eContents().get(4);
		private final RuleCall cFunctionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		///* EXPRESSIONS */ // Block Expressions
		//ExpressionDefinition SysML::BlockExpression:
		//	isAbstract?='abstract'? 'expr' (name=Name TypePart (StepParameterList ReturnParameterPart)? SubsettingPart ValuePart?
		//	| 'redefines' ownedRelationship+=Redefinition TypePart (StepParameterList ReturnParameterPart)? ValuePart?)?
		//	FunctionBody;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract?='abstract'? 'expr' (name=Name TypePart (StepParameterList ReturnParameterPart)? SubsettingPart ValuePart? |
		//'redefines' ownedRelationship+=Redefinition TypePart (StepParameterList ReturnParameterPart)? ValuePart?)? FunctionBody
		public Group getGroup() { return cGroup; }
		
		//isAbstract?='abstract'?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//'expr'
		public Keyword getExprKeyword_1() { return cExprKeyword_1; }
		
		//(name=Name TypePart (StepParameterList ReturnParameterPart)? SubsettingPart ValuePart? | 'redefines'
		//ownedRelationship+=Redefinition TypePart (StepParameterList ReturnParameterPart)? ValuePart?)?
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//name=Name TypePart (StepParameterList ReturnParameterPart)? SubsettingPart ValuePart?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//name=Name
		public Assignment getNameAssignment_2_0_0() { return cNameAssignment_2_0_0; }
		
		//Name
		public RuleCall getNameNameParserRuleCall_2_0_0_0() { return cNameNameParserRuleCall_2_0_0_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_2_0_1() { return cTypePartParserRuleCall_2_0_1; }
		
		//(StepParameterList ReturnParameterPart)?
		public Group getGroup_2_0_2() { return cGroup_2_0_2; }
		
		//StepParameterList
		public RuleCall getStepParameterListParserRuleCall_2_0_2_0() { return cStepParameterListParserRuleCall_2_0_2_0; }
		
		//ReturnParameterPart
		public RuleCall getReturnParameterPartParserRuleCall_2_0_2_1() { return cReturnParameterPartParserRuleCall_2_0_2_1; }
		
		//SubsettingPart
		public RuleCall getSubsettingPartParserRuleCall_2_0_3() { return cSubsettingPartParserRuleCall_2_0_3; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_2_0_4() { return cValuePartParserRuleCall_2_0_4; }
		
		//'redefines' ownedRelationship+=Redefinition TypePart (StepParameterList ReturnParameterPart)? ValuePart?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_2_1_0() { return cRedefinesKeyword_2_1_0; }
		
		//ownedRelationship+=Redefinition
		public Assignment getOwnedRelationshipAssignment_2_1_1() { return cOwnedRelationshipAssignment_2_1_1; }
		
		//Redefinition
		public RuleCall getOwnedRelationshipRedefinitionParserRuleCall_2_1_1_0() { return cOwnedRelationshipRedefinitionParserRuleCall_2_1_1_0; }
		
		//TypePart
		public RuleCall getTypePartParserRuleCall_2_1_2() { return cTypePartParserRuleCall_2_1_2; }
		
		//(StepParameterList ReturnParameterPart)?
		public Group getGroup_2_1_3() { return cGroup_2_1_3; }
		
		//StepParameterList
		public RuleCall getStepParameterListParserRuleCall_2_1_3_0() { return cStepParameterListParserRuleCall_2_1_3_0; }
		
		//ReturnParameterPart
		public RuleCall getReturnParameterPartParserRuleCall_2_1_3_1() { return cReturnParameterPartParserRuleCall_2_1_3_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_2_1_4() { return cValuePartParserRuleCall_2_1_4; }
		
		//FunctionBody
		public RuleCall getFunctionBodyParserRuleCall_3() { return cFunctionBodyParserRuleCall_3; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Expression");
		private final RuleCall cConditionalExpressionParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Expression SysML::Expression:
		//	ConditionalExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalExpression
		public RuleCall getConditionalExpressionParserRuleCall() { return cConditionalExpressionParserRuleCall; }
	}
	public class ConditionalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConditionalExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNullCoalescingExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalTestOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		private final Keyword cColonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cOperandAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cOperandConditionalExpressionParserRuleCall_1_4_0 = (RuleCall)cOperandAssignment_1_4.eContents().get(0);
		
		//// Conditional Test Expressions
		//ConditionalExpression SysML::Expression:
		//	NullCoalescingExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalTestOperator
		//	operand+=Expression ':' operand+=ConditionalExpression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//NullCoalescingExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalTestOperator
		//operand+=Expression ':' operand+=ConditionalExpression)?
		public Group getGroup() { return cGroup; }
		
		//NullCoalescingExpression
		public RuleCall getNullCoalescingExpressionParserRuleCall_0() { return cNullCoalescingExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=ConditionalTestOperator operand+=Expression ':'
		//operand+=ConditionalExpression)?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=ConditionalTestOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalTestOperator
		public RuleCall getOperatorConditionalTestOperatorParserRuleCall_1_1_0() { return cOperatorConditionalTestOperatorParserRuleCall_1_1_0; }
		
		//operand+=Expression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//Expression
		public RuleCall getOperandExpressionParserRuleCall_1_2_0() { return cOperandExpressionParserRuleCall_1_2_0; }
		
		//':'
		public Keyword getColonKeyword_1_3() { return cColonKeyword_1_3; }
		
		//operand+=ConditionalExpression
		public Assignment getOperandAssignment_1_4() { return cOperandAssignment_1_4; }
		
		//ConditionalExpression
		public RuleCall getOperandConditionalExpressionParserRuleCall_1_4_0() { return cOperandConditionalExpressionParserRuleCall_1_4_0; }
	}
	public class ConditionalTestOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConditionalTestOperator");
		private final Keyword cQuestionMarkKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalTestOperator:
		//	'?';
		@Override public ParserRule getRule() { return rule; }
		
		//'?'
		public Keyword getQuestionMarkKeyword() { return cQuestionMarkKeyword; }
	}
	public class NullCoalescingExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NullCoalescingExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConditionalOrExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorNullCoalescingOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandConditionalOrExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Null Coalescing Expressions
		//NullCoalescingExpression SysML::Expression:
		//	ConditionalOrExpression ({SysML::OperatorExpression.operand+=current} operator=NullCoalescingOperator
		//	operand+=ConditionalOrExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalOrExpression ({SysML::OperatorExpression.operand+=current} operator=NullCoalescingOperator
		//operand+=ConditionalOrExpression)*
		public Group getGroup() { return cGroup; }
		
		//ConditionalOrExpression
		public RuleCall getConditionalOrExpressionParserRuleCall_0() { return cConditionalOrExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=NullCoalescingOperator operand+=ConditionalOrExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=NullCoalescingOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//NullCoalescingOperator
		public RuleCall getOperatorNullCoalescingOperatorParserRuleCall_1_1_0() { return cOperatorNullCoalescingOperatorParserRuleCall_1_1_0; }
		
		//operand+=ConditionalOrExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//ConditionalOrExpression
		public RuleCall getOperandConditionalOrExpressionParserRuleCall_1_2_0() { return cOperandConditionalOrExpressionParserRuleCall_1_2_0; }
	}
	public class NullCoalescingOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NullCoalescingOperator");
		private final Keyword cQuestionMarkQuestionMarkKeyword = (Keyword)rule.eContents().get(1);
		
		//NullCoalescingOperator:
		//	'??';
		@Override public ParserRule getRule() { return rule; }
		
		//'??'
		public Keyword getQuestionMarkQuestionMarkKeyword() { return cQuestionMarkQuestionMarkKeyword; }
	}
	public class ConditionalOrExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConditionalOrExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConditionalAndExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalOrOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandConditionalAndExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Conditional Logical Expressions
		//ConditionalOrExpression SysML::Expression:
		//	ConditionalAndExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalOrOperator
		//	operand+=ConditionalAndExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ConditionalAndExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalOrOperator
		//operand+=ConditionalAndExpression)*
		public Group getGroup() { return cGroup; }
		
		//ConditionalAndExpression
		public RuleCall getConditionalAndExpressionParserRuleCall_0() { return cConditionalAndExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=ConditionalOrOperator operand+=ConditionalAndExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=ConditionalOrOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalOrOperator
		public RuleCall getOperatorConditionalOrOperatorParserRuleCall_1_1_0() { return cOperatorConditionalOrOperatorParserRuleCall_1_1_0; }
		
		//operand+=ConditionalAndExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//ConditionalAndExpression
		public RuleCall getOperandConditionalAndExpressionParserRuleCall_1_2_0() { return cOperandConditionalAndExpressionParserRuleCall_1_2_0; }
	}
	public class ConditionalOrOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConditionalOrOperator");
		private final Keyword cVerticalLineVerticalLineKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalOrOperator:
		//	'||';
		@Override public ParserRule getRule() { return rule; }
		
		//'||'
		public Keyword getVerticalLineVerticalLineKeyword() { return cVerticalLineVerticalLineKeyword; }
	}
	public class ConditionalAndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConditionalAndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOrExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorConditionalAndOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandOrExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//ConditionalAndExpression SysML::Expression:
		//	OrExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalAndOperator operand+=OrExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//OrExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalAndOperator operand+=OrExpression)*
		public Group getGroup() { return cGroup; }
		
		//OrExpression
		public RuleCall getOrExpressionParserRuleCall_0() { return cOrExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=ConditionalAndOperator operand+=OrExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=ConditionalAndOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ConditionalAndOperator
		public RuleCall getOperatorConditionalAndOperatorParserRuleCall_1_1_0() { return cOperatorConditionalAndOperatorParserRuleCall_1_1_0; }
		
		//operand+=OrExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//OrExpression
		public RuleCall getOperandOrExpressionParserRuleCall_1_2_0() { return cOperandOrExpressionParserRuleCall_1_2_0; }
	}
	public class ConditionalAndOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ConditionalAndOperator");
		private final Keyword cAmpersandAmpersandKeyword = (Keyword)rule.eContents().get(1);
		
		//ConditionalAndOperator:
		//	'&&';
		@Override public ParserRule getRule() { return rule; }
		
		//'&&'
		public Keyword getAmpersandAmpersandKeyword() { return cAmpersandAmpersandKeyword; }
	}
	public class OrExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.OrExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cXorExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorOrOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandXorExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//OrExpression SysML::Expression:
		//	XorExpression ({SysML::OperatorExpression.operand+=current} operator=OrOperator operand+=XorExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//XorExpression ({SysML::OperatorExpression.operand+=current} operator=OrOperator operand+=XorExpression)*
		public Group getGroup() { return cGroup; }
		
		//XorExpression
		public RuleCall getXorExpressionParserRuleCall_0() { return cXorExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=OrOperator operand+=XorExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=OrOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//OrOperator
		public RuleCall getOperatorOrOperatorParserRuleCall_1_1_0() { return cOperatorOrOperatorParserRuleCall_1_1_0; }
		
		//operand+=XorExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//XorExpression
		public RuleCall getOperandXorExpressionParserRuleCall_1_2_0() { return cOperandXorExpressionParserRuleCall_1_2_0; }
	}
	public class OrOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.OrOperator");
		private final Keyword cVerticalLineKeyword = (Keyword)rule.eContents().get(1);
		
		//// Logical Expressions
		//OrOperator:
		//	'|';
		@Override public ParserRule getRule() { return rule; }
		
		//'|'
		public Keyword getVerticalLineKeyword() { return cVerticalLineKeyword; }
	}
	public class XorExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.XorExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAndExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorXorOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandAndExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//XorExpression SysML::Expression:
		//	AndExpression ({SysML::OperatorExpression.operand+=current} operator=XorOperator operand+=AndExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//AndExpression ({SysML::OperatorExpression.operand+=current} operator=XorOperator operand+=AndExpression)*
		public Group getGroup() { return cGroup; }
		
		//AndExpression
		public RuleCall getAndExpressionParserRuleCall_0() { return cAndExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=XorOperator operand+=AndExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=XorOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//XorOperator
		public RuleCall getOperatorXorOperatorParserRuleCall_1_1_0() { return cOperatorXorOperatorParserRuleCall_1_1_0; }
		
		//operand+=AndExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//AndExpression
		public RuleCall getOperandAndExpressionParserRuleCall_1_2_0() { return cOperandAndExpressionParserRuleCall_1_2_0; }
	}
	public class XorOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.XorOperator");
		private final Keyword cCircumflexAccentKeyword = (Keyword)rule.eContents().get(1);
		
		//XorOperator:
		//	'^';
		@Override public ParserRule getRule() { return rule; }
		
		//'^'
		public Keyword getCircumflexAccentKeyword() { return cCircumflexAccentKeyword; }
	}
	public class AndExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AndExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEqualityExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorAndOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandEqualityExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//AndExpression SysML::Expression:
		//	EqualityExpression ({SysML::OperatorExpression.operand+=current} operator=AndOperator operand+=EqualityExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//EqualityExpression ({SysML::OperatorExpression.operand+=current} operator=AndOperator operand+=EqualityExpression)*
		public Group getGroup() { return cGroup; }
		
		//EqualityExpression
		public RuleCall getEqualityExpressionParserRuleCall_0() { return cEqualityExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=AndOperator operand+=EqualityExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=AndOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//AndOperator
		public RuleCall getOperatorAndOperatorParserRuleCall_1_1_0() { return cOperatorAndOperatorParserRuleCall_1_1_0; }
		
		//operand+=EqualityExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//EqualityExpression
		public RuleCall getOperandEqualityExpressionParserRuleCall_1_2_0() { return cOperandEqualityExpressionParserRuleCall_1_2_0; }
	}
	public class AndOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AndOperator");
		private final Keyword cAmpersandKeyword = (Keyword)rule.eContents().get(1);
		
		//AndOperator:
		//	'&';
		@Override public ParserRule getRule() { return rule; }
		
		//'&'
		public Keyword getAmpersandKeyword() { return cAmpersandKeyword; }
	}
	public class EqualityExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.EqualityExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cClassificationExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorEqualityOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandClassificationExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Equality Expressions
		//EqualityExpression SysML::Expression:
		//	ClassificationExpression ({SysML::OperatorExpression.operand+=current} operator=EqualityOperator
		//	operand+=ClassificationExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ClassificationExpression ({SysML::OperatorExpression.operand+=current} operator=EqualityOperator
		//operand+=ClassificationExpression)*
		public Group getGroup() { return cGroup; }
		
		//ClassificationExpression
		public RuleCall getClassificationExpressionParserRuleCall_0() { return cClassificationExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=EqualityOperator operand+=ClassificationExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=EqualityOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//EqualityOperator
		public RuleCall getOperatorEqualityOperatorParserRuleCall_1_1_0() { return cOperatorEqualityOperatorParserRuleCall_1_1_0; }
		
		//operand+=ClassificationExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//ClassificationExpression
		public RuleCall getOperandClassificationExpressionParserRuleCall_1_2_0() { return cOperandClassificationExpressionParserRuleCall_1_2_0; }
	}
	public class EqualityOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.EqualityOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cEqualsSignEqualsSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cExclamationMarkEqualsSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EqualityOperator:
		//	'==' | '!=';
		@Override public ParserRule getRule() { return rule; }
		
		//'==' | '!='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'=='
		public Keyword getEqualsSignEqualsSignKeyword_0() { return cEqualsSignEqualsSignKeyword_0; }
		
		//'!='
		public Keyword getExclamationMarkEqualsSignKeyword_1() { return cExclamationMarkEqualsSignKeyword_1; }
	}
	public class ClassificationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassificationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRelationalExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorClassificationOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipTypeReferenceMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2.eContents().get(0);
		
		//// Classification Expressions
		//ClassificationExpression SysML::Expression:
		//	RelationalExpression ({SysML::OperatorExpression.operand+=current} operator=ClassificationOperator
		//	ownedRelationship+=TypeReferenceMember)?;
		@Override public ParserRule getRule() { return rule; }
		
		//RelationalExpression ({SysML::OperatorExpression.operand+=current} operator=ClassificationOperator
		//ownedRelationship+=TypeReferenceMember)?
		public Group getGroup() { return cGroup; }
		
		//RelationalExpression
		public RuleCall getRelationalExpressionParserRuleCall_0() { return cRelationalExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=ClassificationOperator ownedRelationship+=TypeReferenceMember)?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=ClassificationOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//ClassificationOperator
		public RuleCall getOperatorClassificationOperatorParserRuleCall_1_1_0() { return cOperatorClassificationOperatorParserRuleCall_1_1_0; }
		
		//ownedRelationship+=TypeReferenceMember
		public Assignment getOwnedRelationshipAssignment_1_2() { return cOwnedRelationshipAssignment_1_2; }
		
		//TypeReferenceMember
		public RuleCall getOwnedRelationshipTypeReferenceMemberParserRuleCall_1_2_0() { return cOwnedRelationshipTypeReferenceMemberParserRuleCall_1_2_0; }
	}
	public class ClassificationOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassificationOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cInstanceofKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHastypeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//ClassificationOperator:
		//	'instanceof' | 'hastype';
		@Override public ParserRule getRule() { return rule; }
		
		//'instanceof' | 'hastype'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'instanceof'
		public Keyword getInstanceofKeyword_0() { return cInstanceofKeyword_0; }
		
		//'hastype'
		public Keyword getHastypeKeyword_1() { return cHastypeKeyword_1; }
	}
	public class RelationalExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.RelationalExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAdditiveExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorRelationalOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandAdditiveExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Relational Expressions
		//RelationalExpression SysML::Expression:
		//	AdditiveExpression ({SysML::OperatorExpression.operand+=current} operator=RelationalOperator
		//	operand+=AdditiveExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//AdditiveExpression ({SysML::OperatorExpression.operand+=current} operator=RelationalOperator
		//operand+=AdditiveExpression)*
		public Group getGroup() { return cGroup; }
		
		//AdditiveExpression
		public RuleCall getAdditiveExpressionParserRuleCall_0() { return cAdditiveExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=RelationalOperator operand+=AdditiveExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=RelationalOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//RelationalOperator
		public RuleCall getOperatorRelationalOperatorParserRuleCall_1_1_0() { return cOperatorRelationalOperatorParserRuleCall_1_1_0; }
		
		//operand+=AdditiveExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//AdditiveExpression
		public RuleCall getOperandAdditiveExpressionParserRuleCall_1_2_0() { return cOperandAdditiveExpressionParserRuleCall_1_2_0; }
	}
	public class RelationalOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.RelationalOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cLessThanSignEqualsSignKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cGreaterThanSignEqualsSignKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//RelationalOperator:
		//	'<' | '>' | '<=' | '>=';
		@Override public ParserRule getRule() { return rule; }
		
		//'<' | '>' | '<=' | '>='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'<'
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1() { return cGreaterThanSignKeyword_1; }
		
		//'<='
		public Keyword getLessThanSignEqualsSignKeyword_2() { return cLessThanSignEqualsSignKeyword_2; }
		
		//'>='
		public Keyword getGreaterThanSignEqualsSignKeyword_3() { return cGreaterThanSignEqualsSignKeyword_3; }
	}
	public class AdditiveExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AdditiveExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMultiplicativeExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorAdditiveOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandMultiplicativeExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Arithmetic Expressions
		//AdditiveExpression SysML::Expression:
		//	MultiplicativeExpression ({SysML::OperatorExpression.operand+=current} operator=AdditiveOperator
		//	operand+=MultiplicativeExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//MultiplicativeExpression ({SysML::OperatorExpression.operand+=current} operator=AdditiveOperator
		//operand+=MultiplicativeExpression)*
		public Group getGroup() { return cGroup; }
		
		//MultiplicativeExpression
		public RuleCall getMultiplicativeExpressionParserRuleCall_0() { return cMultiplicativeExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=AdditiveOperator operand+=MultiplicativeExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=AdditiveOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//AdditiveOperator
		public RuleCall getOperatorAdditiveOperatorParserRuleCall_1_1_0() { return cOperatorAdditiveOperatorParserRuleCall_1_1_0; }
		
		//operand+=MultiplicativeExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//MultiplicativeExpression
		public RuleCall getOperandMultiplicativeExpressionParserRuleCall_1_2_0() { return cOperandMultiplicativeExpressionParserRuleCall_1_2_0; }
	}
	public class AdditiveOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.AdditiveOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//AdditiveOperator:
		//	'+' | '-';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
	}
	public class MultiplicativeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.MultiplicativeExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnitsExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorMultiplicativeOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandUnitsExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//MultiplicativeExpression SysML::Expression:
		//	UnitsExpression ({SysML::OperatorExpression.operand+=current} operator=MultiplicativeOperator
		//	operand+=UnitsExpression)*;
		@Override public ParserRule getRule() { return rule; }
		
		//UnitsExpression ({SysML::OperatorExpression.operand+=current} operator=MultiplicativeOperator operand+=UnitsExpression)*
		public Group getGroup() { return cGroup; }
		
		//UnitsExpression
		public RuleCall getUnitsExpressionParserRuleCall_0() { return cUnitsExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator=MultiplicativeOperator operand+=UnitsExpression)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator=MultiplicativeOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//MultiplicativeOperator
		public RuleCall getOperatorMultiplicativeOperatorParserRuleCall_1_1_0() { return cOperatorMultiplicativeOperatorParserRuleCall_1_1_0; }
		
		//operand+=UnitsExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//UnitsExpression
		public RuleCall getOperandUnitsExpressionParserRuleCall_1_2_0() { return cOperandUnitsExpressionParserRuleCall_1_2_0; }
	}
	public class MultiplicativeOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.MultiplicativeOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cAsteriskAsteriskKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//MultiplicativeOperator:
		//	'*' | '/' | '**';
		@Override public ParserRule getRule() { return rule; }
		
		//'*' | '/' | '**'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//'/'
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }
		
		//'**'
		public Keyword getAsteriskAsteriskKeyword_2() { return cAsteriskAsteriskKeyword_2; }
	}
	public class UnitsExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnitsExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cOperatorCommercialAtKeyword_1_1_0 = (Keyword)cOperatorAssignment_1_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cOperandAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOperandExpressionParserRuleCall_1_3_0 = (RuleCall)cOperandAssignment_1_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		
		//// Units Expressions
		//UnitsExpression SysML::Expression:
		//	UnaryExpression ({SysML::OperatorExpression.operand+=current} operator='@' '[' operand+=Expression ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//UnaryExpression ({SysML::OperatorExpression.operand+=current} operator='@' '[' operand+=Expression ']')?
		public Group getGroup() { return cGroup; }
		
		//UnaryExpression
		public RuleCall getUnaryExpressionParserRuleCall_0() { return cUnaryExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator='@' '[' operand+=Expression ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator='@'
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//'@'
		public Keyword getOperatorCommercialAtKeyword_1_1_0() { return cOperatorCommercialAtKeyword_1_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_2() { return cLeftSquareBracketKeyword_1_2; }
		
		//operand+=Expression
		public Assignment getOperandAssignment_1_3() { return cOperandAssignment_1_3; }
		
		//Expression
		public RuleCall getOperandExpressionParserRuleCall_1_3_0() { return cOperandExpressionParserRuleCall_1_3_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_4() { return cRightSquareBracketKeyword_1_4; }
	}
	public class UnaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnaryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSequenceAccessExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cOperatorExpressionAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorUnaryOperatorParserRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandSequenceAccessExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		
		//// Unary Expressions
		//UnaryExpression SysML::Expression:
		//	SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SequenceAccessExpression
		public RuleCall getSequenceAccessExpressionParserRuleCall_0() { return cSequenceAccessExpressionParserRuleCall_0; }
		
		//{SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression}
		public Action getOperatorExpressionAction_1_0() { return cOperatorExpressionAction_1_0; }
		
		//operator=UnaryOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//UnaryOperator
		public RuleCall getOperatorUnaryOperatorParserRuleCall_1_1_0() { return cOperatorUnaryOperatorParserRuleCall_1_1_0; }
		
		//operand+=SequenceAccessExpression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//SequenceAccessExpression
		public RuleCall getOperandSequenceAccessExpressionParserRuleCall_1_2_0() { return cOperandSequenceAccessExpressionParserRuleCall_1_2_0; }
	}
	public class UnaryOperatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnaryOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPlusSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cTildeKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//UnaryOperator:
		//	'+' | '-' | '!' | '~';
		@Override public ParserRule getRule() { return rule; }
		
		//'+' | '-' | '!' | '~'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'+'
		public Keyword getPlusSignKeyword_0() { return cPlusSignKeyword_0; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_1() { return cHyphenMinusKeyword_1; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_2() { return cExclamationMarkKeyword_2; }
		
		//'~'
		public Keyword getTildeKeyword_3() { return cTildeKeyword_3; }
	}
	public class SequenceAccessExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SequenceAccessExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPrimaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cOperatorLeftSquareBracketKeyword_1_1_0 = (Keyword)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperandExpressionParserRuleCall_1_2_0 = (RuleCall)cOperandAssignment_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//SequenceAccessExpression SysML::Expression:
		//	PrimaryExpression ({SysML::OperatorExpression.operand+=current} operator='[' operand+=Expression ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//PrimaryExpression ({SysML::OperatorExpression.operand+=current} operator='[' operand+=Expression ']')?
		public Group getGroup() { return cGroup; }
		
		//PrimaryExpression
		public RuleCall getPrimaryExpressionParserRuleCall_0() { return cPrimaryExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} operator='[' operand+=Expression ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//operator='['
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }
		
		//'['
		public Keyword getOperatorLeftSquareBracketKeyword_1_1_0() { return cOperatorLeftSquareBracketKeyword_1_1_0; }
		
		//operand+=Expression
		public Assignment getOperandAssignment_1_2() { return cOperandAssignment_1_2; }
		
		//Expression
		public RuleCall getOperandExpressionParserRuleCall_1_2_0() { return cOperandExpressionParserRuleCall_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
	}
	public class PrimaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PrimaryExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBaseExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOperatorAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOperatorNameParserRuleCall_1_2_0 = (RuleCall)cOperatorAssignment_1_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cOwnedRelationshipBodyMemberParserRuleCall_1_3_0 = (RuleCall)cOwnedRelationshipAssignment_1_3.eContents().get(0);
		
		//// Primary Expressions
		//PrimaryExpression SysML::Expression:
		//	BaseExpression ({SysML::OperatorExpression.operand+=current} '->'
		//	operator=Name ownedRelationship+=BodyMember+)*;
		@Override public ParserRule getRule() { return rule; }
		
		//BaseExpression ({SysML::OperatorExpression.operand+=current} '->' operator=Name ownedRelationship+=BodyMember+)*
		public Group getGroup() { return cGroup; }
		
		//BaseExpression
		public RuleCall getBaseExpressionParserRuleCall_0() { return cBaseExpressionParserRuleCall_0; }
		
		//({SysML::OperatorExpression.operand+=current} '->' operator=Name ownedRelationship+=BodyMember+)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OperatorExpression.operand+=current}
		public Action getOperatorExpressionOperandAction_1_0() { return cOperatorExpressionOperandAction_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_1() { return cHyphenMinusGreaterThanSignKeyword_1_1; }
		
		//operator=Name
		public Assignment getOperatorAssignment_1_2() { return cOperatorAssignment_1_2; }
		
		//Name
		public RuleCall getOperatorNameParserRuleCall_1_2_0() { return cOperatorNameParserRuleCall_1_2_0; }
		
		//ownedRelationship+=BodyMember+
		public Assignment getOwnedRelationshipAssignment_1_3() { return cOwnedRelationshipAssignment_1_3; }
		
		//BodyMember
		public RuleCall getOwnedRelationshipBodyMemberParserRuleCall_1_3_0() { return cOwnedRelationshipBodyMemberParserRuleCall_1_3_0; }
	}
	public class BodyExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BodyExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipBodyParameterMemberParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipBodyParameterMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cOwnedRelationshipExpressionMemberParserRuleCall_0_3_0 = (RuleCall)cOwnedRelationshipAssignment_0_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipExpressionTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//BodyExpression SysML::BlockExpression:
		//	ownedRelationship+=BodyParameterMember ownedRelationship+=BodyParameterMember* '(' ownedRelationship+=ExpressionMember
		//	')'
		//	| ownedRelationship+=ExpressionTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//// TODO: Update syntax (if possible) to remove need for backtracking.
		//// (Backtracking is required if typing is allowed on body parameters. Otherwise, a "=>" on the first alternative is sufficient.)
		//ownedRelationship+=BodyParameterMember ownedRelationship+=BodyParameterMember* '(' ownedRelationship+=ExpressionMember
		//')' | ownedRelationship+=ExpressionTyping
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//// TODO: Update syntax (if possible) to remove need for backtracking.
		//// (Backtracking is required if typing is allowed on body parameters. Otherwise, a "=>" on the first alternative is sufficient.)
		//ownedRelationship+=BodyParameterMember ownedRelationship+=BodyParameterMember* '(' ownedRelationship+=ExpressionMember
		//')'
		public Group getGroup_0() { return cGroup_0; }
		
		//// TODO: Update syntax (if possible) to remove need for backtracking.
		//// (Backtracking is required if typing is allowed on body parameters. Otherwise, a "=>" on the first alternative is sufficient.)
		//ownedRelationship+=BodyParameterMember
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//BodyParameterMember
		public RuleCall getOwnedRelationshipBodyParameterMemberParserRuleCall_0_0_0() { return cOwnedRelationshipBodyParameterMemberParserRuleCall_0_0_0; }
		
		//ownedRelationship+=BodyParameterMember*
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//BodyParameterMember
		public RuleCall getOwnedRelationshipBodyParameterMemberParserRuleCall_0_1_0() { return cOwnedRelationshipBodyParameterMemberParserRuleCall_0_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }
		
		//ownedRelationship+=ExpressionMember
		public Assignment getOwnedRelationshipAssignment_0_3() { return cOwnedRelationshipAssignment_0_3; }
		
		//ExpressionMember
		public RuleCall getOwnedRelationshipExpressionMemberParserRuleCall_0_3_0() { return cOwnedRelationshipExpressionMemberParserRuleCall_0_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }
		
		//ownedRelationship+=ExpressionTyping
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ExpressionTyping
		public RuleCall getOwnedRelationshipExpressionTypingParserRuleCall_1_0() { return cOwnedRelationshipExpressionTypingParserRuleCall_1_0; }
	}
	public class ExpressionTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ExpressionTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeFunctionCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeFunctionQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeFunctionCrossReference_0.eContents().get(1);
		
		//ExpressionTyping SysML::FeatureTyping:
		//	type=[SysML::Function|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//type=[SysML::Function|QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Function|QualifiedName]
		public CrossReference getTypeFunctionCrossReference_0() { return cTypeFunctionCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeFunctionQualifiedNameParserRuleCall_0_1() { return cTypeFunctionQualifiedNameParserRuleCall_0_1; }
	}
	public class BaseExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BaseExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNullExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFeatureReferenceExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cQueryPathExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cInvocationExpressionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cClassExtentExpressionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cSequenceConstructionExpressionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Keyword cLeftParenthesisKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final RuleCall cExpressionParserRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		
		//// Base Expressions
		//BaseExpression SysML::Expression:
		//	NullExpression
		//	| LiteralExpression
		//	| FeatureReferenceExpression
		//	| QueryPathExpression
		//	| InvocationExpression
		//	| ClassExtentExpression
		//	| SequenceConstructionExpression
		//	| '(' Expression ')';
		@Override public ParserRule getRule() { return rule; }
		
		//NullExpression | LiteralExpression | FeatureReferenceExpression | QueryPathExpression | InvocationExpression |
		//ClassExtentExpression | SequenceConstructionExpression | '(' Expression ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NullExpression
		public RuleCall getNullExpressionParserRuleCall_0() { return cNullExpressionParserRuleCall_0; }
		
		//LiteralExpression
		public RuleCall getLiteralExpressionParserRuleCall_1() { return cLiteralExpressionParserRuleCall_1; }
		
		//FeatureReferenceExpression
		public RuleCall getFeatureReferenceExpressionParserRuleCall_2() { return cFeatureReferenceExpressionParserRuleCall_2; }
		
		//QueryPathExpression
		public RuleCall getQueryPathExpressionParserRuleCall_3() { return cQueryPathExpressionParserRuleCall_3; }
		
		//InvocationExpression
		public RuleCall getInvocationExpressionParserRuleCall_4() { return cInvocationExpressionParserRuleCall_4; }
		
		//ClassExtentExpression
		public RuleCall getClassExtentExpressionParserRuleCall_5() { return cClassExtentExpressionParserRuleCall_5; }
		
		//SequenceConstructionExpression
		public RuleCall getSequenceConstructionExpressionParserRuleCall_6() { return cSequenceConstructionExpressionParserRuleCall_6; }
		
		//'(' Expression ')'
		public Group getGroup_7() { return cGroup_7; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7_0() { return cLeftParenthesisKeyword_7_0; }
		
		//Expression
		public RuleCall getExpressionParserRuleCall_7_1() { return cExpressionParserRuleCall_7_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7_2() { return cRightParenthesisKeyword_7_2; }
	}
	public class FeatureReferenceExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureReferenceExpression");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureReferenceParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//FeatureReferenceExpression SysML::FeatureReferenceExpression:
		//	ownedRelationship+=FeatureReference;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=FeatureReference
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//FeatureReference
		public RuleCall getOwnedRelationshipFeatureReferenceParserRuleCall_0() { return cOwnedRelationshipFeatureReferenceParserRuleCall_0; }
	}
	public class InvocationExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.InvocationExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTupleParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//InvocationExpression SysML::InvocationExpression:
		//	ownedRelationship+=FeatureTyping '(' Tuple? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=FeatureTyping '(' Tuple? ')'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=FeatureTyping
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_0_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_0_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//Tuple?
		public RuleCall getTupleParserRuleCall_2() { return cTupleParserRuleCall_2; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class TupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Tuple");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPositionalTupleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNamedTupleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment Tuple returns SysML::Expression:
		//	PositionalTuple | NamedTuple;
		@Override public ParserRule getRule() { return rule; }
		
		//PositionalTuple | NamedTuple
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PositionalTuple
		public RuleCall getPositionalTupleParserRuleCall_0() { return cPositionalTupleParserRuleCall_0; }
		
		//NamedTuple
		public RuleCall getNamedTupleParserRuleCall_1() { return cNamedTupleParserRuleCall_1; }
	}
	public class PositionalTupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PositionalTuple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipExpressionMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment PositionalTuple returns SysML::Expression:
		//	ownedRelationship+=ExpressionMember (',' ownedRelationship+=ExpressionMember)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=ExpressionMember (',' ownedRelationship+=ExpressionMember)*
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=ExpressionMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//ExpressionMember
		public RuleCall getOwnedRelationshipExpressionMemberParserRuleCall_0_0() { return cOwnedRelationshipExpressionMemberParserRuleCall_0_0; }
		
		//(',' ownedRelationship+=ExpressionMember)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship+=ExpressionMember
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//ExpressionMember
		public RuleCall getOwnedRelationshipExpressionMemberParserRuleCall_1_1_0() { return cOwnedRelationshipExpressionMemberParserRuleCall_1_1_0; }
	}
	public class NamedTupleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NamedTuple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipNamedExpressionMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipNamedExpressionMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment NamedTuple returns SysML::Expression:
		//	ownedRelationship+=NamedExpressionMember (',' ownedRelationship+=NamedExpressionMember)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=NamedExpressionMember (',' ownedRelationship+=NamedExpressionMember)*
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=NamedExpressionMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//NamedExpressionMember
		public RuleCall getOwnedRelationshipNamedExpressionMemberParserRuleCall_0_0() { return cOwnedRelationshipNamedExpressionMemberParserRuleCall_0_0; }
		
		//(',' ownedRelationship+=NamedExpressionMember)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship+=NamedExpressionMember
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//NamedExpressionMember
		public RuleCall getOwnedRelationshipNamedExpressionMemberParserRuleCall_1_1_0() { return cOwnedRelationshipNamedExpressionMemberParserRuleCall_1_1_0; }
	}
	public class ClassExtentExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ClassExtentExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipTypeReferenceMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOperatorAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cOperatorAllInstancesKeyword_2_0 = (Keyword)cOperatorAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ClassExtentExpression SysML::OperatorExpression:
		//	ownedRelationship+=TypeReferenceMember '.' operator='allInstances' '(' ')';
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=TypeReferenceMember '.' operator='allInstances' '(' ')'
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship+=TypeReferenceMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//TypeReferenceMember
		public RuleCall getOwnedRelationshipTypeReferenceMemberParserRuleCall_0_0() { return cOwnedRelationshipTypeReferenceMemberParserRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//operator='allInstances'
		public Assignment getOperatorAssignment_2() { return cOperatorAssignment_2; }
		
		//'allInstances'
		public Keyword getOperatorAllInstancesKeyword_2_0() { return cOperatorAllInstancesKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class TypeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.TypeReference");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//TypeReference SysML::Feature:
		//	ownedRelationship+=FeatureTyping;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship+=FeatureTyping
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_0; }
	}
	public class SequenceConstructionExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SequenceConstructionExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSequenceConstructionExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cElementAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cElementExpressionParserRuleCall_2_0_0 = (RuleCall)cElementAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cElementAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cElementExpressionParserRuleCall_2_1_1_0 = (RuleCall)cElementAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SequenceConstructionExpression SysML::SequenceConstructionExpression:
		//	{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{SysML::SequenceConstructionExpression}
		public Action getSequenceConstructionExpressionAction_0() { return cSequenceConstructionExpressionAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(element+=Expression (',' element+=Expression)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//element+=Expression
		public Assignment getElementAssignment_2_0() { return cElementAssignment_2_0; }
		
		//Expression
		public RuleCall getElementExpressionParserRuleCall_2_0_0() { return cElementExpressionParserRuleCall_2_0_0; }
		
		//(',' element+=Expression)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//element+=Expression
		public Assignment getElementAssignment_2_1_1() { return cElementAssignment_2_1_1; }
		
		//Expression
		public RuleCall getElementExpressionParserRuleCall_2_1_1_0() { return cElementExpressionParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class NullExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NullExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNullExpressionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNullKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//NullExpression SysML::NullExpression:
		//	{SysML::NullExpression} 'null';
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::NullExpression} 'null'
		public Group getGroup() { return cGroup; }
		
		//{SysML::NullExpression}
		public Action getNullExpressionAction_0() { return cNullExpressionAction_0; }
		
		//'null'
		public Keyword getNullKeyword_1() { return cNullKeyword_1; }
	}
	public class LiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.LiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBooleanLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRealLiteralExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cUnlimitedNaturalLiteralExpressionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//// Literal Expressions
		//LiteralExpression SysML::LiteralExpression:
		//	BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BooleanLiteralExpression
		public RuleCall getBooleanLiteralExpressionParserRuleCall_0() { return cBooleanLiteralExpressionParserRuleCall_0; }
		
		//StringLiteralExpression
		public RuleCall getStringLiteralExpressionParserRuleCall_1() { return cStringLiteralExpressionParserRuleCall_1; }
		
		//RealLiteralExpression
		public RuleCall getRealLiteralExpressionParserRuleCall_2() { return cRealLiteralExpressionParserRuleCall_2; }
		
		//UnlimitedNaturalLiteralExpression
		public RuleCall getUnlimitedNaturalLiteralExpressionParserRuleCall_3() { return cUnlimitedNaturalLiteralExpressionParserRuleCall_3; }
	}
	public class BooleanLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BooleanLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBOOLEAN_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//BooleanLiteralExpression SysML::LiteralBoolean:
		//	value=BOOLEAN_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=BOOLEAN_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//BOOLEAN_VALUE
		public RuleCall getValueBOOLEAN_VALUETerminalRuleCall_0() { return cValueBOOLEAN_VALUETerminalRuleCall_0; }
	}
	public class StringLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.StringLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRING_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringLiteralExpression SysML::LiteralString:
		//	value=STRING_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING_VALUE
		public RuleCall getValueSTRING_VALUETerminalRuleCall_0() { return cValueSTRING_VALUETerminalRuleCall_0; }
	}
	public class RealLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.RealLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueRealValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//RealLiteralExpression SysML::LiteralReal:
		//	value=RealValue;
		@Override public ParserRule getRule() { return rule; }
		
		//value=RealValue
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//RealValue
		public RuleCall getValueRealValueParserRuleCall_0() { return cValueRealValueParserRuleCall_0; }
	}
	public class RealValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.RealValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Alternatives cAlternatives_0_2 = (Alternatives)cGroup_0.eContents().get(2);
		private final RuleCall cNATURAL_VALUETerminalRuleCall_0_2_0 = (RuleCall)cAlternatives_0_2.eContents().get(0);
		private final RuleCall cEXP_VALUETerminalRuleCall_0_2_1 = (RuleCall)cAlternatives_0_2.eContents().get(1);
		private final RuleCall cEXP_VALUETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RealValue Ecore::EDouble:
		//	NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE)
		public Group getGroup_0() { return cGroup_0; }
		
		//NATURAL_VALUE?
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_0() { return cNATURAL_VALUETerminalRuleCall_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }
		
		//NATURAL_VALUE | EXP_VALUE
		public Alternatives getAlternatives_0_2() { return cAlternatives_0_2; }
		
		//NATURAL_VALUE
		public RuleCall getNATURAL_VALUETerminalRuleCall_0_2_0() { return cNATURAL_VALUETerminalRuleCall_0_2_0; }
		
		//EXP_VALUE
		public RuleCall getEXP_VALUETerminalRuleCall_0_2_1() { return cEXP_VALUETerminalRuleCall_0_2_1; }
		
		//EXP_VALUE
		public RuleCall getEXP_VALUETerminalRuleCall_1() { return cEXP_VALUETerminalRuleCall_1; }
	}
	public class NaturalLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NaturalLiteralExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNATURAL_VALUETerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//NaturalLiteralExpression SysML::LiteralInteger:
		//	value=NATURAL_VALUE;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NATURAL_VALUE
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NATURAL_VALUE
		public RuleCall getValueNATURAL_VALUETerminalRuleCall_0() { return cValueNATURAL_VALUETerminalRuleCall_0; }
	}
	public class UnlimitedNaturalLiteralExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UnlimitedNaturalLiteralExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNaturalLiteralExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cLiteralUnboundedAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//UnlimitedNaturalLiteralExpression SysML::LiteralExpression:
		//	NaturalLiteralExpression | {SysML::LiteralUnbounded} '*';
		@Override public ParserRule getRule() { return rule; }
		
		//NaturalLiteralExpression | {SysML::LiteralUnbounded} '*'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NaturalLiteralExpression
		public RuleCall getNaturalLiteralExpressionParserRuleCall_0() { return cNaturalLiteralExpressionParserRuleCall_0; }
		
		//{SysML::LiteralUnbounded} '*'
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::LiteralUnbounded}
		public Action getLiteralUnboundedAction_1_0() { return cLiteralUnboundedAction_1_0; }
		
		//'*'
		public Keyword getAsteriskKeyword_1_1() { return cAsteriskKeyword_1_1; }
	}
	public class FeatureReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureReference");
		private final Assignment cMemberFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cMemberFeatureFeatureCrossReference_0 = (CrossReference)cMemberFeatureAssignment.eContents().get(0);
		private final RuleCall cMemberFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cMemberFeatureFeatureCrossReference_0.eContents().get(1);
		
		///* EXPRESSION MEMBERSHIPS */ FeatureReference SysML::FeatureMembership:
		//	memberFeature=[SysML::Feature|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//memberFeature=[SysML::Feature|QualifiedName]
		public Assignment getMemberFeatureAssignment() { return cMemberFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberFeatureFeatureCrossReference_0() { return cMemberFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getMemberFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cMemberFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class TypeReferenceMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.TypeReferenceMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTypeReferenceParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//TypeReferenceMember SysML::FeatureMembership:
		//	ownedRelatedElement+=TypeReference;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=TypeReference
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//TypeReference
		public RuleCall getOwnedRelatedElementTypeReferenceParserRuleCall_0() { return cOwnedRelatedElementTypeReferenceParserRuleCall_0; }
	}
	public class NamedExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NamedExpressionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMemberNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0 = (RuleCall)cMemberNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementExpressionParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//NamedExpressionMember SysML::FeatureMembership:
		//	memberName=Name '=>' ownedRelatedElement+=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//memberName=Name '=>' ownedRelatedElement+=Expression
		public Group getGroup() { return cGroup; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0() { return cMemberNameAssignment_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0() { return cMemberNameNameParserRuleCall_0_0; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }
		
		//ownedRelatedElement+=Expression
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//Expression
		public RuleCall getOwnedRelatedElementExpressionParserRuleCall_2_0() { return cOwnedRelatedElementExpressionParserRuleCall_2_0; }
	}
	public class BodyMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BodyMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementBodyExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//BodyMember SysML::FeatureMembership:
		//	ownedRelatedElement+=BodyExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement+=BodyExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//BodyExpression
		public RuleCall getOwnedRelatedElementBodyExpressionParserRuleCall_0() { return cOwnedRelatedElementBodyExpressionParserRuleCall_0; }
	}
	public class BodyParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BodyParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMemberNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMemberNameNameParserRuleCall_0_0 = (RuleCall)cMemberNameAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementParameterDefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//BodyParameterMember SysML::ParameterMembership:
		//	memberName=Name ownedRelatedElement+=ParameterDefinition;
		@Override public ParserRule getRule() { return rule; }
		
		//memberName=Name ownedRelatedElement+=ParameterDefinition
		public Group getGroup() { return cGroup; }
		
		//memberName=Name
		public Assignment getMemberNameAssignment_0() { return cMemberNameAssignment_0; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_0_0() { return cMemberNameNameParserRuleCall_0_0; }
		
		//ownedRelatedElement+=ParameterDefinition
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ParameterDefinition
		public RuleCall getOwnedRelatedElementParameterDefinitionParserRuleCall_1_0() { return cOwnedRelatedElementParameterDefinitionParserRuleCall_1_0; }
	}
	public class QueryPathExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.QueryPathExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQueryHeadExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Action cQueryQualifierExpressionOperandAction_1_1 = (Action)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipBodyMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSolidusKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Action cQueryPathStepExpressionOperandAction_2_1 = (Action)cGroup_2.eContents().get(1);
		private final Assignment cOperandAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cOperandQueryNameExpressionParserRuleCall_2_2_0 = (RuleCall)cOperandAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Action cQueryQualifierExpressionOperandAction_2_3_1 = (Action)cGroup_2_3.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2_3_2 = (Assignment)cGroup_2_3.eContents().get(2);
		private final RuleCall cOwnedRelationshipBodyMemberParserRuleCall_2_3_2_0 = (RuleCall)cOwnedRelationshipAssignment_2_3_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_3_3 = (Keyword)cGroup_2_3.eContents().get(3);
		
		///* QUERY PATH EXPRESSIONS */ QueryPathExpression SysML::Expression:
		//	QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')? ('/'
		//	{SysML::QueryPathStepExpression.operand+=current} operand+=QueryNameExpression ('['
		//	{SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?)*;
		@Override public ParserRule getRule() { return rule; }
		
		//QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')? ('/'
		//{SysML::QueryPathStepExpression.operand+=current} operand+=QueryNameExpression ('['
		//{SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?)*
		public Group getGroup() { return cGroup; }
		
		//QueryHeadExpression
		public RuleCall getQueryHeadExpressionParserRuleCall_0() { return cQueryHeadExpressionParserRuleCall_0; }
		
		//('[' {SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }
		
		//{SysML::QueryQualifierExpression.operand+=current}
		public Action getQueryQualifierExpressionOperandAction_1_1() { return cQueryQualifierExpressionOperandAction_1_1; }
		
		//ownedRelationship+=BodyMember
		public Assignment getOwnedRelationshipAssignment_1_2() { return cOwnedRelationshipAssignment_1_2; }
		
		//BodyMember
		public RuleCall getOwnedRelationshipBodyMemberParserRuleCall_1_2_0() { return cOwnedRelationshipBodyMemberParserRuleCall_1_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
		
		//('/' {SysML::QueryPathStepExpression.operand+=current} operand+=QueryNameExpression ('['
		//{SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?)*
		public Group getGroup_2() { return cGroup_2; }
		
		//'/'
		public Keyword getSolidusKeyword_2_0() { return cSolidusKeyword_2_0; }
		
		//{SysML::QueryPathStepExpression.operand+=current}
		public Action getQueryPathStepExpressionOperandAction_2_1() { return cQueryPathStepExpressionOperandAction_2_1; }
		
		//operand+=QueryNameExpression
		public Assignment getOperandAssignment_2_2() { return cOperandAssignment_2_2; }
		
		//QueryNameExpression
		public RuleCall getOperandQueryNameExpressionParserRuleCall_2_2_0() { return cOperandQueryNameExpressionParserRuleCall_2_2_0; }
		
		//('[' {SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_3_0() { return cLeftSquareBracketKeyword_2_3_0; }
		
		//{SysML::QueryQualifierExpression.operand+=current}
		public Action getQueryQualifierExpressionOperandAction_2_3_1() { return cQueryQualifierExpressionOperandAction_2_3_1; }
		
		//ownedRelationship+=BodyMember
		public Assignment getOwnedRelationshipAssignment_2_3_2() { return cOwnedRelationshipAssignment_2_3_2; }
		
		//BodyMember
		public RuleCall getOwnedRelationshipBodyMemberParserRuleCall_2_3_2_0() { return cOwnedRelationshipBodyMemberParserRuleCall_2_3_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_3_3() { return cRightSquareBracketKeyword_2_3_3; }
	}
	public class QueryNameExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.QueryNameExpression");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureReferenceParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//QueryNameExpression SysML::QueryPathExpression:
		//	ownedRelationship+=FeatureReference;
		@Override public ParserRule getRule() { return rule; }
		
		///* isParent ?= '..'
		//    | isDescendants ?= '/'
		//    | @traversal
		//    */ ownedRelationship+=FeatureReference
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//FeatureReference
		public RuleCall getOwnedRelationshipFeatureReferenceParserRuleCall_0() { return cOwnedRelationshipFeatureReferenceParserRuleCall_0; }
	}
	public class QueryHeadExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.QueryHeadExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFullStopSolidusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cFeatureReferenceExpressionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//QueryHeadExpression SysML::FeatureReferenceExpression:
		//	'./' FeatureReferenceExpression;
		@Override public ParserRule getRule() { return rule; }
		
		//'./' FeatureReferenceExpression
		public Group getGroup() { return cGroup; }
		
		//'./'
		public Keyword getFullStopSolidusKeyword_0() { return cFullStopSolidusKeyword_0; }
		
		//FeatureReferenceExpression
		public RuleCall getFeatureReferenceExpressionParserRuleCall_1() { return cFeatureReferenceExpressionParserRuleCall_1; }
	}
	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.Name");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUNRESTRICTED_NAMETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* NAMES */ Name:
		//	ID | UNRESTRICTED_NAME;
		@Override public ParserRule getRule() { return rule; }
		
		//ID | UNRESTRICTED_NAME
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//UNRESTRICTED_NAME
		public RuleCall getUNRESTRICTED_NAMETerminalRuleCall_1() { return cUNRESTRICTED_NAMETerminalRuleCall_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.QualifiedName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cColonQualifiedNameParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDotQualifiedNameParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//QualifiedName:
		//	Name | ColonQualifiedName | DotQualifiedName;
		@Override public ParserRule getRule() { return rule; }
		
		//Name | ColonQualifiedName | DotQualifiedName
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//ColonQualifiedName
		public RuleCall getColonQualifiedNameParserRuleCall_1() { return cColonQualifiedNameParserRuleCall_1; }
		
		//DotQualifiedName
		public RuleCall getDotQualifiedNameParserRuleCall_2() { return cDotQualifiedNameParserRuleCall_2; }
	}
	public class ColonQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ColonQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//ColonQualifiedName:
		//	Name ('::' Name)+;
		@Override public ParserRule getRule() { return rule; }
		
		//Name ('::' Name)+
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//('::' Name)+
		public Group getGroup_1() { return cGroup_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1_0() { return cColonColonKeyword_1_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	public class DotQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.DotQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cNameParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//DotQualifiedName:
		//	Name ('.' Name)+;
		@Override public ParserRule getRule() { return rule; }
		
		//Name ('.' Name)+
		public Group getGroup() { return cGroup; }
		
		//Name
		public RuleCall getNameParserRuleCall_0() { return cNameParserRuleCall_0; }
		
		//('.' Name)+
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//Name
		public RuleCall getNameParserRuleCall_1_1() { return cNameParserRuleCall_1_1; }
	}
	
	public class PackageElementVisibilityIndicatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.PackageElementVisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PackageElementVisibilityIndicator returns SysML::VisibilityKind:
		//	public | private;
		public EnumRule getRule() { return rule; }
		
		//public | private
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
	}
	public class VisibilityIndicatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.VisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cProtectedProtectedKeyword_2_0 = (Keyword)cProtectedEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPackageEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPackagePackagedKeyword_3_0 = (Keyword)cPackageEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum VisibilityIndicator returns SysML::VisibilityKind:
		//	public | private | protected | package='packaged';
		public EnumRule getRule() { return rule; }
		
		//public | private | protected | package='packaged'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
		
		//protected
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_2() { return cProtectedEnumLiteralDeclaration_2; }
		
		//'protected'
		public Keyword getProtectedProtectedKeyword_2_0() { return cProtectedProtectedKeyword_2_0; }
		
		//package='packaged'
		public EnumLiteralDeclaration getPackageEnumLiteralDeclaration_3() { return cPackageEnumLiteralDeclaration_3; }
		
		//'packaged'
		public Keyword getPackagePackagedKeyword_3_0() { return cPackagePackagedKeyword_3_0; }
	}
	public class FeatureDirectionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.FeatureDirection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInInKeyword_0_0 = (Keyword)cInEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOutEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOutOutKeyword_1_0 = (Keyword)cOutEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInoutEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInoutInoutKeyword_2_0 = (Keyword)cInoutEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum FeatureDirection returns SysML::FeatureDirectionKind:
		//	in | out | inout;
		public EnumRule getRule() { return rule; }
		
		//in | out | inout
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//in
		public EnumLiteralDeclaration getInEnumLiteralDeclaration_0() { return cInEnumLiteralDeclaration_0; }
		
		//'in'
		public Keyword getInInKeyword_0_0() { return cInInKeyword_0_0; }
		
		//out
		public EnumLiteralDeclaration getOutEnumLiteralDeclaration_1() { return cOutEnumLiteralDeclaration_1; }
		
		//'out'
		public Keyword getOutOutKeyword_1_0() { return cOutOutKeyword_1_0; }
		
		//inout
		public EnumLiteralDeclaration getInoutEnumLiteralDeclaration_2() { return cInoutEnumLiteralDeclaration_2; }
		
		//'inout'
		public Keyword getInoutInoutKeyword_2_0() { return cInoutInoutKeyword_2_0; }
	}
	
	private final UnitDefinitionElements pUnitDefinition;
	private final PackageUnitDefinitionElements pPackageUnitDefinition;
	private final ClassUnitDefinitionElements pClassUnitDefinition;
	private final ObjectClassUnitDefinitionElements pObjectClassUnitDefinition;
	private final ValueClassUnitDefinitionElements pValueClassUnitDefinition;
	private final AssociationUnitDefinitionElements pAssociationUnitDefinition;
	private final InteractionUnitDefinitionElements pInteractionUnitDefinition;
	private final BehaviorUnitDefinitionElements pBehaviorUnitDefinition;
	private final FunctionUnitDefinitionElements pFunctionUnitDefinition;
	private final FeatureUnitDefinitionElements pFeatureUnitDefinition;
	private final UnitPrefixElements pUnitPrefix;
	private final PackageElementVisibilityIndicatorElements ePackageElementVisibilityIndicator;
	private final VisibilityIndicatorElements eVisibilityIndicator;
	private final AnnotationElements pAnnotation;
	private final CommentElements pComment;
	private final PackageImportElements pPackageImport;
	private final ElementImportElements pElementImport;
	private final NonFeatureDefinitionElements pNonFeatureDefinition;
	private final PackageDefinitionOrStubElements pPackageDefinitionOrStub;
	private final PackageDefinitionElements pPackageDefinition;
	private final PackageMemberElements pPackageMember;
	private final PackageMemberPrefixElements pPackageMemberPrefix;
	private final NonFeatureMemberElementElements pNonFeatureMemberElement;
	private final FeaturePackageMemberElementElements pFeaturePackageMemberElement;
	private final CategoryBodyElements pCategoryBody;
	private final AbstractCategoryBodyElements pAbstractCategoryBody;
	private final CategoryMemberElements pCategoryMember;
	private final NonFeatureCategoryMemberElements pNonFeatureCategoryMember;
	private final FeatureCategoryMemberElements pFeatureCategoryMember;
	private final FeatureMemberElements pFeatureMember;
	private final EndFeatureMemberElements pEndFeatureMember;
	private final FeatureDirectionElements eFeatureDirection;
	private final CategoryMemberPrefixElements pCategoryMemberPrefix;
	private final ClassDefinitionOrStubElements pClassDefinitionOrStub;
	private final ClassDefinitionElements pClassDefinition;
	private final ClassDeclarationElements pClassDeclaration;
	private final ClassDeclarationCompletionElements pClassDeclarationCompletion;
	private final SpecializationListElements pSpecializationList;
	private final SuperclassingElements pSuperclassing;
	private final ObjectClassDefinitionOrStubElements pObjectClassDefinitionOrStub;
	private final ObjectClassDefinitionElements pObjectClassDefinition;
	private final ObjectClassDeclarationElements pObjectClassDeclaration;
	private final ValueClassDefinitionOrStubElements pValueClassDefinitionOrStub;
	private final ValueClassDefinitionElements pValueClassDefinition;
	private final ValueClassDeclarationElements pValueClassDeclaration;
	private final AssociationDefinitionOrStubElements pAssociationDefinitionOrStub;
	private final AssociationDefinitionElements pAssociationDefinition;
	private final AssociationDeclarationElements pAssociationDeclaration;
	private final AssociationBodyElements pAssociationBody;
	private final AssociationMemberElements pAssociationMember;
	private final AssociationEndFeatureMemberElements pAssociationEndFeatureMember;
	private final InteractionDefinitionOrStubElements pInteractionDefinitionOrStub;
	private final InteractionDefinitionElements pInteractionDefinition;
	private final InteractionDeclarationElements pInteractionDeclaration;
	private final BehaviorDefinitionOrStubElements pBehaviorDefinitionOrStub;
	private final BehaviorDefinitionElements pBehaviorDefinition;
	private final BehaviorDeclarationElements pBehaviorDeclaration;
	private final ParameterListElements pParameterList;
	private final BehaviorBodyElements pBehaviorBody;
	private final ParameterMemberElements pParameterMember;
	private final BehaviorMemberElements pBehaviorMember;
	private final BehaviorStepMemberElements pBehaviorStepMember;
	private final BehaviorStepMemberDefinitionElements pBehaviorStepMemberDefinition;
	private final FunctionDefinitionOrStubElements pFunctionDefinitionOrStub;
	private final FunctionDefinitionElements pFunctionDefinition;
	private final FunctionDeclarationElements pFunctionDeclaration;
	private final ReturnParameterPartElements pReturnParameterPart;
	private final FunctionBodyElements pFunctionBody;
	private final ReturnParameterMemberElements pReturnParameterMember;
	private final ExpressionMemberElements pExpressionMember;
	private final FeatureDefinitionElements pFeatureDefinition;
	private final AbstractFeatureDefinitionElements pAbstractFeatureDefinition;
	private final NamedFeatureDefinitionElements pNamedFeatureDefinition;
	private final AbstractNamedFeatureDefinitionElements pAbstractNamedFeatureDefinition;
	private final UnnamedFeatureDefinitionElements pUnnamedFeatureDefinition;
	private final AbstractUnnamedFeatureDefinitionElements pAbstractUnnamedFeatureDefinition;
	private final FeatureBodyDefinitionElements pFeatureBodyDefinition;
	private final FeatureDeclarationElements pFeatureDeclaration;
	private final FeatureCompletionElements pFeatureCompletion;
	private final AbstractFeatureCompletionElements pAbstractFeatureCompletion;
	private final ValuePartElements pValuePart;
	private final FeatureValueElements pFeatureValue;
	private final TypePartElements pTypePart;
	private final FeatureTypingElements pFeatureTyping;
	private final MultiplicityElements pMultiplicity;
	private final SubsettingPartElements pSubsettingPart;
	private final SubsetsElements pSubsets;
	private final SubsetElements pSubset;
	private final RedefinesElements pRedefines;
	private final RedefinitionElements pRedefinition;
	private final ConnectorDefinitionElements pConnectorDefinition;
	private final AbstractConnectorDefinitionElements pAbstractConnectorDefinition;
	private final ConnectorDeclarationElements pConnectorDeclaration;
	private final ConnectorTypePartElements pConnectorTypePart;
	private final ConnectorTypingElements pConnectorTyping;
	private final ConnectorEndElements pConnectorEnd;
	private final MultiplicityEndElements pMultiplicityEnd;
	private final EmptyEndElements pEmptyEnd;
	private final ConnectorEndMemberElements pConnectorEndMember;
	private final MultiplicityEndMemberElements pMultiplicityEndMember;
	private final EmptyEndMemberElements pEmptyEndMember;
	private final BindingConnectorDefinitionElements pBindingConnectorDefinition;
	private final SuccessionDefinitionElements pSuccessionDefinition;
	private final AbstractSuccessionDefinitionElements pAbstractSuccessionDefinition;
	private final SuccessionDeclarationElements pSuccessionDeclaration;
	private final TargetSuccessionDefinitionElements pTargetSuccessionDefinition;
	private final EmptySuccessionDefinitionElements pEmptySuccessionDefinition;
	private final SuccessionMemberElements pSuccessionMember;
	private final ItemFlowDefinitionElements pItemFlowDefinition;
	private final AbstractItemFlowDefinitionElements pAbstractItemFlowDefinition;
	private final SuccessionItemFlowDefinitionElements pSuccessionItemFlowDefinition;
	private final AbstractSuccessionItemFlowDefinitionElements pAbstractSuccessionItemFlowDefinition;
	private final ItemFlowDeclarationElements pItemFlowDeclaration;
	private final ItemTypingElements pItemTyping;
	private final ItemFlowEndElements pItemFlowEnd;
	private final ItemFlowFeatureElements pItemFlowFeature;
	private final ItemTypeMemberElements pItemTypeMember;
	private final ItemFlowEndMemberElements pItemFlowEndMember;
	private final ItemFlowFeatureMemberElements pItemFlowFeatureMember;
	private final ParameterDefinitionElements pParameterDefinition;
	private final StepDefinitionElements pStepDefinition;
	private final StepParameterListElements pStepParameterList;
	private final StepParameterDefinitionElements pStepParameterDefinition;
	private final StepParameterFlowDefinitionElements pStepParameterFlowDefinition;
	private final StepParameterMemberElements pStepParameterMember;
	private final StepParameterFlowMemberElements pStepParameterFlowMember;
	private final EmptySuccessionMemberElements pEmptySuccessionMember;
	private final ExpressionDefinitionElements pExpressionDefinition;
	private final ExpressionElements pExpression;
	private final ConditionalExpressionElements pConditionalExpression;
	private final ConditionalTestOperatorElements pConditionalTestOperator;
	private final NullCoalescingExpressionElements pNullCoalescingExpression;
	private final NullCoalescingOperatorElements pNullCoalescingOperator;
	private final ConditionalOrExpressionElements pConditionalOrExpression;
	private final ConditionalOrOperatorElements pConditionalOrOperator;
	private final ConditionalAndExpressionElements pConditionalAndExpression;
	private final ConditionalAndOperatorElements pConditionalAndOperator;
	private final OrExpressionElements pOrExpression;
	private final OrOperatorElements pOrOperator;
	private final XorExpressionElements pXorExpression;
	private final XorOperatorElements pXorOperator;
	private final AndExpressionElements pAndExpression;
	private final AndOperatorElements pAndOperator;
	private final EqualityExpressionElements pEqualityExpression;
	private final EqualityOperatorElements pEqualityOperator;
	private final ClassificationExpressionElements pClassificationExpression;
	private final ClassificationOperatorElements pClassificationOperator;
	private final RelationalExpressionElements pRelationalExpression;
	private final RelationalOperatorElements pRelationalOperator;
	private final AdditiveExpressionElements pAdditiveExpression;
	private final AdditiveOperatorElements pAdditiveOperator;
	private final MultiplicativeExpressionElements pMultiplicativeExpression;
	private final MultiplicativeOperatorElements pMultiplicativeOperator;
	private final UnitsExpressionElements pUnitsExpression;
	private final UnaryExpressionElements pUnaryExpression;
	private final UnaryOperatorElements pUnaryOperator;
	private final SequenceAccessExpressionElements pSequenceAccessExpression;
	private final PrimaryExpressionElements pPrimaryExpression;
	private final BodyExpressionElements pBodyExpression;
	private final ExpressionTypingElements pExpressionTyping;
	private final BaseExpressionElements pBaseExpression;
	private final FeatureReferenceExpressionElements pFeatureReferenceExpression;
	private final InvocationExpressionElements pInvocationExpression;
	private final TupleElements pTuple;
	private final PositionalTupleElements pPositionalTuple;
	private final NamedTupleElements pNamedTuple;
	private final ClassExtentExpressionElements pClassExtentExpression;
	private final TypeReferenceElements pTypeReference;
	private final SequenceConstructionExpressionElements pSequenceConstructionExpression;
	private final NullExpressionElements pNullExpression;
	private final LiteralExpressionElements pLiteralExpression;
	private final BooleanLiteralExpressionElements pBooleanLiteralExpression;
	private final StringLiteralExpressionElements pStringLiteralExpression;
	private final RealLiteralExpressionElements pRealLiteralExpression;
	private final RealValueElements pRealValue;
	private final NaturalLiteralExpressionElements pNaturalLiteralExpression;
	private final UnlimitedNaturalLiteralExpressionElements pUnlimitedNaturalLiteralExpression;
	private final FeatureReferenceElements pFeatureReference;
	private final TypeReferenceMemberElements pTypeReferenceMember;
	private final NamedExpressionMemberElements pNamedExpressionMember;
	private final BodyMemberElements pBodyMember;
	private final BodyParameterMemberElements pBodyParameterMember;
	private final QueryPathExpressionElements pQueryPathExpression;
	private final QueryNameExpressionElements pQueryNameExpression;
	private final QueryHeadExpressionElements pQueryHeadExpression;
	private final NameElements pName;
	private final QualifiedNameElements pQualifiedName;
	private final ColonQualifiedNameElements pColonQualifiedName;
	private final DotQualifiedNameElements pDotQualifiedName;
	private final TerminalRule tBOOLEAN_VALUE;
	private final TerminalRule tNATURAL_VALUE;
	private final TerminalRule tEXP_VALUE;
	private final TerminalRule tID;
	private final TerminalRule tUNRESTRICTED_NAME;
	private final TerminalRule tSTRING_VALUE;
	private final TerminalRule tDOCUMENTATION_COMMENT;
	private final TerminalRule tSTATEMENT_ANNOTATION;
	private final TerminalRule tINLINE_STATEMENT;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public AlfGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pUnitDefinition = new UnitDefinitionElements();
		this.pPackageUnitDefinition = new PackageUnitDefinitionElements();
		this.pClassUnitDefinition = new ClassUnitDefinitionElements();
		this.pObjectClassUnitDefinition = new ObjectClassUnitDefinitionElements();
		this.pValueClassUnitDefinition = new ValueClassUnitDefinitionElements();
		this.pAssociationUnitDefinition = new AssociationUnitDefinitionElements();
		this.pInteractionUnitDefinition = new InteractionUnitDefinitionElements();
		this.pBehaviorUnitDefinition = new BehaviorUnitDefinitionElements();
		this.pFunctionUnitDefinition = new FunctionUnitDefinitionElements();
		this.pFeatureUnitDefinition = new FeatureUnitDefinitionElements();
		this.pUnitPrefix = new UnitPrefixElements();
		this.ePackageElementVisibilityIndicator = new PackageElementVisibilityIndicatorElements();
		this.eVisibilityIndicator = new VisibilityIndicatorElements();
		this.pAnnotation = new AnnotationElements();
		this.pComment = new CommentElements();
		this.pPackageImport = new PackageImportElements();
		this.pElementImport = new ElementImportElements();
		this.pNonFeatureDefinition = new NonFeatureDefinitionElements();
		this.pPackageDefinitionOrStub = new PackageDefinitionOrStubElements();
		this.pPackageDefinition = new PackageDefinitionElements();
		this.pPackageMember = new PackageMemberElements();
		this.pPackageMemberPrefix = new PackageMemberPrefixElements();
		this.pNonFeatureMemberElement = new NonFeatureMemberElementElements();
		this.pFeaturePackageMemberElement = new FeaturePackageMemberElementElements();
		this.pCategoryBody = new CategoryBodyElements();
		this.pAbstractCategoryBody = new AbstractCategoryBodyElements();
		this.pCategoryMember = new CategoryMemberElements();
		this.pNonFeatureCategoryMember = new NonFeatureCategoryMemberElements();
		this.pFeatureCategoryMember = new FeatureCategoryMemberElements();
		this.pFeatureMember = new FeatureMemberElements();
		this.pEndFeatureMember = new EndFeatureMemberElements();
		this.eFeatureDirection = new FeatureDirectionElements();
		this.pCategoryMemberPrefix = new CategoryMemberPrefixElements();
		this.pClassDefinitionOrStub = new ClassDefinitionOrStubElements();
		this.pClassDefinition = new ClassDefinitionElements();
		this.pClassDeclaration = new ClassDeclarationElements();
		this.pClassDeclarationCompletion = new ClassDeclarationCompletionElements();
		this.pSpecializationList = new SpecializationListElements();
		this.pSuperclassing = new SuperclassingElements();
		this.pObjectClassDefinitionOrStub = new ObjectClassDefinitionOrStubElements();
		this.pObjectClassDefinition = new ObjectClassDefinitionElements();
		this.pObjectClassDeclaration = new ObjectClassDeclarationElements();
		this.pValueClassDefinitionOrStub = new ValueClassDefinitionOrStubElements();
		this.pValueClassDefinition = new ValueClassDefinitionElements();
		this.pValueClassDeclaration = new ValueClassDeclarationElements();
		this.pAssociationDefinitionOrStub = new AssociationDefinitionOrStubElements();
		this.pAssociationDefinition = new AssociationDefinitionElements();
		this.pAssociationDeclaration = new AssociationDeclarationElements();
		this.pAssociationBody = new AssociationBodyElements();
		this.pAssociationMember = new AssociationMemberElements();
		this.pAssociationEndFeatureMember = new AssociationEndFeatureMemberElements();
		this.pInteractionDefinitionOrStub = new InteractionDefinitionOrStubElements();
		this.pInteractionDefinition = new InteractionDefinitionElements();
		this.pInteractionDeclaration = new InteractionDeclarationElements();
		this.pBehaviorDefinitionOrStub = new BehaviorDefinitionOrStubElements();
		this.pBehaviorDefinition = new BehaviorDefinitionElements();
		this.pBehaviorDeclaration = new BehaviorDeclarationElements();
		this.pParameterList = new ParameterListElements();
		this.pBehaviorBody = new BehaviorBodyElements();
		this.pParameterMember = new ParameterMemberElements();
		this.pBehaviorMember = new BehaviorMemberElements();
		this.pBehaviorStepMember = new BehaviorStepMemberElements();
		this.pBehaviorStepMemberDefinition = new BehaviorStepMemberDefinitionElements();
		this.pFunctionDefinitionOrStub = new FunctionDefinitionOrStubElements();
		this.pFunctionDefinition = new FunctionDefinitionElements();
		this.pFunctionDeclaration = new FunctionDeclarationElements();
		this.pReturnParameterPart = new ReturnParameterPartElements();
		this.pFunctionBody = new FunctionBodyElements();
		this.pReturnParameterMember = new ReturnParameterMemberElements();
		this.pExpressionMember = new ExpressionMemberElements();
		this.pFeatureDefinition = new FeatureDefinitionElements();
		this.pAbstractFeatureDefinition = new AbstractFeatureDefinitionElements();
		this.pNamedFeatureDefinition = new NamedFeatureDefinitionElements();
		this.pAbstractNamedFeatureDefinition = new AbstractNamedFeatureDefinitionElements();
		this.pUnnamedFeatureDefinition = new UnnamedFeatureDefinitionElements();
		this.pAbstractUnnamedFeatureDefinition = new AbstractUnnamedFeatureDefinitionElements();
		this.pFeatureBodyDefinition = new FeatureBodyDefinitionElements();
		this.pFeatureDeclaration = new FeatureDeclarationElements();
		this.pFeatureCompletion = new FeatureCompletionElements();
		this.pAbstractFeatureCompletion = new AbstractFeatureCompletionElements();
		this.pValuePart = new ValuePartElements();
		this.pFeatureValue = new FeatureValueElements();
		this.pTypePart = new TypePartElements();
		this.pFeatureTyping = new FeatureTypingElements();
		this.pMultiplicity = new MultiplicityElements();
		this.pSubsettingPart = new SubsettingPartElements();
		this.pSubsets = new SubsetsElements();
		this.pSubset = new SubsetElements();
		this.pRedefines = new RedefinesElements();
		this.pRedefinition = new RedefinitionElements();
		this.pConnectorDefinition = new ConnectorDefinitionElements();
		this.pAbstractConnectorDefinition = new AbstractConnectorDefinitionElements();
		this.pConnectorDeclaration = new ConnectorDeclarationElements();
		this.pConnectorTypePart = new ConnectorTypePartElements();
		this.pConnectorTyping = new ConnectorTypingElements();
		this.pConnectorEnd = new ConnectorEndElements();
		this.pMultiplicityEnd = new MultiplicityEndElements();
		this.pEmptyEnd = new EmptyEndElements();
		this.pConnectorEndMember = new ConnectorEndMemberElements();
		this.pMultiplicityEndMember = new MultiplicityEndMemberElements();
		this.pEmptyEndMember = new EmptyEndMemberElements();
		this.pBindingConnectorDefinition = new BindingConnectorDefinitionElements();
		this.pSuccessionDefinition = new SuccessionDefinitionElements();
		this.pAbstractSuccessionDefinition = new AbstractSuccessionDefinitionElements();
		this.pSuccessionDeclaration = new SuccessionDeclarationElements();
		this.pTargetSuccessionDefinition = new TargetSuccessionDefinitionElements();
		this.pEmptySuccessionDefinition = new EmptySuccessionDefinitionElements();
		this.pSuccessionMember = new SuccessionMemberElements();
		this.pItemFlowDefinition = new ItemFlowDefinitionElements();
		this.pAbstractItemFlowDefinition = new AbstractItemFlowDefinitionElements();
		this.pSuccessionItemFlowDefinition = new SuccessionItemFlowDefinitionElements();
		this.pAbstractSuccessionItemFlowDefinition = new AbstractSuccessionItemFlowDefinitionElements();
		this.pItemFlowDeclaration = new ItemFlowDeclarationElements();
		this.pItemTyping = new ItemTypingElements();
		this.pItemFlowEnd = new ItemFlowEndElements();
		this.pItemFlowFeature = new ItemFlowFeatureElements();
		this.pItemTypeMember = new ItemTypeMemberElements();
		this.pItemFlowEndMember = new ItemFlowEndMemberElements();
		this.pItemFlowFeatureMember = new ItemFlowFeatureMemberElements();
		this.pParameterDefinition = new ParameterDefinitionElements();
		this.pStepDefinition = new StepDefinitionElements();
		this.pStepParameterList = new StepParameterListElements();
		this.pStepParameterDefinition = new StepParameterDefinitionElements();
		this.pStepParameterFlowDefinition = new StepParameterFlowDefinitionElements();
		this.pStepParameterMember = new StepParameterMemberElements();
		this.pStepParameterFlowMember = new StepParameterFlowMemberElements();
		this.pEmptySuccessionMember = new EmptySuccessionMemberElements();
		this.pExpressionDefinition = new ExpressionDefinitionElements();
		this.pExpression = new ExpressionElements();
		this.pConditionalExpression = new ConditionalExpressionElements();
		this.pConditionalTestOperator = new ConditionalTestOperatorElements();
		this.pNullCoalescingExpression = new NullCoalescingExpressionElements();
		this.pNullCoalescingOperator = new NullCoalescingOperatorElements();
		this.pConditionalOrExpression = new ConditionalOrExpressionElements();
		this.pConditionalOrOperator = new ConditionalOrOperatorElements();
		this.pConditionalAndExpression = new ConditionalAndExpressionElements();
		this.pConditionalAndOperator = new ConditionalAndOperatorElements();
		this.pOrExpression = new OrExpressionElements();
		this.pOrOperator = new OrOperatorElements();
		this.pXorExpression = new XorExpressionElements();
		this.pXorOperator = new XorOperatorElements();
		this.pAndExpression = new AndExpressionElements();
		this.pAndOperator = new AndOperatorElements();
		this.pEqualityExpression = new EqualityExpressionElements();
		this.pEqualityOperator = new EqualityOperatorElements();
		this.pClassificationExpression = new ClassificationExpressionElements();
		this.pClassificationOperator = new ClassificationOperatorElements();
		this.pRelationalExpression = new RelationalExpressionElements();
		this.pRelationalOperator = new RelationalOperatorElements();
		this.pAdditiveExpression = new AdditiveExpressionElements();
		this.pAdditiveOperator = new AdditiveOperatorElements();
		this.pMultiplicativeExpression = new MultiplicativeExpressionElements();
		this.pMultiplicativeOperator = new MultiplicativeOperatorElements();
		this.pUnitsExpression = new UnitsExpressionElements();
		this.pUnaryExpression = new UnaryExpressionElements();
		this.pUnaryOperator = new UnaryOperatorElements();
		this.pSequenceAccessExpression = new SequenceAccessExpressionElements();
		this.pPrimaryExpression = new PrimaryExpressionElements();
		this.pBodyExpression = new BodyExpressionElements();
		this.pExpressionTyping = new ExpressionTypingElements();
		this.pBaseExpression = new BaseExpressionElements();
		this.pFeatureReferenceExpression = new FeatureReferenceExpressionElements();
		this.pInvocationExpression = new InvocationExpressionElements();
		this.pTuple = new TupleElements();
		this.pPositionalTuple = new PositionalTupleElements();
		this.pNamedTuple = new NamedTupleElements();
		this.pClassExtentExpression = new ClassExtentExpressionElements();
		this.pTypeReference = new TypeReferenceElements();
		this.pSequenceConstructionExpression = new SequenceConstructionExpressionElements();
		this.pNullExpression = new NullExpressionElements();
		this.pLiteralExpression = new LiteralExpressionElements();
		this.pBooleanLiteralExpression = new BooleanLiteralExpressionElements();
		this.pStringLiteralExpression = new StringLiteralExpressionElements();
		this.pRealLiteralExpression = new RealLiteralExpressionElements();
		this.pRealValue = new RealValueElements();
		this.pNaturalLiteralExpression = new NaturalLiteralExpressionElements();
		this.pUnlimitedNaturalLiteralExpression = new UnlimitedNaturalLiteralExpressionElements();
		this.pFeatureReference = new FeatureReferenceElements();
		this.pTypeReferenceMember = new TypeReferenceMemberElements();
		this.pNamedExpressionMember = new NamedExpressionMemberElements();
		this.pBodyMember = new BodyMemberElements();
		this.pBodyParameterMember = new BodyParameterMemberElements();
		this.pQueryPathExpression = new QueryPathExpressionElements();
		this.pQueryNameExpression = new QueryNameExpressionElements();
		this.pQueryHeadExpression = new QueryHeadExpressionElements();
		this.pName = new NameElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pColonQualifiedName = new ColonQualifiedNameElements();
		this.pDotQualifiedName = new DotQualifiedNameElements();
		this.tBOOLEAN_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.BOOLEAN_VALUE");
		this.tNATURAL_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.NATURAL_VALUE");
		this.tEXP_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.EXP_VALUE");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ID");
		this.tUNRESTRICTED_NAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.UNRESTRICTED_NAME");
		this.tSTRING_VALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.STRING_VALUE");
		this.tDOCUMENTATION_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.DOCUMENTATION_COMMENT");
		this.tSTATEMENT_ANNOTATION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.STATEMENT_ANNOTATION");
		this.tINLINE_STATEMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.INLINE_STATEMENT");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.Alf.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.omg.sysml.Alf".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	///* UNITS */ UnitDefinition SysML::Package:
	//	PackageUnitDefinition
	//	| ClassUnitDefinition
	//	| ObjectClassUnitDefinition
	//	| ValueClassUnitDefinition
	//	| AssociationUnitDefinition
	//	| InteractionUnitDefinition
	//	| BehaviorUnitDefinition
	//	| FunctionUnitDefinition
	//	| FeatureUnitDefinition;
	public UnitDefinitionElements getUnitDefinitionAccess() {
		return pUnitDefinition;
	}
	
	public ParserRule getUnitDefinitionRule() {
		return getUnitDefinitionAccess().getRule();
	}
	
	//PackageUnitDefinition SysML::Package:
	//	UnitPrefix PackageDefinition;
	public PackageUnitDefinitionElements getPackageUnitDefinitionAccess() {
		return pPackageUnitDefinition;
	}
	
	public ParserRule getPackageUnitDefinitionRule() {
		return getPackageUnitDefinitionAccess().getRule();
	}
	
	//ClassUnitDefinition SysML::ObjectClass:
	//	UnitPrefix ClassDefinition;
	public ClassUnitDefinitionElements getClassUnitDefinitionAccess() {
		return pClassUnitDefinition;
	}
	
	public ParserRule getClassUnitDefinitionRule() {
		return getClassUnitDefinitionAccess().getRule();
	}
	
	//ObjectClassUnitDefinition SysML::ObjectClass:
	//	UnitPrefix ObjectClassDefinition;
	public ObjectClassUnitDefinitionElements getObjectClassUnitDefinitionAccess() {
		return pObjectClassUnitDefinition;
	}
	
	public ParserRule getObjectClassUnitDefinitionRule() {
		return getObjectClassUnitDefinitionAccess().getRule();
	}
	
	//ValueClassUnitDefinition SysML::ValueClass:
	//	UnitPrefix ValueClassDefinition;
	public ValueClassUnitDefinitionElements getValueClassUnitDefinitionAccess() {
		return pValueClassUnitDefinition;
	}
	
	public ParserRule getValueClassUnitDefinitionRule() {
		return getValueClassUnitDefinitionAccess().getRule();
	}
	
	//AssociationUnitDefinition SysML::Association:
	//	UnitPrefix AssociationDefinition;
	public AssociationUnitDefinitionElements getAssociationUnitDefinitionAccess() {
		return pAssociationUnitDefinition;
	}
	
	public ParserRule getAssociationUnitDefinitionRule() {
		return getAssociationUnitDefinitionAccess().getRule();
	}
	
	//InteractionUnitDefinition SysML::Interaction:
	//	UnitPrefix InteractionDefinition;
	public InteractionUnitDefinitionElements getInteractionUnitDefinitionAccess() {
		return pInteractionUnitDefinition;
	}
	
	public ParserRule getInteractionUnitDefinitionRule() {
		return getInteractionUnitDefinitionAccess().getRule();
	}
	
	//BehaviorUnitDefinition SysML::Behavior:
	//	UnitPrefix BehaviorDefinition;
	public BehaviorUnitDefinitionElements getBehaviorUnitDefinitionAccess() {
		return pBehaviorUnitDefinition;
	}
	
	public ParserRule getBehaviorUnitDefinitionRule() {
		return getBehaviorUnitDefinitionAccess().getRule();
	}
	
	//FunctionUnitDefinition SysML::Function:
	//	UnitPrefix FunctionDefinition;
	public FunctionUnitDefinitionElements getFunctionUnitDefinitionAccess() {
		return pFunctionUnitDefinition;
	}
	
	public ParserRule getFunctionUnitDefinitionRule() {
		return getFunctionUnitDefinitionAccess().getRule();
	}
	
	//FeatureUnitDefinition SysML::Feature:
	//	UnitPrefix FeatureBodyDefinition;
	public FeatureUnitDefinitionElements getFeatureUnitDefinitionAccess() {
		return pFeatureUnitDefinition;
	}
	
	public ParserRule getFeatureUnitDefinitionRule() {
		return getFeatureUnitDefinitionAccess().getRule();
	}
	
	//fragment UnitPrefix returns SysML::Package:
	//	(ownedRelationship+=PackageImport | ownedRelationship+=ElementImport)*
	//	ownedRelationship+=Annotation*;
	public UnitPrefixElements getUnitPrefixAccess() {
		return pUnitPrefix;
	}
	
	public ParserRule getUnitPrefixRule() {
		return getUnitPrefixAccess().getRule();
	}
	
	//enum PackageElementVisibilityIndicator returns SysML::VisibilityKind:
	//	public | private;
	public PackageElementVisibilityIndicatorElements getPackageElementVisibilityIndicatorAccess() {
		return ePackageElementVisibilityIndicator;
	}
	
	public EnumRule getPackageElementVisibilityIndicatorRule() {
		return getPackageElementVisibilityIndicatorAccess().getRule();
	}
	
	//enum VisibilityIndicator returns SysML::VisibilityKind:
	//	public | private | protected | package='packaged';
	public VisibilityIndicatorElements getVisibilityIndicatorAccess() {
		return eVisibilityIndicator;
	}
	
	public EnumRule getVisibilityIndicatorRule() {
		return getVisibilityIndicatorAccess().getRule();
	}
	
	///* COMMENTS */ Annotation SysML::Annotation:
	//	ownedRelatedElement+=Comment;
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}
	
	//Comment SysML::Comment:
	//	body=DOCUMENTATION_COMMENT;
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}
	
	///* IMPORTS */ PackageImport SysML::Import:
	//	ownedRelationship+=Annotation*
	//	visibility=PackageElementVisibilityIndicator?
	//	'import' (importedPackage=[SysML::Package|Name] ('::' | '.') '*'
	//	| importedPackage=[SysML::Package|ColonQualifiedName] '::' '*'
	//	| importedPackage=[SysML::Package|DotQualifiedName] '.' '*') ';';
	public PackageImportElements getPackageImportAccess() {
		return pPackageImport;
	}
	
	public ParserRule getPackageImportRule() {
		return getPackageImportAccess().getRule();
	}
	
	//ElementImport SysML::Membership:
	//	PackageMemberPrefix
	//	'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
	public ElementImportElements getElementImportAccess() {
		return pElementImport;
	}
	
	public ParserRule getElementImportRule() {
		return getElementImportAccess().getRule();
	}
	
	///* PACKAGES */ NonFeatureDefinition SysML::Package:
	//	PackageDefinitionOrStub
	//	| ClassDefinitionOrStub
	//	| ObjectClassDefinitionOrStub
	//	| ValueClassDefinitionOrStub
	//	| AssociationDefinitionOrStub
	//	| InteractionDefinitionOrStub
	//	| BehaviorDefinitionOrStub
	//	| FunctionDefinitionOrStub;
	public NonFeatureDefinitionElements getNonFeatureDefinitionAccess() {
		return pNonFeatureDefinition;
	}
	
	public ParserRule getNonFeatureDefinitionRule() {
		return getNonFeatureDefinitionAccess().getRule();
	}
	
	//PackageDefinitionOrStub SysML::Package:
	//	PackageDefinition
	//	//	'package' name = Name ( isStub ?= ';' | '{' ( ownedRelationship += PackageMember )* '}' )
	//;
	public PackageDefinitionOrStubElements getPackageDefinitionOrStubAccess() {
		return pPackageDefinitionOrStub;
	}
	
	public ParserRule getPackageDefinitionOrStubRule() {
		return getPackageDefinitionOrStubAccess().getRule();
	}
	
	//fragment PackageDefinition returns SysML::Package:
	//	'package' name=Name '{' (ownedRelationship+=PackageMember | ownedRelationship+=PackageImport)* '}';
	public PackageDefinitionElements getPackageDefinitionAccess() {
		return pPackageDefinition;
	}
	
	public ParserRule getPackageDefinitionRule() {
		return getPackageDefinitionAccess().getRule();
	}
	
	///* PACKAGE MEMBERSHIPS */ PackageMember SysML::Membership:
	//	PackageMemberPrefix (NonFeatureMemberElement
	//	| FeaturePackageMemberElement);
	public PackageMemberElements getPackageMemberAccess() {
		return pPackageMember;
	}
	
	public ParserRule getPackageMemberRule() {
		return getPackageMemberAccess().getRule();
	}
	
	//fragment PackageMemberPrefix returns SysML::Membership:
	//	ownedRelationship+=Annotation*
	//	//  ( annotation += StereotypeAnnotation )*
	//	visibility=PackageElementVisibilityIndicator?;
	public PackageMemberPrefixElements getPackageMemberPrefixAccess() {
		return pPackageMemberPrefix;
	}
	
	public ParserRule getPackageMemberPrefixRule() {
		return getPackageMemberPrefixAccess().getRule();
	}
	
	//fragment NonFeatureMemberElement returns SysML::Membership:
	//	ownedRelatedElement+=NonFeatureDefinition
	//	| 'package' memberName=Name? 'is' memberElement=[SysML::Package|QualifiedName] ';'
	//	| 'Class' memberName=Name? 'is' memberElement=[SysML::Class|QualifiedName] ';'
	//	| 'class' memberName=Name? 'is' memberElement=[SysML::ObjectClass|QualifiedName] ';'
	//	| 'datatype' memberName=Name? 'is' memberElement=[SysML::ValueClass|QualifiedName] ';'
	//	| 'assoc' memberName=Name? 'is' memberElement=[SysML::Association|QualifiedName] ';'
	//	| 'behavior' memberName=Name? 'is' memberElement=[SysML::Behavior|QualifiedName] ';'
	//	| 'function' memberName=Name? 'is' memberElement=[SysML::Function|QualifiedName] ';'
	//	| 'import' memberElement=[SysML::Element|QualifiedName] ('as' memberName=Name)? ';';
	public NonFeatureMemberElementElements getNonFeatureMemberElementAccess() {
		return pNonFeatureMemberElement;
	}
	
	public ParserRule getNonFeatureMemberElementRule() {
		return getNonFeatureMemberElementAccess().getRule();
	}
	
	////NonFeatureMemberKind :
	////	'package' | 'class' | 'assoc'
	////;
	//fragment FeaturePackageMemberElement returns SysML::Membership:
	//	'feature'? ownedRelatedElement+=NamedFeatureDefinition
	//	| 'abstract' 'feature'? ownedRelatedElement+=AbstractNamedFeatureDefinition
	//	| 'feature' ownedRelatedElement+=UnnamedFeatureDefinition
	//	| 'abstract' 'feature' ownedRelatedElement+=AbstractUnnamedFeatureDefinition
	//	| ('feature' memberName=Name? | memberName=Name) 'is' memberElement=[SysML::Feature|QualifiedName] ';'
	//	| ownedRelatedElement+=StepDefinition
	//	| 'step' memberName=Name? 'is' memberElement=[SysML::Step|QualifiedName] ';'
	//	| ownedRelatedElement+=ExpressionDefinition
	//	| 'expr' memberName=Name? 'is' memberElement=[SysML::Expression|QualifiedName] ';';
	public FeaturePackageMemberElementElements getFeaturePackageMemberElementAccess() {
		return pFeaturePackageMemberElement;
	}
	
	public ParserRule getFeaturePackageMemberElementRule() {
		return getFeaturePackageMemberElementAccess().getRule();
	}
	
	///* CATEGORIES */ fragment CategoryBody returns SysML::Category:
	//	';' | '{' (ownedRelationship+=CategoryMember | ownedRelationship+=PackageImport)* '}';
	public CategoryBodyElements getCategoryBodyAccess() {
		return pCategoryBody;
	}
	
	public ParserRule getCategoryBodyRule() {
		return getCategoryBodyAccess().getRule();
	}
	
	//fragment AbstractCategoryBody returns SysML::Category:
	//	isAbstract?=';' | isAbstract?='{' (ownedRelationship+=CategoryMember | ownedRelationship+=PackageImport)* '}';
	public AbstractCategoryBodyElements getAbstractCategoryBodyAccess() {
		return pAbstractCategoryBody;
	}
	
	public ParserRule getAbstractCategoryBodyRule() {
		return getAbstractCategoryBodyAccess().getRule();
	}
	
	///* CATEGORY MEMBERSHIPS */ CategoryMember SysML::Membership:
	//	NonFeatureCategoryMember | FeatureMember | EndFeatureMember | FeatureCategoryMember;
	public CategoryMemberElements getCategoryMemberAccess() {
		return pCategoryMember;
	}
	
	public ParserRule getCategoryMemberRule() {
		return getCategoryMemberAccess().getRule();
	}
	
	//NonFeatureCategoryMember SysML::Membership:
	//	CategoryMemberPrefix NonFeatureMemberElement;
	public NonFeatureCategoryMemberElements getNonFeatureCategoryMemberAccess() {
		return pNonFeatureCategoryMember;
	}
	
	public ParserRule getNonFeatureCategoryMemberRule() {
		return getNonFeatureCategoryMemberAccess().getRule();
	}
	
	//FeatureCategoryMember SysML::FeatureMembership:
	//	CategoryMemberPrefix (direction=FeatureDirection? ownedRelatedElement+=NamedFeatureDefinition
	//	| 'abstract' direction=FeatureDirection? ownedRelatedElement+=AbstractNamedFeatureDefinition
	//	| direction=FeatureDirection? memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';');
	public FeatureCategoryMemberElements getFeatureCategoryMemberAccess() {
		return pFeatureCategoryMember;
	}
	
	public ParserRule getFeatureCategoryMemberRule() {
		return getFeatureCategoryMemberAccess().getRule();
	}
	
	//FeatureMember SysML::FeatureMembership:
	//	CategoryMemberPrefix (('feature' | isPart?='part' | isPortion?='portion' | isPort?='port') direction=FeatureDirection?
	//	(ownedRelatedElement+=FeatureDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName] ';') | 'abstract' ('feature' | isPart?='part' |
	//	isPortion?='portion' | isPort?='port') direction=FeatureDirection?
	//	ownedRelatedElement+=AbstractFeatureDefinition
	//	| 'connector' (ownedRelatedElement+=ConnectorDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::Connector|QualifiedName] ';') | 'abstract' 'connector'
	//	ownedRelatedElement+=AbstractConnectorDefinition
	//	| 'binding' ownedRelatedElement+=BindingConnectorDefinition
	//	| 'succession' (ownedRelatedElement+=SuccessionDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::Succession|QualifiedName] ';') | 'abstract' 'succession'
	//	ownedRelatedElement+=AbstractSuccessionDefinition
	//	| 'then' ownedRelatedElement+=TargetSuccessionDefinition ';'
	//	| 'stream' (ownedRelatedElement+=ItemFlowDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::ItemFlow|QualifiedName] ';') | 'abstract' 'stream'
	//	ownedRelatedElement+=AbstractItemFlowDefinition
	//	| 'flow' (ownedRelatedElement+=SuccessionItemFlowDefinition
	//	| memberName=Name? 'is' memberFeature=[SysML::SuccessionItemFlow|QualifiedName] ';') | 'abstract' 'flow'
	//	ownedRelatedElement+=AbstractSuccessionItemFlowDefinition);
	public FeatureMemberElements getFeatureMemberAccess() {
		return pFeatureMember;
	}
	
	public ParserRule getFeatureMemberRule() {
		return getFeatureMemberAccess().getRule();
	}
	
	//EndFeatureMember SysML::EndFeatureMembership:
	//	CategoryMemberPrefix ('end' (isPart?='part' | isPortion?='portion' | isPort?='port')? direction=FeatureDirection?
	//	ownedRelatedElement+=FeatureDefinition
	//	| 'abstract' 'end' (isPart?='part' | isPortion?='portion' | isPort?='port')? direction=FeatureDirection?
	//	ownedRelatedElement+=AbstractFeatureDefinition
	//	| 'end' (isPart?='part' | isPortion?='portion') memberName=Name? 'is' memberFeature=[SysML::Feature|QualifiedName]
	//	';');
	public EndFeatureMemberElements getEndFeatureMemberAccess() {
		return pEndFeatureMember;
	}
	
	public ParserRule getEndFeatureMemberRule() {
		return getEndFeatureMemberAccess().getRule();
	}
	
	//enum FeatureDirection returns SysML::FeatureDirectionKind:
	//	in | out | inout;
	public FeatureDirectionElements getFeatureDirectionAccess() {
		return eFeatureDirection;
	}
	
	public EnumRule getFeatureDirectionRule() {
		return getFeatureDirectionAccess().getRule();
	}
	
	//fragment CategoryMemberPrefix returns SysML::Membership:
	//	ownedRelationship+=Annotation*
	//	//  ( annotation += StereotypeAnnotation )*
	//	visibility=VisibilityIndicator?;
	public CategoryMemberPrefixElements getCategoryMemberPrefixAccess() {
		return pCategoryMemberPrefix;
	}
	
	public ParserRule getCategoryMemberPrefixRule() {
		return getCategoryMemberPrefixAccess().getRule();
	}
	
	///* CLASSES */ ClassDefinitionOrStub SysML::Class:
	//	ClassDefinition
	//	//	ClassDeclaration ( isStub ?= ';' | CategoryBody )
	//;
	public ClassDefinitionOrStubElements getClassDefinitionOrStubAccess() {
		return pClassDefinitionOrStub;
	}
	
	public ParserRule getClassDefinitionOrStubRule() {
		return getClassDefinitionOrStubAccess().getRule();
	}
	
	//fragment ClassDefinition returns SysML::Class:
	//	ClassDeclaration CategoryBody;
	public ClassDefinitionElements getClassDefinitionAccess() {
		return pClassDefinition;
	}
	
	public ParserRule getClassDefinitionRule() {
		return getClassDefinitionAccess().getRule();
	}
	
	//fragment ClassDeclaration returns SysML::Class:
	//	isAbstract?='abstract'? 'Class' ClassDeclarationCompletion;
	public ClassDeclarationElements getClassDeclarationAccess() {
		return pClassDeclaration;
	}
	
	public ParserRule getClassDeclarationRule() {
		return getClassDeclarationAccess().getRule();
	}
	
	//fragment ClassDeclarationCompletion returns SysML::Class:
	//	name=Name
	//	//  ( '<' ownedMember += ClassifierTemplateParameter ( ',' ownedMember += ClassifierTemplateParameter )* '>' )? 
	//	SpecializationList?;
	public ClassDeclarationCompletionElements getClassDeclarationCompletionAccess() {
		return pClassDeclarationCompletion;
	}
	
	public ParserRule getClassDeclarationCompletionRule() {
		return getClassDeclarationCompletionAccess().getRule();
	}
	
	//fragment SpecializationList returns SysML::Class:
	//	'specializes' ownedRelationship+=Superclassing (',' ownedRelationship+=Superclassing)*;
	public SpecializationListElements getSpecializationListAccess() {
		return pSpecializationList;
	}
	
	public ParserRule getSpecializationListRule() {
		return getSpecializationListAccess().getRule();
	}
	
	//Superclassing SysML::Superclassing:
	//	superclass=[SysML::Class|QualifiedName];
	public SuperclassingElements getSuperclassingAccess() {
		return pSuperclassing;
	}
	
	public ParserRule getSuperclassingRule() {
		return getSuperclassingAccess().getRule();
	}
	
	///* OBJECT CLASSES */ ObjectClassDefinitionOrStub SysML::ObjectClass:
	//	ObjectClassDefinition;
	public ObjectClassDefinitionOrStubElements getObjectClassDefinitionOrStubAccess() {
		return pObjectClassDefinitionOrStub;
	}
	
	public ParserRule getObjectClassDefinitionOrStubRule() {
		return getObjectClassDefinitionOrStubAccess().getRule();
	}
	
	//fragment ObjectClassDefinition returns SysML::ObjectClass:
	//	ObjectClassDeclaration CategoryBody;
	public ObjectClassDefinitionElements getObjectClassDefinitionAccess() {
		return pObjectClassDefinition;
	}
	
	public ParserRule getObjectClassDefinitionRule() {
		return getObjectClassDefinitionAccess().getRule();
	}
	
	//fragment ObjectClassDeclaration returns SysML::ObjectClass:
	//	isAbstract?='abstract'? 'class' ClassDeclarationCompletion;
	public ObjectClassDeclarationElements getObjectClassDeclarationAccess() {
		return pObjectClassDeclaration;
	}
	
	public ParserRule getObjectClassDeclarationRule() {
		return getObjectClassDeclarationAccess().getRule();
	}
	
	///* VALUE CLASSES (DATA TYPES) */ ValueClassDefinitionOrStub SysML::ValueClass:
	//	ValueClassDefinition;
	public ValueClassDefinitionOrStubElements getValueClassDefinitionOrStubAccess() {
		return pValueClassDefinitionOrStub;
	}
	
	public ParserRule getValueClassDefinitionOrStubRule() {
		return getValueClassDefinitionOrStubAccess().getRule();
	}
	
	//fragment ValueClassDefinition returns SysML::ValueClass:
	//	ValueClassDeclaration CategoryBody;
	public ValueClassDefinitionElements getValueClassDefinitionAccess() {
		return pValueClassDefinition;
	}
	
	public ParserRule getValueClassDefinitionRule() {
		return getValueClassDefinitionAccess().getRule();
	}
	
	//fragment ValueClassDeclaration returns SysML::ValueClass:
	//	isAbstract?='abstract'? 'datatype' ClassDeclarationCompletion;
	public ValueClassDeclarationElements getValueClassDeclarationAccess() {
		return pValueClassDeclaration;
	}
	
	public ParserRule getValueClassDeclarationRule() {
		return getValueClassDeclarationAccess().getRule();
	}
	
	///* ASSOCIATIONS */ AssociationDefinitionOrStub SysML::Association:
	//	AssociationDefinition
	//	// AssociationDeclaration { isStub = ';' | AssociationBody }
	//;
	public AssociationDefinitionOrStubElements getAssociationDefinitionOrStubAccess() {
		return pAssociationDefinitionOrStub;
	}
	
	public ParserRule getAssociationDefinitionOrStubRule() {
		return getAssociationDefinitionOrStubAccess().getRule();
	}
	
	//fragment AssociationDefinition returns SysML::Association:
	//	AssociationDeclaration AssociationBody;
	public AssociationDefinitionElements getAssociationDefinitionAccess() {
		return pAssociationDefinition;
	}
	
	public ParserRule getAssociationDefinitionRule() {
		return getAssociationDefinitionAccess().getRule();
	}
	
	//fragment AssociationDeclaration returns SysML::Association:
	//	isAbstract?='abstract'? 'assoc' ClassDeclarationCompletion;
	public AssociationDeclarationElements getAssociationDeclarationAccess() {
		return pAssociationDeclaration;
	}
	
	public ParserRule getAssociationDeclarationRule() {
		return getAssociationDeclarationAccess().getRule();
	}
	
	//fragment AssociationBody returns SysML::Association:
	//	';' | '{' (ownedRelationship+=AssociationMember | ownedRelationship+=PackageImport)* '}';
	public AssociationBodyElements getAssociationBodyAccess() {
		return pAssociationBody;
	}
	
	public ParserRule getAssociationBodyRule() {
		return getAssociationBodyAccess().getRule();
	}
	
	///* ASSOCIATION MEMBERSHIPS */ AssociationMember SysML::Membership:
	//	NonFeatureCategoryMember | FeatureMember | EndFeatureMember | AssociationEndFeatureMember;
	public AssociationMemberElements getAssociationMemberAccess() {
		return pAssociationMember;
	}
	
	public ParserRule getAssociationMemberRule() {
		return getAssociationMemberAccess().getRule();
	}
	
	//AssociationEndFeatureMember SysML::EndFeatureMembership:
	//	CategoryMemberPrefix (direction=FeatureDirection? ownedRelatedElement+=NamedFeatureDefinition
	//	| 'abstract' direction=FeatureDirection? ownedRelatedElement+=AbstractNamedFeatureDefinition
	//	| memberName=Name 'is' memberFeature=[SysML::Feature|QualifiedName] ';');
	public AssociationEndFeatureMemberElements getAssociationEndFeatureMemberAccess() {
		return pAssociationEndFeatureMember;
	}
	
	public ParserRule getAssociationEndFeatureMemberRule() {
		return getAssociationEndFeatureMemberAccess().getRule();
	}
	
	///* INTERACTIONS */ InteractionDefinitionOrStub SysML::Interaction:
	//	InteractionDefinition;
	public InteractionDefinitionOrStubElements getInteractionDefinitionOrStubAccess() {
		return pInteractionDefinitionOrStub;
	}
	
	public ParserRule getInteractionDefinitionOrStubRule() {
		return getInteractionDefinitionOrStubAccess().getRule();
	}
	
	//fragment InteractionDefinition returns SysML::Interaction:
	//	InteractionDeclaration AssociationBody;
	public InteractionDefinitionElements getInteractionDefinitionAccess() {
		return pInteractionDefinition;
	}
	
	public ParserRule getInteractionDefinitionRule() {
		return getInteractionDefinitionAccess().getRule();
	}
	
	//fragment InteractionDeclaration returns SysML::Interaction:
	//	isAbstract?='abstract'? 'interaction' ClassDeclarationCompletion;
	public InteractionDeclarationElements getInteractionDeclarationAccess() {
		return pInteractionDeclaration;
	}
	
	public ParserRule getInteractionDeclarationRule() {
		return getInteractionDeclarationAccess().getRule();
	}
	
	///* BEHAVIORS */ BehaviorDefinitionOrStub SysML::Behavior:
	//	BehaviorDefinition;
	public BehaviorDefinitionOrStubElements getBehaviorDefinitionOrStubAccess() {
		return pBehaviorDefinitionOrStub;
	}
	
	public ParserRule getBehaviorDefinitionOrStubRule() {
		return getBehaviorDefinitionOrStubAccess().getRule();
	}
	
	//fragment BehaviorDefinition returns SysML::Behavior:
	//	BehaviorDeclaration BehaviorBody;
	public BehaviorDefinitionElements getBehaviorDefinitionAccess() {
		return pBehaviorDefinition;
	}
	
	public ParserRule getBehaviorDefinitionRule() {
		return getBehaviorDefinitionAccess().getRule();
	}
	
	//fragment BehaviorDeclaration returns SysML::Behavior:
	//	isAbstract?='abstract'? 'behavior' name=Name ParameterList SpecializationList?;
	public BehaviorDeclarationElements getBehaviorDeclarationAccess() {
		return pBehaviorDeclaration;
	}
	
	public ParserRule getBehaviorDeclarationRule() {
		return getBehaviorDeclarationAccess().getRule();
	}
	
	//fragment ParameterList returns SysML::Category:
	//	'(' (ownedRelationship+=ParameterMember (',' ownedRelationship+=ParameterMember)*)? ')';
	public ParameterListElements getParameterListAccess() {
		return pParameterList;
	}
	
	public ParserRule getParameterListRule() {
		return getParameterListAccess().getRule();
	}
	
	//fragment BehaviorBody returns SysML::Category:
	//	';' | '{' (ownedRelationship+=BehaviorMember | ownedRelationship+=PackageImport)* '}';
	public BehaviorBodyElements getBehaviorBodyAccess() {
		return pBehaviorBody;
	}
	
	public ParserRule getBehaviorBodyRule() {
		return getBehaviorBodyAccess().getRule();
	}
	
	///* BEHAVIOR MEMBERSHIPS */ ParameterMember SysML::ParameterMembership:
	//	direction=FeatureDirection? memberName=Name ownedRelatedElement+=ParameterDefinition;
	public ParameterMemberElements getParameterMemberAccess() {
		return pParameterMember;
	}
	
	public ParserRule getParameterMemberRule() {
		return getParameterMemberAccess().getRule();
	}
	
	//BehaviorMember SysML::Membership:
	//	NonFeatureCategoryMember | FeatureMember | EndFeatureMember | BehaviorStepMember;
	public BehaviorMemberElements getBehaviorMemberAccess() {
		return pBehaviorMember;
	}
	
	public ParserRule getBehaviorMemberRule() {
		return getBehaviorMemberAccess().getRule();
	}
	
	//BehaviorStepMember SysML::FeatureMembership:
	//	CategoryMemberPrefix BehaviorStepMemberDefinition;
	public BehaviorStepMemberElements getBehaviorStepMemberAccess() {
		return pBehaviorStepMember;
	}
	
	public ParserRule getBehaviorStepMemberRule() {
		return getBehaviorStepMemberAccess().getRule();
	}
	
	//fragment BehaviorStepMemberDefinition returns SysML::FeatureMembership:
	//	ownedRelatedElement+=StepDefinition
	//	| 'step' memberName=Name? 'is' memberFeature=[SysML::Step|QualifiedName] ';'
	//	| ownedRelatedElement+=ExpressionDefinition
	//	| 'expr' memberName=Name? 'is' memberFeature=[SysML::Expression|QualifiedName] ';';
	public BehaviorStepMemberDefinitionElements getBehaviorStepMemberDefinitionAccess() {
		return pBehaviorStepMemberDefinition;
	}
	
	public ParserRule getBehaviorStepMemberDefinitionRule() {
		return getBehaviorStepMemberDefinitionAccess().getRule();
	}
	
	///* FUNCTIONS */ FunctionDefinitionOrStub SysML::Function:
	//	FunctionDefinition;
	public FunctionDefinitionOrStubElements getFunctionDefinitionOrStubAccess() {
		return pFunctionDefinitionOrStub;
	}
	
	public ParserRule getFunctionDefinitionOrStubRule() {
		return getFunctionDefinitionOrStubAccess().getRule();
	}
	
	//fragment FunctionDefinition returns SysML::Function:
	//	FunctionDeclaration FunctionBody;
	public FunctionDefinitionElements getFunctionDefinitionAccess() {
		return pFunctionDefinition;
	}
	
	public ParserRule getFunctionDefinitionRule() {
		return getFunctionDefinitionAccess().getRule();
	}
	
	//fragment FunctionDeclaration returns SysML::Function:
	//	isAbstract?='abstract'? 'function' name=Name ParameterList ReturnParameterPart SpecializationList?;
	public FunctionDeclarationElements getFunctionDeclarationAccess() {
		return pFunctionDeclaration;
	}
	
	public ParserRule getFunctionDeclarationRule() {
		return getFunctionDeclarationAccess().getRule();
	}
	
	//fragment ReturnParameterPart returns SysML::Category:
	//	ownedRelationship+=ReturnParameterMember;
	public ReturnParameterPartElements getReturnParameterPartAccess() {
		return pReturnParameterPart;
	}
	
	public ParserRule getReturnParameterPartRule() {
		return getReturnParameterPartAccess().getRule();
	}
	
	//fragment FunctionBody returns SysML::Category:
	//	';'
	//	| '{' (ownedRelationship+=BehaviorMember | ownedRelationship+=PackageImport)*
	//	ownedRelationship+=ExpressionMember? '}';
	public FunctionBodyElements getFunctionBodyAccess() {
		return pFunctionBody;
	}
	
	public ParserRule getFunctionBodyRule() {
		return getFunctionBodyAccess().getRule();
	}
	
	///* FUNCTION MEMBERSHIPS */ ReturnParameterMember SysML::ReturnParameterMembership:
	//	memberName=Name? ownedRelatedElement+=ParameterDefinition;
	public ReturnParameterMemberElements getReturnParameterMemberAccess() {
		return pReturnParameterMember;
	}
	
	public ParserRule getReturnParameterMemberRule() {
		return getReturnParameterMemberAccess().getRule();
	}
	
	//ExpressionMember SysML::FeatureMembership:
	//	ownedRelatedElement+=Expression;
	public ExpressionMemberElements getExpressionMemberAccess() {
		return pExpressionMember;
	}
	
	public ParserRule getExpressionMemberRule() {
		return getExpressionMemberAccess().getRule();
	}
	
	///* FEATURES */ FeatureDefinition SysML::Feature:
	//	NamedFeatureDefinition | UnnamedFeatureDefinition;
	public FeatureDefinitionElements getFeatureDefinitionAccess() {
		return pFeatureDefinition;
	}
	
	public ParserRule getFeatureDefinitionRule() {
		return getFeatureDefinitionAccess().getRule();
	}
	
	//AbstractFeatureDefinition SysML::Feature:
	//	AbstractNamedFeatureDefinition | AbstractUnnamedFeatureDefinition;
	public AbstractFeatureDefinitionElements getAbstractFeatureDefinitionAccess() {
		return pAbstractFeatureDefinition;
	}
	
	public ParserRule getAbstractFeatureDefinitionRule() {
		return getAbstractFeatureDefinitionAccess().getRule();
	}
	
	//NamedFeatureDefinition SysML::Feature:
	//	FeatureDeclaration FeatureCompletion;
	public NamedFeatureDefinitionElements getNamedFeatureDefinitionAccess() {
		return pNamedFeatureDefinition;
	}
	
	public ParserRule getNamedFeatureDefinitionRule() {
		return getNamedFeatureDefinitionAccess().getRule();
	}
	
	//AbstractNamedFeatureDefinition SysML::Feature:
	//	FeatureDeclaration AbstractFeatureCompletion;
	public AbstractNamedFeatureDefinitionElements getAbstractNamedFeatureDefinitionAccess() {
		return pAbstractNamedFeatureDefinition;
	}
	
	public ParserRule getAbstractNamedFeatureDefinitionRule() {
		return getAbstractNamedFeatureDefinitionAccess().getRule();
	}
	
	//UnnamedFeatureDefinition SysML::Feature:
	//	'redefines' ownedRelationship+=Redefinition TypePart
	//	FeatureCompletion;
	public UnnamedFeatureDefinitionElements getUnnamedFeatureDefinitionAccess() {
		return pUnnamedFeatureDefinition;
	}
	
	public ParserRule getUnnamedFeatureDefinitionRule() {
		return getUnnamedFeatureDefinitionAccess().getRule();
	}
	
	//AbstractUnnamedFeatureDefinition SysML::Feature:
	//	'redefines' ownedRelationship+=Redefinition TypePart
	//	AbstractFeatureCompletion;
	public AbstractUnnamedFeatureDefinitionElements getAbstractUnnamedFeatureDefinitionAccess() {
		return pAbstractUnnamedFeatureDefinition;
	}
	
	public ParserRule getAbstractUnnamedFeatureDefinitionRule() {
		return getAbstractUnnamedFeatureDefinitionAccess().getRule();
	}
	
	//fragment FeatureBodyDefinition returns SysML::Feature:
	//	isAbstract?='abstract'? 'feature' FeatureDeclaration FeatureCompletion;
	public FeatureBodyDefinitionElements getFeatureBodyDefinitionAccess() {
		return pFeatureBodyDefinition;
	}
	
	public ParserRule getFeatureBodyDefinitionRule() {
		return getFeatureBodyDefinitionAccess().getRule();
	}
	
	//fragment FeatureDeclaration returns SysML::Feature:
	//	name=Name TypePart SubsettingPart;
	public FeatureDeclarationElements getFeatureDeclarationAccess() {
		return pFeatureDeclaration;
	}
	
	public ParserRule getFeatureDeclarationRule() {
		return getFeatureDeclarationAccess().getRule();
	}
	
	//fragment FeatureCompletion returns SysML::Feature:
	//	ValuePart? CategoryBody;
	public FeatureCompletionElements getFeatureCompletionAccess() {
		return pFeatureCompletion;
	}
	
	public ParserRule getFeatureCompletionRule() {
		return getFeatureCompletionAccess().getRule();
	}
	
	//fragment AbstractFeatureCompletion returns SysML::Feature:
	//	ValuePart? AbstractCategoryBody;
	public AbstractFeatureCompletionElements getAbstractFeatureCompletionAccess() {
		return pAbstractFeatureCompletion;
	}
	
	public ParserRule getAbstractFeatureCompletionRule() {
		return getAbstractFeatureCompletionAccess().getRule();
	}
	
	//fragment ValuePart returns SysML::Feature:
	//	'=' ownedRelationship+=FeatureValue;
	public ValuePartElements getValuePartAccess() {
		return pValuePart;
	}
	
	public ParserRule getValuePartRule() {
		return getValuePartAccess().getRule();
	}
	
	//FeatureValue SysML::FeatureValue:
	//	ownedRelatedElement+=Expression;
	public FeatureValueElements getFeatureValueAccess() {
		return pFeatureValue;
	}
	
	public ParserRule getFeatureValueRule() {
		return getFeatureValueAccess().getRule();
	}
	
	//fragment TypePart returns SysML::Feature:
	//	(':' isComposite?='compose'? (ownedRelationship+=FeatureTyping | 'any'))?
	//	ownedRelationship+=Multiplicity? (isOrdered?='ordered'? & isNonunique?='nonunique'?);
	public TypePartElements getTypePartAccess() {
		return pTypePart;
	}
	
	public ParserRule getTypePartRule() {
		return getTypePartAccess().getRule();
	}
	
	//FeatureTyping SysML::FeatureTyping:
	//	type=[SysML::Category|QualifiedName];
	public FeatureTypingElements getFeatureTypingAccess() {
		return pFeatureTyping;
	}
	
	public ParserRule getFeatureTypingRule() {
		return getFeatureTypingAccess().getRule();
	}
	
	//Multiplicity SysML::Multiplicity:
	//	'[' (ownedRelatedElement+=NaturalLiteralExpression '..')? ownedRelatedElement+=UnlimitedNaturalLiteralExpression ']';
	public MultiplicityElements getMultiplicityAccess() {
		return pMultiplicity;
	}
	
	public ParserRule getMultiplicityRule() {
		return getMultiplicityAccess().getRule();
	}
	
	//fragment SubsettingPart returns SysML::Feature:
	//	(Subsets (',' ownedRelationship+=Subset)*
	//	| Redefines (',' ownedRelationship+=Redefinition)*)*;
	public SubsettingPartElements getSubsettingPartAccess() {
		return pSubsettingPart;
	}
	
	public ParserRule getSubsettingPartRule() {
		return getSubsettingPartAccess().getRule();
	}
	
	//fragment Subsets returns SysML::Feature:
	//	'subsets' ownedRelationship+=Subset;
	public SubsetsElements getSubsetsAccess() {
		return pSubsets;
	}
	
	public ParserRule getSubsetsRule() {
		return getSubsetsAccess().getRule();
	}
	
	//Subset SysML::Subsetting:
	//	subsettedFeature=[SysML::Feature|QualifiedName];
	public SubsetElements getSubsetAccess() {
		return pSubset;
	}
	
	public ParserRule getSubsetRule() {
		return getSubsetAccess().getRule();
	}
	
	//fragment Redefines returns SysML::Feature:
	//	'redefines' ownedRelationship+=Redefinition;
	public RedefinesElements getRedefinesAccess() {
		return pRedefines;
	}
	
	public ParserRule getRedefinesRule() {
		return getRedefinesAccess().getRule();
	}
	
	//Redefinition SysML::Redefinition:
	//	redefinedFeature=[SysML::Feature|QualifiedName];
	public RedefinitionElements getRedefinitionAccess() {
		return pRedefinition;
	}
	
	public ParserRule getRedefinitionRule() {
		return getRedefinitionAccess().getRule();
	}
	
	///* CONNECTORS */ ConnectorDefinition SysML::Connector:
	//	ConnectorDeclaration CategoryBody;
	public ConnectorDefinitionElements getConnectorDefinitionAccess() {
		return pConnectorDefinition;
	}
	
	public ParserRule getConnectorDefinitionRule() {
		return getConnectorDefinitionAccess().getRule();
	}
	
	//AbstractConnectorDefinition SysML::Connector:
	//	ConnectorDeclaration AbstractCategoryBody;
	public AbstractConnectorDefinitionElements getAbstractConnectorDefinitionAccess() {
		return pAbstractConnectorDefinition;
	}
	
	public ParserRule getAbstractConnectorDefinitionRule() {
		return getAbstractConnectorDefinitionAccess().getRule();
	}
	
	//fragment ConnectorDeclaration returns SysML::Connector:
	//	(name=Name? ConnectorTypePart 'is')?
	//	ownedRelationship+=ConnectorEndMember 'to' ownedRelationship+=ConnectorEndMember
	//	| name=Name? ConnectorTypePart
	//	'(' ownedRelationship+=ConnectorEndMember ',' ownedRelationship+=ConnectorEndMember (','
	//	ownedRelationship+=ConnectorEndMember)*
	//	')';
	public ConnectorDeclarationElements getConnectorDeclarationAccess() {
		return pConnectorDeclaration;
	}
	
	public ParserRule getConnectorDeclarationRule() {
		return getConnectorDeclarationAccess().getRule();
	}
	
	//fragment ConnectorTypePart returns SysML::Feature:
	//	(':' ownedRelationship+=ConnectorTyping)?
	//	ownedRelationship+=Multiplicity? (isOrdered?='ordered'? & isNonunique?='nonunique'?);
	public ConnectorTypePartElements getConnectorTypePartAccess() {
		return pConnectorTypePart;
	}
	
	public ParserRule getConnectorTypePartRule() {
		return getConnectorTypePartAccess().getRule();
	}
	
	//ConnectorTyping SysML::FeatureTyping:
	//	type=[SysML::Association|QualifiedName];
	public ConnectorTypingElements getConnectorTypingAccess() {
		return pConnectorTyping;
	}
	
	public ParserRule getConnectorTypingRule() {
		return getConnectorTypingAccess().getRule();
	}
	
	//ConnectorEnd SysML::Feature:
	//	ownedRelationship+=Subset ownedRelationship+=Multiplicity?;
	public ConnectorEndElements getConnectorEndAccess() {
		return pConnectorEnd;
	}
	
	public ParserRule getConnectorEndRule() {
		return getConnectorEndAccess().getRule();
	}
	
	//MultiplicityEnd SysML::Feature:
	//	{SysML::SourceEnd} ownedRelationship+=Multiplicity?;
	public MultiplicityEndElements getMultiplicityEndAccess() {
		return pMultiplicityEnd;
	}
	
	public ParserRule getMultiplicityEndRule() {
		return getMultiplicityEndAccess().getRule();
	}
	
	//EmptyEnd SysML::Feature:
	//	{SysML::TargetEnd};
	public EmptyEndElements getEmptyEndAccess() {
		return pEmptyEnd;
	}
	
	public ParserRule getEmptyEndRule() {
		return getEmptyEndAccess().getRule();
	}
	
	///* CONNECTOR MEMBERSHIPS */ ConnectorEndMember SysML::EndFeatureMembership:
	//	(memberName=Name '=>')? ownedRelatedElement+=ConnectorEnd;
	public ConnectorEndMemberElements getConnectorEndMemberAccess() {
		return pConnectorEndMember;
	}
	
	public ParserRule getConnectorEndMemberRule() {
		return getConnectorEndMemberAccess().getRule();
	}
	
	//MultiplicityEndMember SysML::EndFeatureMembership:
	//	ownedRelatedElement+=MultiplicityEnd;
	public MultiplicityEndMemberElements getMultiplicityEndMemberAccess() {
		return pMultiplicityEndMember;
	}
	
	public ParserRule getMultiplicityEndMemberRule() {
		return getMultiplicityEndMemberAccess().getRule();
	}
	
	//EmptyEndMember SysML::EndFeatureMembership:
	//	ownedRelatedElement+=EmptyEnd;
	public EmptyEndMemberElements getEmptyEndMemberAccess() {
		return pEmptyEndMember;
	}
	
	public ParserRule getEmptyEndMemberRule() {
		return getEmptyEndMemberAccess().getRule();
	}
	
	///* BINDING CONNECTORS */ BindingConnectorDefinition SysML::BindingConnector:
	//	(name=Name? ConnectorTypePart 'is')?
	//	ownedRelationship+=ConnectorEndMember '=' ownedRelationship+=ConnectorEndMember
	//	CategoryBody;
	public BindingConnectorDefinitionElements getBindingConnectorDefinitionAccess() {
		return pBindingConnectorDefinition;
	}
	
	public ParserRule getBindingConnectorDefinitionRule() {
		return getBindingConnectorDefinitionAccess().getRule();
	}
	
	///* SUCCESSIONS */ SuccessionDefinition SysML::Succession:
	//	SuccessionDeclaration CategoryBody;
	public SuccessionDefinitionElements getSuccessionDefinitionAccess() {
		return pSuccessionDefinition;
	}
	
	public ParserRule getSuccessionDefinitionRule() {
		return getSuccessionDefinitionAccess().getRule();
	}
	
	//AbstractSuccessionDefinition SysML::Succession:
	//	SuccessionDeclaration AbstractCategoryBody;
	public AbstractSuccessionDefinitionElements getAbstractSuccessionDefinitionAccess() {
		return pAbstractSuccessionDefinition;
	}
	
	public ParserRule getAbstractSuccessionDefinitionRule() {
		return getAbstractSuccessionDefinitionAccess().getRule();
	}
	
	//fragment SuccessionDeclaration returns SysML::Succession:
	//	(name=Name? ConnectorTypePart 'is')?
	//	ownedRelationship+=ConnectorEndMember 'then' ownedRelationship+=ConnectorEndMember;
	public SuccessionDeclarationElements getSuccessionDeclarationAccess() {
		return pSuccessionDeclaration;
	}
	
	public ParserRule getSuccessionDeclarationRule() {
		return getSuccessionDeclarationAccess().getRule();
	}
	
	//TargetSuccessionDefinition SysML::Succession:
	//	ownedRelationship+=MultiplicityEndMember ownedRelationship+=ConnectorEndMember;
	public TargetSuccessionDefinitionElements getTargetSuccessionDefinitionAccess() {
		return pTargetSuccessionDefinition;
	}
	
	public ParserRule getTargetSuccessionDefinitionRule() {
		return getTargetSuccessionDefinitionAccess().getRule();
	}
	
	//EmptySuccessionDefinition SysML::Succession:
	//	ownedRelationship+=MultiplicityEndMember ownedRelationship+=EmptyEndMember;
	public EmptySuccessionDefinitionElements getEmptySuccessionDefinitionAccess() {
		return pEmptySuccessionDefinition;
	}
	
	public ParserRule getEmptySuccessionDefinitionRule() {
		return getEmptySuccessionDefinitionAccess().getRule();
	}
	
	///* SUCCESSION MEMBERSHIPS */ SuccessionMember SysML::FeatureMembership:
	//	ownedRelatedElement+=SuccessionDefinition;
	public SuccessionMemberElements getSuccessionMemberAccess() {
		return pSuccessionMember;
	}
	
	public ParserRule getSuccessionMemberRule() {
		return getSuccessionMemberAccess().getRule();
	}
	
	///* ITEM FLOWS */ ItemFlowDefinition SysML::ItemFlow:
	//	ItemFlowDeclaration CategoryBody;
	public ItemFlowDefinitionElements getItemFlowDefinitionAccess() {
		return pItemFlowDefinition;
	}
	
	public ParserRule getItemFlowDefinitionRule() {
		return getItemFlowDefinitionAccess().getRule();
	}
	
	//AbstractItemFlowDefinition SysML::ItemFlow:
	//	ItemFlowDeclaration AbstractCategoryBody;
	public AbstractItemFlowDefinitionElements getAbstractItemFlowDefinitionAccess() {
		return pAbstractItemFlowDefinition;
	}
	
	public ParserRule getAbstractItemFlowDefinitionRule() {
		return getAbstractItemFlowDefinitionAccess().getRule();
	}
	
	//SuccessionItemFlowDefinition SysML::SuccessionItemFlow:
	//	ItemFlowDeclaration CategoryBody;
	public SuccessionItemFlowDefinitionElements getSuccessionItemFlowDefinitionAccess() {
		return pSuccessionItemFlowDefinition;
	}
	
	public ParserRule getSuccessionItemFlowDefinitionRule() {
		return getSuccessionItemFlowDefinitionAccess().getRule();
	}
	
	//AbstractSuccessionItemFlowDefinition SysML::SuccessionItemFlow:
	//	ItemFlowDeclaration AbstractCategoryBody;
	public AbstractSuccessionItemFlowDefinitionElements getAbstractSuccessionItemFlowDefinitionAccess() {
		return pAbstractSuccessionItemFlowDefinition;
	}
	
	public ParserRule getAbstractSuccessionItemFlowDefinitionRule() {
		return getAbstractSuccessionItemFlowDefinitionAccess().getRule();
	}
	
	//fragment ItemFlowDeclaration returns SysML::ItemFlow:
	//	(name=Name? ConnectorTypePart 'is')? (ownedRelationship+=ItemTypeMember 'from')?
	//	ownedRelationship+=ItemFlowEndMember 'to' ownedRelationship+=ItemFlowEndMember;
	public ItemFlowDeclarationElements getItemFlowDeclarationAccess() {
		return pItemFlowDeclaration;
	}
	
	public ParserRule getItemFlowDeclarationRule() {
		return getItemFlowDeclarationAccess().getRule();
	}
	
	//ItemTyping SysML::ItemFeature:
	//	ownedRelationship+=FeatureTyping ownedRelationship+=Multiplicity?;
	public ItemTypingElements getItemTypingAccess() {
		return pItemTyping;
	}
	
	public ParserRule getItemTypingRule() {
		return getItemTypingAccess().getRule();
	}
	
	//ItemFlowEnd SysML::ItemFlowEnd:
	//	ownedRelationship+=ItemFlowFeatureMember;
	public ItemFlowEndElements getItemFlowEndAccess() {
		return pItemFlowEnd;
	}
	
	public ParserRule getItemFlowEndRule() {
		return getItemFlowEndAccess().getRule();
	}
	
	//ItemFlowFeature SysML::ItemFlowFeature:
	//	ownedRelationship+=Redefinition;
	public ItemFlowFeatureElements getItemFlowFeatureAccess() {
		return pItemFlowFeature;
	}
	
	public ParserRule getItemFlowFeatureRule() {
		return getItemFlowFeatureAccess().getRule();
	}
	
	///* ITEM FLOW MEMBERSHIPS */ ItemTypeMember SysML::FeatureMembership:
	//	ownedRelatedElement+=ItemTyping;
	public ItemTypeMemberElements getItemTypeMemberAccess() {
		return pItemTypeMember;
	}
	
	public ParserRule getItemTypeMemberRule() {
		return getItemTypeMemberAccess().getRule();
	}
	
	//ItemFlowEndMember SysML::EndFeatureMembership:
	//	ownedRelatedElement+=ItemFlowEnd;
	public ItemFlowEndMemberElements getItemFlowEndMemberAccess() {
		return pItemFlowEndMember;
	}
	
	public ParserRule getItemFlowEndMemberRule() {
		return getItemFlowEndMemberAccess().getRule();
	}
	
	//ItemFlowFeatureMember SysML::FeatureMembership:
	//	ownedRelatedElement+=ItemFlowFeature;
	public ItemFlowFeatureMemberElements getItemFlowFeatureMemberAccess() {
		return pItemFlowFeatureMember;
	}
	
	public ParserRule getItemFlowFeatureMemberRule() {
		return getItemFlowFeatureMemberAccess().getRule();
	}
	
	///* PARAMETERS */ ParameterDefinition SysML::Parameter:
	//	TypePart // ( Subsets | Redefines )*
	//;
	public ParameterDefinitionElements getParameterDefinitionAccess() {
		return pParameterDefinition;
	}
	
	public ParserRule getParameterDefinitionRule() {
		return getParameterDefinitionAccess().getRule();
	}
	
	///* STEPS */ StepDefinition SysML::Step:
	//	('then' ownedRelationship+=EmptySuccessionMember)?
	//	isAbstract?='abstract'? 'step' (name=Name TypePart StepParameterList? SubsettingPart ValuePart?
	//	| 'redefines' ownedRelationship+=Redefinition TypePart StepParameterList? ValuePart?) BehaviorBody;
	public StepDefinitionElements getStepDefinitionAccess() {
		return pStepDefinition;
	}
	
	public ParserRule getStepDefinitionRule() {
		return getStepDefinitionAccess().getRule();
	}
	
	//fragment StepParameterList returns SysML::Category:
	//	'(' (ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember? (','
	//	ownedRelationship+=StepParameterMember ownedRelationship+=StepParameterFlowMember?)*)? ')';
	public StepParameterListElements getStepParameterListAccess() {
		return pStepParameterList;
	}
	
	public ParserRule getStepParameterListRule() {
		return getStepParameterListAccess().getRule();
	}
	
	//StepParameterDefinition SysML::Parameter:
	//	TypePart ValuePart?;
	public StepParameterDefinitionElements getStepParameterDefinitionAccess() {
		return pStepParameterDefinition;
	}
	
	public ParserRule getStepParameterDefinitionRule() {
		return getStepParameterDefinitionAccess().getRule();
	}
	
	//StepParameterFlowDefinition SysML::ItemFlow:
	//	('stream' | {SysML::SuccessionItemFlow} 'flow')? 'from' ownedRelationship+=ItemFlowEndMember;
	public StepParameterFlowDefinitionElements getStepParameterFlowDefinitionAccess() {
		return pStepParameterFlowDefinition;
	}
	
	public ParserRule getStepParameterFlowDefinitionRule() {
		return getStepParameterFlowDefinitionAccess().getRule();
	}
	
	///* STEP MEMBERSHIPS */ StepParameterMember SysML::ParameterMembership:
	//	direction=FeatureDirection? memberName=Name? ownedRelatedElement+=StepParameterDefinition;
	public StepParameterMemberElements getStepParameterMemberAccess() {
		return pStepParameterMember;
	}
	
	public ParserRule getStepParameterMemberRule() {
		return getStepParameterMemberAccess().getRule();
	}
	
	//StepParameterFlowMember SysML::FeatureMembership:
	//	ownedRelatedElement+=StepParameterFlowDefinition;
	public StepParameterFlowMemberElements getStepParameterFlowMemberAccess() {
		return pStepParameterFlowMember;
	}
	
	public ParserRule getStepParameterFlowMemberRule() {
		return getStepParameterFlowMemberAccess().getRule();
	}
	
	//EmptySuccessionMember SysML::FeatureMembership:
	//	ownedRelatedElement+=EmptySuccessionDefinition;
	public EmptySuccessionMemberElements getEmptySuccessionMemberAccess() {
		return pEmptySuccessionMember;
	}
	
	public ParserRule getEmptySuccessionMemberRule() {
		return getEmptySuccessionMemberAccess().getRule();
	}
	
	///* EXPRESSIONS */ // Block Expressions
	//ExpressionDefinition SysML::BlockExpression:
	//	isAbstract?='abstract'? 'expr' (name=Name TypePart (StepParameterList ReturnParameterPart)? SubsettingPart ValuePart?
	//	| 'redefines' ownedRelationship+=Redefinition TypePart (StepParameterList ReturnParameterPart)? ValuePart?)?
	//	FunctionBody;
	public ExpressionDefinitionElements getExpressionDefinitionAccess() {
		return pExpressionDefinition;
	}
	
	public ParserRule getExpressionDefinitionRule() {
		return getExpressionDefinitionAccess().getRule();
	}
	
	//Expression SysML::Expression:
	//	ConditionalExpression;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//// Conditional Test Expressions
	//ConditionalExpression SysML::Expression:
	//	NullCoalescingExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalTestOperator
	//	operand+=Expression ':' operand+=ConditionalExpression)?;
	public ConditionalExpressionElements getConditionalExpressionAccess() {
		return pConditionalExpression;
	}
	
	public ParserRule getConditionalExpressionRule() {
		return getConditionalExpressionAccess().getRule();
	}
	
	//ConditionalTestOperator:
	//	'?';
	public ConditionalTestOperatorElements getConditionalTestOperatorAccess() {
		return pConditionalTestOperator;
	}
	
	public ParserRule getConditionalTestOperatorRule() {
		return getConditionalTestOperatorAccess().getRule();
	}
	
	//// Null Coalescing Expressions
	//NullCoalescingExpression SysML::Expression:
	//	ConditionalOrExpression ({SysML::OperatorExpression.operand+=current} operator=NullCoalescingOperator
	//	operand+=ConditionalOrExpression)*;
	public NullCoalescingExpressionElements getNullCoalescingExpressionAccess() {
		return pNullCoalescingExpression;
	}
	
	public ParserRule getNullCoalescingExpressionRule() {
		return getNullCoalescingExpressionAccess().getRule();
	}
	
	//NullCoalescingOperator:
	//	'??';
	public NullCoalescingOperatorElements getNullCoalescingOperatorAccess() {
		return pNullCoalescingOperator;
	}
	
	public ParserRule getNullCoalescingOperatorRule() {
		return getNullCoalescingOperatorAccess().getRule();
	}
	
	//// Conditional Logical Expressions
	//ConditionalOrExpression SysML::Expression:
	//	ConditionalAndExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalOrOperator
	//	operand+=ConditionalAndExpression)*;
	public ConditionalOrExpressionElements getConditionalOrExpressionAccess() {
		return pConditionalOrExpression;
	}
	
	public ParserRule getConditionalOrExpressionRule() {
		return getConditionalOrExpressionAccess().getRule();
	}
	
	//ConditionalOrOperator:
	//	'||';
	public ConditionalOrOperatorElements getConditionalOrOperatorAccess() {
		return pConditionalOrOperator;
	}
	
	public ParserRule getConditionalOrOperatorRule() {
		return getConditionalOrOperatorAccess().getRule();
	}
	
	//ConditionalAndExpression SysML::Expression:
	//	OrExpression ({SysML::OperatorExpression.operand+=current} operator=ConditionalAndOperator operand+=OrExpression)*;
	public ConditionalAndExpressionElements getConditionalAndExpressionAccess() {
		return pConditionalAndExpression;
	}
	
	public ParserRule getConditionalAndExpressionRule() {
		return getConditionalAndExpressionAccess().getRule();
	}
	
	//ConditionalAndOperator:
	//	'&&';
	public ConditionalAndOperatorElements getConditionalAndOperatorAccess() {
		return pConditionalAndOperator;
	}
	
	public ParserRule getConditionalAndOperatorRule() {
		return getConditionalAndOperatorAccess().getRule();
	}
	
	//OrExpression SysML::Expression:
	//	XorExpression ({SysML::OperatorExpression.operand+=current} operator=OrOperator operand+=XorExpression)*;
	public OrExpressionElements getOrExpressionAccess() {
		return pOrExpression;
	}
	
	public ParserRule getOrExpressionRule() {
		return getOrExpressionAccess().getRule();
	}
	
	//// Logical Expressions
	//OrOperator:
	//	'|';
	public OrOperatorElements getOrOperatorAccess() {
		return pOrOperator;
	}
	
	public ParserRule getOrOperatorRule() {
		return getOrOperatorAccess().getRule();
	}
	
	//XorExpression SysML::Expression:
	//	AndExpression ({SysML::OperatorExpression.operand+=current} operator=XorOperator operand+=AndExpression)*;
	public XorExpressionElements getXorExpressionAccess() {
		return pXorExpression;
	}
	
	public ParserRule getXorExpressionRule() {
		return getXorExpressionAccess().getRule();
	}
	
	//XorOperator:
	//	'^';
	public XorOperatorElements getXorOperatorAccess() {
		return pXorOperator;
	}
	
	public ParserRule getXorOperatorRule() {
		return getXorOperatorAccess().getRule();
	}
	
	//AndExpression SysML::Expression:
	//	EqualityExpression ({SysML::OperatorExpression.operand+=current} operator=AndOperator operand+=EqualityExpression)*;
	public AndExpressionElements getAndExpressionAccess() {
		return pAndExpression;
	}
	
	public ParserRule getAndExpressionRule() {
		return getAndExpressionAccess().getRule();
	}
	
	//AndOperator:
	//	'&';
	public AndOperatorElements getAndOperatorAccess() {
		return pAndOperator;
	}
	
	public ParserRule getAndOperatorRule() {
		return getAndOperatorAccess().getRule();
	}
	
	//// Equality Expressions
	//EqualityExpression SysML::Expression:
	//	ClassificationExpression ({SysML::OperatorExpression.operand+=current} operator=EqualityOperator
	//	operand+=ClassificationExpression)*;
	public EqualityExpressionElements getEqualityExpressionAccess() {
		return pEqualityExpression;
	}
	
	public ParserRule getEqualityExpressionRule() {
		return getEqualityExpressionAccess().getRule();
	}
	
	//EqualityOperator:
	//	'==' | '!=';
	public EqualityOperatorElements getEqualityOperatorAccess() {
		return pEqualityOperator;
	}
	
	public ParserRule getEqualityOperatorRule() {
		return getEqualityOperatorAccess().getRule();
	}
	
	//// Classification Expressions
	//ClassificationExpression SysML::Expression:
	//	RelationalExpression ({SysML::OperatorExpression.operand+=current} operator=ClassificationOperator
	//	ownedRelationship+=TypeReferenceMember)?;
	public ClassificationExpressionElements getClassificationExpressionAccess() {
		return pClassificationExpression;
	}
	
	public ParserRule getClassificationExpressionRule() {
		return getClassificationExpressionAccess().getRule();
	}
	
	//ClassificationOperator:
	//	'instanceof' | 'hastype';
	public ClassificationOperatorElements getClassificationOperatorAccess() {
		return pClassificationOperator;
	}
	
	public ParserRule getClassificationOperatorRule() {
		return getClassificationOperatorAccess().getRule();
	}
	
	//// Relational Expressions
	//RelationalExpression SysML::Expression:
	//	AdditiveExpression ({SysML::OperatorExpression.operand+=current} operator=RelationalOperator
	//	operand+=AdditiveExpression)*;
	public RelationalExpressionElements getRelationalExpressionAccess() {
		return pRelationalExpression;
	}
	
	public ParserRule getRelationalExpressionRule() {
		return getRelationalExpressionAccess().getRule();
	}
	
	//RelationalOperator:
	//	'<' | '>' | '<=' | '>=';
	public RelationalOperatorElements getRelationalOperatorAccess() {
		return pRelationalOperator;
	}
	
	public ParserRule getRelationalOperatorRule() {
		return getRelationalOperatorAccess().getRule();
	}
	
	//// Arithmetic Expressions
	//AdditiveExpression SysML::Expression:
	//	MultiplicativeExpression ({SysML::OperatorExpression.operand+=current} operator=AdditiveOperator
	//	operand+=MultiplicativeExpression)*;
	public AdditiveExpressionElements getAdditiveExpressionAccess() {
		return pAdditiveExpression;
	}
	
	public ParserRule getAdditiveExpressionRule() {
		return getAdditiveExpressionAccess().getRule();
	}
	
	//AdditiveOperator:
	//	'+' | '-';
	public AdditiveOperatorElements getAdditiveOperatorAccess() {
		return pAdditiveOperator;
	}
	
	public ParserRule getAdditiveOperatorRule() {
		return getAdditiveOperatorAccess().getRule();
	}
	
	//MultiplicativeExpression SysML::Expression:
	//	UnitsExpression ({SysML::OperatorExpression.operand+=current} operator=MultiplicativeOperator
	//	operand+=UnitsExpression)*;
	public MultiplicativeExpressionElements getMultiplicativeExpressionAccess() {
		return pMultiplicativeExpression;
	}
	
	public ParserRule getMultiplicativeExpressionRule() {
		return getMultiplicativeExpressionAccess().getRule();
	}
	
	//MultiplicativeOperator:
	//	'*' | '/' | '**';
	public MultiplicativeOperatorElements getMultiplicativeOperatorAccess() {
		return pMultiplicativeOperator;
	}
	
	public ParserRule getMultiplicativeOperatorRule() {
		return getMultiplicativeOperatorAccess().getRule();
	}
	
	//// Units Expressions
	//UnitsExpression SysML::Expression:
	//	UnaryExpression ({SysML::OperatorExpression.operand+=current} operator='@' '[' operand+=Expression ']')?;
	public UnitsExpressionElements getUnitsExpressionAccess() {
		return pUnitsExpression;
	}
	
	public ParserRule getUnitsExpressionRule() {
		return getUnitsExpressionAccess().getRule();
	}
	
	//// Unary Expressions
	//UnaryExpression SysML::Expression:
	//	SequenceAccessExpression | {SysML::OperatorExpression} operator=UnaryOperator operand+=SequenceAccessExpression;
	public UnaryExpressionElements getUnaryExpressionAccess() {
		return pUnaryExpression;
	}
	
	public ParserRule getUnaryExpressionRule() {
		return getUnaryExpressionAccess().getRule();
	}
	
	//UnaryOperator:
	//	'+' | '-' | '!' | '~';
	public UnaryOperatorElements getUnaryOperatorAccess() {
		return pUnaryOperator;
	}
	
	public ParserRule getUnaryOperatorRule() {
		return getUnaryOperatorAccess().getRule();
	}
	
	//SequenceAccessExpression SysML::Expression:
	//	PrimaryExpression ({SysML::OperatorExpression.operand+=current} operator='[' operand+=Expression ']')?;
	public SequenceAccessExpressionElements getSequenceAccessExpressionAccess() {
		return pSequenceAccessExpression;
	}
	
	public ParserRule getSequenceAccessExpressionRule() {
		return getSequenceAccessExpressionAccess().getRule();
	}
	
	//// Primary Expressions
	//PrimaryExpression SysML::Expression:
	//	BaseExpression ({SysML::OperatorExpression.operand+=current} '->'
	//	operator=Name ownedRelationship+=BodyMember+)*;
	public PrimaryExpressionElements getPrimaryExpressionAccess() {
		return pPrimaryExpression;
	}
	
	public ParserRule getPrimaryExpressionRule() {
		return getPrimaryExpressionAccess().getRule();
	}
	
	//BodyExpression SysML::BlockExpression:
	//	ownedRelationship+=BodyParameterMember ownedRelationship+=BodyParameterMember* '(' ownedRelationship+=ExpressionMember
	//	')'
	//	| ownedRelationship+=ExpressionTyping;
	public BodyExpressionElements getBodyExpressionAccess() {
		return pBodyExpression;
	}
	
	public ParserRule getBodyExpressionRule() {
		return getBodyExpressionAccess().getRule();
	}
	
	//ExpressionTyping SysML::FeatureTyping:
	//	type=[SysML::Function|QualifiedName];
	public ExpressionTypingElements getExpressionTypingAccess() {
		return pExpressionTyping;
	}
	
	public ParserRule getExpressionTypingRule() {
		return getExpressionTypingAccess().getRule();
	}
	
	//// Base Expressions
	//BaseExpression SysML::Expression:
	//	NullExpression
	//	| LiteralExpression
	//	| FeatureReferenceExpression
	//	| QueryPathExpression
	//	| InvocationExpression
	//	| ClassExtentExpression
	//	| SequenceConstructionExpression
	//	| '(' Expression ')';
	public BaseExpressionElements getBaseExpressionAccess() {
		return pBaseExpression;
	}
	
	public ParserRule getBaseExpressionRule() {
		return getBaseExpressionAccess().getRule();
	}
	
	//FeatureReferenceExpression SysML::FeatureReferenceExpression:
	//	ownedRelationship+=FeatureReference;
	public FeatureReferenceExpressionElements getFeatureReferenceExpressionAccess() {
		return pFeatureReferenceExpression;
	}
	
	public ParserRule getFeatureReferenceExpressionRule() {
		return getFeatureReferenceExpressionAccess().getRule();
	}
	
	//InvocationExpression SysML::InvocationExpression:
	//	ownedRelationship+=FeatureTyping '(' Tuple? ')';
	public InvocationExpressionElements getInvocationExpressionAccess() {
		return pInvocationExpression;
	}
	
	public ParserRule getInvocationExpressionRule() {
		return getInvocationExpressionAccess().getRule();
	}
	
	//fragment Tuple returns SysML::Expression:
	//	PositionalTuple | NamedTuple;
	public TupleElements getTupleAccess() {
		return pTuple;
	}
	
	public ParserRule getTupleRule() {
		return getTupleAccess().getRule();
	}
	
	//fragment PositionalTuple returns SysML::Expression:
	//	ownedRelationship+=ExpressionMember (',' ownedRelationship+=ExpressionMember)*;
	public PositionalTupleElements getPositionalTupleAccess() {
		return pPositionalTuple;
	}
	
	public ParserRule getPositionalTupleRule() {
		return getPositionalTupleAccess().getRule();
	}
	
	//fragment NamedTuple returns SysML::Expression:
	//	ownedRelationship+=NamedExpressionMember (',' ownedRelationship+=NamedExpressionMember)*;
	public NamedTupleElements getNamedTupleAccess() {
		return pNamedTuple;
	}
	
	public ParserRule getNamedTupleRule() {
		return getNamedTupleAccess().getRule();
	}
	
	//ClassExtentExpression SysML::OperatorExpression:
	//	ownedRelationship+=TypeReferenceMember '.' operator='allInstances' '(' ')';
	public ClassExtentExpressionElements getClassExtentExpressionAccess() {
		return pClassExtentExpression;
	}
	
	public ParserRule getClassExtentExpressionRule() {
		return getClassExtentExpressionAccess().getRule();
	}
	
	//TypeReference SysML::Feature:
	//	ownedRelationship+=FeatureTyping;
	public TypeReferenceElements getTypeReferenceAccess() {
		return pTypeReference;
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}
	
	//SequenceConstructionExpression SysML::SequenceConstructionExpression:
	//	{SysML::SequenceConstructionExpression} '{' (element+=Expression (',' element+=Expression)*)? '}';
	public SequenceConstructionExpressionElements getSequenceConstructionExpressionAccess() {
		return pSequenceConstructionExpression;
	}
	
	public ParserRule getSequenceConstructionExpressionRule() {
		return getSequenceConstructionExpressionAccess().getRule();
	}
	
	//NullExpression SysML::NullExpression:
	//	{SysML::NullExpression} 'null';
	public NullExpressionElements getNullExpressionAccess() {
		return pNullExpression;
	}
	
	public ParserRule getNullExpressionRule() {
		return getNullExpressionAccess().getRule();
	}
	
	//// Literal Expressions
	//LiteralExpression SysML::LiteralExpression:
	//	BooleanLiteralExpression | StringLiteralExpression | RealLiteralExpression | UnlimitedNaturalLiteralExpression;
	public LiteralExpressionElements getLiteralExpressionAccess() {
		return pLiteralExpression;
	}
	
	public ParserRule getLiteralExpressionRule() {
		return getLiteralExpressionAccess().getRule();
	}
	
	//BooleanLiteralExpression SysML::LiteralBoolean:
	//	value=BOOLEAN_VALUE;
	public BooleanLiteralExpressionElements getBooleanLiteralExpressionAccess() {
		return pBooleanLiteralExpression;
	}
	
	public ParserRule getBooleanLiteralExpressionRule() {
		return getBooleanLiteralExpressionAccess().getRule();
	}
	
	//StringLiteralExpression SysML::LiteralString:
	//	value=STRING_VALUE;
	public StringLiteralExpressionElements getStringLiteralExpressionAccess() {
		return pStringLiteralExpression;
	}
	
	public ParserRule getStringLiteralExpressionRule() {
		return getStringLiteralExpressionAccess().getRule();
	}
	
	//RealLiteralExpression SysML::LiteralReal:
	//	value=RealValue;
	public RealLiteralExpressionElements getRealLiteralExpressionAccess() {
		return pRealLiteralExpression;
	}
	
	public ParserRule getRealLiteralExpressionRule() {
		return getRealLiteralExpressionAccess().getRule();
	}
	
	//RealValue Ecore::EDouble:
	//	NATURAL_VALUE? '.' (NATURAL_VALUE | EXP_VALUE) | EXP_VALUE;
	public RealValueElements getRealValueAccess() {
		return pRealValue;
	}
	
	public ParserRule getRealValueRule() {
		return getRealValueAccess().getRule();
	}
	
	//NaturalLiteralExpression SysML::LiteralInteger:
	//	value=NATURAL_VALUE;
	public NaturalLiteralExpressionElements getNaturalLiteralExpressionAccess() {
		return pNaturalLiteralExpression;
	}
	
	public ParserRule getNaturalLiteralExpressionRule() {
		return getNaturalLiteralExpressionAccess().getRule();
	}
	
	//UnlimitedNaturalLiteralExpression SysML::LiteralExpression:
	//	NaturalLiteralExpression | {SysML::LiteralUnbounded} '*';
	public UnlimitedNaturalLiteralExpressionElements getUnlimitedNaturalLiteralExpressionAccess() {
		return pUnlimitedNaturalLiteralExpression;
	}
	
	public ParserRule getUnlimitedNaturalLiteralExpressionRule() {
		return getUnlimitedNaturalLiteralExpressionAccess().getRule();
	}
	
	///* EXPRESSION MEMBERSHIPS */ FeatureReference SysML::FeatureMembership:
	//	memberFeature=[SysML::Feature|QualifiedName];
	public FeatureReferenceElements getFeatureReferenceAccess() {
		return pFeatureReference;
	}
	
	public ParserRule getFeatureReferenceRule() {
		return getFeatureReferenceAccess().getRule();
	}
	
	//TypeReferenceMember SysML::FeatureMembership:
	//	ownedRelatedElement+=TypeReference;
	public TypeReferenceMemberElements getTypeReferenceMemberAccess() {
		return pTypeReferenceMember;
	}
	
	public ParserRule getTypeReferenceMemberRule() {
		return getTypeReferenceMemberAccess().getRule();
	}
	
	//NamedExpressionMember SysML::FeatureMembership:
	//	memberName=Name '=>' ownedRelatedElement+=Expression;
	public NamedExpressionMemberElements getNamedExpressionMemberAccess() {
		return pNamedExpressionMember;
	}
	
	public ParserRule getNamedExpressionMemberRule() {
		return getNamedExpressionMemberAccess().getRule();
	}
	
	//BodyMember SysML::FeatureMembership:
	//	ownedRelatedElement+=BodyExpression;
	public BodyMemberElements getBodyMemberAccess() {
		return pBodyMember;
	}
	
	public ParserRule getBodyMemberRule() {
		return getBodyMemberAccess().getRule();
	}
	
	//BodyParameterMember SysML::ParameterMembership:
	//	memberName=Name ownedRelatedElement+=ParameterDefinition;
	public BodyParameterMemberElements getBodyParameterMemberAccess() {
		return pBodyParameterMember;
	}
	
	public ParserRule getBodyParameterMemberRule() {
		return getBodyParameterMemberAccess().getRule();
	}
	
	///* QUERY PATH EXPRESSIONS */ QueryPathExpression SysML::Expression:
	//	QueryHeadExpression ('[' {SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')? ('/'
	//	{SysML::QueryPathStepExpression.operand+=current} operand+=QueryNameExpression ('['
	//	{SysML::QueryQualifierExpression.operand+=current} ownedRelationship+=BodyMember ']')?)*;
	public QueryPathExpressionElements getQueryPathExpressionAccess() {
		return pQueryPathExpression;
	}
	
	public ParserRule getQueryPathExpressionRule() {
		return getQueryPathExpressionAccess().getRule();
	}
	
	//QueryNameExpression SysML::QueryPathExpression:
	//	ownedRelationship+=FeatureReference;
	public QueryNameExpressionElements getQueryNameExpressionAccess() {
		return pQueryNameExpression;
	}
	
	public ParserRule getQueryNameExpressionRule() {
		return getQueryNameExpressionAccess().getRule();
	}
	
	//QueryHeadExpression SysML::FeatureReferenceExpression:
	//	'./' FeatureReferenceExpression;
	public QueryHeadExpressionElements getQueryHeadExpressionAccess() {
		return pQueryHeadExpression;
	}
	
	public ParserRule getQueryHeadExpressionRule() {
		return getQueryHeadExpressionAccess().getRule();
	}
	
	///* NAMES */ Name:
	//	ID | UNRESTRICTED_NAME;
	public NameElements getNameAccess() {
		return pName;
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//QualifiedName:
	//	Name | ColonQualifiedName | DotQualifiedName;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//ColonQualifiedName:
	//	Name ('::' Name)+;
	public ColonQualifiedNameElements getColonQualifiedNameAccess() {
		return pColonQualifiedName;
	}
	
	public ParserRule getColonQualifiedNameRule() {
		return getColonQualifiedNameAccess().getRule();
	}
	
	//DotQualifiedName:
	//	Name ('.' Name)+;
	public DotQualifiedNameElements getDotQualifiedNameAccess() {
		return pDotQualifiedName;
	}
	
	public ParserRule getDotQualifiedNameRule() {
		return getDotQualifiedNameAccess().getRule();
	}
	
	//terminal BOOLEAN_VALUE returns Ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLEAN_VALUERule() {
		return tBOOLEAN_VALUE;
	}
	
	//terminal NATURAL_VALUE returns Ecore::EInt:
	//	('0' | '1'..'9' ('_'? '0'..'9')*) | ('0b' | '0B') '0'..'1' ('_'? '0'..'1')* | ('0x' | '0X') ('0'..'9' | 'a'..'f' |
	//	'A'..'F') ('_'? ('0'..'9' | 'a'..'f' | 'A'..'F'))* | '0' '_'? '0'..'7' ('_'? '0'..'7')*;
	public TerminalRule getNATURAL_VALUERule() {
		return tNATURAL_VALUE;
	}
	
	//terminal EXP_VALUE:
	//	NATURAL_VALUE ('e' | 'E') ('+' | '-')? NATURAL_VALUE;
	public TerminalRule getEXP_VALUERule() {
		return tEXP_VALUE;
	}
	
	//terminal ID:
	//	('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal UNRESTRICTED_NAME:
	//	'\'' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '\''))* '\'';
	public TerminalRule getUNRESTRICTED_NAMERule() {
		return tUNRESTRICTED_NAME;
	}
	
	//terminal STRING_VALUE:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '"'))* '"';
	public TerminalRule getSTRING_VALUERule() {
		return tSTRING_VALUE;
	}
	
	//terminal DOCUMENTATION_COMMENT:
	//	'/**'->'*/';
	public TerminalRule getDOCUMENTATION_COMMENTRule() {
		return tDOCUMENTATION_COMMENT;
	}
	
	//terminal STATEMENT_ANNOTATION:
	//	'//@'->'\n'
	//	//  '//@' WS? ID (WS? '(' WS? (ID | UNRESTRICTED_NAME) (WS? ',' WS? (ID | UNRESTRICTED_NAME))* WS? ')')? 
	//	//  (WS? '@' WS? ID (WS? '(' WS? (ID | UNRESTRICTED_NAME) (WS? ',' WS? (ID | UNRESTRICTED_NAME))* WS? ')')?)* (' '|'\t')* ('\r'? '\n')
	//;
	public TerminalRule getSTATEMENT_ANNOTATIONRule() {
		return tSTATEMENT_ANNOTATION;
	}
	
	//terminal INLINE_STATEMENT:
	//	'/*@inline(' (ID | UNRESTRICTED_NAME) ')'->'*/';
	public TerminalRule getINLINE_STATEMENTRule() {
		return tINLINE_STATEMENT;
	}
	
	//terminal ML_COMMENT:
	//	'/*' !('*' | '@')->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' (!('@' | '\n' | '\r') !('\n' | '\r')*)? ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
}
