<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="kerml" nsURI="https://www.omg.org/spec/KerML/20240201" nsPrefix="kerml">
  <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
    <details key="settingDelegates" value="http://www.omg.org/spec/SysML"/>
    <details key="invocationDelegates" value="http://www.omg.org/spec/SysML"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Element" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>Element&lt;/code> is a constituent of a model that is uniquely identified relative to all other &lt;code>Elements&lt;/code>. It can have &lt;code>Relationships&lt;/code> with other &lt;code>Elements&lt;/code>. Some of these &lt;code>Relationships&lt;/code> might imply ownership of other &lt;code>Elements&lt;/code>, which means that if an &lt;code>Element&lt;/code> is deleted from a model, then so are all the &lt;code>Elements&lt;/code> that it owns.&lt;/p>&#xA;&#xA;ownedElement = ownedRelationship.ownedRelatedElement&#xA;owner = owningRelationship.owningRelatedElement&#xA;qualifiedName =&#xA;    if owningNamespace = null then null&#xA;    else if owningNamespace.owner = null then escapedName()&#xA;    else if owningNamespace.qualifiedName = null or &#xA;            escapedName() = null then null&#xA;    else owningNamespace.qualifiedName + '::' + escapedName()&#xA;    endif endif endif&#xA;documentation = ownedElement->selectByKind(Documentation)&#xA;ownedAnnotation = ownedRelationship->&#xA;    selectByKind(Annotation)->&#xA;    select(a | a.annotatedElement = self)&#xA;name = effectiveName()&#xA;ownedRelationship->exists(isImplied) implies isImpliedIncluded&#xA;isLibraryElement = libraryNamespace() &lt;> null&#xA;&#xA;shortName = effectiveShortName()&#xA;owningNamespace =&#xA;    if owningMembership = null then null&#xA;    else owningMembership.membershipOwningNamespace&#xA;    endif&#xA;textualRepresentation = ownedElement->selectByKind(TextualRepresentation)"/>
    </eAnnotations>
    <eOperations name="escapedName" ordered="false" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return &lt;code>name&lt;/code>, if that is not null, otherwise the &lt;code>shortName&lt;/code>, if that is not null, otherwise null. If the returned value is non-null, it is returned as-is if it has the form of a basic name, or, otherwise, represented as a restricted name according to the lexical structure of the KerML textual notation (i.e., surrounded by single quote characters and with special characters escaped).&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eOperations name="effectiveShortName" ordered="false" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return an effective &lt;code>shortName&lt;/code> for this &lt;code>Element&lt;/code>. By default this is the same as its &lt;code>declaredShortName&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="declaredShortName"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eOperations name="effectiveName" ordered="false" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return an effective &lt;code>name&lt;/code> for this &lt;code>Element&lt;/code>. By default this is the same as its &lt;code>declaredName&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="declaredName"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eOperations name="libraryNamespace" ordered="false" eType="#//Namespace">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>By default, return the library Namespace of the &lt;code>owningRelationship&lt;/code> of this Element, if it has one.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="if owningRelationship &lt;> null then owningRelationship.libraryNamespace()&#xA;else null endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningMembership" ordered="false"
        eType="#//OwningMembership" volatile="true" transient="true" derived="true"
        eOpposite="#//OwningMembership/ownedMemberElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>owningRelationship&lt;/code> of this &lt;code>Element&lt;/code>, if that &lt;code>Relationship&lt;/code> is a &lt;code>Membership&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/owningRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRelationship" upperBound="-1"
        eType="#//Relationship" containment="true" eOpposite="#//Relationship/owningRelatedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Relationships for which this Element is the &lt;tt>owningRelatedElement&lt;/tt>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningRelationship" ordered="false"
        eType="#//Relationship" eOpposite="#//Relationship/ownedRelatedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Relationship for which this Element is an &lt;tt>ownedRelatedElement&lt;/tt>, if any.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningNamespace" ordered="false"
        eType="#//Namespace" volatile="true" transient="true" derived="true" eOpposite="#//Namespace/ownedMember">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Namespace&lt;/code> that owns this &lt;code>Element&lt;/code>, which is the &lt;code>membershipOwningNamespace&lt;/code> of the &lt;code>owningMembership&lt;/code> of this &lt;code>Element&lt;/code>, if any.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="elementId" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String" iD="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The globally unique identifier for this Element. This is intended to be set by tooling, and it must not change during the lifetime of the Element.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owner" ordered="false"
        eType="#//Element" volatile="true" transient="true" derived="true" eOpposite="#//Element/ownedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owner of this Element, derived as the &lt;code>owningRelatedElement&lt;/code> of the &lt;code>owningRelationship&lt;/code> of this Element, if any.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedElement" upperBound="-1"
        eType="#//Element" volatile="true" transient="true" derived="true" eOpposite="#//Element/owner">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Elements owned by this Element, derived as the &lt;tt>ownedRelatedElements&lt;/tt> of the &lt;tt>ownedRelationships&lt;/tt> of this Element.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="documentation" upperBound="-1"
        eType="#//Documentation" volatile="true" transient="true" derived="true" eOpposite="#//Documentation/documentedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Documentation owned by this Element.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAnnotation" upperBound="-1"
        eType="#//Annotation" volatile="true" transient="true" derived="true" eOpposite="#//Annotation/owningAnnotatedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Element&lt;/code> that are &lt;code>Annotations&lt;/code>, for which this &lt;code>Element&lt;/code> is the &lt;code>annotatedElement&lt;/code>.&lt;/code>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="textualRepresentation"
        upperBound="-1" eType="#//TextualRepresentation" volatile="true" transient="true"
        derived="true" eOpposite="#//TextualRepresentation/representedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>TextualRepresentations&lt;/code> that annotate this &lt;code>Element&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="aliasIds" upperBound="-1"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Various alternative identifiers for this Element. Generally, these will be set by tools.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="declaredShortName" ordered="false"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An optional alternative name for the &lt;code>Element&lt;/code> that is intended to be shorter or in some way more succinct than its primary &lt;code>name&lt;/code>. It may act as a modeler-specified identifier for the &lt;code>Element&lt;/code>, though it is then the responsibility of the modeler to maintain the uniqueness of this identifier within a model or relative to some other context.&lt;/p> &#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="declaredName" ordered="false"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The declared name of this &lt;code>Element&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="shortName" ordered="false"
        eType="ecore:EDataType types.ecore#//String" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The short name to be used for this &lt;code>Element&lt;/code> during name resolution within its &lt;code>owningNamespace&lt;/code>. This is derived using the &lt;code>effectiveShortName()&lt;/code> operation. By default, it is the same as the &lt;code>declaredShortName&lt;/code>, but this is overridden for certain kinds of &lt;code>Elements&lt;/code> to compute a &lt;code>shortName&lt;/code> even when the &lt;code>declaredName&lt;/code> is null.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" ordered="false" eType="ecore:EDataType types.ecore#//String"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The name to be used for this &lt;code>Element&lt;/code> during name resolution within its &lt;code>owningNamespace&lt;/code>. This is derived using the &lt;code>effectiveName()&lt;/code> operation. By default, it is the same as the &lt;code>declaredName&lt;/code>, but this is overridden for certain kinds of &lt;code>Elements&lt;/code> to compute a &lt;code>name&lt;/code> even when the &lt;code>declaredName&lt;/code> is null.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" ordered="false"
        eType="ecore:EDataType types.ecore#//String" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The full ownership-qualified name of this &lt;code>Element&lt;/code>, represented in a form that is valid according to the KerML textual concrete syntax for qualified names (including use of unrestricted name notation and escaped characters, as necessary). The &lt;code>qualifiedName&lt;/code> is null if this &lt;code>Element&lt;/code> has no &lt;code>owningNamespace&lt;/code> or if there is not a complete ownership chain of named &lt;code>Namespaces&lt;/code> from a root &lt;code>Namespace&lt;/code> to this &lt;code>Element&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isImpliedIncluded" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether all necessary implied Relationships have been included in the &lt;code>ownedRelationships&lt;/code> of this Element. This property may be true, even if there are not actually any &lt;code>ownedRelationships&lt;/code> with &lt;code>isImplied = true&lt;/code>, meaning that no such Relationships are actually implied for this Element. However, if it is false, then &lt;code>ownedRelationships&lt;/code> may &lt;em>not&lt;/em> contain any implied Relationships. That is, either &lt;em>all&lt;/em> required implied Relationships must be included, or none of them.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isLibraryElement" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this Element is contained in the ownership tree of a library model.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OwningMembership" eSuperTypes="#//Membership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>OwningMembership&lt;/code> is a &lt;code>Membership&lt;/code> that owns its &lt;code>memberElement&lt;/code> as a &lt;code>ownedRelatedElement&lt;/code>. The &lt;code>ownedMemberElement&lt;/code> becomes an &lt;code>ownedMember&lt;/code> of the &lt;code>membershipOwningNamespace&lt;/code>.&lt;/p>&#xA;&#xA;ownedMemberName = ownedMemberElement.name&#xA;ownedMemberShortName = ownedMemberElement.shortName"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ownedMemberElementId" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>elementId&lt;/code> of the &lt;code>ownedMemberElement&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Membership/memberElementId"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ownedMemberShortName" ordered="false"
        eType="ecore:EDataType types.ecore#//String" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>shortName&lt;/code> of the &lt;code>ownedMemberElement&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Membership/memberShortName"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ownedMemberName" ordered="false"
        eType="ecore:EDataType types.ecore#//String" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>name&lt;/code> of the &lt;code>ownedMemberElement&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Membership/memberName"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberElement" ordered="false"
        lowerBound="1" eType="#//Element" volatile="true" transient="true" derived="true"
        eOpposite="#//Element/owningMembership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Element&lt;/code> that becomes an &lt;code>ownedMember&lt;/code> of the &lt;code>membershipOwningNamespace&lt;/code> due to this &lt;code>OwningMembership&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Membership/memberElement"/>
      <eAnnotations source="subsets" references="#//Relationship/ownedRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Membership" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Membership&lt;/code> is a &lt;code>Relationship&lt;/code> between a &lt;code>Namespace&lt;/code> and an &lt;code>Element&lt;/code> that indicates the &lt;code>Element&lt;/code> is a &lt;code>member&lt;/code> of (i.e., is contained in) the Namespace. Any &lt;code>memberNames&lt;/code> specify how the &lt;code>memberElement&lt;/code> is identified in the &lt;code>Namespace&lt;/code> and the &lt;code>visibility&lt;/code> specifies whether or not the &lt;code>memberElement&lt;/code> is publicly visible from outside the &lt;code>Namespace&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>If a &lt;code>Membership&lt;/code> is an &lt;code>OwningMembership&lt;/code>, then it owns its &lt;code>memberElement&lt;/code>, which becomes an &lt;code>ownedMember&lt;/code> of the &lt;code>membershipOwningNamespace&lt;/code>. Otherwise, the &lt;code>memberNames&lt;/code> of a &lt;code>Membership&lt;/code> are effectively aliases within the &lt;code>membershipOwningNamespace&lt;/code> for an &lt;code>Element&lt;/code> with a separate &lt;code>OwningMembership&lt;/code> in the same or a different &lt;code>Namespace&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>&amp;nbsp;&lt;/p>&#xA;&#xA;memberElementId = memberElement.elementId"/>
    </eAnnotations>
    <eOperations name="isDistinguishableFrom" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this &lt;code>Membership&lt;/code> is distinguishable from a given &lt;code>other&lt;/code> &lt;code>Membership&lt;/code>. By default, this is true if this &lt;code>Membership&lt;/code> has no &lt;code>memberShortName&lt;/code> or &lt;code>memberName&lt;/code>; or each of the &lt;code>memberShortName&lt;/code> and &lt;code>memberName&lt;/code> are different than both of those of the &lt;code>other&lt;/code> &lt;code>Membership&lt;/code>; or neither of the metaclasses of the &lt;code>memberElement&lt;/code> of this &lt;code>Membership&lt;/code> and the &lt;code>memberElement&lt;/code> of the &lt;code>other&lt;/code> &lt;code>Membership&lt;/code> conform to the other. But this may be overridden in specializations of &lt;code>Membership&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="not (memberElement.oclKindOf(other.memberElement.oclType()) or&#xA;     other.memberElement.oclKindOf(memberElement.oclType())) or&#xA;(shortMemberName = null or&#xA;    (shortMemberName &lt;> other.shortMemberName and&#xA;     shortMemberName &lt;> other.memberName)) and&#xA;(memberName = null or&#xA;    (memberName &lt;> other.shortMemberName and&#xA;     memberName &lt;> other.memberName)))&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="other" ordered="false" lowerBound="1" eType="#//Membership"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="membershipOwningNamespace"
        ordered="false" lowerBound="1" eType="#//Namespace" volatile="true" transient="true"
        derived="true" eOpposite="#//Namespace/ownedMembership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Namespace&lt;/code> of which the &lt;code>memberElement&lt;/code> becomes a &lt;code>member&lt;/code> due to this &lt;code>Membership&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
      <eAnnotations source="subsets" references="#//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="memberElementId" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>elementId&lt;/code> of the &lt;code>memberElement&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="memberShortName" ordered="false"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The short name of the &lt;code>memberElement&lt;/code> relative to the &lt;code>membershipOwningNamespace&lt;/code>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="memberElement" ordered="false"
        lowerBound="1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="membership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Element&lt;/code> that becomes a &lt;code>member&lt;/code> of the &lt;code>membershipOwningNamespace&lt;/code> due to this &lt;code>Membership&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="memberName" ordered="false"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The name of the &lt;code>memberElement&lt;/code> relative to the &lt;code>membershipOwningNamespace&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false"
        lowerBound="1" eType="#//VisibilityKind" defaultValueLiteral="public">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether or not the &lt;code>Membership&lt;/code> of the &lt;code>memberElement&lt;/code> in the &lt;code>membershipOwningNamespace&lt;/code> is publicly visible outside that &lt;code>Namespace&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Relationship" abstract="true" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Relationship&lt;/code> is an &lt;code>Element&lt;/code> that relates other &lt;code>Element&lt;/code>. Some of its &lt;code>relatedElements&lt;/code> may be owned, in which case those &lt;code>ownedRelatedElements&lt;/code> will be deleted from a model if their &lt;code>owningRelationship&lt;/code> is. A &lt;code>Relationship&lt;/code> may also be owned by another &lt;code>Element&lt;/code>, in which case the &lt;code>ownedRelatedElements&lt;/code> of the &lt;code>Relationship&lt;/code> are also considered to be transitively owned by the &lt;code>owningRelatedElement&lt;/code> of the &lt;code>Relationship&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>The &lt;code>relatedElements&lt;/code> of a &lt;code>Relationship&lt;/code> are divided into &lt;code>source&lt;/code> and &lt;code>target&lt;/code> &lt;code>Elements&lt;/code>. The &lt;code>Relationship&lt;/code> is considered to be directed from the &lt;code>source&lt;/code> to the &lt;code>target&lt;/code> &lt;code>Elements&lt;/code>. An undirected &lt;code>Relationship&lt;/code> may have either all &lt;code>source&lt;/code> or all &lt;code>target&lt;/code> &lt;code>Elements&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>A &amp;quot;relationship &lt;code>Element&lt;/code>&amp;quot; in the abstract syntax is generically any &lt;code>Element&lt;/code> that is an instance of either &lt;code>Relationship&lt;/code> or a direct or indirect specialization of &lt;code>Relationship&lt;/code>. Any other kind of &lt;code>Element&lt;/code> is a &amp;quot;non-relationship &lt;code>Element&lt;/code>&amp;quot;. It is a convention of that non-relationship &lt;code>Elements&lt;/code> are &lt;em>only&lt;/em> related via reified relationship &lt;code>Elements&lt;/code>. Any meta-associations directly between non-relationship &lt;code>Elements&lt;/code> must be derived from underlying reified &lt;code>Relationship&lt;/code>.&lt;/p>&#xA;&#xA;relatedElement = source->union(target)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedElement" unique="false"
        upperBound="-1" eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="relationship"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Elements that are related by this Relationship, derived as the union of the &lt;code>source&lt;/code> and &lt;code>target&lt;/code> Elements of the Relationship.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" upperBound="-1"
        eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="targetRelationship"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>relatedElements&lt;/code> to which this Relationship is considered to be directed.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="source" upperBound="-1"
        eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="sourceRelationship"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>relatedElements&lt;/c ode> from which this Relationship is considered to be directed.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningRelatedElement" ordered="false"
        eType="#//Element" eOpposite="#//Element/ownedRelationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>relatedElement&lt;/tt> of this Relationship that owns the Relationship, if any.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRelatedElement" upperBound="-1"
        eType="#//Element" containment="true" eOpposite="#//Element/owningRelationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;tt>relatedElements&lt;/tt> of this Relationship that are owned by the Relationship.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isImplied" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this Relationship was generated by tooling to meet semantic rules, rather than being directly created by a modeler.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Namespace" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Namespace&lt;/code> is an &lt;code>Element&lt;/code> that contains other &lt;code>Elements&lt;/code>, known as its &lt;code>members&lt;/code>, via &lt;code>Membership&lt;/code> &lt;code>Relationships&lt;/code> with those &lt;code>Elements&lt;/code>. The &lt;code>members&lt;/code> of a &lt;code>Namespace&lt;/code> may be owned by the &lt;code>Namespace&lt;/code>, aliased in the &lt;code>Namespace&lt;/code>, or imported into the &lt;code>Namespace&lt;/code> via &lt;code>Import&lt;/code> &lt;code>Relationships&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>A &lt;code>Namespace&lt;/code> can provide names for its &lt;code>members&lt;/code> via the &lt;code>memberNames&lt;/code> and &lt;code>memberShortNames&lt;/code> specified by the &lt;code>Memberships&lt;/code> in the &lt;code>Namespace&lt;/code>. If a &lt;code>Membership&lt;/code> specifies a &lt;code>memberName&lt;/code> and/or &lt;code>memberShortName&lt;/code>, then those are names of the corresponding &lt;code>memberElement&lt;/code> relative to the &lt;code>Namespace&lt;/code>. For an &lt;code>OwningMembership&lt;/code>, the &lt;code>owningMemberName&lt;/code> and &lt;code>owningMemberShortName&lt;/code> are given by the &lt;code>Element&lt;/code> &lt;code>name&lt;/code> and &lt;code>shortName&lt;/code>. Note that the same &lt;code>Element&lt;/code> may be the &lt;code>memberElement&lt;/code> of multiple &lt;code>Memberships&lt;/code> in a &lt;code>Namespace&lt;/code> (though it may be owned at most once), each of which may define a separate alias for the &lt;code>Element&lt;/code> relative to the &lt;code>Namespace&lt;/code>.&lt;/p>&#xA;&#xA;membership->forAll(m1 | &#xA;    membership->forAll(m2 | &#xA;        m1 &lt;> m2 implies m1.isDistinguishableFrom(m2)))&#xA;member = membership.memberElement&#xA;ownedMember = ownedMembership->selectByKind(OwningMembership).ownedMemberElement&#xA;importedMembership = importedMemberships(Set{})&#xA;ownedImport = ownedRelationship->selectByKind(Import)&#xA;ownedMembership = ownedRelationship->selectByKind(Membership)"/>
    </eAnnotations>
    <eOperations name="namesOf" ordered="false" upperBound="-1" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return the names of the given &lt;code>element&lt;/code> as it is known in this &lt;code>Namespace&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let elementMemberships : Sequence(Membership) = &#xA;    memberships->select(memberElement = element) in&#xA;memberships.memberShortName->&#xA;    union(memberships.memberName)->&#xA;    asSet()"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="element" ordered="false" lowerBound="1" eType="#//Element"/>
    </eOperations>
    <eOperations name="visibilityOf" ordered="false" lowerBound="1" eType="#//VisibilityKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Returns this visibility of &lt;code>mem&lt;/code> relative to this &lt;code>Namespace&lt;/code>. If &lt;code>mem&lt;/code> is an &lt;code>importedMembership&lt;/code>, this is the &lt;code>visibility&lt;/code> of its Import. Otherwise it is the &lt;code>visibility&lt;/code> of the &lt;code>Membership&lt;/code> itself.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="if importedMembership->includes(mem) then&#xA;    ownedImport->&#xA;        select(importedMemberships(Set{})->includes(mem)).&#xA;        first().visibility&#xA;else if memberships->includes(mem) then&#xA;    mem.visibility&#xA;else&#xA;    VisibilityKind::private&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="mem" ordered="false" lowerBound="1" eType="#//Membership"/>
    </eOperations>
    <eOperations name="visibleMemberships" upperBound="-1" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>If &lt;code>includeAll = true&lt;/code>, then return all the &lt;code>Memberships&lt;/code> of this &lt;code>Namespace&lt;/code>. Otherwise, return only the publicly visible &lt;code>Memberships&lt;/code> of this &lt;code>Namespace&lt;/code> (which includes those &lt;code>ownedMemberships&lt;/code> that have a &lt;code>visibility&lt;/code> of &lt;code>public&lt;/code> and those &lt;code>importedMemberships&lt;/code> imported with a &lt;code>visibility&lt;/code> of &lt;code>public&lt;/code>). If &lt;code>isRecursive = true&lt;/code>, also recursively include all visible &lt;code>Memberships&lt;/code> of any visible owned &lt;code>Namespaces&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let visibleMemberships : Sequence(Membership) =&#xA;    if includeAll then memberships&#xA;    else ownedMembership->&#xA;        select(visibility = VisibilityKind::public)->&#xA;        union(ownedImport->&#xA;            select(visibility = VisibilityKind::public).&#xA;            importedMemberships(excluded->including(self)))&#xA;    endif in&#xA;if not isRecursive then visibleMemberships&#xA;else visibleMemberships->union(ownedMember->&#xA;        select(owningMembership.visibility = VisibilityKind::public)->&#xA;        selectAsKind(Namespace).&#xA;        visibleMemberships(excluded->including(self), true, includeAll))&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="excluded" ordered="false" upperBound="-1" eType="#//Namespace"/>
      <eParameters name="isRecursive" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean"/>
      <eParameters name="includeAll" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean"/>
    </eOperations>
    <eOperations name="importedMemberships" upperBound="-1" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Derive the imported &lt;code>Memberships&lt;/code> of this &lt;code>Namespace&lt;/code> as the &lt;code>importedMembership&lt;/code> of all &lt;code>ownedImports&lt;/code>, excluding those Imports whose &lt;code>importOwningNamespace&lt;/code> is in the &lt;code>excluded&lt;/code> set, and excluding &lt;code>Memberships&lt;/code> that have distinguisibility collisions with each other or with any &lt;code>ownedMembership&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="ownedImport.importedMemberships(excluded->including(self))"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="excluded" ordered="false" upperBound="-1" eType="#//Namespace"/>
    </eOperations>
    <eOperations name="resolve" ordered="false" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Resolve the given qualified name to the named &lt;code>Membership&lt;/code> (if any), starting with this &lt;code>Namespace&lt;/code> as the local scope. The qualified name string must conform to the concrete syntax of the KerML textual notation. According to the KerML name resolution rules every qualified name will resolve to either a single &lt;code>Membership&lt;/code>, or to none.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let qualification : String = qualificationOf(qualifiedName) in&#xA;let name : String = unqualifiedNameOf(qualifiedName) in&#xA;if qualification = null then resolveLocal(name)&#xA;else &#xA;    let namespaceMembership : Membership = resolve(qualification) in&#xA;    if namespaceMembership = null or &#xA;       not namespaceMembership.memberElement.oclIsKindOf(Namespace) &#xA;    then null&#xA;    else &#xA;        namespaceMembership.memberElement.oclAsType(Namespace).&#xA;        resolveVisible(name) &#xA;    endif&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="qualifiedName" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    </eOperations>
    <eOperations name="resolveGlobal" ordered="false" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Resolve the given qualified name to the named &lt;code>Membership&lt;/code> (if any) in the effective global &lt;code>Namespace&lt;/code> that is the outermost naming scope. The qualified name string must conform to the concrete syntax of the KerML textual notation.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="No OCL"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="qualifiedName" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    </eOperations>
    <eOperations name="resolveLocal" ordered="false" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Resolve a simple &lt;code>name&lt;/code> starting with this &lt;code>Namespace&lt;/code> as the local scope, and continuing with containing outer scopes as necessary. However, if this &lt;code>Namespace&lt;/code> is a root &lt;code>Namespace&lt;/code>, then the resolution is done directly in global scope.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="if owningNamespace = null then resolveGlobal(name)&#xA;else&#xA;    let memberships : Membership = membership->&#xA;        select(memberShortName = name or memberName = name) in&#xA;    if memberships->notEmpty() then memberships->first()&#xA;    else owningNamspace.resolveLocal(name)&#xA;    endif&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="name" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    </eOperations>
    <eOperations name="resolveVisible" ordered="false" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Resolve a simple name from the visible &lt;code>Memberships&lt;/code> of this &lt;code>Namespace&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let memberships : Sequence(Membership) =&#xA;    visibleMemberships(Set{}, false, false)->&#xA;    select(memberShortName = name or memberName = name) in&#xA;if memberships->isEmpty() then null&#xA;else memberships->first()&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="name" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    </eOperations>
    <eOperations name="qualificationOf" ordered="false" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return a string with valid KerML syntax representing the qualification part of a given &lt;code>qualifiedName&lt;/code>, that is, a qualified name with all the segment names of the given name except the last. If the given &lt;code>qualifiedName&lt;/code> has only one segment, then return null.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="No OCL"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="qualifiedName" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    </eOperations>
    <eOperations name="unqualifiedNameOf" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return the simple name that is the last segment name of the given &lt;code>qualifiedName&lt;/code>. If this segment name has the form of a KerML unrestricted name, then &quot;unescape&quot; it by removing the surrounding single quotes and replacing all escape sequences with the specified character.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="No OCL"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="qualifiedName" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="membership" upperBound="-1"
        eType="#//Membership" changeable="false" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="membershipNamespace"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All &lt;code>Memberships&lt;/code> in this &lt;code>Namespace&lt;/code>, including (at least) the union of &lt;code>ownedMemberships&lt;/code> and &lt;code>importedMemberships&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="union"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedImport" upperBound="-1"
        eType="#//Import" volatile="true" transient="true" derived="true" eOpposite="#//Import/importOwningNamespace">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Namespace&lt;/code> that are &lt;code>Imports&lt;/code>, for which the &lt;code>Namespace&lt;/code> is the &lt;code>importOwningNamespace&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="member" upperBound="-1"
        eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="namespace"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The set of all member &lt;code>Elements&lt;/code> of this &lt;code>Namespace&lt;/code>, which are the &lt;code>memberElements&lt;/code> of all &lt;code>memberships&lt;/code> of the &lt;code>Namespace&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMember" upperBound="-1"
        eType="#//Element" volatile="true" transient="true" derived="true" eOpposite="#//Element/owningNamespace">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owned &lt;code>members&lt;/code> of this &lt;code>Namespace&lt;/code>, which are the &lt;cpde>&lt;code>ownedMemberElements&lt;/code> of the &lt;code>ownedMemberships&lt;/code> of the &lt;code>Namespace&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/member"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMembership" upperBound="-1"
        eType="#//Membership" volatile="true" transient="true" derived="true" eOpposite="#//Membership/membershipOwningNamespace">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Namespace&lt;/code> that are &lt;code>Memberships&lt;/code>, for which the &lt;code>Namespace&lt;/code> is the &lt;code>membershipOwningNamespace&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/membership #//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importedMembership" upperBound="-1"
        eType="#//Membership" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="importingNamespace"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Memberships&lt;/code> in this &lt;code>Namespace&lt;/code> that result from the &lt;code>ownedImports&lt;/code> of this &lt;code>Namespace&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/membership"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Import" abstract="true" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>Import&lt;/code> is an &lt;code>Relationship&lt;/code> between its &lt;code>importOwningNamespace&lt;/code> and either a &lt;code>Membership&lt;/code> (for a &lt;code>MembershipImport&lt;/code>) or another &lt;code>Namespace&lt;/code> (for a &lt;code>NamespaceImport&lt;/code>), which determines a set of &lt;code>Memberships&lt;/code> that become &lt;code>importedMemberships&lt;/code> of the &lt;code>importOwningNamespace&lt;/code>. If &lt;code>isImportAll = false&lt;/code> (the default), then only public &lt;code>Memberships&lt;/code> are considered &amp;quot;visible&amp;quot;. If &lt;code>isImportAll = true&lt;/code>, then all &lt;code>Memberships&lt;/code> are considered &amp;quot;visible&amp;quot;, regardless of their declared &lt;code>visibility&lt;/code>. If &lt;code>isRecursive = true&lt;/code>, then visible &lt;code>Memberships&lt;/code> are also recursively imported from owned sub-&lt;code>Namespaces&lt;/code>.&lt;/p>&#xA;&#xA;&#xA;importOwningNamespace.owningNamespace = null implies &#xA;    visibility = VisibilityKind::private"/>
    </eAnnotations>
    <eOperations name="importedMemberships" upperBound="-1" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Returns Memberships that are to become &lt;code>importedMemberships&lt;/code> of the &lt;code>importOwningNamespace&lt;/code>. (The &lt;code>excluded&lt;/code> parameter is used to handle the possibility of circular Import Relationships.)&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="excluded" ordered="false" upperBound="-1" eType="#//Namespace"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false"
        lowerBound="1" eType="#//VisibilityKind" defaultValueLiteral="private">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The visibility level of the imported &lt;code>members&lt;/code> from this Import relative to the &lt;code>importOwningNamespace&lt;/code>. The default is &lt;code>private&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isRecursive" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether to recursively import Memberships from visible, owned sub-Namespaces.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isImportAll" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether to import memberships without regard to declared visibility.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importedElement" ordered="false"
        lowerBound="1" eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="membershipImport"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The effectively imported &lt;code>Element&lt;/code> for this &lt;/code>Import&lt;/code>. For a &lt;code>MembershipImport&lt;/code>, this is the &lt;code>memberElement&lt;/code> of the &lt;code>importedMembership&lt;/code>. For a &lt;code>NamespaceImport&lt;/code>, it is the &lt;code>importedNamespace&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importOwningNamespace"
        ordered="false" lowerBound="1" eType="#//Namespace" volatile="true" transient="true"
        derived="true" eOpposite="#//Namespace/ownedImport">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The Namespace into which Memberships are imported by this Import, which must be the &lt;code>owningRelatedElement&lt;/code> of the Import.&lt;/p> &#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
      <eAnnotations source="subsets" references="#//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="VisibilityKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>VisibilityKind&lt;/code> is an enumeration whose literals specify the visibility of a &lt;code>Membership&lt;/code> of an &lt;code>Element&lt;/code> in a &lt;code>Namespace&lt;/code> outside of that &lt;code>Namespace&lt;/code>. Note that &amp;quot;visibility&amp;quot; specifically restricts whether an &lt;code>Element&lt;/code> in a &lt;code>Namespace&lt;/code> may be referenced by name from outside the &lt;code>Namespace&lt;/code> and only otherwise restricts access to an &lt;code>Element&lt;/code> as provided by specific constraints in the abstract syntax (e.g., preventing the import or inheritance of private &lt;code>Elements&lt;/code>).&lt;/p>&#xA;"/>
    </eAnnotations>
    <eLiterals name="private">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates a &lt;code>Membership&lt;/code> is not visible outside its owning &lt;code>Namespace&lt;/code>.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="protected" value="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An intermediate level of visibility between &lt;code>public&lt;/code> and &lt;code>private&lt;/code>. By default, it is equivalent to &lt;code>private&lt;/code> for the purposes of normal access to and import of &lt;code>Elements&lt;/code> from a &lt;code>Namespace&lt;/code>. However, other &lt;code>Relationships&lt;/code> may be specified to include &lt;code>Memberships&lt;/code> with &lt;code>protected&lt;/code> visibility in the list of &lt;code>memberships&lt;/code> for a &lt;code>Namespace&lt;/code> (e.g., &lt;code>Specialization&lt;/code>).&lt;/p>&#xA;"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="public" value="2">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates that a &lt;code>Membership&lt;/code> is publicly visible outside its owning &lt;code>Namespace&lt;/code>.&lt;/p>"/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Documentation" eSuperTypes="#//Comment">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>Documentation&lt;/code> is a &lt;code>Comment&lt;/code> that specifically documents a &lt;code>documentedElement&lt;/code>, which must be its &lt;code>owner&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="documentedElement" ordered="false"
        lowerBound="1" eType="#//Element" volatile="true" transient="true" derived="true"
        eOpposite="#//Element/documentation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Element&lt;/code> that is documented by this &lt;code>Documentation&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//AnnotatingElement/annotatedElement"/>
      <eAnnotations source="subsets" references="#//Element/owner"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Comment" eSuperTypes="#//AnnotatingElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Comment&lt;/code> is an &lt;code>AnnotatingElement&lt;/code> whose &lt;code>body&lt;/code> in some way describes its &lt;code>annotatedElements&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="locale" ordered="false"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Identification of the language of the &lt;code>body&lt;/code> text and, optionally, the region and/or encoding. The format shall be a POSIX locale conformant to ISO/IEC 15897, with the format &lt;code>[language[_territory][.codeset][@modifier]]&lt;/code>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" ordered="false" lowerBound="1"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The annotation text for the &lt;code>Comment&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AnnotatingElement" eSuperTypes="#//Element">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>AnnotatingElement&lt;/code> is an &lt;code>Element&lt;/code> that provides additional description of or metadata on some other &lt;code>Element&lt;/code>. An &lt;code>AnnotatingElement&lt;/code> is either attached to its &lt;code>annotatedElements&lt;/code> by &lt;code>Annotation&lt;/code> &lt;code>Relationships&lt;/code>, or it implicitly annotates its &lt;code>owningNamespace&lt;/code>.&lt;/p>&#xA;&#xA;annotatedElement = &#xA; if annotation->notEmpty() then annotation.annotatedElement&#xA; else Sequence{owningNamespace} endif&#xA;ownedAnnotatingRelationship = ownedRelationship->&#xA;    selectByKind(Annotation)->&#xA;    select(a | a.annotatingElement = self)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotatedElement" lowerBound="1"
        upperBound="-1" eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="annotatingElement"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Elements&lt;/code> that are annotated by this &lt;code>AnnotatingElement&lt;/code>. If &lt;code>annotation&lt;/code> is not empty, these are the &lt;code>annotatedElements&lt;/code> of the &lt;code>annotations&lt;/code>. If &lt;code>annotation&lt;/code> is empty, then it is the &lt;code>owningNamespace&lt;/code> of the &lt;code>AnnotatingElement&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAnnotatingRelationship"
        ordered="false" upperBound="-1" eType="#//Annotation" volatile="true" transient="true"
        derived="true" eOpposite="#//Annotation/owningAnnotatingElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>AnnotatingElement&lt;/code> that are &lt;code>Annotations&lt;/code>, for which this &lt;code>AnnotatingElement&lt;/code> is the &lt;code>annotatingElement&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//AnnotatingElement/annotation #//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotation" upperBound="-1"
        eType="#//Annotation" eOpposite="#//Annotation/annotatingElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Annotations&lt;/code> that relate this &lt;code>AnnotatingElement&lt;/code> to its &lt;code>annotatedElements&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Annotation" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>Annotation&lt;/code> is a Relationship between an &lt;code>AnnotatingElement&lt;/code> and the &lt;code>Element&lt;/code> that is annotated by that &lt;code>AnnotatingElement&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotatingElement" ordered="false"
        lowerBound="1" eType="#//AnnotatingElement" eOpposite="#//AnnotatingElement/annotation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>AnnotatingElement&lt;/code> that annotates the &lt;code>annotatedElement&lt;/code> of this &lt;code>Annotation&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotatedElement" ordered="false"
        lowerBound="1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="annotation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Element&lt;/code> that is annotated by the &lt;code>annotatingElement&lt;/code> of this Annotation.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningAnnotatedElement"
        ordered="false" eType="#//Element" volatile="true" transient="true" derived="true"
        eOpposite="#//Element/ownedAnnotation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>annotatedElement&lt;/code> of this &lt;code>Annotation&lt;/code>, when it is also its &lt;code>owningRelatedElement&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Annotation/annotatedElement #//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningAnnotatingElement"
        ordered="false" eType="#//AnnotatingElement" volatile="true" transient="true"
        derived="true" eOpposite="#//AnnotatingElement/ownedAnnotatingRelationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>annotatingElement&lt;/code> of this &lt;code>Annotation&lt;/code>, when it is also its &lt;code>owningRelatedElement&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Annotation/annotatingElement #//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TextualRepresentation" eSuperTypes="#//AnnotatingElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>TextualRepresentation&lt;/code> is an &lt;code>AnnotatingElement&lt;/code> whose &lt;code>body&lt;/code> represents the &lt;code>representedElement&lt;/code> in a given &lt;code>language&lt;/code>. The &lt;code>representedElement&lt;/code> must be the &lt;code>owner&lt;/code> of the &lt;code>TextualRepresentation&lt;/code>. The named &lt;code>language&lt;/code> can be a natural language, in which case the &lt;code>body&lt;/code> is an informal representation, or an artificial language, in which case the &lt;code>body&lt;/code> is expected to be a formal, machine-parsable representation.&lt;/p>&#xA;&#xA;&lt;p>If the named &lt;code>language&lt;/code> of a &lt;code>TextualRepresentation&lt;/code> is machine-parsable, then the &lt;code>body&lt;/code> text should be legal input text as defined for that &lt;code>language&lt;/code>. The interpretation of the named language string shall be case insensitive. The following &lt;code>language&lt;/code> names are defined to correspond to the given standard languages:&lt;/p>&#xA;&#xA;&lt;table border=&quot;1&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; width=&quot;498&quot;>&#xA;&#x9;&lt;thead>&#xA;&#x9;&lt;/thead>&#xA;&#x9;&lt;tbody>&#xA;&#x9;&#x9;&lt;tr>&#xA;&#x9;&#x9;&#x9;&lt;td style=&quot;text-align: center; width: 154px;&quot;>&lt;code>kerml&lt;/code>&lt;/td>&#xA;&#x9;&#x9;&#x9;&lt;td style=&quot;width: 332px;&quot;>Kernel Modeling Language&lt;/td>&#xA;&#x9;&#x9;&lt;/tr>&#xA;&#x9;&#x9;&lt;tr>&#xA;&#x9;&#x9;&#x9;&lt;td style=&quot;text-align: center; width: 154px;&quot;>&lt;code>ocl&lt;/code>&lt;/td>&#xA;&#x9;&#x9;&#x9;&lt;td style=&quot;width: 332px;&quot;>Object Constraint Language&lt;/td>&#xA;&#x9;&#x9;&lt;/tr>&#xA;&#x9;&#x9;&lt;tr>&#xA;&#x9;&#x9;&#x9;&lt;td style=&quot;text-align: center; width: 154px;&quot;>&lt;code>alf&lt;/code>&lt;/td>&#xA;&#x9;&#x9;&#x9;&lt;td style=&quot;width: 332px;&quot;>Action Language for fUML&lt;/td>&#xA;&#x9;&#x9;&lt;/tr>&#xA;&#x9;&lt;/tbody>&#xA;&lt;/table>&#xA;&#xA;&lt;p>Other specifications may define specific &lt;code>language&lt;/code> strings, other than those shown above, to be used to indicate the use of languages from those specifications in KerML &lt;code>TextualRepresentation&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>If the &lt;code>language&lt;/code> of a &lt;code>TextualRepresentation&lt;/code> is &amp;quot;&lt;code>kerml&lt;/code>&amp;quot;, then the &lt;code>body&lt;/code> text shall be a legal representation of the &lt;code>representedElement&lt;/code> in the KerML textual concrete syntax. A conforming tool can use such a &lt;code>TextualRepresentation&lt;/code> &lt;code>Annotation&lt;/code> to record the original KerML concrete syntax text from which an &lt;code>Element&lt;/code> was parsed. In this case, it is a tool responsibility to ensure that the &lt;code>body&lt;/code> of the &lt;code>TextualRepresentation&lt;/code> remains correct (or the Annotation is removed) if the annotated &lt;code>Element&lt;/code> changes other than by re-parsing the &lt;code>body&lt;/code> text.&lt;/p>&#xA;&#xA;&lt;p>An &lt;code>Element&lt;/code> with a &lt;code>TextualRepresentation&lt;/code> in a language other than KerML is essentially a semantically &amp;quot;opaque&amp;quot; &lt;code>Element&lt;/code> specified in the other language. However, a conforming KerML tool may interpret such an element consistently with the specification of the named language.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The natural or artifical language in which the &lt;code>body&lt;/code> text is written.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" ordered="false" lowerBound="1"
        eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The textual representation of the &lt;code>representedElement&lt;/code> in the given &lt;code>language&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="representedElement" ordered="false"
        lowerBound="1" eType="#//Element" volatile="true" transient="true" derived="true"
        eOpposite="#//Element/textualRepresentation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Element&lt;/code> that is represented by this &lt;code>TextualRepresentation&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//AnnotatingElement/annotatedElement"/>
      <eAnnotations source="subsets" references="#//Element/owner"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Dependency" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Dependency&lt;/code> is a &lt;code>Relationship&lt;/code> that indicates that one or more &lt;code>client&lt;/code> &lt;code>Elements&lt;/code> require one more &lt;code>supplier&lt;/code> &lt;code>Elements&lt;/code> for their complete specification. In general, this means that a change to one of the &lt;code>supplier&lt;/code> &lt;code>Elements&lt;/code> may necessitate a change to, or re-specification of, the &lt;code>client&lt;/code> &lt;code>Elements&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>Note that a &lt;code>Dependency&lt;/code> is entirely a model-level &lt;code>Relationship&lt;/code>, without instance-level semantics.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="client" lowerBound="1"
        upperBound="-1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="clientDependency"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Element&lt;/code> or &lt;code>Elements&lt;/code> dependent on the &lt;code>supplier&lt;/code> &lt;code>Elements&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="supplier" lowerBound="1"
        upperBound="-1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="supplierDependency"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Element&lt;/code> or &lt;code>Elements&lt;/code> on which the &lt;code>client&lt;/code> &lt;code>Elements&lt;/code> depend in some respect.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MembershipImport" eSuperTypes="#//Import">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>MembershipImport&lt;/code> is an &lt;code>Import&lt;/code> that imports its &lt;code>importedMembership&lt;/code> into the &lt;code>importOwningNamespace&lt;/code>. If &lt;code>isRecursive = true&lt;/code> and the &lt;code>memberElement&lt;/code> of the &lt;code>importedMembership&lt;/code> is a &lt;code>Namespace&lt;/code>, then the equivalent of a recursive &lt;code>NamespaceImport&lt;/code> is also performed on that &lt;code>Namespace&lt;/code>.&lt;/p>&#xA;&#xA;importedElement = importedMembership.memberElement"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importedMembership" ordered="false"
        lowerBound="1" eType="#//Membership">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="import"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Membership&lt;/code> to be imported.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NamespaceImport" eSuperTypes="#//Import">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>NamespaceImport&lt;/code> is an Import that imports &lt;code>Memberships&lt;/code> from its &lt;code>importedNamespace&lt;/code> into the &lt;code>importOwningNamespace&lt;/code>. If &lt;code> isRecursive = false&lt;/code>, then only the visible &lt;code>Memberships&lt;/code> of the &lt;code>importedNamespace&lt;/code> are imported. If &lt;code> isRecursive = true&lt;/code>, then, in addition, &lt;code>Memberships&lt;/code> are recursively imported from any &lt;code>ownedMembers&lt;/code> of the &lt;code>importedNamespace&lt;/code> that are &lt;code>Namespaces&lt;/code>.&lt;/p>&#xA;&#xA;importedElement = importedNamespace"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="importedNamespace" ordered="false"
        lowerBound="1" eType="#//Namespace">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="import"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Namespace&lt;/code> whose visible &lt;code>Memberships&lt;/code> are imported by this &lt;code>NamespaceImport&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Subclassification" eSuperTypes="#//Specialization">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>Subclassification&lt;/code> is &lt;code>Specialization&lt;/code> in which both the &lt;code>specific&lt;/code> and &lt;code>general&lt;/code> &lt;code>Types&lt;/code> are &lt;code>Classifier&lt;/code>. This means all instances of the specific &lt;code>Classifier&lt;/code> are also instances of the general &lt;code>Classifier&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="superclassifier" ordered="false"
        lowerBound="1" eType="#//Classifier">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="superclassification"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The more &lt;code>general&lt;/code> Classifier in this &lt;code>Subclassification&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Specialization/general"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningClassifier" ordered="false"
        eType="#//Classifier" volatile="true" transient="true" derived="true" eOpposite="#//Classifier/ownedSubclassification">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Classifier&lt;/code> that owns this &lt;code>Subclassification&lt;/code> relationship, which must also be its &lt;code>subclassifier&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Specialization/owningType"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subclassifier" ordered="false"
        lowerBound="1" eType="#//Classifier">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="subclassification"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The more specific &lt;code>Classifier&lt;/code> in this &lt;code>Subclassification&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Specialization/specific"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Specialization" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>Specialization&lt;/code> is a &lt;code>Relationship&lt;/code> between two &lt;code>Types&lt;/code> that requires all instances of the &lt;code>specific&lt;/code> type to also be instances of the &lt;code>general&lt;/code> Type (i.e., the set of instances of the &lt;code>specific&lt;/code> Type is a &lt;em>subset&lt;/em> of those of the &lt;code>general&lt;/code> Type, which might be the same set).&lt;/p>&#xA;&#xA;not specific.isConjugated"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedSpecialization">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Type&lt;/code> that is the &lt;code>specific&lt;/code> &lt;code>Type&lt;/code> of this &lt;code>Specialization&lt;/code> and owns it as its &lt;code>owningRelatedElement&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Specialization/specific #//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="general" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="generalization"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A &lt;code>Type&lt;/code> with a superset of all instances of the &lt;code>specific&lt;/code> &lt;code>Type&lt;/code>, which might be the same set.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="specific" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="specialization"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A &lt;code>Type&lt;/code> with a subset of all instances of the &lt;code>general&lt;/code> &lt;code>Type&lt;/code>, which might be the same set.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="#//Namespace">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Type&lt;/code> is a &lt;code>Namespace&lt;/code> that is the most general kind of &lt;code>Element&lt;/code> supporting the semantics of classification. A &lt;code>Type&lt;/code> may be a &lt;code>Classifier&lt;/code> or a &lt;code>Feature&lt;/code>, defining conditions on what is classified by the &lt;code>Type&lt;/code> (see also the description of &lt;code>isSufficient&lt;/code>).&lt;/p>&#xA;&#xA;ownedSpecialization = ownedRelationship->selectByKind(Specialization)->&#xA;    select(s | s.special = self)&#xA;    &#xA;multiplicity = &#xA;    let ownedMultiplicities: Sequence(Multiplicity) =&#xA;        ownedMember->selectByKind(Multiplicity) in&#xA;    if ownedMultiplicities->isEmpty() then null&#xA;    else ownedMultiplicities->first()&#xA;    endif&#xA;ownedFeatureMembership = ownedRelationship->selectByKind(FeatureMembership)&#xA;ownedConjugator =&#xA;    let ownedConjugators: Sequence(Conjugator) = &#xA;        ownedRelationship->selectByKind(Conjugation) in&#xA;    if ownedConjugators->isEmpty() then null &#xA;    else ownedConjugators->at(1) endif&#xA;output = feature->select(f | &#xA;    let direction: FeatureDirectionKind = directionOf(f) in&#xA;    direction = FeatureDirectionKind::out or&#xA;    direction = FeatureDirectionKind::inout)&#xA;input = feature->select(f | &#xA;    let direction: FeatureDirectionKind = directionOf(f) in&#xA;    direction = FeatureDirectionKind::_'in' or&#xA;    direction = FeatureDirectionKind::inout)&#xA;inheritedMembership = inheritedMemberships(Set{}, false)&#xA;specializesFromLibrary('Base::Anything')&#xA;directedFeature = feature->select(f | directionOf(f) &lt;> null)&#xA;feature = featureMembership.ownedMemberFeature&#xA;featureMembership = ownedFeatureMembership->union(&#xA;    inheritedMembership->selectByKind(FeatureMembership))&#xA;ownedFeature = ownedFeatureMembership.ownedMemberFeature&#xA;differencingType = ownedDifferencing.differencingType&#xA;intersectingType->excludes(self)&#xA;differencingType->excludes(self)&#xA;unioningType = ownedUnioning.unioningType&#xA;unioningType->excludes(self)&#xA;intersectingType = ownedIntersecting.intersectingType&#xA;ownedRelationship->selectByKind(Conjugation)->size() &lt;= 1&#xA;ownedMember->selectByKind(Multiplicity)->size() &lt;= 1&#xA;endFeature = feature->select(isEnd)&#xA;ownedDisjoining =&#xA;    ownedRelationship->selectByKind(Disjoining)&#xA;ownedUnioning =&#xA;    ownedRelationship->selectByKind(Unioning)&#xA;ownedRelationship->selectByKind(Intersecting)&#xA;ownedDifferencing =&#xA;    ownedRelationship->selectByKind(Differencing)&#xA;ownedEndFeature = ownedFeature->select(isEnd)&#xA;inheritedFeature = inheritedMemberships->&#xA;    selectByKind(FeatureMembership).memberFeature&#xA;ownedUnioning->size() &lt;> 1&#xA;ownedIntersecting->size() &lt;> 1&#xA;ownedDifferencing->size() &lt;> 1"/>
    </eAnnotations>
    <eOperations name="inheritedMemberships" upperBound="-1" eType="#//Membership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return the inherited &lt;code>Memberships&lt;/code> of this &lt;code>Type&lt;/code>, excluding those supertypes in the &lt;code>excluded&lt;/code> set. If &lt;code>excludeImplied = true&lt;/code>, then also exclude any &lt;code>Types&lt;/code> inherited via &lt;code>Specializations&lt;/code> with &lt;code>isImplied = true&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="excluded" ordered="false" upperBound="-1" eType="#//Type"/>
      <eParameters name="excludeImplied" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean"/>
    </eOperations>
    <eOperations name="directionOf" ordered="false" eType="#//FeatureDirectionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>If the given &lt;code>feature&lt;/code> is a &lt;code>feature&lt;/code> of this &lt;code>Type&lt;/code>, then return its direction relative to this &lt;code>Type&lt;/code>, taking conjugation into account.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="directionOfExcluding(f, Set{})"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="feature" ordered="false" lowerBound="1" eType="#//Feature"/>
    </eOperations>
    <eOperations name="directionOfExcluding" ordered="false" eType="#//FeatureDirectionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return the direction of the given &lt;code>feature&lt;/code> relative to this &lt;code>Type&lt;/code>, excluding a given set of &lt;code>Types&lt;/code> from the search of supertypes of this &lt;code>Type&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let excludedSelf : Set(Type) = excluded->including(self) in&#xA;if feature.owningType = self then feature.direction&#xA;else if ownedConjugator &lt;> null then&#xA;    if excludedSelf->includes(ownedConjugator.originalType) then null&#xA;    else&#xA;        let originalDirection: FeatureDirectionKind = &#xA;            ownedConjugator.originalType.directionOfExcluding(feature, excludedSelf) in&#xA;        if originalDirection = FeatureDirectionKind::_'in' then FeatureDirectionKind::out&#xA;        else if originalDirection = FeatureDirectionKind::out then FeatureDirectionKind::_'in'&#xA;        else originalDirection&#xA;        endif endif&#xA;    endif&#xA;else&#xA;    let directions: Sequence(FeatureDirectionKind) = &#xA;        ownedSpecialization.general->&#xA;            excluding(excludedSelf).&#xA;            directionOfExcluding(feature, excludedSelf)->&#xA;            select(d | d &lt;> null) in&#xA;    if directions->isEmpty() then null&#xA;    else directions->at(1)&#xA;    endif&#xA;endif endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="feature" ordered="false" lowerBound="1" eType="#//Feature"/>
      <eParameters name="excluded" ordered="false" upperBound="-1" eType="#//Type"/>
    </eOperations>
    <eOperations name="allSupertypes" ordered="false" upperBound="-1" eType="#//Type">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return all &lt;code>Types&lt;/code> related to this &lt;code>Type&lt;/code> as supertypes directly or transitively by &lt;code>Specialization&lt;/code> &lt;code>Relationships&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="ownedSpecialization->&#xA;    closure(general.ownedSpecialization).general->&#xA;    including(self)"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eOperations name="specializes" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Check whether this &lt;code>Type&lt;/code> is a direct or indirect specialization of the given &lt;code>supertype&lt;code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="if isConjugated then &#xA;    ownedConjugator.originalType.specializes(supertype)&#xA;else&#xA;    allSupertypes()->includes(supertype)&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="supertype" ordered="false" lowerBound="1" eType="#//Type"/>
    </eOperations>
    <eOperations name="specializesFromLibrary" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Check whether this &lt;code>Type&lt;/code> is a direct or indirect specialization of the named library &lt;code>Type&lt;/code>. &lt;code>libraryTypeName&lt;/code> must conform to the syntax of a KerML qualified name and must resolve to a &lt;code>Type&lt;/code> in global scope.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let mem : Membership = resolveGlobal(libraryTypeName) in&#xA;mem &lt;> null and mem.memberElement.oclIsKindOf(Type) and&#xA;specializes(mem.memberElement.oclAsType(Type))"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="libraryTypeName" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedFeatureMembership"
        upperBound="-1" eType="#//FeatureMembership" volatile="true" transient="true"
        derived="true" eOpposite="#//FeatureMembership/owningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedMemberships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>FeatureMemberships&lt;/code>, for which the &lt;code>Type&lt;/code> is the &lt;code>owningType&lt;/code>. Each such &lt;code>FeatureMembership&lt;/code> identifies an &lt;code>ownedFeature&lt;/code> of the &lt;code>Type&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/ownedMembership #//Type/featureMembership"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedFeature" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true" eOpposite="#//Feature/owningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedMemberFeatures&lt;/code> of the &lt;code>ownedFeatureMemberships&lt;/code> of this &lt;code>Type&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/ownedMember"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedEndFeature" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true" eOpposite="#//Feature/endOwningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All &lt;code>endFeatures&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>ownedFeatures&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/endFeature #//Type/ownedFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="feature" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedMemberFeatures&lt;/code> of the &lt;code>featureMemberships&lt;/code> of this &lt;code>Type&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/member"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="input" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithInput"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All &lt;code>features&lt;/code> related to this &lt;code>Type&lt;/code> by &lt;code>FeatureMemberships&lt;/code> that have &lt;code>direction&lt;/code> &lt;code>in&lt;/code> or &lt;code>inout&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/directedFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="output" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithOutput"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All &lt;code>features&lt;/code> related to this &lt;code>Type&lt;/code> by &lt;code>FeatureMemberships&lt;/code> that have &lt;code>direction&lt;/code> &lt;code>out&lt;/code> or &lt;code>inout&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/directedFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates whether instances of this &lt;code>Type&lt;/code> must also be instances of at least one of its specialized &lt;code>Types&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="inheritedMembership" upperBound="-1"
        eType="#//Membership" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="inheritingType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All &lt;code>Memberships&lt;/code> inherited by this &lt;code>Type&lt;/code> via &lt;code>Specialization&lt;/code> or &lt;code>Conjugation&lt;/code>. These are included in the derived union for the &lt;code>memberships&lt;/code> of the &lt;code>Type&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/membership"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endFeature" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithEndFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All &lt;code>features&lt;/code> of this &lt;code>Type&lt;/code> with &lt;code>isEnd = true&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isSufficient" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether all things that meet the classification conditions of this &lt;code>Type&lt;/code> must be classified by the &lt;code>Type&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>(A &lt;code>Type&lt;/code>&amp;nbsp;gives conditions that must be met by whatever it classifies, but when &lt;code>isSufficient&lt;/code> is false, things may meet those conditions but still not be classified by the &lt;code>Type&lt;/code>. For example, a Type &lt;code>&lt;em>Car&lt;/em>&lt;/code> that is not sufficient could require everything it classifies to have four wheels, but not all four wheeled things would classify as cars. However, if the &lt;code>Type&lt;/code> &lt;code>&lt;em>Car&lt;/em>&lt;/code> were sufficient, it would classify all four-wheeled things.)&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedConjugator" ordered="false"
        eType="#//Conjugation" volatile="true" transient="true" derived="true" eOpposite="#//Conjugation/owningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A &lt;code>Conjugation&lt;/code> owned by this &lt;code>Type&lt;/code> for which the &lt;code>Type&lt;/code> is the &lt;code>originalType&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isConjugated" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates whether this &lt;code>Type&lt;/code> has an &lt;code>ownedConjugator&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="inheritedFeature" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="inheritingType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>All the &lt;code>memberFeatures&lt;/code> of the &lt;code>inheritedMemberships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>FeatureMemberships&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="multiplicity" ordered="false"
        eType="#//Multiplicity" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithMultiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An &lt;code>ownedMember&lt;/code> of this &lt;code>Type&lt;/code> that is a &lt;code>Multiplicity&lt;/code>, which constraints the cardinality of the &lt;code>Type&lt;/code>. If there is no such &lt;code>ownedMember&lt;/code>, then the cardinality of this &lt;code>Type&lt;/code> is constrained by all the &lt;code>Multiplicity&lt;/code> constraints applicable to any direct supertypes.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/ownedMember"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="unioningType" upperBound="-1"
        eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="unionedType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The interpretations of a &lt;code>Type&lt;/code> with &lt;code>unioningTypes&lt;/code> are asserted to be the same as those of all the &lt;code>unioningTypes&lt;/code> together, which are the &lt;code>Types&lt;/code> derived from the &lt;code>unioningType&lt;/code> of the &lt;code>ownedUnionings&lt;/code> of this &lt;code>Type&lt;/code>. For example, a &lt;code>Classifier&lt;/code> for people might be the union of &lt;code>Classifiers&lt;/code> for all the sexes. Similarly, a feature for people&amp;#39;s children might be the union of features dividing them in the same ways as people in general.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedIntersecting" upperBound="-1"
        eType="#//Intersecting" volatile="true" transient="true" derived="true" eOpposite="#//Intersecting/typeIntersected">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>Intersectings&lt;/code>, have the &lt;code>Type&lt;/code> as their &lt;code>typeIntersected&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="intersectingType" upperBound="-1"
        eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="intersectedType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The interpretations of a &lt;code>Type&lt;/code> with &lt;code>intersectingTypes&lt;/code> are asserted to be those in common among the &lt;code>intersectingTypes&lt;/code>, which are the &lt;code>Types&lt;/code> derived from the &lt;code>intersectingType&lt;/code> of the &lt;code>ownedIntersectings&lt;/code> of this &lt;code>Type&lt;/code>. For example, a &lt;code>Classifier&lt;/code> might be an intersection of &lt;code>Classifiers&lt;/code> for people of a particular sex and of a particular nationality. Similarly, a feature for people&amp;#39;s children of a particular sex might be the intersection of a &lt;code>Feature&lt;/code> for their children and a &lt;code>Classifier&lt;/code> for people of that sex (because the interpretations of the children &lt;code>Feature&lt;/code> that identify those of that sex are also interpretations of the Classifier for that sex).&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedUnioning" upperBound="-1"
        eType="#//Unioning" volatile="true" transient="true" derived="true" eOpposite="#//Unioning/typeUnioned">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>Unionings&lt;/code>, having the &lt;code>Type&lt;/code> as their &lt;code>typeUnioned&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedDisjoining" ordered="false"
        upperBound="-1" eType="#//Disjoining" volatile="true" transient="true" derived="true"
        eOpposite="#//Disjoining/owningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>Disjoinings&lt;/code>, for which the &lt;code>Type&lt;/code> is the &lt;code>typeDisjoined&lt;/code> &lt;code>Type&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureMembership" upperBound="-1"
        eType="#//FeatureMembership" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="type"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>FeatureMemberships&lt;/code> for &lt;code>features&lt;/code> of this &lt;code>Type&lt;/code>, which include all &lt;code>ownedFeatureMemberships&lt;/code> and those &lt;code>inheritedMemberships&lt;/code> that are &lt;code>FeatureMemberships&lt;/code> (but does &lt;em>not&lt;/em> include any &lt;code>importedMemberships&lt;/code>).&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="differencingType" upperBound="-1"
        eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="differencedType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The interpretations of a &lt;code>Type&lt;/code> with &lt;code>differencingTypes&lt;/code> are asserted to be those of the first of those &lt;code>Types&lt;/code>, but not including those of the remaining &lt;code>Types&lt;/code>. For example, a &lt;code>Classifier&lt;/code> might be the difference of a &lt;code>Classifier&lt;/code> for people and another for people of a particular nationality, leaving people who are not of that nationality. Similarly, a feature of people might be the difference between a feature for their children and a &lt;code>Classifier&lt;/code> for people of a particular sex, identifying their children not of that sex (because the interpretations of the children &lt;code>Feature&lt;/code> that identify those of that sex are also interpretations of the &lt;code>Classifier&lt;/code> for that sex).&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedDifferencing" upperBound="-1"
        eType="#//Differencing" volatile="true" transient="true" derived="true" eOpposite="#//Differencing/typeDifferenced">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>Differencings&lt;/code>, having this &lt;code>Type&lt;/code> as their &lt;code>typeDifferenced&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="directedFeature" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeWithDirectedFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>features&lt;/code> of this &lt;code>Type&lt;/code> that have a non-null &lt;code>direction&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedSpecialization" upperBound="-1"
        eType="#//Specialization" volatile="true" transient="true" derived="true"
        eOpposite="#//Specialization/owningType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Type&lt;/code> that are &lt;code>Specializations&lt;/code>, for which the &lt;code>Type&lt;/code> is the &lt;code>specific&lt;/code> &lt;code>Type&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureMembership" eSuperTypes="#//OwningMembership #//Featuring">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>FeatureMembership&lt;/code> is an &lt;code>OwningMembership&lt;/code> between a &lt;code>Feature&lt;/code> in an &lt;code>owningType&lt;/code> that is also a &lt;code>Featuring&lt;/code> &lt;code>Relationship&lt;/code> between the &lt;code>Feature&lt;/code> and the &lt;code>Type&lt;/code>, in which the &lt;code>featuringType&lt;/code> is the &lt;code>source&lt;/code> and the &lt;code>featureOfType&lt;/code> is the &lt;code>target&lt;/code>. A &lt;code>FeatureMembership&lt;/code> is always owned by its &lt;code>owningType&lt;/code>, which is the &lt;code>featuringType&lt;/code> for the &lt;code>FeatureMembership&lt;/code> considered as a &lt;code>Featuring&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberFeature" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true"
        eOpposite="#//Feature/owningFeatureMembership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that this &lt;code>FeatureMembership&lt;/code> relates to its &lt;code>owningType&lt;/code>, making it an &lt;code>ownedFeature&lt;/code> of the &lt;code>owningType&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//OwningMembership/ownedMemberElement #//Featuring/feature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        lowerBound="1" eType="#//Type" volatile="true" transient="true" derived="true"
        eOpposite="#//Type/ownedFeatureMembership">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Type&lt;/code> that owns this &lt;code>FeatureMembership&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Membership/membershipOwningNamespace #//Featuring/type"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Featuring" abstract="true" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>Featuring&lt;/code> is a &lt;code>Relationship&lt;/code> between a &lt;code>Type&lt;/code> and a &lt;code>Feature&lt;/code> that is featured by that &lt;code>Type&lt;/code>. It asserts that every instance in the domain of the &lt;code>feature&lt;/code> must be classified by the &lt;code>type&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>&lt;code>Featuring&lt;/code> is abstract and does not commit to which of &lt;code>feature&lt;/code> or &lt;code>type&lt;/code> are the &lt;code>source&lt;/code> or &lt;code>target&lt;/code> of the &lt;code>Relationship&lt;/code>. This commitment is made in the subclasses of &lt;code>Featuring&lt;/code>, &lt;code>TypeFeaturing&lt;/code> and &lt;code>FeatureMembership&lt;/code>, which have opposite directions.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false" lowerBound="1"
        eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringOfType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Type&lt;code> that features the &lt;code>featureOfType&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="feature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuring"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is featured by the &lt;code>featuringType&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/relatedElement"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Feature" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Feature&lt;/code> is a &lt;code>Type&lt;/code> that classifies relations between multiple things (in the universe). The domain of the relation is the intersection of the &lt;code>featuringTypes&lt;/code> of the &lt;code>Feature&lt;/code>. (The domain of a &lt;code>Feature&lt;/code> with no &lt;code>featuringTyps&lt;/code> is implicitly the most general &lt;code>Type&lt;/code> &lt;em>&lt;code>Base::Anything&lt;/code>&lt;/em> from the Kernel Semantic Library.) The co-domain of the relation is the intersection of the &lt;code>types&lt;/code> of the &lt;code>Feature&lt;/code>.&#xA;&#xA;&lt;p>In the simplest cases, the &lt;code>featuringTypes&lt;/code> and &lt;code>types&lt;/code> are &lt;code>Classifiers&lt;/code> and the &lt;code>Feature&lt;/code> relates two things, one from the domain and one from the range. Examples include cars paired with wheels, people paired with other people, and cars paired with numbers representing the car length.&lt;/p>&#xA;&#xA;&lt;p>Since &lt;code>Features&lt;/code> are &lt;code>Types&lt;/code>, their &lt;code>featuringTypes&lt;/code> and &lt;code>types&lt;/code> can be &lt;code>Features&lt;/code>. In this case, the &lt;code>Feature&lt;/code> effectively classifies relations between relations, which can be interpreted as the sequence of things related by the domain &lt;code>Feature&lt;/code> concatenated with the sequence of things related by the co-domain &lt;code>Feature&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>The &lt;em>values&lt;/em> of a &lt;code>Feature&lt;/code> for a given instance of its domain are all the instances of its co-domain that are related to that domain instance by the &lt;code>Feature&lt;/code>. The values of a &lt;code>Feature&lt;/code> with &lt;code>chainingFeatures&lt;/code> are the same as values of the last &lt;code>Feature&lt;/code> in the chain, which can be found by starting with values of the first &lt;code>Feature&lt;/code>, then using those values as domain instances to obtain valus of the second &lt;code>Feature&lt;/code>, and so on, to values of the last &lt;code>Feature&lt;/code>.&lt;/p>&#xA;&#xA;ownedRedefinition = ownedSubsetting->selectByKind(Redefinition)&#xA;ownedTypeFeaturing = ownedRelationship->selectByKind(TypeFeaturing)->&#xA;    select(tf | tf.featureOfType = self)&#xA;ownedSubsetting = ownedSpecialization->selectByKind(Subsetting)&#xA;ownedTyping = ownedGeneralization->selectByKind(FeatureTyping)&#xA;type = &#xA;    let types : OrderedSet(Types) = OrderedSet{self}->&#xA;        -- Note: The closure operation automatically handles circular relationships.&#xA;        closure(typingFeatures()).typing.type->asOrderedSet() in&#xA;    types->reject(t1 | types->exist(t2 | t2 &lt;> t1 and t2.specializes(t1)))&#xA;multiplicity &lt;> null implies multiplicity.featuringType = featuringType &#xA;specializesFromLibrary('Base::things')&#xA;chainingFeature->excludes(self)&#xA;ownedFeatureChaining = ownedRelationship->selectByKind(FeatureChaining)&#xA;chainingFeature = ownedFeatureChaining.chainingFeature&#xA;chainingFeature->size() &lt;> 1&#xA;isEnd and owningType &lt;> null implies&#xA;    let i : Integer = &#xA;        owningType.ownedEndFeature->indexOf(self) in&#xA;    owningType.ownedSpecialization.general->&#xA;        forAll(supertype |&#xA;             supertype.endFeature->size() >= i implies&#xA;                redefines(supertype.endFeature->at(i))&#xA;direction = null and&#xA;ownedSpecializations->forAll(isImplied) implies&#xA;    ownedMembership->&#xA;        selectByKind(FeatureValue)->&#xA;        forAll(fv | specializes(fv.value.result))&#xA;isEnd and owningType &lt;> null and&#xA;(owningType.oclIsKindOf(Association) or&#xA; owningType.oclIsKindOf(Connector)) implies&#xA;    specializesFromLibrary('Links::Link::participant')&#xA;isComposite and&#xA;ownedTyping.type->includes(oclIsKindOf(Structure)) and&#xA;owningType &lt;> null and&#xA;(owningType.oclIsKindOf(Structure) or&#xA; owningType.type->includes(oclIsKindOf(Structure))) implies&#xA;    specializesFromLibrary('Occurrence::Occurrence::suboccurrences')&#xA;owningType &lt;> null and&#xA;owningType.oclIsKindOf(FeatureReferenceExpression) and&#xA;self = owningType.oclAsType(FeatureReferenceExpression).result implies&#xA;    specializes(owningType.oclAsType(FeatureReferenceExpression).referent)&#xA;&#xA;ownedTyping.type->exists(selectByKind(Class)) implies&#xA;    specializesFromLibrary('Occurrences::occurrences')&#xA;isComposite and&#xA;ownedTyping.type->includes(oclIsKindOf(Class)) and&#xA;owningType &lt;> null and&#xA;(owningType.oclIsKindOf(Class) or&#xA; owningType.oclIsKindOf(Feature) and&#xA;    owningType.oclAsType(Feature).type->&#xA;        exists(oclIsKindOf(Class))) implies&#xA;    specializesFromLibrary('Occurrence::Occurrence::suboccurrences')&#xA;ownedTyping.type->exists(selectByKind(DataType)) implies&#xA;    specializesFromLibrary('Base::dataValues')&#xA;owningType &lt;> null and&#xA;owningType.oclIsKindOf(ItemFlowEnd) and&#xA;owningType.ownedFeature->at(1) = self implies&#xA;    let flowType : Type = owningType.owningType in&#xA;    flowType &lt;> null implies&#xA;        let i : Integer = &#xA;            flowType.ownedFeature.indexOf(owningType) in&#xA;        (i = 1 implies &#xA;            redefinesFromLibrary('Transfers::Transfer::source::sourceOutput')) and&#xA;        (i = 2 implies&#xA;            redefinesFromLibrary('Transfers::Transfer::source::targetInput'))&#xA;                 &#xA;owningType &lt;> null and&#xA;(owningType.oclIsKindOf(Behavior) or&#xA; owningType.oclIsKindOf(Step)) implies&#xA;    let i : Integer = &#xA;        owningType.ownedFeature->select(direction &lt;> null) in&#xA;    owningType.ownedSpecialization.general->&#xA;        forAll(supertype |&#xA;            let ownedParameters : Sequence(Feature) = &#xA;                supertype.ownedFeature->select(direction &lt;> null) in&#xA;            ownedParameters->size() >= i implies&#xA;                redefines(ownedParameters->at(i))&#xA;ownedTyping.type->exists(selectByKind(Structure)) implies&#xA;    specializesFromLibary('Objects::objects')&#xA;owningType &lt;> null and&#xA;(owningType.oclIsKindOf(Function) and&#xA;    self = owningType.oclAsType(Function).result or&#xA; owningType.oclIsKindOf(Expression) and&#xA;    self = owningType.oclAsType(Expression).result) implies&#xA;    owningType.ownedSpecialization.general->&#xA;        select(oclIsKindOf(Function) or oclIsKindOf(Expression))->&#xA;        forAll(supertype |&#xA;            redefines(&#xA;                if superType.oclIsKindOf(Function) then&#xA;                    superType.oclAsType(Function).result&#xA;                else&#xA;                    superType.oclAsType(Expression).result&#xA;                endif)&#xA;ownedFeatureInverting = ownedRelationship->selectByKind(FeatureInverting)->&#xA;    select(fi | fi.featureInverted = self)&#xA;featuringType =&#xA;    let featuringTypes : OrderedSet(Type) = &#xA;        featuring.type->asOrderedSet() in&#xA;    if chainingFeature->isEmpty() then featuringTypes&#xA;    else&#xA;        featuringTypes->&#xA;            union(chainingFeature->first().featuringType)->&#xA;            asOrderedSet()&#xA;    endif&#xA;ownedReferenceSubsetting =&#xA;    let referenceSubsettings : OrderedSet(ReferenceSubsetting) =&#xA;        ownedSubsetting->selectByKind(ReferenceSubsetting) in&#xA;    if referenceSubsettings->isEmpty() then null&#xA;    else referenceSubsettings->first() endif&#xA;ownedSubsetting->selectByKind(ReferenceSubsetting)->size() &lt;= 1&#xA;Sequence{1..chainingFeature->size() - 1}->forAll(i |&#xA;    chainingFeature->at(i + 1).featuringType->forAll(t | &#xA;        chainingFeature->at(i).specializes(t)))&#xA;&#xA;isPortion and&#xA;ownedTyping.type->includes(oclIsKindOf(Class)) and&#xA;owningType &lt;> null and&#xA;(owningType.oclIsKindOf(Class) or&#xA; owningType.oclIsKindOf(Feature) and&#xA;    owningType.oclAsType(Feature).type->&#xA;        exists(oclIsKindOf(Class))) implies&#xA;    specializesFromLibrary('Occurrence::Occurrence::portions')&#xA;featureTarget = if chainingFeature->isEmpty() then self else chainingFeature->last() endif&#xA;owningType &lt;> null and&#xA;owningType.oclIsKindOf(InvocationExpression) and&#xA;let owningInvocation: InvocationExpression = owningType.oclAsType(InvocationExpression) in&#xA;self = owningInvocation.result and&#xA;not owningInvocation.ownedTyping->exists(oclIsKindOf(Function)) and&#xA;not owningInvocation.ownedSubsetting->reject(isImplied).subsettedFeature.type->exists(oclIsKindOf(Function)) implies&#xA;    owningInvocation.ownedTyping->forAll(type | self.specializes(type))"/>
    </eAnnotations>
    <eOperations name="directionFor" ordered="false" eType="#//FeatureDirectionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return the &lt;code>directionOf&lt;/code> this &lt;code>Feature&lt;/code> relative to the given &lt;code>type&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="type.directionOf(self)"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="type" ordered="false" lowerBound="1" eType="#//Type"/>
    </eOperations>
    <eOperations name="isFeaturedWithin" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return whether this &lt;code>Feature&lt;/code> has the given &lt;code>type&lt;/code> as a direct or indirect &lt;code>featuringType&lt;/code>. If &lt;code>type&lt;/code> is null, then check if this &lt;code>Feature&lt;/code> is explicitly or implicitly featured by &lt;em>&lt;code>Base::Anything&lt;/code>&lt;/em>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="if type = null then &#xA;    featuringType->isEmpty() or&#xA;    featuringType=Sequence{resolveGlobal('Base::Anything').memberElement)}&#xA;else &#xA;    featuringType->forAll(f | type.specializes(f)))&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="type" ordered="false" eType="#//Type"/>
    </eOperations>
    <eOperations name="namingFeature" ordered="false" eType="#//Feature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>By default, the naming &lt;code>Feature&lt;/code> of a &lt;code>Feature&lt;/code> is given by its first &lt;code>redefinedFeature&lt;/code> of its first &lt;code>ownedRedefinition&lt;/code>, if any.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="if ownedRedefinition->isEmpty() then&#xA;    null&#xA;else&#xA;    ownedRedefinition->at(1).redefinedFeature&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eOperations name="redefines" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Check whether this &lt;code>Feature&lt;/code> &lt;em>directly&lt;/em> redefines the given &lt;code>redefinedFeature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="ownedRedefinition.redefinedFeature->includes(redefinedFeature)"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="redefinedFeature" ordered="false" lowerBound="1" eType="#//Feature"/>
    </eOperations>
    <eOperations name="redefinesFromLibrary" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Check whether this &lt;code>Feature&lt;/code> &lt;em>directly&lt;/em> redefines the named library &lt;code>Feature&lt;/code>. &lt;code>libraryFeatureName&lt;/code> must conform to the syntax of a KerML qualified name and must resolve to a &lt;code>Feature&lt;/code> in global scope.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let mem: Membership = resolveGlobal(libraryFeatureName) in&#xA;mem &lt;> null and mem.memberElement.oclIsKindOf(Feature) and&#xA;redefines(mem.memberElement.oclAsType(Feature))"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="libraryFeatureName" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//String"/>
    </eOperations>
    <eOperations name="subsetsChain" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Check whether this &lt;code>Feature&lt;/code> directly or indirectly specializes a &lt;code>Feature&lt;/code> whose last two &lt;code>chainingFeatures&lt;/code> are the given &lt;code>Features&lt;/code> &lt;code>first&lt;/code> and &lt;code>second&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="allSuperTypes()->selectAsKind(Feature)->&#xA;    exists(f | let n: Integer = f.chainingFeature->size() in&#xA;        n >= 2 and&#xA;        f.chainingFeature->at(n-1) = first and&#xA;        f.chainingFeature->at(n) = second)"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="first" ordered="false" lowerBound="1" eType="#//Feature"/>
      <eParameters name="second" ordered="false" lowerBound="1" eType="#//Feature"/>
    </eOperations>
    <eOperations name="typingFeatures" ordered="false" upperBound="-1" eType="#//Feature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return the &lt;code>Features&lt;/code> used to determine the &lt;code>types&lt;/code> of this &lt;code>Feature&lt;/code> (other than this &lt;code>Feature&lt;/code> itself), consisting of all subsetted &lt;code>Features&lt;/code> and the last &lt;code>chainingFeature&lt;/code> (if any), if this &lt;code>Feature&lt;/code> is not conjugated, or its &lt;code>originalType&lt;/code>, if it is conjugated (and the &lt;code>originalType&lt;/code> is a &lt;code>Feature&lt;/code>).&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="if not isConjugated then&#xA;    let subsettedFeatures : OrderedSet(Feature) = subsetting.subsettedFeatures in &#xA;    if chainingFeature->isEmpty() or&#xA;       subsettedFeature->includes(chainingFeature->last())&#xA;    then subsettedFeatures&#xA;    else subsettedFeatures->append(chainingFeature->last())&#xA;    endif&#xA;else if conjugator.originalType.oclIsKindOf(Feature) then&#xA;    OrderedSet{conjugator.originalType.oclAsType(Feature)}&#xA;else OrderedSet{}&#xA;endif endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Type&lt;/code> that is the &lt;code>owningType&lt;/code> of the &lt;code>owningFeatureMembership&lt;/code> of this &lt;code>Feature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/owningNamespace #//Feature/featuringType"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether or not values for this &lt;code>Feature&lt;/code> must have no duplicates or not.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether an order exists for the values of this &lt;code>Feature&lt;/code> or not.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" upperBound="-1" eType="#//Type"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Types&lt;/code> that restrict the values of this &lt;code>Feature&lt;/code>, such that the values must be instances of all the &lt;code>types&lt;/code>. The types of a &lt;code>Feature&lt;/code> are derived from its &lt;code>typings&lt;/code> and the &lt;code>types&lt;/code> of its &lt;code>subsettings&lt;/code>. If the &lt;code>Feature&lt;/code> is chained, then the &lt;code>types&lt;/code> of the last &lt;code>Feature&lt;/code> in the chain are also &lt;code>types&lt;/code> of the chained &lt;code>Feature&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRedefinition" ordered="false"
        upperBound="-1" eType="#//Redefinition" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedSubsettings&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>Redefinitions&lt;/code>, for which the &lt;code>Feature&lt;/code> is the &lt;code>redefiningFeature&lt;/code>.&lt;/p>&#xA;&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/ownedSubsetting"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedSubsetting" ordered="false"
        upperBound="-1" eType="#//Subsetting" volatile="true" transient="true" derived="true"
        eOpposite="#//Subsetting/owningFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedSpecializations&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>Subsettings&lt;/code>, for which the &lt;code>Feature&lt;/code> is the &lt;code>subsettingFeature&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedSpecialization"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningFeatureMembership"
        ordered="false" eType="#//FeatureMembership" volatile="true" transient="true"
        derived="true" eOpposite="#//FeatureMembership/ownedMemberFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>FeatureMembership&lt;/code> that owns this &lt;code>Feature&lt;/code> as an &lt;code>ownedMemberFeature&lt;/code>, determining its &lt;code>owningType&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/owningMembership"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether the &lt;code>Feature&lt;/code> is a composite &lt;code>feature&lt;/code> of its &lt;code>featuringType&lt;/code>. If so, the values of the &lt;code>Feature&lt;/code> cannot exist after its featuring instance no longer does.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isEnd" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether or not the this &lt;code>Feature&lt;/code> is an end &lt;code>Feature&lt;/code>, requiring a different interpretation of the &lt;code>multiplicity&lt;/code> of the &lt;code>Feature&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>An end &lt;code>Feature&lt;/code> is always considered to map each domain instance to a single co-domain instance, whether or not a &lt;code>Multiplicity&lt;/code> is given for it. If a &lt;code>Multiplicity&lt;/code> is given for an end &lt;code>Feature&lt;/code>, rather than giving the co-domain cardinality for the &lt;code>Feature&lt;/code> as usual, it specifies a cardinality constraint for &lt;em>navigating&lt;/em> across the &lt;code>endFeatures&lt;/code> of the &lt;code>featuringType&lt;/code> of the end &lt;code>Feature&lt;/code>. That is, if a &lt;code>Type&lt;/code> has &lt;em>n&lt;/em> &lt;code>endFeatures&lt;/code>, then the &lt;code>Multiplicity&lt;/code> of any one of those end &lt;code>Features&lt;/code> constrains the cardinality of the set of values of that &lt;code>Feature&lt;/code> when the values of the other &lt;em>n-1&lt;/em> end &lt;code>Features&lt;/code> are held fixed.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endOwningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedEndFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Type&lt;/code> that is related to this &lt;code>Feature&lt;/code> by an &lt;code>EndFeatureMembership&lt;/code> in which the &lt;code>Feature&lt;/code> is an &lt;code>ownedMemberFeature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/owningType"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTyping" upperBound="-1"
        eType="#//FeatureTyping" volatile="true" transient="true" derived="true" eOpposite="#//FeatureTyping/owningFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedSpecializations&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>FeatureTypings&lt;/code>, for which the &lt;code>Feature&lt;/code> is the &lt;code>typedFeature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedSpecialization"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featuringType" upperBound="-1"
        eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featureOfType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Types&lt;/code> that feature this &lt;code>Feature&lt;/code>, such that any instance in the domain of the &lt;code>Feature&lt;/code> must be classified by all of these &lt;code>Types&lt;/code>, including at least all the &lt;code>featuringTypes&lt;/code> of its &lt;code>typeFeaturings&lt;/code>.  If the &lt;code>Feature&lt;/code> is chained, then the &lt;code>featuringTypes&lt;/code> of the first &lt;code>Feature&lt;/code> in the chain are also &lt;code>featuringTypes&lt;/code> of the chained &lt;code>Feature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedTypeFeaturing" upperBound="-1"
        eType="#//TypeFeaturing" volatile="true" transient="true" derived="true" eOpposite="#//TypeFeaturing/owningFeatureOfType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>TypeFeaturings&lt;/code> and for which the &lt;code>Feature&lt;/code> is the &lt;code>featureOfType&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether the values of this &lt;code>Feature&lt;/code> can always be computed from the values of other &lt;code>Features&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="chainingFeature" unique="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="chainedFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that are chained together to determine the values of this &lt;code>Feature&lt;/code>, derived from the &lt;code>chainingFeatures&lt;/code> of the &lt;code>ownedFeatureChainings&lt;/code> of this &lt;code>Feature&lt;/code>, in the same order. The values of a &lt;code>Feature&lt;/code> with &lt;code>chainingFeatures&lt;/code> are the same as values of the last &lt;code>Feature&lt;/code> in the chain, which can be found by starting with the values of the first &lt;code>Feature&lt;/code> (for each instance of the domain of the original &lt;code>Feature&lt;/code>), then using each of those as domain instances to find the values of the second &lt;code>Feature&lt;/code> in chainingFeatures, and so on, to values of the last &lt;code>Feature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedFeatureInverting"
        ordered="false" upperBound="-1" eType="#//FeatureInverting" volatile="true"
        transient="true" derived="true" eOpposite="#//FeatureInverting/owningFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>FeatureInvertings&lt;/code> and for which the &lt;code>Feature&lt;/code> is the &lt;code>featureInverted&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedFeatureChaining" upperBound="-1"
        eType="#//FeatureChaining" volatile="true" transient="true" derived="true"
        eOpposite="#//FeatureChaining/featureChained">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedRelationships&lt;/code> of this &lt;code>Feature&lt;/code> that are &lt;code>FeatureChainings&lt;/code>, for which the &lt;code>Feature&lt;/code> will be the &lt;code>featureChained&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Element/ownedRelationship"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether the values of this &lt;code>Feature&lt;/code> can change over the lifetime of an instance of the domain.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isPortion" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether the values of this &lt;code>Feature&lt;/code> are contained in the space and time of instances of the domain of the &lt;code>Feature&lt;/code> and represent the same thing as those instances.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="direction" ordered="false"
        eType="#//FeatureDirectionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Indicates how values of this &lt;code>Feature&lt;/code> are determined or used (as specified for the &lt;code>FeatureDirectionKind&lt;/code>).&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedReferenceSubsetting"
        ordered="false" eType="#//ReferenceSubsetting" volatile="true" transient="true"
        derived="true" eOpposite="#//ReferenceSubsetting/referencingFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The one &lt;code>ownedSubsetting&lt;/code> of this &lt;code>Feature&lt;/code>, if any, that is a &lt;code>ReferenceSubsetting&lt;/code>, for which the &lt;code>Feature&lt;/code> is the &lt;code>referencingFeature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/ownedSubsetting"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureTarget" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="baseFeature"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The last of the &lt;code>chainingFeatures&lt;/code> of this &lt;code>Feature&lt;/code>, if it has any. Otherwise, this &lt;code>Feature&lt;/code> itself.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isNonunique" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" volatile="true"
        transient="true" defaultValueLiteral="false" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Redefinition" eSuperTypes="#//Subsetting">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>Redefinition&lt;/code> is a kind of &lt;code>Subsetting&lt;/code> that requires the &lt;code>redefinedFeature&lt;/code> and the &lt;code>redefiningFeature&lt;/code> to have the same values (on each instance of the domain of the &lt;code>redefiningFeature&lt;/code>). This means any restrictions on the &lt;code>redefiningFeature&lt;/code>, such as &lt;code>type&lt;/code> or &lt;code>multiplicity&lt;/code>, also apply to the &lt;code>redefinedFeature&lt;/code> (on each instance of the domain of the &lt;code>redefiningFeature&lt;/code>), and vice versa. The &lt;code>redefinedFeature&lt;/code> might have values for instances of the domain of the &lt;code>redefiningFeature&lt;/code>, but only as instances of the domain of the &lt;code>redefinedFeature&lt;/code> that happen to also be instances of the domain of the &lt;code>redefiningFeature&lt;/code>. This is supported by the constraints inherited from &lt;code>Subsetting&lt;/code> on the domains of the &lt;code>redefiningFeature&lt;/code> and &lt;code>redefinedFeature&lt;/code>. However, these constraints are narrowed for &lt;code>Redefinition&lt;/code> to require the &lt;code>owningTypes&lt;/code> of the &lt;code>redefiningFeature&lt;/code> and &lt;code>redefinedFeature&lt;/code> to be different and the &lt;code>redefinedFeature&lt;/code> to not be inherited into the &lt;code>owningNamespace&lt;/code> of the &lt;code>redefiningFeature&lt;/code>.This enables the &lt;code>redefiningFeature&lt;/code> to have the same name as the &lt;code>redefinedFeature&lt;/code>, if desired.&lt;/p>&#xA;&#xA;let anythingType: Type =&#xA;    redefiningFeature.resolveGlobal('Base::Anything').modelElement.oclAsType(Type) in &#xA;-- Including &quot;Anything&quot; accounts for implicit featuringType of Features&#xA;-- with no explicit featuringType.&#xA;let redefiningFeaturingTypes: Set(Type) =&#xA;    redefiningFeature.featuringTypes->asSet()->including(anythingType) in&#xA;let redefinedFeaturingTypes: Set(Type) =&#xA;    redefinedFeature.featuringTypes->asSet()->including(anythingType) in&#xA;redefiningFeaturingTypes &lt;> redefinedFeaturingType&#xA;featuringType->forAll(t |&#xA;    let direction : FeatureDirectionKind = t.directionOf(redefinedFeature) in&#xA;    ((direction = FeatureDirectionKind::_'in' or &#xA;      direction = FeatureDirectionKind::out) implies&#xA;         redefiningFeature.direction = direction)&#xA;    and &#xA;    (direction = FeatureDirectionKind::inout implies&#xA;        redefiningFeature.direction &lt;> null))"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="redefiningFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="redefinition"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is redefining the &lt;code>redefinedFeature&lt;/code> of this &lt;code>Redefinition&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Subsetting/subsettingFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="redefining"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is redefined by the &lt;code>redefiningFeature&lt;/code> of this &lt;code>Redefinition&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Subsetting/subsettedFeature"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Subsetting" eSuperTypes="#//Specialization">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>Subsetting&lt;/code> is &lt;code>Specialization&lt;/code> in which the &lt;code>specific&lt;/code> and &lt;code>general&lt;/code> &lt;code>Types&lt;/code> are &lt;code>Features&lt;/code>. This means all values of the &lt;code>subsettingFeature&lt;/code> (on instances of its domain, i.e., the intersection of its &lt;code>featuringTypes&lt;/code>) are values of the &lt;code>subsettedFeature&lt;/code> on instances of its domain. To support this the domain of the &lt;code>subsettingFeature&lt;/code> must be the same or specialize (at least indirectly) the domain of the &lt;code>subsettedFeature&lt;/code> (via &lt;code>Specialization&lt;/code>), and the co-domain (intersection of the &lt;code>types&lt;/code>) of the &lt;code>subsettingFeature&lt;/code> must specialize the co-domain of the &lt;code>subsettedFeature&lt;/code>.&lt;/p>&#xA;&#xA;let subsettingFeaturingTypes: OrderedSet(Type) =&#xA;    subsettingFeature.featuringTypes in&#xA;let subsettedFeaturingTypes: OrderedSet(Type) =&#xA;    subsettedFeature.featuringTypes in&#xA;let anythingType: Element =&#xA;    subsettingFeature.resolveGlobal('Base::Anything').memberElement in &#xA;subsettedFeaturingTypes->forAll(t |&#xA;    subsettingFeaturingTypes->isEmpty() and t = anythingType or&#xA;    subsettingFeaturingTypes->exists(specializes(t))&#xA;subsettedFeature.isUnique implies subsettingFeature.isUnique"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subsettedFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="supersetting"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is subsetted by the &lt;code>subsettingFeature&lt;/code> of this &lt;code>Subsetting&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Specialization/general"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="subsettingFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="subsetting"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is a subset of the &lt;code>subsettedFeature&lt;/code> of this &lt;code>Subsetting&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Specialization/specific"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningFeature" ordered="false"
        eType="#//Feature" volatile="true" transient="true" derived="true" eOpposite="#//Feature/ownedSubsetting">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A &lt;code>subsettingFeature&lt;/code> that is also the &lt;code>owningRelatedElement&lt;/code> of this &lt;code>Subsetting&lt;/code>.&lt;/p>&#xA;&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Specialization/owningType"/>
      <eAnnotations source="subsets" references="#//Subsetting/subsettingFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureTyping" eSuperTypes="#//Specialization">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>FeatureTyping&lt;/code> is &lt;code>Specialization&lt;/code> in which the &lt;code>specific&lt;/code> &lt;code>Type&lt;/code> is a &lt;code>Feature&lt;/code>. This means the set of instances of the (specific) &lt;code>typedFeature&lt;/code> is a subset of the set of instances of the (general) &lt;code>type&lt;/code>. In the simplest case, the &lt;code>type&lt;/code> is a &lt;code>Classifier&lt;/code>, whereupon the &lt;code>typedFeature&lt;/code> has values that are instances of the &lt;code>Classifier&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typedFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typing"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that has a &lt;code>type&lt;/code> determined by this &lt;code>FeatureTyping&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Specialization/specific"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false" lowerBound="1"
        eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typingByType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Type&lt;/code> that is being applied by this &lt;code>FeatureTyping&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Specialization/general"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningFeature" ordered="false"
        eType="#//Feature" volatile="true" transient="true" derived="true" eOpposite="#//Feature/ownedTyping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A &lt;code>typedFeature&lt;/code> that is also the &lt;code>owningRelatedElement&lt;/code> of this &lt;code>FeatureTyping&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Specialization/owningType"/>
      <eAnnotations source="subsets" references="#//FeatureTyping/typedFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TypeFeaturing" eSuperTypes="#//Featuring">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>TypeFeaturing&lt;/code> is a &lt;code>Featuring&lt;/code> &lt;code>Relationship&lt;/code> in which the &lt;code>featureOfType&lt;/code> is the &lt;code>source&lt;/code> and the &lt;code>featuringType&lt;/code> is the &lt;code>target&lt;/code>.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureOfType" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeFeaturing"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is featured by the &lt;code>featuringType&lt;/code>. It is the &lt;code>source&lt;/code> of the &lt;code>TypeFeaturing&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source #//Featuring/feature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featuringType" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typeFeaturingOfType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Type&lt;/code> that features the &lt;code>featureOfType&lt;/code>. It is the &lt;code>target&lt;/code> of the &lt;code>TypeFeaturing&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target #//Featuring/type"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningFeatureOfType" ordered="false"
        eType="#//Feature" volatile="true" transient="true" derived="true" eOpposite="#//Feature/ownedTypeFeaturing">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A &lt;code>featureOfType&lt;/code> that is also the &lt;code>owningRelatedElement&lt;/code> of this &lt;code>TypeFeaturing&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//TypeFeaturing/featureOfType #//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureInverting" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>FeatureInverting&lt;/code> is a &lt;code>Relationship&lt;/code> between &lt;code>Features&lt;/code> asserting that their interpretations (sequences) are the reverse of each other, identified as &lt;code>featureInverted&lt;/code> and &lt;code>invertingFeature&lt;/code>. For example, a &lt;code>Feature&lt;/code> identifying each person&amp;#39;s parents is the inverse of a &lt;code>Feature&lt;/code> identifying each person&amp;#39;s children. A person identified as a parent of another will identify that other as one of their children.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureInverted" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="invertingFeatureInverting"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is an inverse of the &lt;code>invertingFeature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="invertingFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="invertedFeatureInverting"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is an inverse of the &lt;code>invertedFeature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningFeature" ordered="false"
        eType="#//Feature" volatile="true" transient="true" derived="true" eOpposite="#//Feature/ownedFeatureInverting">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A &lt;code>featureInverted&lt;/code> that is also the &lt;code>owningRelatedElement&lt;/code> of this &lt;code>FeatureInverting&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Relationship/owningRelatedElement #//FeatureInverting/featureInverted"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureChaining" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>FeatureChaining&lt;/code> is a &lt;code>Relationship&lt;/code> that makes its target &lt;code>Feature&lt;/code> one of the &lt;code>chainingFeatures&lt;/code> of its owning &lt;code>Feature&lt;/code>.&lt;/p>"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="chainingFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="chainedFeatureChaining"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> whose values partly determine values of &lt;code>featureChained&lt;/code>, as described in &lt;code>Feature::chainingFeature&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureChained" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true"
        eOpposite="#//Feature/ownedFeatureChaining">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> whose values are partly determined by values of the &lt;code>chainingFeature&lt;/code>, as described in &lt;code>Feature::chainingFeature&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
      <eAnnotations source="subsets" references="#//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="FeatureDirectionKind">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>FeatureDirectionKind&lt;/code> enumerates the possible kinds of &lt;code>direction&lt;/code> that a &lt;code>Feature&lt;/code> may be given as a member of a &lt;code>Type&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eLiterals name="in">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Values of the &lt;code>Feature&lt;/code> on each instance of its domain are determined externally to that instance and used internally.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="inout" value="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Values of the &lt;code>Feature&lt;/code> on each instance are determined either as &lt;em>in&lt;/em> or &lt;em>out&lt;/em> directions, or both.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="out" value="2">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Values of the &lt;code>Feature&lt;/code> on each instance of its domain are determined internally to that instance and used externally.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceSubsetting" eSuperTypes="#//Subsetting">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>ReferenceSubsetting&lt;/code> is a kind of &lt;code>Subsetting&lt;/code> in which the &lt;code>referencedFeature&lt;/code> is syntactically distinguished from other &lt;code>Features&lt;/code> subsetted by the &lt;code>referencingFeature&lt;/code>. &lt;code>ReferenceSubsetting&lt;/code> has the same semantics as &lt;code>Subsetting&lt;/code>, but the &lt;code>referenceFeature&lt;/code> may have a special purpose relative to the &lt;code>referencingFeature&lt;/code>. For instance, &lt;code>ReferenceSubsetting&lt;/code> is used to identify the &lt;code>relatedFeatures&lt;/code> of a &lt;code>Connector&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>&lt;code>ReferenceSubsetting&lt;/code> is always an &lt;code>ownedRelationship&lt;/code> of its &lt;code>referencingFeature&lt;/code>. A &lt;code>Feature&lt;/code> can have at most one &lt;code>ownedReferenceSubsetting&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencedFeature" ordered="false"
        lowerBound="1" eType="#//Feature">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="referencing"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is referenced by the &lt;code>referencingFeature&lt;/code> of this &lt;code>ReferenceSubsetting&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Subsetting/subsettedFeature"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencingFeature" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true"
        eOpposite="#//Feature/ownedReferenceSubsetting">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that owns this &lt;code>ReferenceSubsetting&lt;/code> relationship, which is also its &lt;code>subsettingFeature&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Subsetting/subsettingFeature #//Subsetting/owningFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Conjugation" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>Conjugation&lt;/code> is a &lt;code>Relationship&lt;/code> between two types in which the &lt;code>conjugatedType&lt;/code> inherits all the &lt;code>Features&lt;/code> of the &lt;code>originalType&lt;/code>, but with all &lt;code>input&lt;/code> and &lt;code>output&lt;/code> &lt;code>Features&lt;/code> reversed. That is, any &lt;code>Features&lt;/code> with a &lt;code>direction&lt;/code> &lt;em>in&lt;/em> relative to the &lt;code>originalType&lt;/code> are considered to have an effective &lt;code>direction&lt;/code> of &lt;em>out&lt;/em> relative to the &lt;code>conjugatedType&lt;/code> and, similarly, &lt;code>Features&lt;/code> with &lt;code>direction&lt;/code> &lt;em>out&lt;/em> in the &lt;code>originalType&lt;/code> are considered to have an effective &lt;code>direction&lt;/code> of &lt;em>in&lt;/em> in the &lt;code>conjugatedType&lt;/code>. &lt;code>Features&lt;/code> with &lt;code>direction&lt;/code> &lt;em>inout&lt;/em>, or with no &lt;code>direction&lt;/code>, in the &lt;code>originalType&lt;/code>, are inherited without change.&lt;/p>&#xA;&#xA;&lt;p>A &lt;code>Type&lt;/code> may participate as a &lt;code>conjugatedType&lt;/code> in at most one &lt;code>Conjugation&lt;/code> relationship, and such a &lt;code>Type&lt;/code> may not also be the &lt;code>specific&lt;/code> &lt;code>Type&lt;/code> in any &lt;code>Specialization&lt;/code> relationship.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="originalType" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="conjugation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Type&lt;/code> to be conjugated.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="conjugatedType" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="conjugator"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Type&lt;/code> that is the result of applying &lt;code>Conjugation&lt;/code> to the &lt;code>originalType&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedConjugator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>conjugatedType&lt;/code> of this &lt;code>Conjugation&lt;/code> that is also its &lt;code>owningRelatedElement&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Conjugation/conjugatedType #//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Multiplicity" eSuperTypes="#//Feature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Multiplicity&lt;/code> is a &lt;code>Feature&lt;/code> whose co-domain is a set of natural numbers giving the allowed cardinalities of each &lt;code>typeWithMultiplicity&lt;/code>. The &lt;em>cardinality&lt;/em> of a &lt;code>Type&lt;/code> is defined as follows, depending on whether the &lt;code>Type&lt;/code> is a &lt;code>Classifier&lt;/code> or &lt;code>Feature&lt;/code>.&#xA;&lt;ul>&#xA;&lt;li>&lt;code>Classifier&lt;/code> – The number of basic instances of the &lt;code>Classifier&lt;/code>, that is, those instances representing things, which are not instances of any subtypes of the &lt;code>Classifier&lt;/code> that are &lt;code>Features&lt;/code>.&#xA;&lt;li>&lt;code>Features&lt;/code> – The number of instances with the same featuring instances. In the case of a &lt;code>Feature&lt;/code> with a &lt;code>Classifier&lt;/code> as its &lt;code>featuringType&lt;/code>, this is the number of values of &lt;code>Feature&lt;/code> for each basic instance of the &lt;code>Classifier&lt;/code>. Note that, for non-unique &lt;code>Features&lt;/code>, all duplicate values are included in this count.&lt;/li>&#xA;&lt;/ul>&#xA;&#xA;&lt;p>&lt;code>Multiplicity&lt;/code> co-domains (in models) can be specified by &lt;code>Expression&lt;/code> that might vary in their results. If the &lt;code>typeWithMultiplicity&lt;/code> is a &lt;code>Classifier&lt;/code>, the domain of the &lt;code>Multiplicity&lt;/code> shall be &lt;em>&lt;code>Base::Anything&lt;/code>&lt;/em>.  If the &lt;code>typeWithMultiplicity&lt;/code> is a &lt;code>Feature&lt;/code>,  the &lt;code>Multiplicity&lt;/code> shall have the same domain as the &lt;code>typeWithMultiplicity&lt;/code>.&lt;/p>&#xA;&#xA;if owningType &lt;> null and owningType.oclIsKindOf(Feature) then&#xA;    featuringType = &#xA;        owningType.oclAsType(Feature).featuringType&#xA;else&#xA;    featuringType->isEmpty()&#xA;endif&#xA;specializesFromLibrary('Base::naturals')"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Intersecting" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>Intersecting&lt;/code> is a &lt;code>Relationship&lt;/code> that makes its &lt;code>intersectingType&lt;/code> one of the &lt;code>intersectingTypes&lt;/code> of its &lt;code>typeIntersected&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="intersectingType" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="intersectedIntersecting"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Type&lt;/code> that partly determines interpretations of &lt;code>typeIntersected&lt;/code>, as described in &lt;code>Type::intersectingType&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeIntersected" ordered="false"
        lowerBound="1" eType="#//Type" volatile="true" transient="true" derived="true"
        eOpposite="#//Type/ownedIntersecting">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Type&lt;/code> with interpretations partly determined by &lt;code>intersectingType&lt;/code>, as described in &lt;code>Type::intersectingType&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
      <eAnnotations source="subsets" references="#//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Unioning" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>Unioning&lt;/code> is a &lt;code>Relationship&lt;/code> that makes its &lt;code>unioningType&lt;/code> one of the &lt;code>unioningTypes&lt;/code> of its &lt;code>typeUnioned&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="unioningType" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="unionedUnioning"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Type&lt;/code> that partly determines interpretations of &lt;code>typeUnioned&lt;/code>, as described in &lt;code>Type::unioningType&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeUnioned" ordered="false"
        lowerBound="1" eType="#//Type" volatile="true" transient="true" derived="true"
        eOpposite="#//Type/ownedUnioning">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Type&lt;/code> with interpretations partly determined by &lt;code>unioningType&lt;/code>, as described in &lt;code>Type::unioningType&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
      <eAnnotations source="subsets" references="#//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Disjoining" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Disjoining&lt;/code> is a &lt;code>Relationship&lt;/code> between &lt;code>Types&lt;/code> asserted to have interpretations that are not shared (disjoint) between them, identified as &lt;code>typeDisjoined&lt;/code> and &lt;code>disjoiningType&lt;/code>. For example, a &lt;code>Classifier&lt;/code> for mammals is disjoint from a &lt;code>Classifier&lt;/code> for minerals, and a &lt;code>Feature&lt;/code> for people&amp;#39;s parents is disjoint from a &lt;code>Feature&lt;/code> for their children.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeDisjoined" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="disjoiningTypeDisjoining"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Type&lt;/code> asserted to be disjoint with the &lt;code>disjoiningType&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="disjoiningType" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="disjoinedTypeDisjoining"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Type&lt;/code> asserted to be disjoint with the &lt;code>typeDisjoined&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="owningType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true" eOpposite="#//Type/ownedDisjoining">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A &lt;code>typeDisjoined&lt;/code> that is also an &lt;code>owningRelatedElement&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Disjoining/typeDisjoined #//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Differencing" eSuperTypes="#//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>Differencing&lt;/code> is a &lt;code>Relationship&lt;/code> that makes its &lt;code>differencingType&lt;/code> one of the &lt;code>differencingTypes&lt;/code> of its &lt;code>typeDifferenced&lt;/code>.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="differencingType" ordered="false"
        lowerBound="1" eType="#//Type">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="differencedDifferencing"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Type&lt;/code> that partly determines interpretations of &lt;code>typeDifferenced&lt;/code>, as described in &lt;code>Type::differencingType&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="typeDifferenced" ordered="false"
        lowerBound="1" eType="#//Type" volatile="true" transient="true" derived="true"
        eOpposite="#//Type/ownedDifferencing">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Type&lt;/code> with interpretations partly determined by &lt;code>differencingType&lt;/code>, as described in &lt;code>Type::differencingType&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
      <eAnnotations source="subsets" references="#//Relationship/owningRelatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Classifier" eSuperTypes="#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Classifier&lt;/code> is a &lt;code>Type&lt;/code> that classifies:&lt;/p>&#xA;&#xA;&lt;ul>&#xA;&#x9;&lt;li>Things (in the universe) regardless of how &lt;code>Features&lt;/code> relate them. (These are interpreted semantically as sequences of exactly one thing.)&lt;/li>&#xA;&#x9;&lt;li>How the above things are related by &lt;code>Features.&lt;/code> (These are interpreted semantically as sequences of multiple things, such that the last thing in the sequence is also classified by the &lt;code>Classifier&lt;/code>. Note that this means that a &lt;code>Classifier&lt;/code> modeled as specializing a &lt;code>Feature&lt;/code> cannot classify anything.)&lt;/li>&#xA;&lt;/ul>&#xA;&#xA;&#xA;ownedSubclassification = &#xA;    ownedSpecialization->selectByKind(Subclassification)&#xA;multiplicity &lt;> null implies multiplicity.featuringType->isEmpty()"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedSubclassification"
        ordered="false" upperBound="-1" eType="#//Subclassification" volatile="true"
        transient="true" derived="true" eOpposite="#//Subclassification/owningClassifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedSpecializations&lt;/code> of this &lt;code>Classifier&lt;/code> that are &lt;code>Subclassifications&lt;/code>, for which this &lt;code>Classifier&lt;/code> is the &lt;code>subclassifier&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedSpecialization"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EndFeatureMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>EndFeatureMembership&lt;/code> is a &lt;code>FeatureMembership&lt;/code> that requires its &lt;code>memberFeature&lt;/code> be owned and have &lt;code>isEnd = true&lt;/code>.&lt;/p>&#xA;&#xA;ownedMemberFeature.isEnd"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ElementFilterMembership" eSuperTypes="#//OwningMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>ElementFilterMembership&lt;/code> is a &lt;code>Membership&lt;/code> between a &lt;code>Namespace&lt;/code> and a model-level evaluable &lt;code>&lt;em>Boolean&lt;/em>&lt;/code>-valued &lt;code>Expression&lt;/code>, asserting that imported &lt;code>members&lt;/code> of the &lt;code>Namespace&lt;/code> should be filtered using the &lt;code>condition&lt;/code> &lt;code>Expression&lt;/code>. A general &lt;code>Namespace&lt;/code> does not define any specific filtering behavior, but such behavior may be defined for various specialized kinds of &lt;code>Namespaces&lt;/code>.&lt;/p>&#xA;&#xA;condition.isModelLevelEvaluable&#xA;condition.result.specializesFromLibrary('ScalarValues::Boolean')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" ordered="false"
        lowerBound="1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningFilter"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The model-level evaluable &lt;code>Boolean&lt;/code>-valued &lt;code>Expression&lt;/code> used to filter the imported &lt;code>members&lt;/code> of the &lt;code>membershipOwningNamespace&lt;/code> of this &lt;code>ElementFilterMembership&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//OwningMembership/ownedMemberElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Expression" eSuperTypes="#//Step">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>Expression&lt;/code> is a &lt;code>Step&lt;/code> that is typed by a &lt;code>Function&lt;/code>. An &lt;code>Expression&lt;/code> that also has a &lt;code>Function&lt;/code> as its &lt;code>featuringType&lt;/code> is a computational step within that &lt;code>Function&lt;/code>. An &lt;code>Expression&lt;/code> always has a single &lt;code>result&lt;/code> parameter, which redefines the &lt;code>result&lt;/code> parameter of its defining &lt;code>function&lt;/code>. This allows &lt;code>Expressions&lt;/code> to be interconnected in tree structures, in which inputs to each &lt;code>Expression&lt;/code> in the tree are determined as the results of other &lt;code>Expression&lt;/code> in the tree.&lt;/p>&#xA;&#xA;isModelLevelEvaluable = modelLevelEvaluable(Set(Element){})&#xA;specializesFromLibrary('Performances::evaluations')&#xA;owningMembership &lt;> null and &#xA;owningMembership.oclIsKindOf(FeatureValue) implies&#xA;    let featureWithValue : Feature = &#xA;        owningMembership.oclAsType(FeatureValue).featureWithValue in&#xA;    featuringType = featureWithValue.featuringType&#xA;ownedMembership.selectByKind(ResultExpressionMembership)->&#xA;    forAll(mem | ownedFeature.selectByKind(BindingConnector)->&#xA;        exists(binding |&#xA;            binding.relatedFeature->includes(result) and&#xA;            binding.relatedFeature->includes(mem.ownedResultExpression.result)))&#xA;result =&#xA;    let resultParams : Sequence(Feature) =&#xA;        ownedFeatureMemberships->&#xA;            selectByKind(ReturnParameterMembership).&#xA;            ownedParameterMember in&#xA;    if resultParams->notEmpty() then resultParams->first()&#xA;    else if function &lt;> null then function.result&#xA;    else null&#xA;    endif endif&#xA;ownedFeatureMembership->&#xA;    selectByKind(ReturnParameterMembership)->&#xA;    size() &lt;= 1&#xA;membership->selectByKind(ResultExpressionMembership)->size() &lt;= 1"/>
    </eAnnotations>
    <eOperations name="modelLevelEvaluable" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return whether this &lt;code>Expression&lt;/code> is model-level evaluable. The &lt;code>visited&lt;/code> parameter is used to track possible circular &lt;code>Feature&lt;/code> references made from &lt;code>FeatureReferenceExpressions&lt;/code> (see the redefinition of this operation for &lt;code>FeatureReferenceExpression&lt;/code>). Such circular references are not allowed in model-level evaluable expressions.&lt;/p>&#xA;&#xA;&lt;p>An &lt;code>Expression&lt;/code> that is not otherwise specialized is model-level evaluable if it has no (non-implied) &lt;code>ownedSpecializations&lt;/code> and all its &lt;code>ownedFeatures&lt;/code> are either &lt;code>in&lt;/code> parameters, the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> or a result &lt;code>Expression&lt;/code> owned via a &lt;code>ResultExpressionMembership&lt;/code>. The &lt;code>parameters&lt;/code>  must not have any &lt;code>ownedFeatures&lt;/code> or a &lt;code>FeatureValue&lt;/code>, and the result &lt;code>Expression&lt;/code> must be model-level evaluable.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="ownedSpecialization->forAll(isImplied) and &#xA;ownedFeature->forAll(f |&#xA;    (directionOf(f) = FeatureDirectionKind::_'in' or f = result) and&#xA;        f.ownedFeature->isEmpty() and f.valuation = null or&#xA;    f.owningFeatureMembership.oclIsKindOf(ResultExpressionMembership) and&#xA;        f.oclAsType(Expression).modelLevelEvaluable(visited)&#xA;    "/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="visited" ordered="false" upperBound="-1" eType="#//Feature"/>
    </eOperations>
    <eOperations name="evaluate" unique="false" upperBound="-1" eType="#//Element">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>If this &lt;code>Expression&lt;/code> &lt;code>isModelLevelEvaluable&lt;/code>, then evaluate it using the &lt;code>target&lt;/code> as the context &lt;code>Element&lt;/code> for resolving &lt;code>Feature&lt;/code> names and testing classification. The result is a collection of &lt;code>Elements&lt;/code>, which, for a fully evaluable &lt;code>Expression&lt;/code>, will be a &lt;code>LiteralExpression&lt;/code> or a &lt;code>Feature&lt;/code> that is not an &lt;code>Expression&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let resultExprs : Sequence(Expression) =&#xA;    ownedFeatureMembership->&#xA;        selectByKind(ResultExpressionMembership).&#xA;        ownedResultExpression in&#xA;if resultExpr->isEmpty() then Sequence{}&#xA;else resultExprs->first().evaluate(target)&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="target" ordered="false" lowerBound="1" eType="#//Element"/>
    </eOperations>
    <eOperations name="checkCondition" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Model-level evaluate this &lt;code>Expression&lt;/code> with the given &lt;code>target&lt;/code>. If the result is a &lt;code>LiteralBoolean&lt;/code>, return its &lt;code>value&lt;/code>. Otherwise return &lt;code>false&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let results: Sequence(Element) = evaluate(target) in&#xA;    result->size() = 1 and&#xA;    results->first().oclIsKindOf(LiteralBoolean) and &#xA;    results->first().oclAsType(LiteralBoolean).value"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="target" ordered="false" lowerBound="1" eType="#//Element"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="function" ordered="false"
        eType="#//Function" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedExpression"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Function&lt;/code> that types this &lt;code>Expression&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>This is the Function that types the Expression.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Step/behavior"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="result" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="computingExpression"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;p>An &lt;code>output&lt;/code> &lt;code>parameter&lt;/code> of the &lt;code>Expression&lt;/code> whose value is the result of the &lt;code>Expression&lt;/code>. The result of an &lt;code>Expression&lt;/code> is either inherited from its &lt;code>function&lt;/code> or it is related to the &lt;code>Expression&lt;/code> via a &lt;code>ReturnParameterMembership&lt;/code>, in which case it redefines the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of its &lt;code>function&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Step/parameter #//Type/output"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isModelLevelEvaluable"
        ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this &lt;code>Expression&lt;/code> meets the constraints necessary to be evaluated at &lt;em>model level&lt;/em>, that is, using metadata within the model.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Step" eSuperTypes="#//Feature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Step&lt;/code> is a &lt;code>Feature&lt;/code> that is typed by one or more &lt;code>Behaviors&lt;/code>. &lt;code>Steps&lt;/code> may be used by one &lt;code>Behavior&lt;/code> to coordinate the performance of other &lt;code>Behaviors&lt;/code>, supporting a steady refinement of behavioral descriptions. &lt;code>Steps&lt;/code> can be ordered in time and can be connected using &lt;code>ItemFlows&lt;/code> to specify things flowing between their &lt;code>parameters&lt;/code>.&lt;/p>&#xA;&#xA;specializesFromLibrary('Performances::performances')&#xA;owningType &lt;> null and&#xA;    (owningType.oclIsKindOf(Behavior) or&#xA;     owningType.oclIsKindOf(Step)) implies&#xA;    specializesFromLibrary('Performances::Performance::enclosedPerformance')&#xA;isComposite and owningType &lt;> null and&#xA;(owningType.oclIsKindOf(Structure) or&#xA; owningType.oclIsKindOf(Feature) and&#xA; owningType.oclAsType(Feature).type->&#xA;    exists(oclIsKindOf(Structure)) implies&#xA;    specializesFromLibrary('Objects::Object::ownedPerformance')&#xA;owningType &lt;> null and&#xA;    (owningType.oclIsKindOf(Behavior) or&#xA;     owningType.oclIsKindOf(Step)) and&#xA;    self.isComposite implies&#xA;    specializesFromLibrary('Performances::Performance::subperformance')&#xA;behavior = type->selectByKind(Behavior)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="behavior" upperBound="-1"
        eType="#//Behavior" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedStep"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Behaviors&lt;/code> that type this &lt;code>Step&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/type"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="parameteredStep"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>parameters&lt;/code> of this &lt;code>Step&lt;/code>, which are defined as its &lt;code>directedFeatures&lt;/code>, whose values are passed into and/or out of a performance of the &lt;code>Step&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Type/directedFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Behavior" eSuperTypes="#//Class">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Behavior &lt;/code>coordinates occurrences of other &lt;code>Behaviors&lt;/code>, as well as changes in objects. &lt;code>Behaviors&lt;/code> can be decomposed into &lt;code>Steps&lt;/code> and be characterized by &lt;code>parameters&lt;/code>.&lt;/p>&#xA;&#xA;specializesFromLibrary('Performances::Performance')&#xA;step = feature->selectByKind(Step)&#xA;ownedSpecialization.general->forAll(not oclIsKindOf(Structure))"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="step" ordered="false" upperBound="-1"
        eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringBehavior"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Steps&lt;/code> that make up this &lt;code>Behavior&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/feature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="parameteredBehavior"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The parameters of this &lt;code>Behavior&lt;/code>, which are defined as its &lt;code>directedFeatures&lt;/code>, whose values are passed into and/or out of a performance of the &lt;code>Behavior&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Type/directedFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Class&lt;/code> is a &lt;code>Classifier&lt;/code> of things (in the universe) that can be distinguished without regard to how they are related to other things (via &lt;code>Features&lt;/code>). This means multiple things classified by the same &lt;code>Class&lt;/code> can be distinguished, even when they are related other things in exactly the same way.&lt;/p>&#xA;&#xA;specializesFromLibrary('Occurrences::Occurrence')&#xA;ownedSpecialization.general->&#xA;    forAll(not oclIsKindOf(DataType)) and&#xA;not oclIsKindOf(Association) implies&#xA;    ownedSpecialization.general->&#xA;        forAll(not oclIsKindOf(Association))"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Function" eSuperTypes="#//Behavior">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Function&lt;/code> is a &lt;code>Behavior&lt;/code> that has an &lt;code>out&lt;/code> &lt;code>parameter&lt;/code> that is identified as its &lt;code>result&lt;/code>. A &lt;code>Function&lt;/code> represents the performance of a calculation that produces the values of its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code>. This calculation may be decomposed into &lt;code>Expressions&lt;/code> that are &lt;code>steps&lt;/code> of the &lt;code>Function&lt;/code>.&lt;/p>&#xA;&#xA;ownedMembership.selectByKind(ResultExpressionMembership)->&#xA;    forAll(mem | ownedFeature.selectByKind(BindingConnector)->&#xA;        exists(binding |&#xA;            binding.relatedFeature->includes(result) and&#xA;            binding.relatedFeature->includes(mem.ownedResultExpression.result)))&#xA;specializesFromLibrary('Performances::Evaluation')&#xA;result =&#xA;    let resultParams : Sequence(Feature) =&#xA;        ownedFeatureMemberships->&#xA;            selectByKind(ReturnParameterMembership).&#xA;            ownedParameterMember in&#xA;    if resultParams->notEmpty() then resultParams->first()&#xA;    else null&#xA;    endif&#xA;ownedFeatureMembership->&#xA;    selectByKind(ReturnParameterMembership)->&#xA;    size() &lt;= 1&#xA;membership->selectByKind(ResultExpressionMembership)->size() &lt;= 1"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="expression" ordered="false"
        upperBound="-1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="computedFunction"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Expressions&lt;/code> that are &lt;code>steps&lt;/code> in the calculation of the &lt;code>result&lt;/code> of this &lt;code>Function&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>The set of expressions that represent computational steps or parts of a system of equations within the Function.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/step"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="result" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="computingFunction"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of the &lt;code>Function&lt;/code>, which is owned by the &lt;code>Function&lt;/code> via a &lt;code>ReturnParameterMembership&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>The object or value that is the result of evaluating the Function.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Behavior/parameter #//Type/output"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isModelLevelEvaluable"
        ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this &lt;code>Function&lt;/code> can be used as the &lt;code>function&lt;/code> of a model-level evaluable &lt;code>InvocationExpression&lt;/code>. Certain &lt;code>Functions&lt;/code> from the Kernel Functions Library are considered to have &lt;code>isModelLevelEvaluable = true&lt;/code>. For all other &lt;code>Functions&lt;/code> it is &lt;code>false&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>&lt;strong>Note:&lt;/strong> See the specification of the KerML concrete syntax notation for &lt;code>Expressions&lt;/code> for an identification of which library &lt;code>Functions&lt;/code> are model-level evaluable.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#//Namespace">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Package&lt;/code> is a &lt;code>Namespace&lt;/code> used to group &lt;code>Elements&lt;/code>, without any instance-level semantics. It may have one or more model-level evaluable &lt;code>filterCondition&lt;/code> &lt;code>Expressions&lt;/code> used to filter its &lt;code>importedMemberships&lt;/code>. Any imported &lt;code>member&lt;/code> must meet all of the &lt;code>filterConditions&lt;/code>.&lt;/p>&#xA;filterCondition = ownedMembership->&#xA;    selectByKind(ElementFilterMembership).condition"/>
    </eAnnotations>
    <eOperations name="includeAsMember" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Determine whether the given &lt;code>element&lt;/code> meets all the &lt;code>filterConditions&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let metadataFeatures: Sequence(AnnotatingElement) = &#xA;    element.ownedAnnotation.annotatingElement->&#xA;        selectByKind(MetadataFeature) in&#xA;    self.filterCondition->forAll(cond | &#xA;        metadataFeatures->exists(elem | &#xA;            cond.checkCondition(elem)))"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="element" ordered="false" lowerBound="1" eType="#//Element"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="filterCondition" upperBound="-1"
        eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="conditionedPackage"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The model-level evaluable &lt;code>&lt;em>Boolean&lt;/em>&lt;/code>-valued &lt;code>Expression&lt;/code> used to filter the &lt;code>members&lt;/code> of this &lt;code>Package&lt;/code>, which are owned by the &lt;code>Package&lt;/code> are via &lt;code>ElementFilterMemberships&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/ownedMember"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LibraryPackage" eSuperTypes="#//Package">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>LibraryPackage&lt;/code> is a &lt;code>Package&lt;/code> that is the container for a model library. A &lt;code>LibraryPackage&lt;/code> is itself a library &lt;code>Element&lt;/code> as are all &lt;code>Elements&lt;/code> that are directly or indirectly contained in it.&lt;/p>&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isStandard" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this &lt;code>LibraryPackage&lt;/code> contains a standard library model. This should only be set to true for &lt;code>LibraryPackages&lt;/code> in the standard Kernel Model Libraries or in normative model libraries for a language built on KerML.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="InvocationExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>InvocationExpression&lt;/code> is an &lt;code>Expression&lt;/code> each of whose input &lt;code>parameters&lt;/code> are bound to the &lt;code>result&lt;/code> of an &lt;code>argument&lt;/code> Expression.&lt;/p>&#xA;&#xA;not ownedTyping->exists(oclIsKindOf(Function)) and&#xA;not ownedSubsetting->reject(isImplied).subsettedFeature.type->&#xA;    exists(oclIsKindOf(Function)) implies&#xA;    ownedFeature.selectByKind(BindingConnector)->exists(&#xA;        relatedFeature->includes(self) and&#xA;        relatedFeature->includes(result))&#xA;            &#xA;TBD&#xA;ownedFeature->&#xA;    select(direction = _'in').valuation->&#xA;    select(v | v &lt;> null).value&#xA;let features : Set(Feature) = type.feature->asSet() in&#xA;input->forAll(inp | &#xA;    inp.ownedRedefinition.redefinedFeature->&#xA;        intersection(features)->size() = 1)&#xA;let features : Set(Feature) = type.feature->asSet() in&#xA;input->forAll(inp1 | input->forAll(inp2 |&#xA;    inp1 &lt;> inp2 implies&#xA;        inp1.ownedRedefinition.redefinedFeature->&#xA;            intersection(inp2.ownedRedefinition.redefinedFeature)->&#xA;            intersection(features)->isEmpty()))"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="argument" upperBound="-1"
        eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="invocation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>value&lt;/code> &lt;code>Expressions&lt;/code> of the &lt;code>FeatureValues&lt;/code> of the owned input &lt;code>parameters&lt;/code> of the &lt;code>InvocationExpression&lt;/code>."/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operand" upperBound="-1"
        eType="#//Expression" volatile="true" transient="true" derived="true" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureReferenceExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>FeatureReferenceExpression&lt;/code> is an &lt;code>Expression&lt;/code> whose &lt;code>result&lt;/code> is bound to a &lt;code>referent&lt;/code> &lt;code>Feature&lt;/code>.&lt;/p>&#xA;referent =&#xA;    let nonParameterMemberships : Sequence(Membership) = ownedMembership->&#xA;        reject(oclIsKindOf(ParameterMembership)) in&#xA;    if nonParameterMemberships->isEmpty() or&#xA;       not nonParameterMemberships->first().memberElement.oclIsKindOf(Feature)&#xA;    then null&#xA;    else nonParameterMemberships->first().memberElement.oclAsType(Feature)&#xA;    endif&#xA;ownedMember->selectByKind(BindingConnector)->exists(b |&#xA;    b.relatedFeatures->includes(targetFeature) and&#xA;    b.relatedFeatures->includes(result))&#xA;let membership : Membership = &#xA;    ownedMembership->reject(m | m.oclIsKindOf(ParameterMembership)) in&#xA;membership->notEmpty() and&#xA;membership->at(1).memberElement.oclIsKindOf(Feature)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referent" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="referenceExpression"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is referenced by this &lt;code>FeatureReferenceExpression&lt;/code>, which is its first non-&lt;code>parameter&lt;/code> &lt;code>member&lt;/code>.&lt;p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/member"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OperatorExpression" eSuperTypes="#//InvocationExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>OperatorExpression&lt;/code> is an &lt;code>InvocationExpression&lt;/code> whose &lt;code>function&lt;/code> is determined by resolving its &lt;code>operator&lt;/code> in the context of one of the standard packages from the Kernel Function Library.&lt;/p>&#xA;let libFunctions : Sequence(Element) = &#xA;    Sequence{'BaseFunctions', 'DataFunctions', 'ControlFunctions'}->&#xA;    collect(ns | resolveGlobal(ns + &quot;::'&quot; + operator + &quot;'&quot;).&#xA;    memberElement) in&#xA;libFunctions->includes(function)&#xA;    &#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="operator" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>An &lt;code>operator&lt;/code> symbol that names a corresponding &lt;code>Function&lt;/code> from one of the standard packages from the Kernel Function Library .&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralString" eSuperTypes="#//LiteralExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>LiteralString&lt;/code> is a &lt;code>LiteralExpression&lt;/code> that provides a &lt;code>&lt;em>String&lt;/em>&lt;/code> value as a result. Its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> must have the type &lt;code>&lt;em>String&lt;/em>&lt;/code>.&lt;/p>&#xA;&#xA;specializesFromLibrary('Performances::literalStringEvaluations')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//String">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>&lt;em>String&lt;/em>&lt;/code> value that is the result of evaluating this &lt;code>LiteralString&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>The String value that is the result of evaluating this Expression.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>LiteralExpression&lt;/code> is an &lt;code>Expression&lt;/code> that provides a basic &lt;code>&lt;em>DataValue&lt;/em>&lt;/code> as a result.&lt;/p>&#xA;&#xA;isModelLevelEvaluable = true&#xA;specializesFromLibrary('Performances::literalEvaluations')"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralBoolean" eSuperTypes="#//LiteralExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>&lt;code>LiteralBoolean&lt;/code> is a &lt;code>LiteralExpression&lt;/code> that provides a &lt;code>&lt;em>Boolean&lt;/em>&lt;/code> value as a result. Its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> must have type &lt;code>&lt;em>Boolean&lt;/em>&lt;/code>.&lt;/p>&#xA;&#xA;specializesFromLibrary('Performances::literalBooleanEvaluations')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>&lt;em>Boolean&lt;/em>&lt;/code> value that is the result of evaluating this &lt;code>LiteralBoolean&lt;/code>.&lt;/p>&#xA;&lt;p>The Boolean value that is the result of evaluating this Expression.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralInteger" eSuperTypes="#//LiteralExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>LiteralInteger&lt;/code> is a &lt;code>LiteralExpression&lt;/code> that provides an &lt;code>&lt;em>Integer&lt;/em>&lt;/code> value as a result. Its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> must have the type &lt;code>&lt;em>Integer&lt;/em>&lt;/code>.&lt;/p>&#xA;&#xA;specializesFromLibrary('Performances::literalIntegerEvaluations')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Integer">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>&lt;em>Integer&lt;/em>&lt;/code> value that is the result of evaluating this &lt;code>LiteralInteger&lt;/code>.&lt;/p>&#xA;&lt;p>The Integer value that is the result of evaluating this Expression.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NullExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>NullExpression&lt;/code> is an &lt;code>Expression&lt;/code> that results in a null value.&lt;/p>&#xA;&#xA;specializesFromLibrary('Performances::nullEvaluations')"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MetadataAccessExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>MetadataAccessExpression&lt;/code> is an &lt;code>Expression&lt;/code> whose &lt;code>result&lt;/code> is a sequence of instances of &lt;code>Metaclasses&lt;/code> representing all the &lt;code>MetadataFeature&lt;/code> annotations of the &lt;code>referencedElement&lt;/code>. In addition, the sequence includes an instance of the reflective &lt;code>Metaclass&lt;/code> corresponding to the MOF class of the &lt;code>referencedElement&lt;/code>, with values for all the abstract syntax properties of the &lt;code>referencedElement&lt;/code>.&lt;/p>&#xA;specializesFromLibrary('Performances::metadataAccessEvaluations')"/>
    </eAnnotations>
    <eOperations name="metaclassFeature" ordered="false" lowerBound="1" eType="#//MetadataFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return a &lt;code>MetadataFeature&lt;/code> whose &lt;code>annotatedElement&lt;/code> is the &lt;code>referencedElement&lt;/code>, whose &lt;code>metaclass&lt;/code> is the reflective &lt;code>Metaclass&lt;/code> corresponding to the MOF class of the &lt;code>referencedElement&lt;/code> and whose &lt;code>ownedFeatures&lt;/code> are bound to the MOF properties of the &lt;code>referencedElement&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="referencedElement" ordered="false"
        lowerBound="1" eType="#//Element">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="accessExpression"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p> The &lt;code>Element&lt;/code> whose metadata is being accessed.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MetadataFeature" eSuperTypes="#//Feature #//AnnotatingElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>MetadataFeature&lt;/code> is a &lt;code>Feature&lt;/code> that is an &lt;code>AnnotatingElement&lt;/code> used to annotate another &lt;code>Element&lt;/code> with metadata. It is typed by a &lt;code>Metaclass&lt;/code>. All its &lt;code>ownedFeatures&lt;/code> must redefine &lt;code>features&lt;/code> of its &lt;code>metaclass&lt;/code> and any feature bindings must be model-level evaluable.&lt;/p>&#xA;&#xA;&#xA;specializesFromLibrary('Metaobjects::metaobjects')&#xA;isSemantic() implies&#xA;    let annotatedTypes : Sequence(Type) = &#xA;        annotatedElement->selectAsKind(Type) in&#xA;    let baseTypes : Sequence(MetadataFeature) = &#xA;        evaluateFeature(resolveGlobal(&#xA;            'Metaobjects::SemanticMetadata::baseType').&#xA;            memberElement.&#xA;            oclAsType(Feature))->&#xA;        selectAsKind(MetadataFeature) in&#xA;    annotatedTypes->notEmpty() and &#xA;    baseTypes()->notEmpty() and &#xA;    baseTypes()->first().isSyntactic() implies&#xA;        let annotatedType : Type = annotatedTypes->first() in&#xA;        let baseType : Element = baseTypes->first().syntaxElement() in&#xA;        if annotatedType.oclIsKindOf(Classifier) and &#xA;            baseType.oclIsKindOf(Feature) then&#xA;            baseType.oclAsType(Feature).type->&#xA;                forAll(t | annotatedType.specializes(t))&#xA;        else if baseType.oclIsKindOf(Type) then&#xA;            annotatedType.specializes(baseType.oclAsType(Type))&#xA;        else&#xA;            true&#xA;        endif&#xA;not metaclass.isAbstract&#xA;let baseAnnotatedElementFeature : Feature =&#xA;    resolveGlobal('Metaobjects::Metaobject::annotatedElement').memberElement.&#xA;    oclAsType(Feature) in&#xA;let annotatedElementFeatures : OrderedSet(Feature) = feature->&#xA;    select(specializes(baseAnnotatedElementFeature))->&#xA;    excluding(baseAnnotatedElementFeature) in&#xA;annotatedElementFeatures->notEmpty() implies&#xA;    let annotatedElementTypes : Set(Feature) =&#xA;        annotatedElementFeatures.typing.type->asSet() in&#xA;    let metaclasses : Set(Metaclass) =&#xA;        annotatedElement.oclType().qualifiedName->collect(qn | &#xA;            resolveGlobal(qn).memberElement.oclAsType(Metaclass)) in&#xA;   metaclasses->forAll(m | annotatedElementTypes->exists(t | m.specializes(t)))&#xA;ownedFeature->closure(ownedFeature)->forAll(f |&#xA;    f.declaredName = null and f.declaredShortName = null and&#xA;    f.valuation &lt;> null implies f.valuation.value.isModelLevelEvaluable and&#xA;    f.redefinition.redefinedFeature->size() = 1)&#xA;metaclass = &#xA;    let metaclassTypes : Sequence(Type) = type->selectByKind(Metaclass) in&#xA;    if metaclassTypes->isEmpty() then null&#xA;    else metaClassTypes->first()&#xA;    endif&#xA;type->selectByKind(Metaclass).size() = 1"/>
    </eAnnotations>
    <eOperations name="evaluateFeature" ordered="false" upperBound="-1" eType="#//Element">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>If the given &lt;code>baseFeature&lt;/code> is a &lt;code>feature&lt;/code> of this &lt;code>MetadataFeature&lt;/code>, or is directly or indirectly redefined by a &lt;code>feature&lt;/code>, then return the result of evaluating the appropriate (model-level evaluable) &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> for it (if any), with the &lt;code>MetadataFeature&lt;/code> as the target.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let selectedFeatures : Sequence(Feature) = feature->&#xA;    select(closure(ownedRedefinition.redefinedFeature)->&#xA;           includes(baseFeature)) in&#xA;if selectedFeatures->isEmpty() then null&#xA;else&#xA;    let selectedFeature : Feature = selectedFeatures->first() in&#xA;    let featureValues : FeatureValue = selectedFeature->&#xA;        closure(ownedRedefinition.redefinedFeature).ownedMember->&#xA;        selectAsKind(FeatureValue) in&#xA;    if featureValues->isEmpty() then null&#xA;    else featureValues->first().value.evaluate(self)&#xA;    endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="baseFeature" ordered="false" lowerBound="1" eType="#//Feature"/>
    </eOperations>
    <eOperations name="isSemantic" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Check if this &lt;code>MetadataFeature&lt;/code> has a &lt;code>metaclass&lt;/code> which is a kind of &lt;code>&lt;em>SemanticMetadata&lt;/code>.&lt;p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="specializesFromLibrary('Metaobjects::SemanticMetadata')"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eOperations name="isSyntactic" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Check if this &lt;code>MetadataFeature&lt;/code> has a &lt;code>metaclass&lt;/code> that is a kind of &lt;code>&lt;em>KerML::Element&lt;/em>&lt;/code> (that is, it is from the reflective abstract syntax model).&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="specializesFromLibrary('KerML::Element')"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eOperations name="syntaxElement" ordered="false" eType="#//Element">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>If this &lt;code>MetadataFeature&lt;/code> reflectively represents a model element, then return the corresponding &lt;code>Element&lt;/code> instance from the MOF abstract syntax representation of the model.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="No OCL"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metaclass" ordered="false"
        eType="#//Metaclass" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedMetadata"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>type&lt;/code> of this &lt;code>MetadataFeature&lt;/code>, which must be a &lt;code>Metaclass&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Feature/type"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Metaclass" eSuperTypes="#//Structure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Metaclass&lt;/code> is a &lt;code>Structure&lt;/code> used to type &lt;code>MetadataFeatures&lt;/code>.&lt;/p>&#xA;specializesFromLibrary('Metaobjects::Metaobject')"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Structure" eSuperTypes="#//Class">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Structure&lt;/code> is a &lt;code>Class&lt;/code> of objects in the modeled universe that are primarily structural in nature. While such an object is not itself behavioral, it may be involved in and acted on by &lt;code>Behaviors&lt;/code>, and it may be the performer of some of them.&lt;/p>&#xA;&#xA;specializesFromLibrary('Objects::Object')&#xA;ownedSpecialization.general->forAll(not oclIsKindOf(Behavior))"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SelectExpression" eSuperTypes="#//OperatorExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>SelectExpression&lt;/code> is an &lt;code>OperatorExpression&lt;/code> whose operator is &lt;code>&quot;select&quot;&lt;/code>, which resolves to the &lt;code>Function&lt;/code> &lt;em>&lt;code>ControlFunctions::select&lt;/code>&lt;/em> from the Kernel Functions Library.&lt;/p>&#xA;operator = 'select'"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureChainExpression" eSuperTypes="#//OperatorExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>FeatureChainExpression&lt;/code> is an &lt;code>OperatorExpression&lt;/code> whose operator is &lt;code>&quot;.&quot;&lt;/code>, which resolves to the &lt;code>Function&lt;/code> &lt;em>&lt;code>ControlFunctions::'.'&lt;/code>&lt;/em> from the Kernel Functions Library. It evaluates to the result of chaining the &lt;code>result&lt;/code> &lt;code>Feature&lt;/code> of its single &lt;code>argument&lt;/code> &lt;code>Expression&lt;/code> with its &lt;code>targetFeature&lt;/code>.&lt;/p>&#xA;let sourceParameter : Feature = sourceTargetFeature() in&#xA;sourceTargetFeature &lt;> null and&#xA;sourceTargetFeature.redefinesFromLibrary('ControlFunctions::\'.\'::source::target')&#xA;let sourceParameter : Feature = sourceTargetFeature() in&#xA;sourceTargetFeature &lt;> null and&#xA;sourceTargetFeature.redefines(targetFeature)&#xA;targetFeature =&#xA;    let nonParameterMemberships : Sequence(Membership) = ownedMembership->&#xA;        reject(oclIsKindOf(ParameterMembership)) in&#xA;    if nonParameterMemberships->isEmpty() or&#xA;       not nonParameterMemberships->first().memberElement.oclIsKindOf(Feature)&#xA;    then null&#xA;    else nonParameterMemberships->first().memberElement.oclAsType(Feature)&#xA;    endif&#xA;argument->notEmpty() implies&#xA;    targetFeature.featuringType->forAll(t | &#xA;        t.specializes(argument->at(1).result))"/>
    </eAnnotations>
    <eOperations name="sourceTargetFeature" ordered="false" eType="#//Feature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return the first &lt;code>ownedFeature&lt;/code> of the first owned input &lt;code>parameter&lt;/code> of this &lt;code>FeatureChainExpression&lt;/code> (if any).&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="let inputParameters : Feature = ownedFeatures->&#xA;    select(direction = _'in') in&#xA;if inputParameters->isEmpty() or &#xA;   inputParameters->first().ownedFeature->isEmpty()&#xA;then null&#xA;else inputParameters->first().ownedFeature->first()&#xA;endif"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetFeature" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="chainExpression"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is accessed by this &lt;code>FeatureChainExpression&lt;code>, which is its first non-&lt;code>parameter&lt;/code> &lt;code>member&lt;/code>.&lt;p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Namespace/member"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CollectExpression" eSuperTypes="#//OperatorExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>CollectExpression&lt;/code> is an &lt;code>OperatorExpression&lt;/code> whose &lt;code>operator&lt;/code> is &lt;code>&quot;collect&quot;&lt;/code>, which resolves to the &lt;code>Function&lt;/code> &lt;em>&lt;code>ControlFunctions::collect&lt;/code>&lt;/em> from the Kernel Functions Library.&lt;/p>&#xA;operator = &quot;collect&quot;"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralInfinity" eSuperTypes="#//LiteralExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>LiteralInfinity&lt;/code> is a &lt;code>LiteralExpression&lt;/code> that provides the positive infinity value (&lt;code>*&lt;/code>). It's &lt;code>result&lt;/code> must have the type &lt;code>&lt;em>Positive&lt;/em>&lt;/code>.&lt;/p>&#xA;&#xA;specializesFromLibrary('Performances::literalIntegerEvaluations')"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LiteralRational" eSuperTypes="#//LiteralExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>LiteralRational&lt;/code> is a &lt;code>LiteralExpression&lt;/code> that provides a &lt;code>&lt;em>Rational&lt;/em>&lt;/code> value as a result. Its &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> must have the type &lt;code>&lt;em>Rational&lt;/em>&lt;/code>.&lt;/p>&#xA;&#xA;specializesFromLibrary('Performances::literalRationalEvaluations')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Real">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The value whose rational approximation is the result of evaluating this &lt;code>LiteralRational&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>The Real value that is the result of evaluating this Expression.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MultiplicityRange" eSuperTypes="#//Multiplicity">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>MultiplicityRange&lt;/code> is a &lt;code>Multiplicity&lt;/code> whose value is defined to be the (inclusive) range of natural numbers given by the result of a &lt;code>lowerBound&lt;/code> &lt;code>Expression&lt;/code> and the result of an &lt;code>upperBound&lt;/code> &lt;code>Expression&lt;/code>. The result of these &lt;code>Expressions&lt;/code> shall be of type &lt;code>&lt;em>Natural&lt;/em>&lt;/code>. If the result of the &lt;code>upperBound&lt;/code> &lt;code>Expression&lt;/code> is the unbounded value &lt;code>*&lt;/code>, then the specified range includes all natural numbers greater than or equal to the &lt;code>lowerBound&lt;/code> value. If no &lt;code>lowerBound&lt;/code> &lt;code>Expression&lt;/code>, then the default is that the lower bound has the same value as the upper bound, except if the &lt;code>upperBound&lt;/code> evaluates to &lt;code>*&lt;/code>, in which case the default for the lower bound is 0.&lt;/p>&#xA;&#xA;bound->forAll(b | b.featuringType = self.featuringType)&#xA;bound->forAll(b |&#xA;    b.result.specializesFromLibrary('ScalarValues::Integer') and&#xA;    let value : UnlimitedNatural = valueOf(b) in&#xA;    value &lt;> null implies value >= 0&#xA;)&#xA;lowerBound =&#xA;    let ownedMembers : Sequence(Element) = &#xA;        ownedMembership->selectByKind(OwningMembership).ownedMember in&#xA;    if ownedMembers->size() &lt; 2 or &#xA;        not ownedMembers->first().oclIsKindOf(Expression) then null&#xA;    else ownedMembers->first().oclAsType(Expression)&#xA;    endif&#xA;upperBound =&#xA;    let ownedMembers : Sequence(Element) = &#xA;        ownedMembership->selectByKind(OwningMembership).ownedMember in&#xA;    if ownedMembers->isEmpty() or &#xA;       not ownedMembers->last().oclIsKindOf(Expression) &#xA;    then null&#xA;    else ownedMembers->last().oclAsType(Expression)&#xA;    endif "/>
    </eAnnotations>
    <eOperations name="hasBounds" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Check whether this &lt;code>MultiplicityRange&lt;/code> represents the range bounded by the given values &lt;code>lower&lt;/code> and &lt;code>upper&lt;/code>, presuming the &lt;code>lowerBound&lt;/code> and &lt;code>upperBound&lt;/code> &lt;code>Expressions&lt;/code> are model-level evaluable.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="valueOf(upperBound) = upper and&#xA;let lowerValue: UnlimitedNatural = valueOf(lowerBound) in&#xA;(lowerValue = lower or&#xA; lowerValue = null and &#xA;    (lower = upper or &#xA;     lower = 0 and upper = *))&#xA; "/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="lower" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//Integer"/>
      <eParameters name="upper" ordered="false" lowerBound="1" eType="ecore:EDataType types.ecore#//UnlimitedNatural"/>
    </eOperations>
    <eOperations name="valueOf" ordered="false" eType="ecore:EDataType types.ecore#//UnlimitedNatural">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Evaluate the given &lt;code>bound&lt;/code> &lt;code>Expression&lt;/code> (at model level) and return the result represented as a MOF &lt;code>UnlimitedNatural&lt;/code> value.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="if bound = null or not bound.isModelLevelEvaluable then &#xA;    null&#xA;else&#xA;    let boundEval: Sequence(Element) = bound.evaluate(owningType) in&#xA;    if boundEval->size() &lt;> 1 then null else&#xA;        let valueEval: Element = boundEval->at(1) in&#xA;        if valueEval.oclIsKindOf(LiteralInfinity) then *&#xA;        else if valueEval.oclIsKindOf(LiteralInteger) then&#xA;            let value : Integer = &#xA;                valueEval.oclAsKindOf(LiteralInteger).value in&#xA;            if value >= 0 then value else null endif&#xA;        else null&#xA;        endif endif&#xA;    endif&#xA;endif "/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
      <eParameters name="bound" ordered="false" eType="#//Expression"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lowerBound" ordered="false"
        eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="multiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Expression&lt;/code> whose result provides the lower bound of the &lt;code>MultiplicityRange&lt;/code>. If no &lt;code>lowerBound&lt;/code> &lt;code>Expression&lt;/code> is given, then the lower bound shall have the same value as the upper bound, unless the upper bound is unbounded (&lt;code>*&lt;/code>), in which case the lower bound shall be 0.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//MultiplicityRange/bound"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="upperBound" ordered="false"
        lowerBound="1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="multiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Expression&lt;/code> whose result is the upper bound of the &lt;code>MultiplicityRange&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//MultiplicityRange/bound"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="bound" lowerBound="1" upperBound="2"
        eType="#//Expression" changeable="false" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="multiplicity"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The owned &lt;code>Expressions&lt;/code> of the &lt;code>MultiplicityRange&lt;/code> whose results provide its bounds. These must be the only &lt;code>ownedMembers&lt;/code> of the &lt;code>MultiplicityRange&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="union"/>
      <eAnnotations source="redefines" references="#//Namespace/ownedMember"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureValue" eSuperTypes="#//OwningMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>FeatureValue&lt;/code> is a &lt;code>Membership&lt;/code> that identifies a particular member &lt;code>Expression&lt;/code> that provides the value of the &lt;code>Feature&lt;/code> that owns the &lt;code>FeatureValue&lt;/code>. The value is specified as either a bound value or an initial value, and as either a concrete or default value. A &lt;code>Feature&lt;/code> can have at most one &lt;code>FeatureValue&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>The result of the &lt;code>value&lt;/code> &lt;code>Expression&lt;/code> is bound to the &lt;code>featureWithValue&lt;/code> using a &lt;code>BindingConnector&lt;/code>. If &lt;code>isInitial = false&lt;/code>, then the &lt;code>featuringType&lt;/code> of the &lt;code>BindingConnector&lt;/code> is the same as the &lt;code>featuringType&lt;/code> of the &lt;code>featureWithValue&lt;/code>. If &lt;code>isInitial = true&lt;/code>, then the &lt;code>featuringType&lt;/code> of the &lt;code>BindingConnector&lt;/code> is restricted to its &lt;code>startShot&lt;/code>.&#xA;&#xA;&lt;p>If &lt;code>isDefault = false&lt;/code>, then the above semantics of the &lt;code>FeatureValue&lt;/code> are realized for the given &lt;code>featureWithValue&lt;/code>. Otherwise, the semantics are realized for any individual of the &lt;code>featuringType&lt;/code> of the &lt;code>featureWithValue&lt;/code>, unless another value is explicitly given for the &lt;code>featureWithValue&lt;/code> for that individual.&lt;/p>&#xA;&#xA;not isDefault implies&#xA;    featureWithValue.ownedMember->&#xA;        selectByKind(BindingConnector)->exists(b |&#xA;            b.relatedFeature->includes(featureWithValue) and&#xA;            b.relatedFeature->includes(value.result) and&#xA;            if not isInitial then &#xA;                b.featuringType = featureWithValue.featuringType&#xA;            else &#xA;                b.featuringType->exists(t |&#xA;                    t.oclIsKindOf(Feature) and&#xA;                    t.oclAsType(Feature).chainingFeature =&#xA;                        Sequence{&#xA;                            resolveGlobal('Base::things::that').&#xA;                                memberElement,&#xA;                            resolveGlobal('Occurrences::Occurrence::startShot').&#xA;                                memberElement&#xA;                        }&#xA;                )&#xA;            endif)&#xA;featureWithValue.redefinition.redefinedFeature->&#xA;    closure(redefinition.redefinedFeature).valuation->&#xA;    forAll(isDefault)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureWithValue" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="valuation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> to be provided a value.&lt;/p>&#xA;&#xA;&lt;p>The Feature to be provided a value.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Membership/membershipOwningNamespace"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="value" ordered="false"
        lowerBound="1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="expressedValuation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Expression&lt;/code> that provides the value of the &lt;code>featureWithValue&lt;/code> as its &lt;code>result&lt;/code>.&lt;/p>&#xA;&#xA;&lt;p>The Expression that provides the value as a result.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//OwningMembership/ownedMemberElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isInitial" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this &lt;code>FeatureValue&lt;/code> specifies a bound value or an initial value for the &lt;code>featureWithValue&lt;/code>.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDefault" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this &lt;code>FeatureValue&lt;/code> is a concrete specification of the bound or initial value of the &lt;code>featureWithValue&lt;/code>, or just a default value that may be overridden.&lt;/p>"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BindingConnector" eSuperTypes="#//Connector">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>BindingConnector&lt;/code> is a binary &lt;code>Connector&lt;/code> that requires its &lt;code>relatedFeatures&lt;/code> to identify the same things (have the same values).&lt;/p>&#xA;&#xA;specializesFromLibrary('Links::selfLinks')&#xA;relatedFeature->size() = 2"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Connector" eSuperTypes="#//Feature #//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Connector&lt;/code> is a usage of &lt;code>Associations&lt;/code>, with links restricted according to instances of the &lt;code>Type&lt;/code> in which they are used (domain of the &lt;code>Connector&lt;/code>). The &lt;code>associations&lt;/code> of the &lt;code>Connector&lt;/code> restrict what kinds of things might be linked. The &lt;code>Connector&lt;/code> further restricts these links to be between values of &lt;code>Features&lt;/code> on instances of its domain.&lt;/p>&#xA;&#xA;relatedFeature = connectorEnd.ownedReferenceSubsetting->&#xA;    select(s | s &lt;> null).subsettedFeature&#xA;relatedFeature->forAll(f | &#xA;    if featuringType->isEmpty() then f.isFeaturedWithin(null)&#xA;    else featuringType->forAll(t | f.isFeaturedWithin(t))&#xA;    endif)&#xA;sourceFeature = &#xA;    if relatedFeature->isEmpty() then null &#xA;    else relatedFeature->first() &#xA;    endif&#xA;targetFeature =&#xA;    if relatedFeature->size() &lt; 2 then OrderedSet{}&#xA;    else &#xA;        relatedFeature->&#xA;            subSequence(2, relatedFeature->size())->&#xA;            asOrderedSet()&#xA;    endif&#xA;not isAbstract implies relatedFeature->size() >= 2&#xA;specializesFromLibrary('Links::links')&#xA;association->exists(oclIsKindOf(AssociationStructure)) implies&#xA;    specializesFromLibrary('Objects::linkObjects')&#xA;connectorEnds->size() = 2 and&#xA;association->exists(oclIsKindOf(AssocationStructure)) implies&#xA;    specializesFromLibrary('Objects::binaryLinkObjects')&#xA;connectorEnd->size() = 2 implies&#xA;    specializesFromLibrary('Links::binaryLinks')&#xA;connectorEnds->size() > 2 implies&#xA;    not specializesFromLibrary('Links::BinaryLink')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedFeature" unique="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="connector"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Features&lt;/code> that are related by this &lt;code>Connector&lt;/code> considered as a &lt;code>Relationship&lt;/code> and that restrict the links it identifies, given by the referenced &lt;code>Features&lt;/code> of the &lt;code>connectorEnds&lt;/code> of the &lt;code>Connector&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/relatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="association" upperBound="-1"
        eType="#//Association" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedConnector"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Associations&lt;/code> that type the &lt;code>Connector&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Feature/type"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="connectorEnd" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="featuringConnector"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>endFeatures&lt;/code> of a &lt;code>Connector&lt;/code>, which redefine the &lt;code>endFeatures&lt;/code> of the &lt;code>associations&lt;/code> of the &lt;code>Connector&lt;/code>. The &lt;code>connectorEnds&lt;/code> determine via &lt;code>ReferenceSubsetting&lt;/code> &lt;code>Relationships&lt;/code> which &lt;code>Features&lt;/code> are related by the &lt;code>Connector&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Type/endFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceFeature" eType="#//Feature"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="sourceConnector"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The source &lt;code>relatedFeature&lt;/code> for this &lt;code>Connector&lt;/code>. It is the first &lt;code>relatedFeature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
      <eAnnotations source="subsets" references="#//Connector/relatedFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetFeature" upperBound="-1"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="targetConnector"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The target &lt;code>relatedFeatures&lt;/code> for this &lt;code>Connector&lt;/code>. This includes all the &lt;code>relatedFeatures&lt;/code> other than the &lt;code>sourceFeature&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
      <eAnnotations source="subsets" references="#//Connector/relatedFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Association" eSuperTypes="#//Classifier #//Relationship">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>Association&lt;/code> is a &lt;code>Relationship&lt;/code> and a &lt;code>Classifier&lt;/code> to enable classification of links between things (in the universe). The co-domains (&lt;code>types&lt;/code>) of the &lt;code>associationEnd&lt;/code> &lt;code>Features&lt;/code> are the &lt;code>relatedTypes&lt;/code>, as co-domain and participants (linked things) of an &lt;code>Association&lt;/code> identify each other.&lt;/p>&#xA;&#xA;relatedType = associationEnd.type&#xA;specializesFromLibrary('Links::Link')&#xA;oclIsKindOf(Structure) = oclIsKindOf(AssociationStructure)&#xA;associationEnd->size() = 2 implies&#xA;    specializesFromLibrary('Links::BinaryLink')&#xA;not isAbstract implies relatedType->size() >= 2&#xA;associationEnds->size() > 2 implies&#xA;    not specializesFromLibrary('Links::BinaryLink')&#xA;sourceType =&#xA;    if relatedType->isEmpty() then null&#xA;    else relatedType->first() endif&#xA;targetType =&#xA;    if relatedType->size() &lt; 2 then OrderedSet{}&#xA;    else &#xA;        relatedType->&#xA;            subSequence(2, relatedType->size())->&#xA;            asOrderedSet() &#xA;    endif"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedType" unique="false"
        upperBound="-1" eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="association"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>types&lt;/code> of the &lt;code>associationEnds&lt;/code> of the &lt;code>Association&lt;/code>, which are the &lt;code>relatedElements&lt;/code> of the &lt;code>Association&lt;/code> considered as a &lt;code>Relationship&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/relatedElement"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceType" ordered="false"
        eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="sourceAssociation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The source &lt;code>relatedType&lt;/code> for this &lt;code>Association&lt;/code>. It is the first &lt;code>relatedType&lt;/code> of the &lt;code>Association&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/source"/>
      <eAnnotations source="subsets" references="#//Association/relatedType"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetType" ordered="false"
        upperBound="-1" eType="#//Type" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="targetAssociation"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The target &lt;code>relatedTypes&lt;/code> for this &lt;code>Association&lt;/code>. This includes all the &lt;code>relatedTypes&lt;/code> other than the &lt;code>sourceType&lt;/code>.&lt;/p> &#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Relationship/target"/>
      <eAnnotations source="subsets" references="#//Association/relatedType"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="associationEnd" ordered="false"
        upperBound="-1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="associationWithEnd"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>features&lt;/code> of the &lt;code>Association&lt;/code> that identify the things that can be related by it. A concrete &lt;code>Association&lt;/code> must have at least two &lt;code>associationEnds&lt;/code>. When it has exactly two, the &lt;code>Association&lt;/code> is called a &lt;em>binary&lt;/em> &lt;code>Association&lt;/code>.&lt;/p> &#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Type/endFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Succession" eSuperTypes="#//Connector">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Succession&lt;/code> is a binary &lt;code>Connector&lt;/code> that requires its &lt;code>relatedFeatures&lt;/code> to happen separately in time.&lt;/p>&#xA;&#xA;specializesFromLibrary('Occurences::happensBeforeLinks')&#xA;transitionStep =&#xA;    if owningNamespace.oclIsKindOf(Step) and &#xA;        owningNamespace.oclAsType(Step).&#xA;            specializesFromLibrary('TransitionPerformances::TransitionPerformance') then&#xA;        owningNamespace.oclAsType(Step)&#xA;    else null&#xA;    endif&#xA;triggerStep =&#xA;    if transitionStep = null or &#xA;       transitionStep.ownedFeature.size() &lt; 2 or&#xA;       not transitionStep.ownedFeature->at(2).oclIsKindOf(Step) &#xA;    then Set{}&#xA;    else Set{transitionStep.ownedFeature->at(2).oclAsType(Step)}&#xA;    endif&#xA;effectStep =&#xA;    if transitionStep = null or &#xA;       transitionStep.ownedFeature.size() &lt; 4 or&#xA;       not transitionStep.ownedFeature->at(4).oclIsKindOf(Step) &#xA;    then Set{}&#xA;    else Set{transitionStep.ownedFeature->at(4).oclAsType(Step)}&#xA;    endif&#xA;guardExpression =&#xA;    if transitionStep = null or &#xA;       transitionStep.ownedFeature.size() &lt; 3 or&#xA;       not transitionStep.ownedFeature->at(3).oclIsKindOf(Expression) &#xA;    then Set{}&#xA;    else Set{transitionStep.ownedFeature->at(3).oclAsType(Expression)}&#xA;    endif"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="transitionStep" ordered="false"
        eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>A &lt;code>Step&lt;/code> that is typed by the &lt;code>Behavior&lt;/code> &lt;code>&lt;em>TransitionPerformances::TransitionPerformance&lt;/em>&lt;/code> (from the Kernel Semantic Library) that has this &lt;code>Succession&lt;/code> as its &lt;em>&lt;code>transitionLink&lt;/code>&lt;/em>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="triggerStep" ordered="false"
        upperBound="-1" eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Steps&lt;/code> that map incoming events to the timing of occurrences of the &lt;code>transitionStep&lt;/code>. The values of &lt;code>triggerStep&lt;/code> subset the list of acceptable events to be received by a &lt;code>Behavior&lt;/code> or the object that performs it.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="effectStep" ordered="false"
        upperBound="-1" eType="#//Step" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Steps&lt;/code> that represent occurrences that are side effects of the &lt;code>transitionStep&lt;/code> occurring.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="guardExpression" ordered="false"
        upperBound="-1" eType="#//Expression" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="succession"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>&lt;code>Expressions&lt;/code> that must evaluate to true before the &lt;code>transitionStep&lt;/code> can occur.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Invariant" eSuperTypes="#//BooleanExpression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>Invariant&lt;/code> is a &lt;code>BooleanExpression&lt;/code> that is asserted to have a specific &lt;code>&lt;em>Boolean&lt;/em>&lt;/code> result value. If &lt;code>isNegated = false&lt;/code>, then the result is asserted to be true. If &lt;code>isNegated = true&lt;/code>, then the result is asserted to be false.&lt;/p>&#xA;&#xA;if isNegated then&#xA;    specializesFromLibrary('Performances::falseEvaluations')&#xA;else&#xA;    specializesFromLibrary('Performances::trueEvaluations')&#xA;endif"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isNegated" ordered="false"
        lowerBound="1" eType="ecore:EDataType types.ecore#//Boolean" defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Whether this &lt;code>Invariant&lt;/code> is asserted to be false rather than true.&lt;/p>&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanExpression" eSuperTypes="#//Expression">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>BooleanExpression&lt;/code> is a &lt;em>&lt;code>Boolean&lt;/code>&lt;/em>-valued &lt;code>Expression&lt;/code> whose type is a &lt;code>Predicate&lt;/code>. It represents a logical condition resulting from the evaluation of the &lt;code>Predicate&lt;/code>.&lt;/p>&#xA;&#xA;specializesFromLibrary('Performances::booleanEvaluations')"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="predicate" ordered="false"
        eType="#//Predicate" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="typedBooleanExpression"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Predicate&lt;/code> that types this &lt;code>BooleanExpression&lt;/code>.&lt;/p>&#xA;&lt;p>The Predicate that types the Expression.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Expression/function"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Predicate" eSuperTypes="#//Function">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>Predicate&lt;/code> is a &lt;code>Function&lt;/code> whose &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> has type &lt;code>&lt;em>Boolean&lt;/em>&lt;/code> and multiplicity &lt;code>1..1&lt;/code>.&lt;/p>&#xA;&#xA;specializesFromLibrary('Performances::BooleanEvaluation')"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReturnParameterMembership" eSuperTypes="#//ParameterMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>ReturnParameterMembership&lt;/code> is a &lt;code>ParameterMembership&lt;/code> that indicates that the &lt;code>ownedMemberParameter&lt;/code> is the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of a &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code>. The &lt;code>direction&lt;/code> of the &lt;code>ownedMemberParameter&lt;/code> must be &lt;code>out&lt;/code>.&lt;/p>&#xA;&#xA;owningType.oclIsKindOf(Function) or owningType.oclIsKindOf(Expression)"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ParameterMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>ParameterMembership&lt;/code> is a &lt;code>FeatureMembership&lt;/code> that identifies its &lt;code>memberFeature&lt;/code> as a parameter, which is always owned, and must have a &lt;code>direction&lt;/code>. A &lt;code>ParameterMembership&lt;/code> must be owned by a &lt;code>Behavior&lt;/code> or a &lt;code>Step&lt;/code>.&lt;/p>&#xA;ownedMemberParameter.direction = parameterDirection()&#xA;owningType.oclIsKindOf(Behavior) or owningType.oclIsKindOf(Step)"/>
    </eAnnotations>
    <eOperations name="parameterDirection" ordered="false" lowerBound="1" eType="#//FeatureDirectionKind">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>Return the required value of the &lt;code>direction&lt;/code> of the &lt;code>ownedMemberParameter&lt;/code>. By default, this is &lt;code>in&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
        <details key="body" value="FeatureDirectionKind::_'in'"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMemberParameter" ordered="false"
        lowerBound="1" eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningParameterMembership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that is identified as a &lt;code>parameter&lt;/code> by this &lt;code>ParameterMembership&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/ownedMemberFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResultExpressionMembership" eSuperTypes="#//FeatureMembership">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>ResultExpressionMembership&lt;/code> is a &lt;code>FeatureMembership&lt;/code> that indicates that the &lt;code>ownedResultExpression&lt;/code> provides the result values for the &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code> that owns it. The owning &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code> must contain a &lt;code>BindingConnector&lt;/code> between the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of the &lt;code>ownedResultExpression&lt;/code> and the &lt;code>result&lt;/code> &lt;code>parameter&lt;/code> of the owning &lt;code>Function&lt;/code> or &lt;code>Expression&lt;/code>.&lt;/p>&#xA;&#xA;owningType.oclIsKindOf(Function) or owningType.oclIsKindOf(Expression)"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="ownedResultExpression"
        ordered="false" lowerBound="1" eType="#//Expression" volatile="true" transient="true"
        derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="owningResultExpressionMembership"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Expression&lt;/code> that provides the result for the owner of the &lt;code>ResultExpressionMembership&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//FeatureMembership/ownedMemberFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DataType" eSuperTypes="#//Classifier">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>DataType&lt;/code> is a &lt;code>Classifier&lt;/code> of things (in the universe) that can only be distinguished by how they are related to other things (via Features). This means multiple things classified by the same &lt;code>DataType&lt;/code>&lt;/p>&#xA;&#xA;&lt;ul>&#xA;&#x9;&lt;li>Cannot be distinguished when they are related to other things in exactly the same way, even when they are intended to be about different things.&lt;/li>&#xA;&#x9;&lt;li>Can be distinguished when they are related to other things in different ways, even when they are intended to be about the same thing.&lt;/li>&#xA;&lt;/ul>&#xA;&#xA;specializesFromLibrary('Base::DataValue')&#xA;ownedSpecialization.general->&#xA;    forAll(not oclIsKindOf(Class) and &#xA;           not oclIsKindOf(Association))"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Interaction" eSuperTypes="#//Association #//Behavior">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>Interaction&lt;/code> is a &lt;code>Behavior&lt;/code> that is also an &lt;code>Association&lt;/code>, providing a context for multiple objects that have behaviors that impact one another.&lt;/p>&#xA;"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFlowEnd" eSuperTypes="#//Feature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>ItemFlowEnd&lt;/code> is a &lt;code>Feature&lt;/code> that is one of the &lt;code>connectorEnds&lt;/code> giving the &lt;code>&lt;em>source&lt;/em>&lt;/code> or &lt;code>&lt;em>target&lt;/em>&lt;/code> of an &lt;code>ItemFlow&lt;/code>. For &lt;code>ItemFlows&lt;/code> typed by &lt;code>&lt;em>FlowTransfer&lt;/em>&lt;/code> or its specializations, &lt;code>ItemFlowEnds&lt;/code> must have exactly one &lt;code>ownedFeature&lt;/code>, which redefines &lt;code>&lt;em>Transfer::source::sourceOutput&lt;/em>&lt;/code> or &lt;code>&lt;em>Transfer::target::targetInput&lt;/em>&lt;/code> and redefines the corresponding feature of the &lt;code>relatedElement&lt;/code> for its end.&lt;/p>&#xA;isEnd&#xA;ownedFeature->size() = 1&#xA;owningType &lt;> null and owningType.oclIsKindOf(ItemFlow)"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFlow" eSuperTypes="#//Connector #//Step">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>ItemFlow&lt;/code> is a &lt;code>Step&lt;/code> that represents the transfer of objects or data values from one &lt;code>Feature&lt;/code> to another. &lt;code>ItemFlows&lt;/code> can take non-zero time to complete.&lt;/p>&#xA;&#xA;if itemFlowEnds->isEmpty() then&#xA;    specializesFromLibrary('Transfers::transfers')&#xA;else&#xA;    specializesFromLibrary('Transfers::flowTransfers')&#xA;endif&#xA;itemType =&#xA;    if itemFeature = null then Sequence{}&#xA;    else itemFeature.type&#xA;    endif&#xA;sourceOutputFeature =&#xA;    if connectorEnd->isEmpty() or &#xA;        connectorEnd.ownedFeature->isEmpty()&#xA;    then null&#xA;    else connectorEnd.ownedFeature->first()&#xA;    endif&#xA;targetInputFeature =&#xA;    if connectorEnd->size() &lt; 2 or &#xA;        connectorEnd->at(2).ownedFeature->isEmpty()&#xA;    then null&#xA;    else connectorEnd->at(2).ownedFeature->first()&#xA;    endif&#xA;itemFlowEnd = connectorEnd->selectByKind(ItemFlowEnd)&#xA;itemFeature =&#xA;    let itemFeatures : Sequence(ItemFeature) = &#xA;        ownedFeature->selectByKind(ItemFeature) in&#xA;    if itemFeatures->isEmpty() then null&#xA;    else itemFeatures->first()&#xA;    endif&#xA;ownedFeature->selectByKind(ItemFeature)->size() &lt;= 1"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemType" unique="false"
        upperBound="-1" eType="#//Classifier" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="itemFlowForType"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The type of values transferred, which is the &lt;code>type&lt;/code> of the &lt;code>itemFeature&lt;/code> of the &lt;code>ItemFlow&lt;/code>.&lt;/p>&#xA;&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetInputFeature" unique="false"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="itemFlowToInput"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that receives the values carried by the &lt;code>ItemFlow&lt;/code>. It must be an owned &lt;code>output&lt;/code> of the target participant of the &lt;code>ItemFlow&lt;/code>.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceOutputFeature" unique="false"
        eType="#//Feature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://schema.omg.org/spec/MOF/2.0/emof.xml#Property.oppositeRoleName">
        <details key="body" value="itemFlowFromOutput"/>
      </eAnnotations>
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Feature&lt;/code> that provides the items carried by the &lt;code>ItemFlow&lt;/code>. It must be an owned &lt;code>output&lt;/code> of the &lt;code>source&lt;/code> of the &lt;code>ItemFlow&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemFlowEnd" upperBound="2"
        eType="#//ItemFlowEnd" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>connectorEnds&lt;/code> of this &lt;code>ItemFlow&lt;/code> that are &lt;code>ItemFlowEnds&lt;/code>.&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Connector/connectorEnd"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="itemFeature" ordered="false"
        eType="#//ItemFeature" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>ownedFeature&lt;/code> of the &lt;code>ItemFlow&lt;/code> that is an &lt;code>ItemFeature&lt;/code> (if any).&lt;/p>&#xA;"/>
      </eAnnotations>
      <eAnnotations source="subsets" references="#//Type/ownedFeature"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="interaction" upperBound="-1"
        eType="#//Interaction" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="&lt;p>The &lt;code>Interactions&lt;/code> that type this &lt;code>ItemFlow&lt;/code>. &lt;code>Interactions&lt;/code> are both &lt;code>Associations&lt;/code> and &lt;code>Behaviors&lt;/code>, which can type &lt;code>Connectors&lt;/code> and &lt;code>Steps&lt;/code>, respectively.&lt;/p>"/>
      </eAnnotations>
      <eAnnotations source="redefines" references="#//Connector/association #//Step/behavior"/>
      <eAnnotations source="http://www.omg.org/spec/SysML"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ItemFeature" eSuperTypes="#//Feature">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>ItemFeature&lt;/code> is the &lt;code>ownedFeature&lt;/code> of an &lt;code>ItemFlow&lt;/code> that identifies the things carried by the kinds of transfers that are instances of the &lt;code>ItemFlow&lt;/code>.&lt;/p>&#xA;ownedRedefinition.redefinedFeature->&#xA;    redefinesFromLibrary('Transfers::Transfer::item')"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SuccessionItemFlow" eSuperTypes="#//ItemFlow #//Succession">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>A &lt;code>SuccessionItemFlow&lt;/code> is an &lt;code>ItemFlow&lt;/code> that also provides temporal ordering. It classifies &lt;code>&lt;em>Transfers&lt;/em>&lt;/code> that cannot start until the source &lt;code>&lt;em>Occurrence&lt;/em>&lt;/code> has completed and that must complete before the target &lt;code>&lt;em>Occurrence&lt;/em>&lt;/code> can start.&lt;/p>&#xA;specializesFromLibrary('Transfers::flowTransfersBefore')"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AssociationStructure" eSuperTypes="#//Association #//Structure">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&lt;p>An &lt;code>AssociationStructure&lt;/code> is an &lt;code>Association&lt;/code> that is also a &lt;code>Structure&lt;/code>, classifying link objects that are both links and objects. As objects, link objects can be created and destroyed, and their non-end &lt;code>Features&lt;/code> can change over time. However, the values of the end &lt;code>Features&lt;/code> of a link object are fixed and cannot change over its lifetime.&lt;/p>&#xA;specializesFromLibrary('Objects::LinkObject')&#xA;endFeature->size() = 2 implies&#xA;    specializesFromLibrary('Objects::BinaryLinkObject')"/>
    </eAnnotations>
  </eClassifiers>
</ecore:EPackage>
