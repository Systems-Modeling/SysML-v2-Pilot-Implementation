/*
 * generated by Xtext 2.34.0
 */
package org.omg.sysml.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;
import org.omg.kerml.expressions.xtext.services.KerMLExpressionsGrammarAccess;

@Singleton
public class SysMLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RootNamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RootNamespace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNamespaceAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cPackageBodyElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* ROOT NAMESPACE */
		//RootNamespace returns SysML::Namespace :
		//    {SysML::Namespace} PackageBodyElement*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::Namespace} PackageBodyElement*
		public Group getGroup() { return cGroup; }
		
		//{SysML::Namespace}
		public Action getNamespaceAction_0() { return cNamespaceAction_0; }
		
		//PackageBodyElement*
		public RuleCall getPackageBodyElementParserRuleCall_1() { return cPackageBodyElementParserRuleCall_1; }
	}
	public class IdentificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Identification");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLessThanSignKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cDeclaredShortNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cDeclaredShortNameNameParserRuleCall_0_1_0 = (RuleCall)cDeclaredShortNameAssignment_0_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cDeclaredNameAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cDeclaredNameNameParserRuleCall_0_3_0 = (RuleCall)cDeclaredNameAssignment_0_3.eContents().get(0);
		private final Assignment cDeclaredNameAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cDeclaredNameNameParserRuleCall_1_0 = (RuleCall)cDeclaredNameAssignment_1.eContents().get(0);
		
		///* BASIC ELEMENTS */
		//fragment Identification returns SysML::Element :
		//      '<' declaredShortName = Name '>' ( declaredName = Name )?
		//    | declaredName = Name
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  '<' declaredShortName = Name '>' ( declaredName = Name )?
		//| declaredName = Name
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'<' declaredShortName = Name '>' ( declaredName = Name )?
		public Group getGroup_0() { return cGroup_0; }
		
		//'<'
		public Keyword getLessThanSignKeyword_0_0() { return cLessThanSignKeyword_0_0; }
		
		//declaredShortName = Name
		public Assignment getDeclaredShortNameAssignment_0_1() { return cDeclaredShortNameAssignment_0_1; }
		
		//Name
		public RuleCall getDeclaredShortNameNameParserRuleCall_0_1_0() { return cDeclaredShortNameNameParserRuleCall_0_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_0_2() { return cGreaterThanSignKeyword_0_2; }
		
		//( declaredName = Name )?
		public Assignment getDeclaredNameAssignment_0_3() { return cDeclaredNameAssignment_0_3; }
		
		//Name
		public RuleCall getDeclaredNameNameParserRuleCall_0_3_0() { return cDeclaredNameNameParserRuleCall_0_3_0; }
		
		//declaredName = Name
		public Assignment getDeclaredNameAssignment_1() { return cDeclaredNameAssignment_1; }
		
		//Name
		public RuleCall getDeclaredNameNameParserRuleCall_1_0() { return cDeclaredNameNameParserRuleCall_1_0; }
	}
	public class RelationshipBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RelationshipBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedAnnotationParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment RelationshipBody returns SysML::Relationship :
		//    ';' | '{' ( ownedRelationship += OwnedAnnotation )* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' ( ownedRelationship += OwnedAnnotation )* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ( ownedRelationship += OwnedAnnotation )* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//( ownedRelationship += OwnedAnnotation )*
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//OwnedAnnotation
		public RuleCall getOwnedRelationshipOwnedAnnotationParserRuleCall_1_1_0() { return cOwnedRelationshipOwnedAnnotationParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class DependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Dependency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipPrefixMetadataAnnotationParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Keyword cDependencyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cIdentificationParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cFromKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cClientAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cClientElementCrossReference_3_0 = (CrossReference)cClientAssignment_3.eContents().get(0);
		private final RuleCall cClientElementQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cClientElementCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cClientAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cClientElementCrossReference_4_1_0 = (CrossReference)cClientAssignment_4_1.eContents().get(0);
		private final RuleCall cClientElementQualifiedNameParserRuleCall_4_1_0_1 = (RuleCall)cClientElementCrossReference_4_1_0.eContents().get(1);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSupplierAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSupplierElementCrossReference_6_0 = (CrossReference)cSupplierAssignment_6.eContents().get(0);
		private final RuleCall cSupplierElementQualifiedNameParserRuleCall_6_0_1 = (RuleCall)cSupplierElementCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSupplierAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cSupplierElementCrossReference_7_1_0 = (CrossReference)cSupplierAssignment_7_1.eContents().get(0);
		private final RuleCall cSupplierElementQualifiedNameParserRuleCall_7_1_0_1 = (RuleCall)cSupplierElementCrossReference_7_1_0.eContents().get(1);
		private final RuleCall cRelationshipBodyParserRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		///* DEPENDENCIES */
		//Dependency returns SysML::Dependency :
		//    ( ownedRelationship += PrefixMetadataAnnotation )*
		//    'dependency' ( Identification? 'from' )?
		//    client += [SysML::Element|QualifiedName] ( ',' client += [SysML::Element|QualifiedName] )* 'to'
		//    supplier += [SysML::Element|QualifiedName] ( ',' supplier += [SysML::Element|QualifiedName] )*
		//    RelationshipBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ownedRelationship += PrefixMetadataAnnotation )*
		//'dependency' ( Identification? 'from' )?
		//client += [SysML::Element|QualifiedName] ( ',' client += [SysML::Element|QualifiedName] )* 'to'
		//supplier += [SysML::Element|QualifiedName] ( ',' supplier += [SysML::Element|QualifiedName] )*
		//RelationshipBody
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += PrefixMetadataAnnotation )*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//PrefixMetadataAnnotation
		public RuleCall getOwnedRelationshipPrefixMetadataAnnotationParserRuleCall_0_0() { return cOwnedRelationshipPrefixMetadataAnnotationParserRuleCall_0_0; }
		
		//'dependency'
		public Keyword getDependencyKeyword_1() { return cDependencyKeyword_1; }
		
		//( Identification? 'from' )?
		public Group getGroup_2() { return cGroup_2; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_2_0() { return cIdentificationParserRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_2_1() { return cFromKeyword_2_1; }
		
		//client += [SysML::Element|QualifiedName]
		public Assignment getClientAssignment_3() { return cClientAssignment_3; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getClientElementCrossReference_3_0() { return cClientElementCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getClientElementQualifiedNameParserRuleCall_3_0_1() { return cClientElementQualifiedNameParserRuleCall_3_0_1; }
		
		//( ',' client += [SysML::Element|QualifiedName] )*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//client += [SysML::Element|QualifiedName]
		public Assignment getClientAssignment_4_1() { return cClientAssignment_4_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getClientElementCrossReference_4_1_0() { return cClientElementCrossReference_4_1_0; }
		
		//QualifiedName
		public RuleCall getClientElementQualifiedNameParserRuleCall_4_1_0_1() { return cClientElementQualifiedNameParserRuleCall_4_1_0_1; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//supplier += [SysML::Element|QualifiedName]
		public Assignment getSupplierAssignment_6() { return cSupplierAssignment_6; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getSupplierElementCrossReference_6_0() { return cSupplierElementCrossReference_6_0; }
		
		//QualifiedName
		public RuleCall getSupplierElementQualifiedNameParserRuleCall_6_0_1() { return cSupplierElementQualifiedNameParserRuleCall_6_0_1; }
		
		//( ',' supplier += [SysML::Element|QualifiedName] )*
		public Group getGroup_7() { return cGroup_7; }
		
		//','
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//supplier += [SysML::Element|QualifiedName]
		public Assignment getSupplierAssignment_7_1() { return cSupplierAssignment_7_1; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getSupplierElementCrossReference_7_1_0() { return cSupplierElementCrossReference_7_1_0; }
		
		//QualifiedName
		public RuleCall getSupplierElementQualifiedNameParserRuleCall_7_1_0_1() { return cSupplierElementQualifiedNameParserRuleCall_7_1_0_1; }
		
		//RelationshipBody
		public RuleCall getRelationshipBodyParserRuleCall_8() { return cRelationshipBodyParserRuleCall_8; }
	}
	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Annotation");
		private final Assignment cAnnotatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cAnnotatedElementElementCrossReference_0 = (CrossReference)cAnnotatedElementAssignment.eContents().get(0);
		private final RuleCall cAnnotatedElementElementQualifiedNameParserRuleCall_0_1 = (RuleCall)cAnnotatedElementElementCrossReference_0.eContents().get(1);
		
		///* ANNOTATIONS */
		//Annotation returns SysML::Annotation :
		//    annotatedElement = [SysML::Element|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//annotatedElement = [SysML::Element|QualifiedName]
		public Assignment getAnnotatedElementAssignment() { return cAnnotatedElementAssignment; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getAnnotatedElementElementCrossReference_0() { return cAnnotatedElementElementCrossReference_0; }
		
		//QualifiedName
		public RuleCall getAnnotatedElementElementQualifiedNameParserRuleCall_0_1() { return cAnnotatedElementElementQualifiedNameParserRuleCall_0_1; }
	}
	public class OwnedAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedAnnotation");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementAnnotatingElementParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//OwnedAnnotation returns SysML::Annotation :
		//    ownedRelatedElement += AnnotatingElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += AnnotatingElement
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//AnnotatingElement
		public RuleCall getOwnedRelatedElementAnnotatingElementParserRuleCall_0() { return cOwnedRelatedElementAnnotatingElementParserRuleCall_0; }
	}
	public class AnnotatingMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnnotatingMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementAnnotatingElementParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//AnnotatingMember returns SysML::OwningMembership :
		//    ownedRelatedElement += AnnotatingElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += AnnotatingElement
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//AnnotatingElement
		public RuleCall getOwnedRelatedElementAnnotatingElementParserRuleCall_0() { return cOwnedRelatedElementAnnotatingElementParserRuleCall_0; }
	}
	public class AnnotatingElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnnotatingElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCommentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDocumentationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTextualRepresentationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMetadataUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//AnnotatingElement returns SysML::AnnotatingElement :
		//      Comment
		//    | Documentation
		//    | TextualRepresentation
		//    | MetadataUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  Comment
		//| Documentation
		//| TextualRepresentation
		//| MetadataUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Comment
		public RuleCall getCommentParserRuleCall_0() { return cCommentParserRuleCall_0; }
		
		//Documentation
		public RuleCall getDocumentationParserRuleCall_1() { return cDocumentationParserRuleCall_1; }
		
		//TextualRepresentation
		public RuleCall getTextualRepresentationParserRuleCall_2() { return cTextualRepresentationParserRuleCall_2; }
		
		//MetadataUsage
		public RuleCall getMetadataUsageParserRuleCall_3() { return cMetadataUsageParserRuleCall_3; }
	}
	public class CommentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Comment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cCommentKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cAboutKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_2_1.eContents().get(0);
		private final Group cGroup_0_2_2 = (Group)cGroup_0_2.eContents().get(2);
		private final Keyword cCommaKeyword_0_2_2_0 = (Keyword)cGroup_0_2_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_2_2_1 = (Assignment)cGroup_0_2_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_0_2_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_2_2_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLocaleKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cLocaleAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLocaleSTRING_VALUETerminalRuleCall_1_1_0 = (RuleCall)cLocaleAssignment_1_1.eContents().get(0);
		private final Assignment cBodyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBodyREGULAR_COMMENTTerminalRuleCall_2_0 = (RuleCall)cBodyAssignment_2.eContents().get(0);
		
		///* Comments */
		//Comment returns SysML::Comment :
		//    ( 'comment' Identification?
		//      ('about' ownedRelationship += Annotation
		//         ( ',' ownedRelationship += Annotation )* )?
		//    )?
		//    ( 'locale' locale = STRING_VALUE )?
		//    body = REGULAR_COMMENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( 'comment' Identification?
		//  ('about' ownedRelationship += Annotation
		//     ( ',' ownedRelationship += Annotation )* )?
		//)?
		//( 'locale' locale = STRING_VALUE )?
		//body = REGULAR_COMMENT
		public Group getGroup() { return cGroup; }
		
		//( 'comment' Identification?
		//  ('about' ownedRelationship += Annotation
		//     ( ',' ownedRelationship += Annotation )* )?
		//)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'comment'
		public Keyword getCommentKeyword_0_0() { return cCommentKeyword_0_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_1() { return cIdentificationParserRuleCall_0_1; }
		
		//('about' ownedRelationship += Annotation
		//   ( ',' ownedRelationship += Annotation )* )?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//'about'
		public Keyword getAboutKeyword_0_2_0() { return cAboutKeyword_0_2_0; }
		
		//ownedRelationship += Annotation
		public Assignment getOwnedRelationshipAssignment_0_2_1() { return cOwnedRelationshipAssignment_0_2_1; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_2_1_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_2_1_0; }
		
		//( ',' ownedRelationship += Annotation )*
		public Group getGroup_0_2_2() { return cGroup_0_2_2; }
		
		//','
		public Keyword getCommaKeyword_0_2_2_0() { return cCommaKeyword_0_2_2_0; }
		
		//ownedRelationship += Annotation
		public Assignment getOwnedRelationshipAssignment_0_2_2_1() { return cOwnedRelationshipAssignment_0_2_2_1; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_0_2_2_1_0() { return cOwnedRelationshipAnnotationParserRuleCall_0_2_2_1_0; }
		
		//( 'locale' locale = STRING_VALUE )?
		public Group getGroup_1() { return cGroup_1; }
		
		//'locale'
		public Keyword getLocaleKeyword_1_0() { return cLocaleKeyword_1_0; }
		
		//locale = STRING_VALUE
		public Assignment getLocaleAssignment_1_1() { return cLocaleAssignment_1_1; }
		
		//STRING_VALUE
		public RuleCall getLocaleSTRING_VALUETerminalRuleCall_1_1_0() { return cLocaleSTRING_VALUETerminalRuleCall_1_1_0; }
		
		//body = REGULAR_COMMENT
		public Assignment getBodyAssignment_2() { return cBodyAssignment_2; }
		
		//REGULAR_COMMENT
		public RuleCall getBodyREGULAR_COMMENTTerminalRuleCall_2_0() { return cBodyREGULAR_COMMENTTerminalRuleCall_2_0; }
	}
	public class DocumentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Documentation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDocKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLocaleKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cLocaleAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cLocaleSTRING_VALUETerminalRuleCall_2_1_0 = (RuleCall)cLocaleAssignment_2_1.eContents().get(0);
		private final Assignment cBodyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBodyREGULAR_COMMENTTerminalRuleCall_3_0 = (RuleCall)cBodyAssignment_3.eContents().get(0);
		
		//Documentation returns SysML::Documentation :
		//    'doc' Identification?
		//    ( 'locale' locale = STRING_VALUE )?
		//    body = REGULAR_COMMENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'doc' Identification?
		//( 'locale' locale = STRING_VALUE )?
		//body = REGULAR_COMMENT
		public Group getGroup() { return cGroup; }
		
		//'doc'
		public Keyword getDocKeyword_0() { return cDocKeyword_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_1() { return cIdentificationParserRuleCall_1; }
		
		//( 'locale' locale = STRING_VALUE )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'locale'
		public Keyword getLocaleKeyword_2_0() { return cLocaleKeyword_2_0; }
		
		//locale = STRING_VALUE
		public Assignment getLocaleAssignment_2_1() { return cLocaleAssignment_2_1; }
		
		//STRING_VALUE
		public RuleCall getLocaleSTRING_VALUETerminalRuleCall_2_1_0() { return cLocaleSTRING_VALUETerminalRuleCall_2_1_0; }
		
		//body = REGULAR_COMMENT
		public Assignment getBodyAssignment_3() { return cBodyAssignment_3; }
		
		//REGULAR_COMMENT
		public RuleCall getBodyREGULAR_COMMENTTerminalRuleCall_3_0() { return cBodyREGULAR_COMMENTTerminalRuleCall_3_0; }
	}
	public class TextualRepresentationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TextualRepresentation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cRepKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cLanguageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLanguageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLanguageSTRING_VALUETerminalRuleCall_2_0 = (RuleCall)cLanguageAssignment_2.eContents().get(0);
		private final Assignment cBodyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBodyREGULAR_COMMENTTerminalRuleCall_3_0 = (RuleCall)cBodyAssignment_3.eContents().get(0);
		
		///* Textual Representation */
		//TextualRepresentation returns SysML::TextualRepresentation :
		//    ( 'rep' Identification? )?
		//    'language' language = STRING_VALUE
		//    body = REGULAR_COMMENT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( 'rep' Identification? )?
		//'language' language = STRING_VALUE
		//body = REGULAR_COMMENT
		public Group getGroup() { return cGroup; }
		
		//( 'rep' Identification? )?
		public Group getGroup_0() { return cGroup_0; }
		
		//'rep'
		public Keyword getRepKeyword_0_0() { return cRepKeyword_0_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_1() { return cIdentificationParserRuleCall_0_1; }
		
		//'language'
		public Keyword getLanguageKeyword_1() { return cLanguageKeyword_1; }
		
		//language = STRING_VALUE
		public Assignment getLanguageAssignment_2() { return cLanguageAssignment_2; }
		
		//STRING_VALUE
		public RuleCall getLanguageSTRING_VALUETerminalRuleCall_2_0() { return cLanguageSTRING_VALUETerminalRuleCall_2_0; }
		
		//body = REGULAR_COMMENT
		public Assignment getBodyAssignment_3() { return cBodyAssignment_3; }
		
		//REGULAR_COMMENT
		public RuleCall getBodyREGULAR_COMMENTTerminalRuleCall_3_0() { return cBodyREGULAR_COMMENTTerminalRuleCall_3_0; }
	}
	public class MetadataKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataKeyword");
		private final Keyword cMetadataKeyword = (Keyword)rule.eContents().get(1);
		
		///* Metadata */
		//MetadataKeyword :
		//    'metadata'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'metadata'
		public Keyword getMetadataKeyword() { return cMetadataKeyword; }
	}
	public class MetadataDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMetadataKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//MetadataDefKeyword :
		//    MetadataKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MetadataKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//MetadataKeyword
		public RuleCall getMetadataKeywordParserRuleCall_0() { return cMetadataKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class MetadataUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataUsageKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMetadataKeywordParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//MetadataUsageKeyword :
		//    MetadataKeyword | '@'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MetadataKeyword | '@'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MetadataKeyword
		public RuleCall getMetadataKeywordParserRuleCall_0() { return cMetadataKeywordParserRuleCall_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }
	}
	public class MetadataDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final RuleCall cDefinitionExtensionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cMetadataDefKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cDefinitionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//MetadataDefinition returns SysML::MetadataDefinition :
		//    ( isAbstract ?= 'abstract')?
		//    DefinitionExtensionKeyword* MetadataDefKeyword
		//    Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( isAbstract ?= 'abstract')?
		//DefinitionExtensionKeyword* MetadataDefKeyword
		//Definition
		public Group getGroup() { return cGroup; }
		
		//( isAbstract ?= 'abstract')?
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//DefinitionExtensionKeyword*
		public RuleCall getDefinitionExtensionKeywordParserRuleCall_1() { return cDefinitionExtensionKeywordParserRuleCall_1; }
		
		//MetadataDefKeyword
		public RuleCall getMetadataDefKeywordParserRuleCall_2() { return cMetadataDefKeywordParserRuleCall_2; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_3() { return cDefinitionParserRuleCall_3; }
	}
	public class PrefixMetadataAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PrefixMetadataAnnotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementPrefixMetadataUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//PrefixMetadataAnnotation returns SysML::Annotation :
		//    '#' ownedRelatedElement += PrefixMetadataUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'#' ownedRelatedElement += PrefixMetadataUsage
		public Group getGroup() { return cGroup; }
		
		//'#'
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }
		
		//ownedRelatedElement += PrefixMetadataUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//PrefixMetadataUsage
		public RuleCall getOwnedRelatedElementPrefixMetadataUsageParserRuleCall_1_0() { return cOwnedRelatedElementPrefixMetadataUsageParserRuleCall_1_0; }
	}
	public class PrefixMetadataMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PrefixMetadataMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementPrefixMetadataUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//PrefixMetadataMember returns SysML::OwningMembership :
		//    '#' ownedRelatedElement += PrefixMetadataUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'#' ownedRelatedElement += PrefixMetadataUsage
		public Group getGroup() { return cGroup; }
		
		//'#'
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }
		
		//ownedRelatedElement += PrefixMetadataUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//PrefixMetadataUsage
		public RuleCall getOwnedRelatedElementPrefixMetadataUsageParserRuleCall_1_0() { return cOwnedRelatedElementPrefixMetadataUsageParserRuleCall_1_0; }
	}
	public class PrefixMetadataUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PrefixMetadataUsage");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipMetadataTypingParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//PrefixMetadataUsage returns SysML::MetadataUsage :
		//    ownedRelationship += MetadataTyping
		////    ( ownedRelationship += MetadataBodyUsageMember )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += MetadataTyping
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//MetadataTyping
		public RuleCall getOwnedRelationshipMetadataTypingParserRuleCall_0() { return cOwnedRelationshipMetadataTypingParserRuleCall_0; }
	}
	public class MetadataUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cMetadataUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cMetadataUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAboutKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotationParserRuleCall_3_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_2_1.eContents().get(0);
		private final RuleCall cMetadataBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//MetadataUsage returns SysML::MetadataUsage :
		//    UsageExtensionKeyword*
		//    MetadataUsageKeyword MetadataUsageDeclaration
		//    ( 'about' ownedRelationship += Annotation
		//        ( ',' ownedRelationship += Annotation )*
		//    )?
		//    MetadataBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageExtensionKeyword*
		//MetadataUsageKeyword MetadataUsageDeclaration
		//( 'about' ownedRelationship += Annotation
		//    ( ',' ownedRelationship += Annotation )*
		//)?
		//MetadataBody
		public Group getGroup() { return cGroup; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_0() { return cUsageExtensionKeywordParserRuleCall_0; }
		
		//MetadataUsageKeyword
		public RuleCall getMetadataUsageKeywordParserRuleCall_1() { return cMetadataUsageKeywordParserRuleCall_1; }
		
		//MetadataUsageDeclaration
		public RuleCall getMetadataUsageDeclarationParserRuleCall_2() { return cMetadataUsageDeclarationParserRuleCall_2; }
		
		//( 'about' ownedRelationship += Annotation
		//    ( ',' ownedRelationship += Annotation )*
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'about'
		public Keyword getAboutKeyword_3_0() { return cAboutKeyword_3_0; }
		
		//ownedRelationship += Annotation
		public Assignment getOwnedRelationshipAssignment_3_1() { return cOwnedRelationshipAssignment_3_1; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_3_1_0() { return cOwnedRelationshipAnnotationParserRuleCall_3_1_0; }
		
		//( ',' ownedRelationship += Annotation )*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//','
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//ownedRelationship += Annotation
		public Assignment getOwnedRelationshipAssignment_3_2_1() { return cOwnedRelationshipAssignment_3_2_1; }
		
		//Annotation
		public RuleCall getOwnedRelationshipAnnotationParserRuleCall_3_2_1_0() { return cOwnedRelationshipAnnotationParserRuleCall_3_2_1_0; }
		
		//MetadataBody
		public RuleCall getMetadataBodyParserRuleCall_4() { return cMetadataBodyParserRuleCall_4; }
	}
	public class MetadataUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cDefinedByKeywordParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMetadataTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment MetadataUsageDeclaration returns SysML::MetadataUsage :
		//    ( Identification? DefinedByKeyword )? ownedRelationship += MetadataTyping
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( Identification? DefinedByKeyword )? ownedRelationship += MetadataTyping
		public Group getGroup() { return cGroup; }
		
		//( Identification? DefinedByKeyword )?
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//DefinedByKeyword
		public RuleCall getDefinedByKeywordParserRuleCall_0_1() { return cDefinedByKeywordParserRuleCall_0_1; }
		
		//ownedRelationship += MetadataTyping
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//MetadataTyping
		public RuleCall getOwnedRelationshipMetadataTypingParserRuleCall_1_0() { return cOwnedRelationshipMetadataTypingParserRuleCall_1_0; }
	}
	public class MetadataTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataTyping");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeMetaclassCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeMetaclassQualifiedNameParserRuleCall_0_1 = (RuleCall)cTypeMetaclassCrossReference_0.eContents().get(1);
		
		//MetadataTyping returns SysML::FeatureTyping :
		//    type = [SysML::Metaclass | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type = [SysML::Metaclass | QualifiedName]
		public Assignment getTypeAssignment() { return cTypeAssignment; }
		
		//[SysML::Metaclass | QualifiedName]
		public CrossReference getTypeMetaclassCrossReference_0() { return cTypeMetaclassCrossReference_0; }
		
		//QualifiedName
		public RuleCall getTypeMetaclassQualifiedNameParserRuleCall_0_1() { return cTypeMetaclassQualifiedNameParserRuleCall_0_1; }
	}
	public class MetadataBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipDefinitionMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipMetadataBodyUsageMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_3 = (Assignment)cAlternatives_1_1.eContents().get(3);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_1_3_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment MetadataBody returns SysML::Usage :
		//      ';'
		//    | '{' ( ownedRelationship += DefinitionMember
		//          | ownedRelationship += MetadataBodyUsageMember
		//          | ownedRelationship += AliasMember
		//          | ownedRelationship += Import
		//          )*
		//      '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' ( ownedRelationship += DefinitionMember
		//      | ownedRelationship += MetadataBodyUsageMember
		//      | ownedRelationship += AliasMember
		//      | ownedRelationship += Import
		//      )*
		//  '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ( ownedRelationship += DefinitionMember
		//         | ownedRelationship += MetadataBodyUsageMember
		//         | ownedRelationship += AliasMember
		//         | ownedRelationship += Import
		//         )*
		//     '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//( ownedRelationship += DefinitionMember
		//         | ownedRelationship += MetadataBodyUsageMember
		//         | ownedRelationship += AliasMember
		//         | ownedRelationship += Import
		//         )*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship += DefinitionMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//DefinitionMember
		public RuleCall getOwnedRelationshipDefinitionMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipDefinitionMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship += MetadataBodyUsageMember
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//MetadataBodyUsageMember
		public RuleCall getOwnedRelationshipMetadataBodyUsageMemberParserRuleCall_1_1_1_0() { return cOwnedRelationshipMetadataBodyUsageMemberParserRuleCall_1_1_1_0; }
		
		//ownedRelationship += AliasMember
		public Assignment getOwnedRelationshipAssignment_1_1_2() { return cOwnedRelationshipAssignment_1_1_2; }
		
		//AliasMember
		public RuleCall getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0() { return cOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_1_1_3() { return cOwnedRelationshipAssignment_1_1_3; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_1_3_0() { return cOwnedRelationshipImportParserRuleCall_1_1_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class MetadataBodyUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataBodyUsageMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementMetadataBodyUsageParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//MetadataBodyUsageMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += MetadataBodyUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += MetadataBodyUsage
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//MetadataBodyUsage
		public RuleCall getOwnedRelatedElementMetadataBodyUsageParserRuleCall_0() { return cOwnedRelatedElementMetadataBodyUsageParserRuleCall_0; }
	}
	public class MetadataBodyUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MetadataBodyUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cColonGreaterThanSignGreaterThanSignKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cRedefinesKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cValuePartParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final RuleCall cMetadataBodyParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//MetadataBodyUsage returns SysML::ReferenceUsage :
		//    'ref'? ( ':>>' | 'redefines' )? ownedRelationship += OwnedRedefinition
		//    FeatureSpecializationPart? ValuePart?
		//    MetadataBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref'? ( ':>>' | 'redefines' )? ownedRelationship += OwnedRedefinition
		//FeatureSpecializationPart? ValuePart?
		//MetadataBody
		public Group getGroup() { return cGroup; }
		
		//'ref'?
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }
		
		//( ':>>' | 'redefines' )?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//':>>'
		public Keyword getColonGreaterThanSignGreaterThanSignKeyword_1_0() { return cColonGreaterThanSignGreaterThanSignKeyword_1_0; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_1_1() { return cRedefinesKeyword_1_1; }
		
		//ownedRelationship += OwnedRedefinition
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//OwnedRedefinition
		public RuleCall getOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0() { return cOwnedRelationshipOwnedRedefinitionParserRuleCall_2_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_3() { return cFeatureSpecializationPartParserRuleCall_3; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_4() { return cValuePartParserRuleCall_4; }
		
		//MetadataBody
		public RuleCall getMetadataBodyParserRuleCall_5() { return cMetadataBodyParserRuleCall_5; }
	}
	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipPrefixMetadataMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final RuleCall cPackageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cPackageBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		///* PACKAGES */
		///* Packages */
		//Package returns SysML::Package :
		//    ( ownedRelationship += PrefixMetadataMember )*
		//    PackageDeclaration PackageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ownedRelationship += PrefixMetadataMember )*
		//PackageDeclaration PackageBody
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += PrefixMetadataMember )*
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//PrefixMetadataMember
		public RuleCall getOwnedRelationshipPrefixMetadataMemberParserRuleCall_0_0() { return cOwnedRelationshipPrefixMetadataMemberParserRuleCall_0_0; }
		
		//PackageDeclaration
		public RuleCall getPackageDeclarationParserRuleCall_1() { return cPackageDeclarationParserRuleCall_1; }
		
		//PackageBody
		public RuleCall getPackageBodyParserRuleCall_2() { return cPackageBodyParserRuleCall_2; }
	}
	public class LibraryPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LibraryPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsStandardAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsStandardStandardKeyword_0_0 = (Keyword)cIsStandardAssignment_0.eContents().get(0);
		private final Keyword cLibraryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipPrefixMetadataMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final RuleCall cPackageDeclarationParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cPackageBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//LibraryPackage returns SysML::LibraryPackage :
		//    ( isStandard ?= 'standard' )? 'library'
		//    ( ownedRelationship += PrefixMetadataMember )*
		//    PackageDeclaration PackageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( isStandard ?= 'standard' )? 'library'
		//( ownedRelationship += PrefixMetadataMember )*
		//PackageDeclaration PackageBody
		public Group getGroup() { return cGroup; }
		
		//( isStandard ?= 'standard' )?
		public Assignment getIsStandardAssignment_0() { return cIsStandardAssignment_0; }
		
		//'standard'
		public Keyword getIsStandardStandardKeyword_0_0() { return cIsStandardStandardKeyword_0_0; }
		
		//'library'
		public Keyword getLibraryKeyword_1() { return cLibraryKeyword_1; }
		
		//( ownedRelationship += PrefixMetadataMember )*
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//PrefixMetadataMember
		public RuleCall getOwnedRelationshipPrefixMetadataMemberParserRuleCall_2_0() { return cOwnedRelationshipPrefixMetadataMemberParserRuleCall_2_0; }
		
		//PackageDeclaration
		public RuleCall getPackageDeclarationParserRuleCall_3() { return cPackageDeclarationParserRuleCall_3; }
		
		//PackageBody
		public RuleCall getPackageBodyParserRuleCall_4() { return cPackageBodyParserRuleCall_4; }
	}
	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment PackageDeclaration returns SysML::Package :
		//    'package' Identification?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'package' Identification?
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_1() { return cIdentificationParserRuleCall_1; }
	}
	public class PackageBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipPackageMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipElementFilterMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_3 = (Assignment)cAlternatives_1_1.eContents().get(3);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_1_1_3_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment PackageBody returns SysML::Package :
		//     ';'
		//    | '{' ( // Note: PackageBodyElement is expanded here to avoid
		//            // infinite loops in the incremental parser.
		//            ownedRelationship += PackageMember
		//          | ownedRelationship += ElementFilterMember
		//          | ownedRelationship += AliasMember
		//          | ownedRelationship += Import )*
		//      '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		// ';'
		//| '{' ( // Note: PackageBodyElement is expanded here to avoid
		//        // infinite loops in the incremental parser.
		//        ownedRelationship += PackageMember
		//      | ownedRelationship += ElementFilterMember
		//      | ownedRelationship += AliasMember
		//      | ownedRelationship += Import )*
		//  '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ( // Note: PackageBodyElement is expanded here to avoid
		//           // infinite loops in the incremental parser.
		//           ownedRelationship += PackageMember
		//         | ownedRelationship += ElementFilterMember
		//         | ownedRelationship += AliasMember
		//         | ownedRelationship += Import )*
		//     '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//( // Note: PackageBodyElement is expanded here to avoid
		//           // infinite loops in the incremental parser.
		//           ownedRelationship += PackageMember
		//         | ownedRelationship += ElementFilterMember
		//         | ownedRelationship += AliasMember
		//         | ownedRelationship += Import )*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//// Note: PackageBodyElement is expanded here to avoid
		//           // infinite loops in the incremental parser.
		//           ownedRelationship += PackageMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//PackageMember
		public RuleCall getOwnedRelationshipPackageMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipPackageMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship += ElementFilterMember
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//ElementFilterMember
		public RuleCall getOwnedRelationshipElementFilterMemberParserRuleCall_1_1_1_0() { return cOwnedRelationshipElementFilterMemberParserRuleCall_1_1_1_0; }
		
		//ownedRelationship += AliasMember
		public Assignment getOwnedRelationshipAssignment_1_1_2() { return cOwnedRelationshipAssignment_1_1_2; }
		
		//AliasMember
		public RuleCall getOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0() { return cOwnedRelationshipAliasMemberParserRuleCall_1_1_2_0; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_1_1_3() { return cOwnedRelationshipAssignment_1_1_3; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_1_1_3_0() { return cOwnedRelationshipImportParserRuleCall_1_1_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class PackageBodyElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageBodyElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelationshipPackageMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipElementFilterMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipAliasMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		///* Package Bodies */
		//fragment PackageBodyElement returns SysML::Namespace :
		//      ownedRelationship += PackageMember
		//    | ownedRelationship += ElementFilterMember
		//    | ownedRelationship += AliasMember
		//    | ownedRelationship += Import
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += PackageMember
		//| ownedRelationship += ElementFilterMember
		//| ownedRelationship += AliasMember
		//| ownedRelationship += Import
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += PackageMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//PackageMember
		public RuleCall getOwnedRelationshipPackageMemberParserRuleCall_0_0() { return cOwnedRelationshipPackageMemberParserRuleCall_0_0; }
		
		//ownedRelationship += ElementFilterMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ElementFilterMember
		public RuleCall getOwnedRelationshipElementFilterMemberParserRuleCall_1_0() { return cOwnedRelationshipElementFilterMemberParserRuleCall_1_0; }
		
		//ownedRelationship += AliasMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//AliasMember
		public RuleCall getOwnedRelationshipAliasMemberParserRuleCall_2_0() { return cOwnedRelationshipAliasMemberParserRuleCall_2_0; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_3_0() { return cOwnedRelationshipImportParserRuleCall_3_0; }
	}
	public class MemberPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MemberPrefix");
		private final Assignment cVisibilityAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_0 = (RuleCall)cVisibilityAssignment.eContents().get(0);
		
		//fragment MemberPrefix returns SysML::Membership :
		//    ( visibility = VisibilityIndicator )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( visibility = VisibilityIndicator )?
		public Assignment getVisibilityAssignment() { return cVisibilityAssignment; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_0; }
	}
	public class PackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PackageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementDefinitionElementParserRuleCall_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cOwnedRelatedElementUsageElementParserRuleCall_1_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1.eContents().get(0);
		
		//PackageMember returns SysML::OwningMembership :
		//    MemberPrefix
		//    ( ownedRelatedElement += DefinitionElement
		//    | ownedRelatedElement += UsageElement
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix
		//( ownedRelatedElement += DefinitionElement
		//| ownedRelatedElement += UsageElement
		//)
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//( ownedRelatedElement += DefinitionElement
		//| ownedRelatedElement += UsageElement
		//)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ownedRelatedElement += DefinitionElement
		public Assignment getOwnedRelatedElementAssignment_1_0() { return cOwnedRelatedElementAssignment_1_0; }
		
		//DefinitionElement
		public RuleCall getOwnedRelatedElementDefinitionElementParserRuleCall_1_0_0() { return cOwnedRelatedElementDefinitionElementParserRuleCall_1_0_0; }
		
		//ownedRelatedElement += UsageElement
		public Assignment getOwnedRelatedElementAssignment_1_1() { return cOwnedRelatedElementAssignment_1_1; }
		
		//UsageElement
		public RuleCall getOwnedRelatedElementUsageElementParserRuleCall_1_1_0() { return cOwnedRelatedElementUsageElementParserRuleCall_1_1_0; }
	}
	public class ElementFilterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ElementFilterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFilterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ElementFilterMember returns SysML::ElementFilterMembership :
		//    MemberPrefix
		//    'filter' ownedRelatedElement += OwnedExpression ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix
		//'filter' ownedRelatedElement += OwnedExpression ';'
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//'filter'
		public Keyword getFilterKeyword_1() { return cFilterKeyword_1; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_2_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class AliasMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AliasMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAliasKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLessThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMemberShortNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMemberShortNameNameParserRuleCall_2_1_0 = (RuleCall)cMemberShortNameAssignment_2_1.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cMemberNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMemberNameNameParserRuleCall_3_0 = (RuleCall)cMemberNameAssignment_3.eContents().get(0);
		private final Keyword cForKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMemberElementAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cMemberElementElementCrossReference_5_0 = (CrossReference)cMemberElementAssignment_5.eContents().get(0);
		private final RuleCall cMemberElementElementQualifiedNameParserRuleCall_5_0_1 = (RuleCall)cMemberElementElementCrossReference_5_0.eContents().get(1);
		private final RuleCall cRelationshipBodyParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//AliasMember returns SysML::Membership :
		//    MemberPrefix
		//    'alias' ( '<' memberShortName = Name '>' )? ( memberName = Name )?
		//    'for' memberElement = [SysML::Element|QualifiedName]
		//    RelationshipBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix
		//'alias' ( '<' memberShortName = Name '>' )? ( memberName = Name )?
		//'for' memberElement = [SysML::Element|QualifiedName]
		//RelationshipBody
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//'alias'
		public Keyword getAliasKeyword_1() { return cAliasKeyword_1; }
		
		//( '<' memberShortName = Name '>' )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'<'
		public Keyword getLessThanSignKeyword_2_0() { return cLessThanSignKeyword_2_0; }
		
		//memberShortName = Name
		public Assignment getMemberShortNameAssignment_2_1() { return cMemberShortNameAssignment_2_1; }
		
		//Name
		public RuleCall getMemberShortNameNameParserRuleCall_2_1_0() { return cMemberShortNameNameParserRuleCall_2_1_0; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_2_2() { return cGreaterThanSignKeyword_2_2; }
		
		//( memberName = Name )?
		public Assignment getMemberNameAssignment_3() { return cMemberNameAssignment_3; }
		
		//Name
		public RuleCall getMemberNameNameParserRuleCall_3_0() { return cMemberNameNameParserRuleCall_3_0; }
		
		//'for'
		public Keyword getForKeyword_4() { return cForKeyword_4; }
		
		//memberElement = [SysML::Element|QualifiedName]
		public Assignment getMemberElementAssignment_5() { return cMemberElementAssignment_5; }
		
		//[SysML::Element|QualifiedName]
		public CrossReference getMemberElementElementCrossReference_5_0() { return cMemberElementElementCrossReference_5_0; }
		
		//QualifiedName
		public RuleCall getMemberElementElementQualifiedNameParserRuleCall_5_0_1() { return cMemberElementElementQualifiedNameParserRuleCall_5_0_1; }
		
		//RelationshipBody
		public RuleCall getRelationshipBodyParserRuleCall_6() { return cRelationshipBodyParserRuleCall_6; }
	}
	public class ImportPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ImportPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityIndicatorEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIsImportAllAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsImportAllAllKeyword_2_0 = (Keyword)cIsImportAllAssignment_2.eContents().get(0);
		
		//fragment ImportPrefix returns SysML::Import :
		//    visibility = VisibilityIndicator
		//    'import' ( isImportAll ?= 'all' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//visibility = VisibilityIndicator
		//'import' ( isImportAll ?= 'all' )?
		public Group getGroup() { return cGroup; }
		
		//visibility = VisibilityIndicator
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//VisibilityIndicator
		public RuleCall getVisibilityVisibilityIndicatorEnumRuleCall_0_0() { return cVisibilityVisibilityIndicatorEnumRuleCall_0_0; }
		
		//'import'
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }
		
		//( isImportAll ?= 'all' )?
		public Assignment getIsImportAllAssignment_2() { return cIsImportAllAssignment_2; }
		
		//'all'
		public Keyword getIsImportAllAllKeyword_2_0() { return cIsImportAllAllKeyword_2_0; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cMembershipImportParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cNamespaceImportParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cRelationshipBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//Import returns SysML::Import :
		//    ( MembershipImport | NamespaceImport )
		//    RelationshipBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( MembershipImport | NamespaceImport )
		//RelationshipBody
		public Group getGroup() { return cGroup; }
		
		//( MembershipImport | NamespaceImport )
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//MembershipImport
		public RuleCall getMembershipImportParserRuleCall_0_0() { return cMembershipImportParserRuleCall_0_0; }
		
		//NamespaceImport
		public RuleCall getNamespaceImportParserRuleCall_0_1() { return cNamespaceImportParserRuleCall_0_1; }
		
		//RelationshipBody
		public RuleCall getRelationshipBodyParserRuleCall_1() { return cRelationshipBodyParserRuleCall_1; }
	}
	public class MembershipImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MembershipImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cImportPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cImportedMembershipParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//MembershipImport returns SysML::MembershipImport :
		//    ImportPrefix ImportedMembership
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ImportPrefix ImportedMembership
		public Group getGroup() { return cGroup; }
		
		//ImportPrefix
		public RuleCall getImportPrefixParserRuleCall_0() { return cImportPrefixParserRuleCall_0; }
		
		//ImportedMembership
		public RuleCall getImportedMembershipParserRuleCall_1() { return cImportedMembershipParserRuleCall_1; }
	}
	public class ImportedMembershipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ImportedMembership");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportedMembershipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportedMembershipMembershipCrossReference_0_0 = (CrossReference)cImportedMembershipAssignment_0.eContents().get(0);
		private final RuleCall cImportedMembershipMembershipQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cImportedMembershipMembershipCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cIsRecursiveAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cIsRecursiveAsteriskAsteriskKeyword_1_1_0 = (Keyword)cIsRecursiveAssignment_1_1.eContents().get(0);
		
		//fragment ImportedMembership returns SysML::MembershipImport :
		//    importedMembership = [SysML::Membership|QualifiedName]
		//    ( '::' isRecursive ?= '**' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//importedMembership = [SysML::Membership|QualifiedName]
		//( '::' isRecursive ?= '**' )?
		public Group getGroup() { return cGroup; }
		
		//importedMembership = [SysML::Membership|QualifiedName]
		public Assignment getImportedMembershipAssignment_0() { return cImportedMembershipAssignment_0; }
		
		//[SysML::Membership|QualifiedName]
		public CrossReference getImportedMembershipMembershipCrossReference_0_0() { return cImportedMembershipMembershipCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getImportedMembershipMembershipQualifiedNameParserRuleCall_0_0_1() { return cImportedMembershipMembershipQualifiedNameParserRuleCall_0_0_1; }
		
		//( '::' isRecursive ?= '**' )?
		public Group getGroup_1() { return cGroup_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1_0() { return cColonColonKeyword_1_0; }
		
		//isRecursive ?= '**'
		public Assignment getIsRecursiveAssignment_1_1() { return cIsRecursiveAssignment_1_1; }
		
		//'**'
		public Keyword getIsRecursiveAsteriskAsteriskKeyword_1_1_0() { return cIsRecursiveAsteriskAsteriskKeyword_1_1_0; }
	}
	public class NamespaceImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NamespaceImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cImportPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cOwnedRelatedElementFilterPackageParserRuleCall_1_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1.eContents().get(0);
		
		//NamespaceImport returns SysML::NamespaceImport :
		//    ImportPrefix
		//    ( ImportedNamespace
		//    | ownedRelatedElement += FilterPackage
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ImportPrefix
		//( ImportedNamespace
		//| ownedRelatedElement += FilterPackage
		//)
		public Group getGroup() { return cGroup; }
		
		//ImportPrefix
		public RuleCall getImportPrefixParserRuleCall_0() { return cImportPrefixParserRuleCall_0; }
		
		//( ImportedNamespace
		//| ownedRelatedElement += FilterPackage
		//)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ImportedNamespace
		public RuleCall getImportedNamespaceParserRuleCall_1_0() { return cImportedNamespaceParserRuleCall_1_0; }
		
		//ownedRelatedElement += FilterPackage
		public Assignment getOwnedRelatedElementAssignment_1_1() { return cOwnedRelatedElementAssignment_1_1; }
		
		//FilterPackage
		public RuleCall getOwnedRelatedElementFilterPackageParserRuleCall_1_1_0() { return cOwnedRelatedElementFilterPackageParserRuleCall_1_1_0; }
	}
	public class ImportedNamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ImportedNamespace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cImportedNamespaceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cImportedNamespaceNamespaceCrossReference_0_0 = (CrossReference)cImportedNamespaceAssignment_0.eContents().get(0);
		private final RuleCall cImportedNamespaceNamespaceQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cImportedNamespaceNamespaceCrossReference_0_0.eContents().get(1);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIsRecursiveAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Keyword cIsRecursiveAsteriskAsteriskKeyword_3_1_0 = (Keyword)cIsRecursiveAssignment_3_1.eContents().get(0);
		
		//fragment ImportedNamespace returns SysML::NamespaceImport :
		//    importedNamespace = [SysML::Namespace|QualifiedName] '::' '*'
		//    ( '::' isRecursive ?= '**' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//importedNamespace = [SysML::Namespace|QualifiedName] '::' '*'
		//( '::' isRecursive ?= '**' )?
		public Group getGroup() { return cGroup; }
		
		//importedNamespace = [SysML::Namespace|QualifiedName]
		public Assignment getImportedNamespaceAssignment_0() { return cImportedNamespaceAssignment_0; }
		
		//[SysML::Namespace|QualifiedName]
		public CrossReference getImportedNamespaceNamespaceCrossReference_0_0() { return cImportedNamespaceNamespaceCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getImportedNamespaceNamespaceQualifiedNameParserRuleCall_0_0_1() { return cImportedNamespaceNamespaceQualifiedNameParserRuleCall_0_0_1; }
		
		//'::'
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//'*'
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
		
		//( '::' isRecursive ?= '**' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'::'
		public Keyword getColonColonKeyword_3_0() { return cColonColonKeyword_3_0; }
		
		//isRecursive ?= '**'
		public Assignment getIsRecursiveAssignment_3_1() { return cIsRecursiveAssignment_3_1; }
		
		//'**'
		public Keyword getIsRecursiveAsteriskAsteriskKeyword_3_1_0() { return cIsRecursiveAsteriskAsteriskKeyword_3_1_0; }
	}
	public class FilterPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FilterPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipFilterPackageImportParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipFilterPackageMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//FilterPackage returns SysML::Package :
		//    ownedRelationship += FilterPackageImport
		//    ( ownedRelationship += FilterPackageMember )+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += FilterPackageImport
		//( ownedRelationship += FilterPackageMember )+
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += FilterPackageImport
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//FilterPackageImport
		public RuleCall getOwnedRelationshipFilterPackageImportParserRuleCall_0_0() { return cOwnedRelationshipFilterPackageImportParserRuleCall_0_0; }
		
		//( ownedRelationship += FilterPackageMember )+
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//FilterPackageMember
		public RuleCall getOwnedRelationshipFilterPackageMemberParserRuleCall_1_0() { return cOwnedRelationshipFilterPackageMemberParserRuleCall_1_0; }
	}
	public class FilterPackageImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FilterPackageImport");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFilterPackageMembershipImportParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFilterPackageNamespaceImportParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//FilterPackageImport returns SysML::Import :
		//     FilterPackageMembershipImport | FilterPackageNamespaceImport
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//FilterPackageMembershipImport | FilterPackageNamespaceImport
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FilterPackageMembershipImport
		public RuleCall getFilterPackageMembershipImportParserRuleCall_0() { return cFilterPackageMembershipImportParserRuleCall_0; }
		
		//FilterPackageNamespaceImport
		public RuleCall getFilterPackageNamespaceImportParserRuleCall_1() { return cFilterPackageNamespaceImportParserRuleCall_1; }
	}
	public class FilterPackageMembershipImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FilterPackageMembershipImport");
		private final RuleCall cImportedMembershipParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//FilterPackageMembershipImport returns SysML::MembershipImport :
		//    ImportedMembership
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ImportedMembership
		public RuleCall getImportedMembershipParserRuleCall() { return cImportedMembershipParserRuleCall; }
	}
	public class FilterPackageNamespaceImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FilterPackageNamespaceImport");
		private final RuleCall cImportedNamespaceParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//FilterPackageNamespaceImport returns SysML::NamespaceImport :
		//    ImportedNamespace
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ImportedNamespace
		public RuleCall getImportedNamespaceParserRuleCall() { return cImportedNamespaceParserRuleCall; }
	}
	public class FilterPackageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FilterPackageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//FilterPackageMember returns SysML::ElementFilterMembership :
		//    visibility = FilterPackageMemberVisibility ownedRelatedElement += OwnedExpression ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//visibility = FilterPackageMemberVisibility ownedRelatedElement += OwnedExpression ']'
		public Group getGroup() { return cGroup; }
		
		//visibility = FilterPackageMemberVisibility
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//FilterPackageMemberVisibility
		public RuleCall getVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0() { return cVisibilityFilterPackageMemberVisibilityEnumRuleCall_0_0; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}
	public class DefinitionElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLibraryPackageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAnnotatingElementParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDependencyParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAttributeDefinitionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cEnumerationDefinitionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cOccurrenceDefinitionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cIndividualDefinitionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cItemDefinitionParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cMetadataDefinitionParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cPartDefinitionParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cConnectionDefinitionParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cFlowConnectionDefinitionParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cInterfaceDefinitionParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cAllocationDefinitionParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cPortDefinitionParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cActionDefinitionParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cCalculationDefinitionParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cStateDefinitionParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cConstraintDefinitionParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cRequirementDefinitionParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cConcernDefinitionParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		private final RuleCall cCaseDefinitionParserRuleCall_22 = (RuleCall)cAlternatives.eContents().get(22);
		private final RuleCall cAnalysisCaseDefinitionParserRuleCall_23 = (RuleCall)cAlternatives.eContents().get(23);
		private final RuleCall cVerificationCaseDefinitionParserRuleCall_24 = (RuleCall)cAlternatives.eContents().get(24);
		private final RuleCall cUseCaseDefinitionParserRuleCall_25 = (RuleCall)cAlternatives.eContents().get(25);
		private final RuleCall cViewDefinitionParserRuleCall_26 = (RuleCall)cAlternatives.eContents().get(26);
		private final RuleCall cViewpointDefinitionParserRuleCall_27 = (RuleCall)cAlternatives.eContents().get(27);
		private final RuleCall cRenderingDefinitionParserRuleCall_28 = (RuleCall)cAlternatives.eContents().get(28);
		private final RuleCall cExtendedDefinitionParserRuleCall_29 = (RuleCall)cAlternatives.eContents().get(29);
		
		///* Package Elements */
		//DefinitionElement returns SysML::Element :
		//      Package
		//    | LibraryPackage
		//    | AnnotatingElement
		//    | Dependency
		//    | AttributeDefinition
		//    | EnumerationDefinition
		//    | OccurrenceDefinition
		//    | IndividualDefinition
		//    | ItemDefinition
		//    | MetadataDefinition
		//    | PartDefinition
		//    | ConnectionDefinition
		//    | FlowConnectionDefinition
		//    | InterfaceDefinition
		//    | AllocationDefinition
		//    | PortDefinition
		//    | ActionDefinition
		//    | CalculationDefinition
		//    | StateDefinition
		//    | ConstraintDefinition
		//    | RequirementDefinition
		//    | ConcernDefinition
		//    | CaseDefinition
		//    | AnalysisCaseDefinition
		//    | VerificationCaseDefinition
		//    | UseCaseDefinition
		//    | ViewDefinition
		//    | ViewpointDefinition
		//    | RenderingDefinition
		//    | ExtendedDefinition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  Package
		//| LibraryPackage
		//| AnnotatingElement
		//| Dependency
		//| AttributeDefinition
		//| EnumerationDefinition
		//| OccurrenceDefinition
		//| IndividualDefinition
		//| ItemDefinition
		//| MetadataDefinition
		//| PartDefinition
		//| ConnectionDefinition
		//| FlowConnectionDefinition
		//| InterfaceDefinition
		//| AllocationDefinition
		//| PortDefinition
		//| ActionDefinition
		//| CalculationDefinition
		//| StateDefinition
		//| ConstraintDefinition
		//| RequirementDefinition
		//| ConcernDefinition
		//| CaseDefinition
		//| AnalysisCaseDefinition
		//| VerificationCaseDefinition
		//| UseCaseDefinition
		//| ViewDefinition
		//| ViewpointDefinition
		//| RenderingDefinition
		//| ExtendedDefinition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Package
		public RuleCall getPackageParserRuleCall_0() { return cPackageParserRuleCall_0; }
		
		//LibraryPackage
		public RuleCall getLibraryPackageParserRuleCall_1() { return cLibraryPackageParserRuleCall_1; }
		
		//AnnotatingElement
		public RuleCall getAnnotatingElementParserRuleCall_2() { return cAnnotatingElementParserRuleCall_2; }
		
		//Dependency
		public RuleCall getDependencyParserRuleCall_3() { return cDependencyParserRuleCall_3; }
		
		//AttributeDefinition
		public RuleCall getAttributeDefinitionParserRuleCall_4() { return cAttributeDefinitionParserRuleCall_4; }
		
		//EnumerationDefinition
		public RuleCall getEnumerationDefinitionParserRuleCall_5() { return cEnumerationDefinitionParserRuleCall_5; }
		
		//OccurrenceDefinition
		public RuleCall getOccurrenceDefinitionParserRuleCall_6() { return cOccurrenceDefinitionParserRuleCall_6; }
		
		//IndividualDefinition
		public RuleCall getIndividualDefinitionParserRuleCall_7() { return cIndividualDefinitionParserRuleCall_7; }
		
		//ItemDefinition
		public RuleCall getItemDefinitionParserRuleCall_8() { return cItemDefinitionParserRuleCall_8; }
		
		//MetadataDefinition
		public RuleCall getMetadataDefinitionParserRuleCall_9() { return cMetadataDefinitionParserRuleCall_9; }
		
		//PartDefinition
		public RuleCall getPartDefinitionParserRuleCall_10() { return cPartDefinitionParserRuleCall_10; }
		
		//ConnectionDefinition
		public RuleCall getConnectionDefinitionParserRuleCall_11() { return cConnectionDefinitionParserRuleCall_11; }
		
		//FlowConnectionDefinition
		public RuleCall getFlowConnectionDefinitionParserRuleCall_12() { return cFlowConnectionDefinitionParserRuleCall_12; }
		
		//InterfaceDefinition
		public RuleCall getInterfaceDefinitionParserRuleCall_13() { return cInterfaceDefinitionParserRuleCall_13; }
		
		//AllocationDefinition
		public RuleCall getAllocationDefinitionParserRuleCall_14() { return cAllocationDefinitionParserRuleCall_14; }
		
		//PortDefinition
		public RuleCall getPortDefinitionParserRuleCall_15() { return cPortDefinitionParserRuleCall_15; }
		
		//ActionDefinition
		public RuleCall getActionDefinitionParserRuleCall_16() { return cActionDefinitionParserRuleCall_16; }
		
		//CalculationDefinition
		public RuleCall getCalculationDefinitionParserRuleCall_17() { return cCalculationDefinitionParserRuleCall_17; }
		
		//StateDefinition
		public RuleCall getStateDefinitionParserRuleCall_18() { return cStateDefinitionParserRuleCall_18; }
		
		//ConstraintDefinition
		public RuleCall getConstraintDefinitionParserRuleCall_19() { return cConstraintDefinitionParserRuleCall_19; }
		
		//RequirementDefinition
		public RuleCall getRequirementDefinitionParserRuleCall_20() { return cRequirementDefinitionParserRuleCall_20; }
		
		//ConcernDefinition
		public RuleCall getConcernDefinitionParserRuleCall_21() { return cConcernDefinitionParserRuleCall_21; }
		
		//CaseDefinition
		public RuleCall getCaseDefinitionParserRuleCall_22() { return cCaseDefinitionParserRuleCall_22; }
		
		//AnalysisCaseDefinition
		public RuleCall getAnalysisCaseDefinitionParserRuleCall_23() { return cAnalysisCaseDefinitionParserRuleCall_23; }
		
		//VerificationCaseDefinition
		public RuleCall getVerificationCaseDefinitionParserRuleCall_24() { return cVerificationCaseDefinitionParserRuleCall_24; }
		
		//UseCaseDefinition
		public RuleCall getUseCaseDefinitionParserRuleCall_25() { return cUseCaseDefinitionParserRuleCall_25; }
		
		//ViewDefinition
		public RuleCall getViewDefinitionParserRuleCall_26() { return cViewDefinitionParserRuleCall_26; }
		
		//ViewpointDefinition
		public RuleCall getViewpointDefinitionParserRuleCall_27() { return cViewpointDefinitionParserRuleCall_27; }
		
		//RenderingDefinition
		public RuleCall getRenderingDefinitionParserRuleCall_28() { return cRenderingDefinitionParserRuleCall_28; }
		
		//ExtendedDefinition
		public RuleCall getExtendedDefinitionParserRuleCall_29() { return cExtendedDefinitionParserRuleCall_29; }
	}
	public class UsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNonOccurrenceUsageElementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOccurrenceUsageElementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UsageElement returns SysML::Usage :
		//      NonOccurrenceUsageElement
		//    | OccurrenceUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  NonOccurrenceUsageElement
		//| OccurrenceUsageElement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NonOccurrenceUsageElement
		public RuleCall getNonOccurrenceUsageElementParserRuleCall_0() { return cNonOccurrenceUsageElementParserRuleCall_0; }
		
		//OccurrenceUsageElement
		public RuleCall getOccurrenceUsageElementParserRuleCall_1() { return cOccurrenceUsageElementParserRuleCall_1; }
	}
	public class SubclassificationPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubclassificationPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSpecializesKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedSubclassificationParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedSubclassificationParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1.eContents().get(0);
		
		///* CLASSIFIERS */
		///* Subclassification */
		//fragment SubclassificationPart returns SysML::Classifier :
		//    SpecializesKeyword ownedRelationship += OwnedSubclassification
		//    ( ',' ownedRelationship += OwnedSubclassification )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SpecializesKeyword ownedRelationship += OwnedSubclassification
		//( ',' ownedRelationship += OwnedSubclassification )*
		public Group getGroup() { return cGroup; }
		
		//SpecializesKeyword
		public RuleCall getSpecializesKeywordParserRuleCall_0() { return cSpecializesKeywordParserRuleCall_0; }
		
		//ownedRelationship += OwnedSubclassification
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedSubclassification
		public RuleCall getOwnedRelationshipOwnedSubclassificationParserRuleCall_1_0() { return cOwnedRelationshipOwnedSubclassificationParserRuleCall_1_0; }
		
		//( ',' ownedRelationship += OwnedSubclassification )*
		public Group getGroup_2() { return cGroup_2; }
		
		//','
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }
		
		//ownedRelationship += OwnedSubclassification
		public Assignment getOwnedRelationshipAssignment_2_1() { return cOwnedRelationshipAssignment_2_1; }
		
		//OwnedSubclassification
		public RuleCall getOwnedRelationshipOwnedSubclassificationParserRuleCall_2_1_0() { return cOwnedRelationshipOwnedSubclassificationParserRuleCall_2_1_0; }
	}
	public class SpecializesKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SpecializesKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSpecializesKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//SpecializesKeyword :
		//    ':>' | 'specializes'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//':>' | 'specializes'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':>'
		public Keyword getColonGreaterThanSignKeyword_0() { return cColonGreaterThanSignKeyword_0; }
		
		//'specializes'
		public Keyword getSpecializesKeyword_1() { return cSpecializesKeyword_1; }
	}
	public class OwnedSubclassificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedSubclassification");
		private final Assignment cSuperclassifierAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSuperclassifierClassifierCrossReference_0 = (CrossReference)cSuperclassifierAssignment.eContents().get(0);
		private final RuleCall cSuperclassifierClassifierQualifiedNameParserRuleCall_0_1 = (RuleCall)cSuperclassifierClassifierCrossReference_0.eContents().get(1);
		
		//OwnedSubclassification returns SysML::Subclassification:
		//    superclassifier = [SysML::Classifier | QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//superclassifier = [SysML::Classifier | QualifiedName]
		public Assignment getSuperclassifierAssignment() { return cSuperclassifierAssignment; }
		
		//[SysML::Classifier | QualifiedName]
		public CrossReference getSuperclassifierClassifierCrossReference_0() { return cSuperclassifierClassifierCrossReference_0; }
		
		//QualifiedName
		public RuleCall getSuperclassifierClassifierQualifiedNameParserRuleCall_0_1() { return cSuperclassifierClassifierQualifiedNameParserRuleCall_0_1; }
	}
	public class FeatureDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* FEATURES */
		///* Features */
		//fragment FeatureDeclaration returns SysML::Feature :
		//      Identification FeatureSpecializationPart?
		//    | FeatureSpecializationPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  Identification FeatureSpecializationPart?
		//| FeatureSpecializationPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Identification FeatureSpecializationPart?
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_0_1() { return cFeatureSpecializationPartParserRuleCall_0_1; }
		
		//FeatureSpecializationPart
		public RuleCall getFeatureSpecializationPartParserRuleCall_1() { return cFeatureSpecializationPartParserRuleCall_1; }
	}
	public class FeatureSpecializationPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureSpecializationPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment FeatureSpecializationPart returns SysML::Feature :
		//      ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		//    | MultiplicityPart FeatureSpecialization*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		//| MultiplicityPart FeatureSpecialization*
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		public Group getGroup_0() { return cGroup_0; }
		
		//( -> FeatureSpecialization )+
		public RuleCall getFeatureSpecializationParserRuleCall_0_0() { return cFeatureSpecializationParserRuleCall_0_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_1() { return cMultiplicityPartParserRuleCall_0_1; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_2() { return cFeatureSpecializationParserRuleCall_0_2; }
		
		//MultiplicityPart FeatureSpecialization*
		public Group getGroup_1() { return cGroup_1; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1_0() { return cMultiplicityPartParserRuleCall_1_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_1_1() { return cFeatureSpecializationParserRuleCall_1_1; }
	}
	public class MultiplicityPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedMultiplicityParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cAlternatives_1_1.eContents().get(0);
		private final Assignment cIsOrderedAssignment_1_1_0_0 = (Assignment)cGroup_1_1_0.eContents().get(0);
		private final Keyword cIsOrderedOrderedKeyword_1_1_0_0_0 = (Keyword)cIsOrderedAssignment_1_1_0_0.eContents().get(0);
		private final Assignment cIsNonuniqueAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final Keyword cIsNonuniqueNonuniqueKeyword_1_1_0_1_0 = (Keyword)cIsNonuniqueAssignment_1_1_0_1.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cAlternatives_1_1.eContents().get(1);
		private final Assignment cIsNonuniqueAssignment_1_1_1_0 = (Assignment)cGroup_1_1_1.eContents().get(0);
		private final Keyword cIsNonuniqueNonuniqueKeyword_1_1_1_0_0 = (Keyword)cIsNonuniqueAssignment_1_1_1_0.eContents().get(0);
		private final Assignment cIsOrderedAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final Keyword cIsOrderedOrderedKeyword_1_1_1_1_0 = (Keyword)cIsOrderedAssignment_1_1_1_1.eContents().get(0);
		
		//fragment MultiplicityPart returns SysML::Feature :
		//      ownedRelationship += OwnedMultiplicity
		//    | ( ownedRelationship += OwnedMultiplicity )?
		//      ( isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
		//      | isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
		//      )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedMultiplicity
		//| ( ownedRelationship += OwnedMultiplicity )?
		//  ( isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
		//  | isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
		//  )
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedMultiplicity
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//OwnedMultiplicity
		public RuleCall getOwnedRelationshipOwnedMultiplicityParserRuleCall_0_0() { return cOwnedRelationshipOwnedMultiplicityParserRuleCall_0_0; }
		
		//( ownedRelationship += OwnedMultiplicity )?
		//     ( isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
		//     | isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
		//     )
		public Group getGroup_1() { return cGroup_1; }
		
		//( ownedRelationship += OwnedMultiplicity )?
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//OwnedMultiplicity
		public RuleCall getOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0_0() { return cOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0_0; }
		
		//( isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
		//| isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
		//)
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//isOrdered ?= 'ordered'
		public Assignment getIsOrderedAssignment_1_1_0_0() { return cIsOrderedAssignment_1_1_0_0; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_1_1_0_0_0() { return cIsOrderedOrderedKeyword_1_1_0_0_0; }
		
		//isNonunique ?= 'nonunique'?
		public Assignment getIsNonuniqueAssignment_1_1_0_1() { return cIsNonuniqueAssignment_1_1_0_1; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_1_1_0_1_0() { return cIsNonuniqueNonuniqueKeyword_1_1_0_1_0; }
		
		//isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//isNonunique ?= 'nonunique'
		public Assignment getIsNonuniqueAssignment_1_1_1_0() { return cIsNonuniqueAssignment_1_1_1_0; }
		
		//'nonunique'
		public Keyword getIsNonuniqueNonuniqueKeyword_1_1_1_0_0() { return cIsNonuniqueNonuniqueKeyword_1_1_1_0_0; }
		
		//isOrdered ?= 'ordered'?
		public Assignment getIsOrderedAssignment_1_1_1_1() { return cIsOrderedAssignment_1_1_1_1; }
		
		//'ordered'
		public Keyword getIsOrderedOrderedKeyword_1_1_1_1_0() { return cIsOrderedOrderedKeyword_1_1_1_1_0; }
	}
	public class FeatureSpecializationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureSpecialization");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypingsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubsettingsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cReferencesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRedefinitionsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//fragment FeatureSpecialization returns SysML::Feature :
		//    Typings | Subsettings | References | Redefinitions
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Typings | Subsettings | References | Redefinitions
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Typings
		public RuleCall getTypingsParserRuleCall_0() { return cTypingsParserRuleCall_0; }
		
		//Subsettings
		public RuleCall getSubsettingsParserRuleCall_1() { return cSubsettingsParserRuleCall_1; }
		
		//References
		public RuleCall getReferencesParserRuleCall_2() { return cReferencesParserRuleCall_2; }
		
		//Redefinitions
		public RuleCall getRedefinitionsParserRuleCall_3() { return cRedefinitionsParserRuleCall_3; }
	}
	public class TypingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Typings");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTypedByParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment Typings returns SysML::Feature :
		//    TypedBy ( ',' ownedRelationship += FeatureTyping )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//TypedBy ( ',' ownedRelationship += FeatureTyping )*
		public Group getGroup() { return cGroup; }
		
		//TypedBy
		public RuleCall getTypedByParserRuleCall_0() { return cTypedByParserRuleCall_0; }
		
		//( ',' ownedRelationship += FeatureTyping )*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship += FeatureTyping
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_1_1_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_1_1_0; }
	}
	public class TypedByElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TypedBy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinedByKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureTypingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment TypedBy returns SysML::Feature :
		//    DefinedByKeyword ownedRelationship += FeatureTyping
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinedByKeyword ownedRelationship += FeatureTyping
		public Group getGroup() { return cGroup; }
		
		//DefinedByKeyword
		public RuleCall getDefinedByKeywordParserRuleCall_0() { return cDefinedByKeywordParserRuleCall_0; }
		
		//ownedRelationship += FeatureTyping
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//FeatureTyping
		public RuleCall getOwnedRelationshipFeatureTypingParserRuleCall_1_0() { return cOwnedRelationshipFeatureTypingParserRuleCall_1_0; }
	}
	public class DefinedByKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinedByKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cDefinedKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cByKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//DefinedByKeyword :
		//    ':' | 'defined' 'by'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//':' | 'defined' 'by'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':'
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }
		
		//'defined' 'by'
		public Group getGroup_1() { return cGroup_1; }
		
		//'defined'
		public Keyword getDefinedKeyword_1_0() { return cDefinedKeyword_1_0; }
		
		//'by'
		public Keyword getByKeyword_1_1() { return cByKeyword_1_1; }
	}
	public class SubsettingsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Subsettings");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSubsetsParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment Subsettings returns SysML::Feature :
		//    Subsets ( ',' ownedRelationship += OwnedSubsetting )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Subsets ( ',' ownedRelationship += OwnedSubsetting )*
		public Group getGroup() { return cGroup; }
		
		//Subsets
		public RuleCall getSubsetsParserRuleCall_0() { return cSubsetsParserRuleCall_0; }
		
		//( ',' ownedRelationship += OwnedSubsetting )*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_1_1_0; }
	}
	public class SubsetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Subsets");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSubsetsKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedSubsettingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment Subsets returns SysML::Feature :
		//    SubsetsKeyword ownedRelationship += OwnedSubsetting
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SubsetsKeyword ownedRelationship += OwnedSubsetting
		public Group getGroup() { return cGroup; }
		
		//SubsetsKeyword
		public RuleCall getSubsetsKeywordParserRuleCall_0() { return cSubsetsKeywordParserRuleCall_0; }
		
		//ownedRelationship += OwnedSubsetting
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedSubsetting
		public RuleCall getOwnedRelationshipOwnedSubsettingParserRuleCall_1_0() { return cOwnedRelationshipOwnedSubsettingParserRuleCall_1_0; }
	}
	public class SubsetsKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubsetsKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cSubsetsKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//SubsetsKeyword :
		//    ':>' | 'subsets'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//':>' | 'subsets'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':>'
		public Keyword getColonGreaterThanSignKeyword_0() { return cColonGreaterThanSignKeyword_0; }
		
		//'subsets'
		public Keyword getSubsetsKeyword_1() { return cSubsetsKeyword_1; }
	}
	public class ReferencesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.References");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cReferencesKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment References returns SysML::Feature :
		//    ReferencesKeyword ownedRelationship += OwnedReferenceSubsetting
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ReferencesKeyword ownedRelationship += OwnedReferenceSubsetting
		public Group getGroup() { return cGroup; }
		
		//ReferencesKeyword
		public RuleCall getReferencesKeywordParserRuleCall_0() { return cReferencesKeywordParserRuleCall_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0; }
	}
	public class ReferencesKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferencesKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonColonGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cReferencesKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//ReferencesKeyword :
		//    '::>' | 'references'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'::>' | 'references'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'::>'
		public Keyword getColonColonGreaterThanSignKeyword_0() { return cColonColonGreaterThanSignKeyword_0; }
		
		//'references'
		public Keyword getReferencesKeyword_1() { return cReferencesKeyword_1; }
	}
	public class RedefinitionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Redefinitions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRedefinesParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment Redefinitions returns SysML::Feature :
		//    Redefines ( ',' ownedRelationship += OwnedRedefinition )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Redefines ( ',' ownedRelationship += OwnedRedefinition )*
		public Group getGroup() { return cGroup; }
		
		//Redefines
		public RuleCall getRedefinesParserRuleCall_0() { return cRedefinesParserRuleCall_0; }
		
		//( ',' ownedRelationship += OwnedRedefinition )*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//ownedRelationship += OwnedRedefinition
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//OwnedRedefinition
		public RuleCall getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0() { return cOwnedRelationshipOwnedRedefinitionParserRuleCall_1_1_0; }
	}
	public class RedefinesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Redefines");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRedefinesKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment Redefines returns SysML::Feature :
		//    RedefinesKeyword ownedRelationship += OwnedRedefinition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RedefinesKeyword ownedRelationship += OwnedRedefinition
		public Group getGroup() { return cGroup; }
		
		//RedefinesKeyword
		public RuleCall getRedefinesKeywordParserRuleCall_0() { return cRedefinesKeywordParserRuleCall_0; }
		
		//ownedRelationship += OwnedRedefinition
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedRedefinition
		public RuleCall getOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0() { return cOwnedRelationshipOwnedRedefinitionParserRuleCall_1_0; }
	}
	public class RedefinesKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RedefinesKeyword");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cColonGreaterThanSignGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cRedefinesKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//RedefinesKeyword :
		//    ':>>' | 'redefines'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//':>>' | 'redefines'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//':>>'
		public Keyword getColonGreaterThanSignGreaterThanSignKeyword_0() { return cColonGreaterThanSignGreaterThanSignKeyword_0; }
		
		//'redefines'
		public Keyword getRedefinesKeyword_1() { return cRedefinesKeyword_1; }
	}
	public class FeatureTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureTyping");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOwnedFeatureTypingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConjugatedPortTypingParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		///* Feature Typing, Subsetting and Redefinition */
		//FeatureTyping returns SysML::FeatureTyping :
		//    OwnedFeatureTyping | ConjugatedPortTyping
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OwnedFeatureTyping | ConjugatedPortTyping
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedFeatureTypingParserRuleCall_0() { return cOwnedFeatureTypingParserRuleCall_0; }
		
		//ConjugatedPortTyping
		public RuleCall getConjugatedPortTypingParserRuleCall_1() { return cConjugatedPortTypingParserRuleCall_1; }
	}
	public class OwnedSubsettingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedSubsetting");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cSubsettedFeatureAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final CrossReference cSubsettedFeatureFeatureCrossReference_0_0 = (CrossReference)cSubsettedFeatureAssignment_0.eContents().get(0);
		private final RuleCall cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cSubsettedFeatureFeatureCrossReference_0_0.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//// OwnedFeatureTyping inherited from Expression syntax.
		//OwnedSubsetting returns SysML::Subsetting :
		//      subsettedFeature = [SysML::Feature|QualifiedName]
		//    | ownedRelatedElement += OwnedFeatureChain
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  subsettedFeature = [SysML::Feature|QualifiedName]
		//| ownedRelatedElement += OwnedFeatureChain
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//subsettedFeature = [SysML::Feature|QualifiedName]
		public Assignment getSubsettedFeatureAssignment_0() { return cSubsettedFeatureAssignment_0; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getSubsettedFeatureFeatureCrossReference_0_0() { return cSubsettedFeatureFeatureCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_0_1() { return cSubsettedFeatureFeatureQualifiedNameParserRuleCall_0_0_1; }
		
		//ownedRelatedElement += OwnedFeatureChain
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedFeatureChain
		public RuleCall getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0() { return cOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0; }
	}
	public class OwnedReferenceSubsettingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedReferenceSubsetting");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cReferencedFeatureAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final CrossReference cReferencedFeatureFeatureCrossReference_0_0 = (CrossReference)cReferencedFeatureAssignment_0.eContents().get(0);
		private final RuleCall cReferencedFeatureFeatureQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cReferencedFeatureFeatureCrossReference_0_0.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//OwnedReferenceSubsetting returns SysML::ReferenceSubsetting :
		//      referencedFeature = [SysML::Feature|QualifiedName]
		//    | ownedRelatedElement += OwnedFeatureChain
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  referencedFeature = [SysML::Feature|QualifiedName]
		//| ownedRelatedElement += OwnedFeatureChain
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//referencedFeature = [SysML::Feature|QualifiedName]
		public Assignment getReferencedFeatureAssignment_0() { return cReferencedFeatureAssignment_0; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getReferencedFeatureFeatureCrossReference_0_0() { return cReferencedFeatureFeatureCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getReferencedFeatureFeatureQualifiedNameParserRuleCall_0_0_1() { return cReferencedFeatureFeatureQualifiedNameParserRuleCall_0_0_1; }
		
		//ownedRelatedElement += OwnedFeatureChain
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedFeatureChain
		public RuleCall getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0() { return cOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0; }
	}
	public class OwnedRedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedRedefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cRedefinedFeatureAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final CrossReference cRedefinedFeatureFeatureCrossReference_0_0 = (CrossReference)cRedefinedFeatureAssignment_0.eContents().get(0);
		private final RuleCall cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cRedefinedFeatureFeatureCrossReference_0_0.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//OwnedRedefinition returns SysML::Redefinition:
		//      redefinedFeature = [SysML::Feature | QualifiedName]
		//    | ownedRelatedElement += OwnedFeatureChain
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  redefinedFeature = [SysML::Feature | QualifiedName]
		//| ownedRelatedElement += OwnedFeatureChain
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//redefinedFeature = [SysML::Feature | QualifiedName]
		public Assignment getRedefinedFeatureAssignment_0() { return cRedefinedFeatureAssignment_0; }
		
		//[SysML::Feature | QualifiedName]
		public CrossReference getRedefinedFeatureFeatureCrossReference_0_0() { return cRedefinedFeatureFeatureCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_0_1() { return cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_0_1; }
		
		//ownedRelatedElement += OwnedFeatureChain
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedFeatureChain
		public RuleCall getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0() { return cOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_0; }
	}
	public class OwnedMultiplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OwnedMultiplicity");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementMultiplicityRangeParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* Multiplicity */
		//OwnedMultiplicity returns SysML::OwningMembership :
		//    ownedRelatedElement += MultiplicityRange
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += MultiplicityRange
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//MultiplicityRange
		public RuleCall getOwnedRelatedElementMultiplicityRangeParserRuleCall_0() { return cOwnedRelatedElementMultiplicityRangeParserRuleCall_0; }
	}
	public class MultiplicityRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityRange");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//MultiplicityRange returns SysML::MultiplicityRange :
		//    // TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
		//    '[' ownedRelationship += MultiplicityExpressionMember
		//          ( '..' ownedRelationship += MultiplicityExpressionMember )? ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
		//'[' ownedRelationship += MultiplicityExpressionMember
		//      ( '..' ownedRelationship += MultiplicityExpressionMember )? ']'
		public Group getGroup() { return cGroup; }
		
		//// TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//ownedRelationship += MultiplicityExpressionMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//MultiplicityExpressionMember
		public RuleCall getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0() { return cOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_1_0; }
		
		//( '..' ownedRelationship += MultiplicityExpressionMember )?
		public Group getGroup_2() { return cGroup_2; }
		
		//'..'
		public Keyword getFullStopFullStopKeyword_2_0() { return cFullStopFullStopKeyword_2_0; }
		
		//ownedRelationship += MultiplicityExpressionMember
		public Assignment getOwnedRelationshipAssignment_2_1() { return cOwnedRelationshipAssignment_2_1; }
		
		//MultiplicityExpressionMember
		public RuleCall getOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0() { return cOwnedRelationshipMultiplicityExpressionMemberParserRuleCall_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class MultiplicityExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicityExpressionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cOwnedRelatedElementAlternatives_0 = (Alternatives)cOwnedRelatedElementAssignment.eContents().get(0);
		private final RuleCall cOwnedRelatedElementLiteralExpressionParserRuleCall_0_0 = (RuleCall)cOwnedRelatedElementAlternatives_0.eContents().get(0);
		private final RuleCall cOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1 = (RuleCall)cOwnedRelatedElementAlternatives_0.eContents().get(1);
		
		//MultiplicityExpressionMember returns SysML::OwningMembership :
		//    ownedRelatedElement += ( LiteralExpression | FeatureReferenceExpression )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ( LiteralExpression | FeatureReferenceExpression )
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//( LiteralExpression | FeatureReferenceExpression )
		public Alternatives getOwnedRelatedElementAlternatives_0() { return cOwnedRelatedElementAlternatives_0; }
		
		//LiteralExpression
		public RuleCall getOwnedRelatedElementLiteralExpressionParserRuleCall_0_0() { return cOwnedRelatedElementLiteralExpressionParserRuleCall_0_0; }
		
		//FeatureReferenceExpression
		public RuleCall getOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1() { return cOwnedRelatedElementFeatureReferenceExpressionParserRuleCall_0_1; }
	}
	public class BasicDefinitionPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BasicDefinitionPrefix");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsAbstractAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_0_0 = (Keyword)cIsAbstractAssignment_0.eContents().get(0);
		private final Assignment cIsVariationAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cIsVariationVariationKeyword_1_0 = (Keyword)cIsVariationAssignment_1.eContents().get(0);
		
		///* DEFINITION AND USAGE */
		///* Definitions */
		//fragment BasicDefinitionPrefix returns SysML::Definition :
		//    isAbstract ?= 'abstract' | isVariation ?= 'variation'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//isAbstract ?= 'abstract' | isVariation ?= 'variation'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//isAbstract ?= 'abstract'
		public Assignment getIsAbstractAssignment_0() { return cIsAbstractAssignment_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_0_0() { return cIsAbstractAbstractKeyword_0_0; }
		
		//isVariation ?= 'variation'
		public Assignment getIsVariationAssignment_1() { return cIsVariationAssignment_1; }
		
		//'variation'
		public Keyword getIsVariationVariationKeyword_1_0() { return cIsVariationVariationKeyword_1_0; }
	}
	public class DefinitionExtensionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionExtensionKeyword");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipPrefixMetadataMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//fragment DefinitionExtensionKeyword returns SysML::Definition :
		//    ownedRelationship += PrefixMetadataMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += PrefixMetadataMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//PrefixMetadataMember
		public RuleCall getOwnedRelationshipPrefixMetadataMemberParserRuleCall_0() { return cOwnedRelationshipPrefixMetadataMemberParserRuleCall_0; }
	}
	public class DefinitionPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBasicDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionExtensionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment DefinitionPrefix returns SysML::Definition :
		//    BasicDefinitionPrefix? DefinitionExtensionKeyword*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicDefinitionPrefix? DefinitionExtensionKeyword*
		public Group getGroup() { return cGroup; }
		
		//BasicDefinitionPrefix?
		public RuleCall getBasicDefinitionPrefixParserRuleCall_0() { return cBasicDefinitionPrefixParserRuleCall_0; }
		
		//DefinitionExtensionKeyword*
		public RuleCall getDefinitionExtensionKeywordParserRuleCall_1() { return cDefinitionExtensionKeywordParserRuleCall_1; }
	}
	public class DefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Definition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment Definition returns SysML::Definition :
		//    DefinitionDeclaration DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_0() { return cDefinitionDeclarationParserRuleCall_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_1() { return cDefinitionBodyParserRuleCall_1; }
	}
	public class DefinitionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIdentificationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cSubclassificationPartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment DefinitionDeclaration returns SysML::Definition :
		//    Identification? SubclassificationPart?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Identification? SubclassificationPart?
		public Group getGroup() { return cGroup; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0() { return cIdentificationParserRuleCall_0; }
		
		//SubclassificationPart?
		public RuleCall getSubclassificationPartParserRuleCall_1() { return cSubclassificationPartParserRuleCall_1; }
	}
	public class DefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cDefinitionBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment DefinitionBody returns SysML::Type :
		//    ';' | '{' DefinitionBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' DefinitionBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' DefinitionBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//DefinitionBodyItem*
		public RuleCall getDefinitionBodyItemParserRuleCall_1_1() { return cDefinitionBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class DefinitionBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelationshipDefinitionMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipVariantUsageMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_3_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipOccurrenceUsageMemberParserRuleCall_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedRelationshipAliasMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		
		//fragment DefinitionBodyItem returns SysML::Type :
		//      ownedRelationship += DefinitionMember
		//    | ownedRelationship += VariantUsageMember
		//    | ownedRelationship += NonOccurrenceUsageMember
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += OccurrenceUsageMember
		//    | ownedRelationship += AliasMember
		//    | => ownedRelationship += Import
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += DefinitionMember
		//| ownedRelationship += VariantUsageMember
		//| ownedRelationship += NonOccurrenceUsageMember
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += OccurrenceUsageMember
		//| ownedRelationship += AliasMember
		//| => ownedRelationship += Import
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += DefinitionMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//DefinitionMember
		public RuleCall getOwnedRelationshipDefinitionMemberParserRuleCall_0_0() { return cOwnedRelationshipDefinitionMemberParserRuleCall_0_0; }
		
		//ownedRelationship += VariantUsageMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//VariantUsageMember
		public RuleCall getOwnedRelationshipVariantUsageMemberParserRuleCall_1_0() { return cOwnedRelationshipVariantUsageMemberParserRuleCall_1_0; }
		
		//ownedRelationship += NonOccurrenceUsageMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//NonOccurrenceUsageMember
		public RuleCall getOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_2_0() { return cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_2_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += OccurrenceUsageMember
		public Group getGroup_3() { return cGroup_3; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_3_0() { return cOwnedRelationshipAssignment_3_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_3_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_3_0_0; }
		
		//ownedRelationship += OccurrenceUsageMember
		public Assignment getOwnedRelationshipAssignment_3_1() { return cOwnedRelationshipAssignment_3_1; }
		
		//OccurrenceUsageMember
		public RuleCall getOwnedRelationshipOccurrenceUsageMemberParserRuleCall_3_1_0() { return cOwnedRelationshipOccurrenceUsageMemberParserRuleCall_3_1_0; }
		
		//ownedRelationship += AliasMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//AliasMember
		public RuleCall getOwnedRelationshipAliasMemberParserRuleCall_4_0() { return cOwnedRelationshipAliasMemberParserRuleCall_4_0; }
		
		//=> ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_5_0() { return cOwnedRelationshipImportParserRuleCall_5_0; }
	}
	public class DefinitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefinitionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementDefinitionElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//DefinitionMember returns SysML::OwningMembership :
		//    MemberPrefix
		//    ownedRelatedElement += DefinitionElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix
		//ownedRelatedElement += DefinitionElement
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += DefinitionElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//DefinitionElement
		public RuleCall getOwnedRelatedElementDefinitionElementParserRuleCall_1_0() { return cOwnedRelatedElementDefinitionElementParserRuleCall_1_0; }
	}
	public class VariantUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VariantUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cVariantKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementVariantUsageElementParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//VariantUsageMember returns SysML::VariantMembership :
		//    MemberPrefix 'variant'
		//    ownedRelatedElement += VariantUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix 'variant'
		//ownedRelatedElement += VariantUsageElement
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//'variant'
		public Keyword getVariantKeyword_1() { return cVariantKeyword_1; }
		
		//ownedRelatedElement += VariantUsageElement
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//VariantUsageElement
		public RuleCall getOwnedRelatedElementVariantUsageElementParserRuleCall_2_0() { return cOwnedRelatedElementVariantUsageElementParserRuleCall_2_0; }
	}
	public class NonOccurrenceUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonOccurrenceUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementNonOccurrenceUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//NonOccurrenceUsageMember returns SysML::FeatureMembership :
		//    MemberPrefix ownedRelatedElement += NonOccurrenceUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += NonOccurrenceUsageElement
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += NonOccurrenceUsageElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//NonOccurrenceUsageElement
		public RuleCall getOwnedRelatedElementNonOccurrenceUsageElementParserRuleCall_1_0() { return cOwnedRelatedElementNonOccurrenceUsageElementParserRuleCall_1_0; }
	}
	public class OccurrenceUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOccurrenceUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//OccurrenceUsageMember returns SysML::FeatureMembership :
		//    MemberPrefix ownedRelatedElement += OccurrenceUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += OccurrenceUsageElement
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += OccurrenceUsageElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OccurrenceUsageElement
		public RuleCall getOwnedRelatedElementOccurrenceUsageElementParserRuleCall_1_0() { return cOwnedRelatedElementOccurrenceUsageElementParserRuleCall_1_0; }
	}
	public class StructureUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StructureUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementStructureUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//StructureUsageMember returns SysML::FeatureMembership :
		//    MemberPrefix ownedRelatedElement += StructureUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += StructureUsageElement
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += StructureUsageElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//StructureUsageElement
		public RuleCall getOwnedRelatedElementStructureUsageElementParserRuleCall_1_0() { return cOwnedRelatedElementStructureUsageElementParserRuleCall_1_0; }
	}
	public class BehaviorUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BehaviorUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementBehaviorUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//BehaviorUsageMember returns SysML::FeatureMembership :
		//    MemberPrefix ownedRelatedElement += BehaviorUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += BehaviorUsageElement
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += BehaviorUsageElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//BehaviorUsageElement
		public RuleCall getOwnedRelatedElementBehaviorUsageElementParserRuleCall_1_0() { return cOwnedRelatedElementBehaviorUsageElementParserRuleCall_1_0; }
	}
	public class RefPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RefPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cIsAbstractAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_1_0_0 = (Keyword)cIsAbstractAssignment_1_0.eContents().get(0);
		private final Assignment cIsVariationAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cIsVariationVariationKeyword_1_1_0 = (Keyword)cIsVariationAssignment_1_1.eContents().get(0);
		private final Assignment cIsReadOnlyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsReadOnlyReadonlyKeyword_2_0 = (Keyword)cIsReadOnlyAssignment_2.eContents().get(0);
		private final Assignment cIsDerivedAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cIsDerivedDerivedKeyword_3_0 = (Keyword)cIsDerivedAssignment_3.eContents().get(0);
		private final Assignment cIsEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cIsEndEndKeyword_4_0 = (Keyword)cIsEndAssignment_4.eContents().get(0);
		
		//fragment RefPrefix returns SysML::Usage :
		//    ( direction = FeatureDirection )?
		//    ( isAbstract ?= 'abstract' | isVariation ?= 'variation')?
		//    ( isReadOnly ?= 'readonly' )?
		//    ( isDerived ?= 'derived' )?
		//    ( isEnd ?= 'end' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( direction = FeatureDirection )?
		//( isAbstract ?= 'abstract' | isVariation ?= 'variation')?
		//( isReadOnly ?= 'readonly' )?
		//( isDerived ?= 'derived' )?
		//( isEnd ?= 'end' )?
		public Group getGroup() { return cGroup; }
		
		//( direction = FeatureDirection )?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//( isAbstract ?= 'abstract' | isVariation ?= 'variation')?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//isAbstract ?= 'abstract'
		public Assignment getIsAbstractAssignment_1_0() { return cIsAbstractAssignment_1_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_1_0_0() { return cIsAbstractAbstractKeyword_1_0_0; }
		
		//isVariation ?= 'variation'
		public Assignment getIsVariationAssignment_1_1() { return cIsVariationAssignment_1_1; }
		
		//'variation'
		public Keyword getIsVariationVariationKeyword_1_1_0() { return cIsVariationVariationKeyword_1_1_0; }
		
		//( isReadOnly ?= 'readonly' )?
		public Assignment getIsReadOnlyAssignment_2() { return cIsReadOnlyAssignment_2; }
		
		//'readonly'
		public Keyword getIsReadOnlyReadonlyKeyword_2_0() { return cIsReadOnlyReadonlyKeyword_2_0; }
		
		//( isDerived ?= 'derived' )?
		public Assignment getIsDerivedAssignment_3() { return cIsDerivedAssignment_3; }
		
		//'derived'
		public Keyword getIsDerivedDerivedKeyword_3_0() { return cIsDerivedDerivedKeyword_3_0; }
		
		//( isEnd ?= 'end' )?
		public Assignment getIsEndAssignment_4() { return cIsEndAssignment_4; }
		
		//'end'
		public Keyword getIsEndEndKeyword_4_0() { return cIsEndEndKeyword_4_0; }
	}
	public class BasicUsagePrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BasicUsagePrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRefPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsReferenceRefKeyword_1_0 = (Keyword)cIsReferenceAssignment_1.eContents().get(0);
		
		//fragment BasicUsagePrefix returns SysML::Usage :
		//    RefPrefix
		//    ( isReference ?= 'ref' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RefPrefix
		//( isReference ?= 'ref' )?
		public Group getGroup() { return cGroup; }
		
		//RefPrefix
		public RuleCall getRefPrefixParserRuleCall_0() { return cRefPrefixParserRuleCall_0; }
		
		//( isReference ?= 'ref' )?
		public Assignment getIsReferenceAssignment_1() { return cIsReferenceAssignment_1; }
		
		//'ref'
		public Keyword getIsReferenceRefKeyword_1_0() { return cIsReferenceRefKeyword_1_0; }
	}
	public class UsageExtensionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageExtensionKeyword");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipPrefixMetadataMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//fragment UsageExtensionKeyword returns SysML::Usage :
		//    ownedRelationship += PrefixMetadataMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += PrefixMetadataMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//PrefixMetadataMember
		public RuleCall getOwnedRelationshipPrefixMetadataMemberParserRuleCall_0() { return cOwnedRelationshipPrefixMetadataMemberParserRuleCall_0; }
	}
	public class UsagePrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsagePrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBasicUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment UsagePrefix returns SysML::Usage :
		//    BasicUsagePrefix UsageExtensionKeyword*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicUsagePrefix UsageExtensionKeyword*
		public Group getGroup() { return cGroup; }
		
		//BasicUsagePrefix
		public RuleCall getBasicUsagePrefixParserRuleCall_0() { return cBasicUsagePrefixParserRuleCall_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_1() { return cUsageExtensionKeywordParserRuleCall_1; }
	}
	public class UsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Usage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageCompletionParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment Usage returns SysML::Usage :
		//    UsageDeclaration? UsageCompletion
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_1() { return cUsageCompletionParserRuleCall_1; }
	}
	public class UsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageDeclaration");
		private final RuleCall cFeatureDeclarationParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//fragment UsageDeclaration returns SysML::Usage :
		//      FeatureDeclaration
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//FeatureDeclaration
		public RuleCall getFeatureDeclarationParserRuleCall() { return cFeatureDeclarationParserRuleCall; }
	}
	public class UsageCompletionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageCompletion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment UsageCompletion returns SysML::Usage :
		//    ValuePart? UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ValuePart? UsageBody
		public Group getGroup() { return cGroup; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0() { return cValuePartParserRuleCall_0; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_1() { return cUsageBodyParserRuleCall_1; }
	}
	public class UsageBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UsageBody");
		private final RuleCall cDefinitionBodyParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//fragment UsageBody returns SysML::Usage :
		//    DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall() { return cDefinitionBodyParserRuleCall; }
	}
	public class ValuePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ValuePart");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureValueParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//fragment ValuePart returns SysML::Feature :
		//      ownedRelationship += FeatureValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += FeatureValue
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//FeatureValue
		public RuleCall getOwnedRelationshipFeatureValueParserRuleCall_0() { return cOwnedRelationshipFeatureValueParserRuleCall_0; }
	}
	public class FeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final Keyword cIsInitialColonEqualsSignKeyword_0_1_0 = (Keyword)cIsInitialAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cAlternatives_0.eContents().get(2);
		private final Assignment cIsDefaultAssignment_0_2_0 = (Assignment)cGroup_0_2.eContents().get(0);
		private final Keyword cIsDefaultDefaultKeyword_0_2_0_0 = (Keyword)cIsDefaultAssignment_0_2_0.eContents().get(0);
		private final Alternatives cAlternatives_0_2_1 = (Alternatives)cGroup_0_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2_1_0 = (Keyword)cAlternatives_0_2_1.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_2_1_1 = (Assignment)cAlternatives_0_2_1.eContents().get(1);
		private final Keyword cIsInitialColonEqualsSignKeyword_0_2_1_1_0 = (Keyword)cIsInitialAssignment_0_2_1_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//FeatureValue returns SysML::FeatureValue :
		//    ( '='
		//    | isInitial ?= ':='
		//    | isDefault ?= 'default' ( '=' | isInitial ?= ':=' )?
		//    )
		//    ownedRelatedElement += OwnedExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( '='
		//| isInitial ?= ':='
		//| isDefault ?= 'default' ( '=' | isInitial ?= ':=' )?
		//)
		//ownedRelatedElement += OwnedExpression
		public Group getGroup() { return cGroup; }
		
		//( '='
		//| isInitial ?= ':='
		//| isDefault ?= 'default' ( '=' | isInitial ?= ':=' )?
		//)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_0() { return cEqualsSignKeyword_0_0; }
		
		//isInitial ?= ':='
		public Assignment getIsInitialAssignment_0_1() { return cIsInitialAssignment_0_1; }
		
		//':='
		public Keyword getIsInitialColonEqualsSignKeyword_0_1_0() { return cIsInitialColonEqualsSignKeyword_0_1_0; }
		
		//isDefault ?= 'default' ( '=' | isInitial ?= ':=' )?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//isDefault ?= 'default'
		public Assignment getIsDefaultAssignment_0_2_0() { return cIsDefaultAssignment_0_2_0; }
		
		//'default'
		public Keyword getIsDefaultDefaultKeyword_0_2_0_0() { return cIsDefaultDefaultKeyword_0_2_0_0; }
		
		//( '=' | isInitial ?= ':=' )?
		public Alternatives getAlternatives_0_2_1() { return cAlternatives_0_2_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2_1_0() { return cEqualsSignKeyword_0_2_1_0; }
		
		//isInitial ?= ':='
		public Assignment getIsInitialAssignment_0_2_1_1() { return cIsInitialAssignment_0_2_1_1; }
		
		//':='
		public Keyword getIsInitialColonEqualsSignKeyword_0_2_1_1_0() { return cIsInitialColonEqualsSignKeyword_0_2_1_1_0; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0; }
	}
	public class ReferenceKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceKeyword");
		private final Keyword cRefKeyword = (Keyword)rule.eContents().get(1);
		
		///* Reference Usages */
		//ReferenceKeyword :
		//    'ref'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'ref'
		public Keyword getRefKeyword() { return cRefKeyword; }
	}
	public class ReferenceUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceUsageKeyword");
		private final RuleCall cReferenceKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ReferenceUsageKeyword :
		//    ReferenceKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ReferenceKeyword
		public RuleCall getReferenceKeywordParserRuleCall() { return cReferenceKeywordParserRuleCall; }
	}
	public class DefaultReferenceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefaultReferenceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRefPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//DefaultReferenceUsage returns SysML::ReferenceUsage :
		//    RefPrefix UsageDeclaration ValuePart? UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RefPrefix UsageDeclaration ValuePart? UsageBody
		public Group getGroup() { return cGroup; }
		
		//RefPrefix
		public RuleCall getRefPrefixParserRuleCall_0() { return cRefPrefixParserRuleCall_0; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_1() { return cUsageDeclarationParserRuleCall_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_2() { return cValuePartParserRuleCall_2; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_3() { return cUsageBodyParserRuleCall_3; }
	}
	public class ReferenceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReferenceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRefPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cReferenceUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ReferenceUsage returns SysML::ReferenceUsage :
		//    RefPrefix ReferenceUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RefPrefix ReferenceUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//RefPrefix
		public RuleCall getRefPrefixParserRuleCall_0() { return cRefPrefixParserRuleCall_0; }
		
		//ReferenceUsageKeyword
		public RuleCall getReferenceUsageKeywordParserRuleCall_1() { return cReferenceUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class VariantReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VariantReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//VariantReference returns SysML::ReferenceUsage :
		//    ownedRelationship += OwnedReferenceSubsetting
		//    FeatureSpecialization* UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		//FeatureSpecialization* UsageBody
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_1() { return cFeatureSpecializationParserRuleCall_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_2() { return cUsageBodyParserRuleCall_2; }
	}
	public class NonOccurrenceUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NonOccurrenceUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefaultReferenceUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAttributeUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEnumerationUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cBindingConnectorAsUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSuccessionAsUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cExtendedUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		///* Body Elements */
		//NonOccurrenceUsageElement returns SysML::Usage :
		//      DefaultReferenceUsage
		//    | ReferenceUsage
		//    | AttributeUsage
		//    | EnumerationUsage
		//    | BindingConnectorAsUsage
		//    | SuccessionAsUsage
		//    | ExtendedUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  DefaultReferenceUsage
		//| ReferenceUsage
		//| AttributeUsage
		//| EnumerationUsage
		//| BindingConnectorAsUsage
		//| SuccessionAsUsage
		//| ExtendedUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefaultReferenceUsage
		public RuleCall getDefaultReferenceUsageParserRuleCall_0() { return cDefaultReferenceUsageParserRuleCall_0; }
		
		//ReferenceUsage
		public RuleCall getReferenceUsageParserRuleCall_1() { return cReferenceUsageParserRuleCall_1; }
		
		//AttributeUsage
		public RuleCall getAttributeUsageParserRuleCall_2() { return cAttributeUsageParserRuleCall_2; }
		
		//EnumerationUsage
		public RuleCall getEnumerationUsageParserRuleCall_3() { return cEnumerationUsageParserRuleCall_3; }
		
		//BindingConnectorAsUsage
		public RuleCall getBindingConnectorAsUsageParserRuleCall_4() { return cBindingConnectorAsUsageParserRuleCall_4; }
		
		//SuccessionAsUsage
		public RuleCall getSuccessionAsUsageParserRuleCall_5() { return cSuccessionAsUsageParserRuleCall_5; }
		
		//ExtendedUsage
		public RuleCall getExtendedUsageParserRuleCall_6() { return cExtendedUsageParserRuleCall_6; }
	}
	public class OccurrenceUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStructureUsageElementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBehaviorUsageElementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//OccurrenceUsageElement returns SysML::Usage :
		//    StructureUsageElement | BehaviorUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StructureUsageElement | BehaviorUsageElement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StructureUsageElement
		public RuleCall getStructureUsageElementParserRuleCall_0() { return cStructureUsageElementParserRuleCall_0; }
		
		//BehaviorUsageElement
		public RuleCall getBehaviorUsageElementParserRuleCall_1() { return cBehaviorUsageElementParserRuleCall_1; }
	}
	public class StructureUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StructureUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIndividualUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPortionUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEventOccurrenceUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cItemUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPartUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cViewUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cRenderingUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cPortUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cConnectionUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cInterfaceUsageParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cAllocationUsageParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cMessageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cFlowConnectionUsageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cSuccessionFlowConnectionUsageParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		
		//StructureUsageElement returns SysML::Usage :
		//      OccurrenceUsage
		//    | IndividualUsage
		//    | PortionUsage
		//    | EventOccurrenceUsage
		//    | ItemUsage
		//    | PartUsage
		//    | ViewUsage
		//    | RenderingUsage
		//    | PortUsage
		//    | ConnectionUsage
		//    | InterfaceUsage
		//    | AllocationUsage
		//    | Message
		//    | FlowConnectionUsage
		//    | SuccessionFlowConnectionUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  OccurrenceUsage
		//| IndividualUsage
		//| PortionUsage
		//| EventOccurrenceUsage
		//| ItemUsage
		//| PartUsage
		//| ViewUsage
		//| RenderingUsage
		//| PortUsage
		//| ConnectionUsage
		//| InterfaceUsage
		//| AllocationUsage
		//| Message
		//| FlowConnectionUsage
		//| SuccessionFlowConnectionUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//OccurrenceUsage
		public RuleCall getOccurrenceUsageParserRuleCall_0() { return cOccurrenceUsageParserRuleCall_0; }
		
		//IndividualUsage
		public RuleCall getIndividualUsageParserRuleCall_1() { return cIndividualUsageParserRuleCall_1; }
		
		//PortionUsage
		public RuleCall getPortionUsageParserRuleCall_2() { return cPortionUsageParserRuleCall_2; }
		
		//EventOccurrenceUsage
		public RuleCall getEventOccurrenceUsageParserRuleCall_3() { return cEventOccurrenceUsageParserRuleCall_3; }
		
		//ItemUsage
		public RuleCall getItemUsageParserRuleCall_4() { return cItemUsageParserRuleCall_4; }
		
		//PartUsage
		public RuleCall getPartUsageParserRuleCall_5() { return cPartUsageParserRuleCall_5; }
		
		//ViewUsage
		public RuleCall getViewUsageParserRuleCall_6() { return cViewUsageParserRuleCall_6; }
		
		//RenderingUsage
		public RuleCall getRenderingUsageParserRuleCall_7() { return cRenderingUsageParserRuleCall_7; }
		
		//PortUsage
		public RuleCall getPortUsageParserRuleCall_8() { return cPortUsageParserRuleCall_8; }
		
		//ConnectionUsage
		public RuleCall getConnectionUsageParserRuleCall_9() { return cConnectionUsageParserRuleCall_9; }
		
		//InterfaceUsage
		public RuleCall getInterfaceUsageParserRuleCall_10() { return cInterfaceUsageParserRuleCall_10; }
		
		//AllocationUsage
		public RuleCall getAllocationUsageParserRuleCall_11() { return cAllocationUsageParserRuleCall_11; }
		
		//Message
		public RuleCall getMessageParserRuleCall_12() { return cMessageParserRuleCall_12; }
		
		//FlowConnectionUsage
		public RuleCall getFlowConnectionUsageParserRuleCall_13() { return cFlowConnectionUsageParserRuleCall_13; }
		
		//SuccessionFlowConnectionUsage
		public RuleCall getSuccessionFlowConnectionUsageParserRuleCall_14() { return cSuccessionFlowConnectionUsageParserRuleCall_14; }
	}
	public class BehaviorUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BehaviorUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCalculationUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStateUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cConstraintUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRequirementUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cConcernUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCaseUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cAnalysisCaseUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cVerificationCaseUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cUseCaseUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cViewpointUsageParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cPerformActionUsageParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cExhibitStateUsageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cIncludeUseCaseUsageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cAssertConstraintUsageParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cSatisfyRequirementUsageParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		
		//BehaviorUsageElement returns SysML::Usage :
		//      ActionUsage
		//    | CalculationUsage
		//    | StateUsage
		//    | ConstraintUsage
		//    | RequirementUsage
		//    | ConcernUsage
		//    | CaseUsage
		//    | AnalysisCaseUsage
		//    | VerificationCaseUsage
		//    | UseCaseUsage
		//    | ViewpointUsage
		//    | PerformActionUsage
		//    | ExhibitStateUsage
		//    | IncludeUseCaseUsage
		//    | AssertConstraintUsage
		//    | SatisfyRequirementUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ActionUsage
		//| CalculationUsage
		//| StateUsage
		//| ConstraintUsage
		//| RequirementUsage
		//| ConcernUsage
		//| CaseUsage
		//| AnalysisCaseUsage
		//| VerificationCaseUsage
		//| UseCaseUsage
		//| ViewpointUsage
		//| PerformActionUsage
		//| ExhibitStateUsage
		//| IncludeUseCaseUsage
		//| AssertConstraintUsage
		//| SatisfyRequirementUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionUsage
		public RuleCall getActionUsageParserRuleCall_0() { return cActionUsageParserRuleCall_0; }
		
		//CalculationUsage
		public RuleCall getCalculationUsageParserRuleCall_1() { return cCalculationUsageParserRuleCall_1; }
		
		//StateUsage
		public RuleCall getStateUsageParserRuleCall_2() { return cStateUsageParserRuleCall_2; }
		
		//ConstraintUsage
		public RuleCall getConstraintUsageParserRuleCall_3() { return cConstraintUsageParserRuleCall_3; }
		
		//RequirementUsage
		public RuleCall getRequirementUsageParserRuleCall_4() { return cRequirementUsageParserRuleCall_4; }
		
		//ConcernUsage
		public RuleCall getConcernUsageParserRuleCall_5() { return cConcernUsageParserRuleCall_5; }
		
		//CaseUsage
		public RuleCall getCaseUsageParserRuleCall_6() { return cCaseUsageParserRuleCall_6; }
		
		//AnalysisCaseUsage
		public RuleCall getAnalysisCaseUsageParserRuleCall_7() { return cAnalysisCaseUsageParserRuleCall_7; }
		
		//VerificationCaseUsage
		public RuleCall getVerificationCaseUsageParserRuleCall_8() { return cVerificationCaseUsageParserRuleCall_8; }
		
		//UseCaseUsage
		public RuleCall getUseCaseUsageParserRuleCall_9() { return cUseCaseUsageParserRuleCall_9; }
		
		//ViewpointUsage
		public RuleCall getViewpointUsageParserRuleCall_10() { return cViewpointUsageParserRuleCall_10; }
		
		//PerformActionUsage
		public RuleCall getPerformActionUsageParserRuleCall_11() { return cPerformActionUsageParserRuleCall_11; }
		
		//ExhibitStateUsage
		public RuleCall getExhibitStateUsageParserRuleCall_12() { return cExhibitStateUsageParserRuleCall_12; }
		
		//IncludeUseCaseUsage
		public RuleCall getIncludeUseCaseUsageParserRuleCall_13() { return cIncludeUseCaseUsageParserRuleCall_13; }
		
		//AssertConstraintUsage
		public RuleCall getAssertConstraintUsageParserRuleCall_14() { return cAssertConstraintUsageParserRuleCall_14; }
		
		//SatisfyRequirementUsage
		public RuleCall getSatisfyRequirementUsageParserRuleCall_15() { return cSatisfyRequirementUsageParserRuleCall_15; }
	}
	public class VariantUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VariantUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVariantReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAttributeUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBindingConnectorAsUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSuccessionAsUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cOccurrenceUsageParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cIndividualUsageParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cPortionUsageParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cEventOccurrenceUsageParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cItemUsageParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cPartUsageParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cViewUsageParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cRenderingUsageParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cPortUsageParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cConnectionUsageParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cInterfaceUsageParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cAllocationUsageParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cMessageParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cFlowConnectionUsageParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cSuccessionFlowConnectionUsageParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cBehaviorUsageElementParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		
		//VariantUsageElement returns SysML::Usage :
		//      VariantReference
		//    | ReferenceUsage
		//    | AttributeUsage
		//    | BindingConnectorAsUsage
		//    | SuccessionAsUsage
		//    | OccurrenceUsage
		//    | IndividualUsage
		//    | PortionUsage
		//    | EventOccurrenceUsage
		//    | ItemUsage
		//    | PartUsage
		//    | ViewUsage
		//    | RenderingUsage
		//    | PortUsage
		//    | ConnectionUsage
		//    | InterfaceUsage
		//    | AllocationUsage
		//    | Message
		//    | FlowConnectionUsage
		//    | SuccessionFlowConnectionUsage
		//    | BehaviorUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  VariantReference
		//| ReferenceUsage
		//| AttributeUsage
		//| BindingConnectorAsUsage
		//| SuccessionAsUsage
		//| OccurrenceUsage
		//| IndividualUsage
		//| PortionUsage
		//| EventOccurrenceUsage
		//| ItemUsage
		//| PartUsage
		//| ViewUsage
		//| RenderingUsage
		//| PortUsage
		//| ConnectionUsage
		//| InterfaceUsage
		//| AllocationUsage
		//| Message
		//| FlowConnectionUsage
		//| SuccessionFlowConnectionUsage
		//| BehaviorUsageElement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VariantReference
		public RuleCall getVariantReferenceParserRuleCall_0() { return cVariantReferenceParserRuleCall_0; }
		
		//ReferenceUsage
		public RuleCall getReferenceUsageParserRuleCall_1() { return cReferenceUsageParserRuleCall_1; }
		
		//AttributeUsage
		public RuleCall getAttributeUsageParserRuleCall_2() { return cAttributeUsageParserRuleCall_2; }
		
		//BindingConnectorAsUsage
		public RuleCall getBindingConnectorAsUsageParserRuleCall_3() { return cBindingConnectorAsUsageParserRuleCall_3; }
		
		//SuccessionAsUsage
		public RuleCall getSuccessionAsUsageParserRuleCall_4() { return cSuccessionAsUsageParserRuleCall_4; }
		
		//OccurrenceUsage
		public RuleCall getOccurrenceUsageParserRuleCall_5() { return cOccurrenceUsageParserRuleCall_5; }
		
		//IndividualUsage
		public RuleCall getIndividualUsageParserRuleCall_6() { return cIndividualUsageParserRuleCall_6; }
		
		//PortionUsage
		public RuleCall getPortionUsageParserRuleCall_7() { return cPortionUsageParserRuleCall_7; }
		
		//EventOccurrenceUsage
		public RuleCall getEventOccurrenceUsageParserRuleCall_8() { return cEventOccurrenceUsageParserRuleCall_8; }
		
		//ItemUsage
		public RuleCall getItemUsageParserRuleCall_9() { return cItemUsageParserRuleCall_9; }
		
		//PartUsage
		public RuleCall getPartUsageParserRuleCall_10() { return cPartUsageParserRuleCall_10; }
		
		//ViewUsage
		public RuleCall getViewUsageParserRuleCall_11() { return cViewUsageParserRuleCall_11; }
		
		//RenderingUsage
		public RuleCall getRenderingUsageParserRuleCall_12() { return cRenderingUsageParserRuleCall_12; }
		
		//PortUsage
		public RuleCall getPortUsageParserRuleCall_13() { return cPortUsageParserRuleCall_13; }
		
		//ConnectionUsage
		public RuleCall getConnectionUsageParserRuleCall_14() { return cConnectionUsageParserRuleCall_14; }
		
		//InterfaceUsage
		public RuleCall getInterfaceUsageParserRuleCall_15() { return cInterfaceUsageParserRuleCall_15; }
		
		//AllocationUsage
		public RuleCall getAllocationUsageParserRuleCall_16() { return cAllocationUsageParserRuleCall_16; }
		
		//Message
		public RuleCall getMessageParserRuleCall_17() { return cMessageParserRuleCall_17; }
		
		//FlowConnectionUsage
		public RuleCall getFlowConnectionUsageParserRuleCall_18() { return cFlowConnectionUsageParserRuleCall_18; }
		
		//SuccessionFlowConnectionUsage
		public RuleCall getSuccessionFlowConnectionUsageParserRuleCall_19() { return cSuccessionFlowConnectionUsageParserRuleCall_19; }
		
		//BehaviorUsageElement
		public RuleCall getBehaviorUsageElementParserRuleCall_20() { return cBehaviorUsageElementParserRuleCall_20; }
	}
	public class ExtendedDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExtendedDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBasicDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDefinitionExtensionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDefKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cDefinitionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		///* EXTENSION */
		//ExtendedDefinition returns SysML::Definition :
		//    BasicDefinitionPrefix? DefinitionExtensionKeyword+ 'def' Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicDefinitionPrefix? DefinitionExtensionKeyword+ 'def' Definition
		public Group getGroup() { return cGroup; }
		
		//BasicDefinitionPrefix?
		public RuleCall getBasicDefinitionPrefixParserRuleCall_0() { return cBasicDefinitionPrefixParserRuleCall_0; }
		
		//DefinitionExtensionKeyword+
		public RuleCall getDefinitionExtensionKeywordParserRuleCall_1() { return cDefinitionExtensionKeywordParserRuleCall_1; }
		
		//'def'
		public Keyword getDefKeyword_2() { return cDefKeyword_2; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_3() { return cDefinitionParserRuleCall_3; }
	}
	public class ExtendedUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExtendedUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBasicUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ExtendedUsage returns SysML::Usage :
		//    BasicUsagePrefix UsageExtensionKeyword+ Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicUsagePrefix UsageExtensionKeyword+ Usage
		public Group getGroup() { return cGroup; }
		
		//BasicUsagePrefix
		public RuleCall getBasicUsagePrefixParserRuleCall_0() { return cBasicUsagePrefixParserRuleCall_0; }
		
		//UsageExtensionKeyword+
		public RuleCall getUsageExtensionKeywordParserRuleCall_1() { return cUsageExtensionKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class AttributeKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeKeyword");
		private final Keyword cAttributeKeyword = (Keyword)rule.eContents().get(1);
		
		///* ATTRIBUTES */
		//AttributeKeyword :
		//    'attribute'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute'
		public Keyword getAttributeKeyword() { return cAttributeKeyword; }
	}
	public class AttributeDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAttributeKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//AttributeDefKeyword :
		//    AttributeKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//AttributeKeyword
		public RuleCall getAttributeKeywordParserRuleCall_0() { return cAttributeKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class AttributeUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeUsageKeyword");
		private final RuleCall cAttributeKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AttributeUsageKeyword :
		//    AttributeKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AttributeKeyword
		public RuleCall getAttributeKeywordParserRuleCall() { return cAttributeKeywordParserRuleCall; }
	}
	public class AttributeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAttributeDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AttributeDefinition returns SysML::AttributeDefinition :
		//    DefinitionPrefix AttributeDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix AttributeDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//AttributeDefKeyword
		public RuleCall getAttributeDefKeywordParserRuleCall_1() { return cAttributeDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class AttributeUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AttributeUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAttributeUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AttributeUsage returns SysML::AttributeUsage :
		//    UsagePrefix AttributeUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix AttributeUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//AttributeUsageKeyword
		public RuleCall getAttributeUsageKeywordParserRuleCall_1() { return cAttributeUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class EnumerationKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationKeyword");
		private final Keyword cEnumKeyword = (Keyword)rule.eContents().get(1);
		
		///* ENUMERATIONS */
		//EnumerationKeyword :
		//    'enum'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'enum'
		public Keyword getEnumKeyword() { return cEnumKeyword; }
	}
	public class EnumerationDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEnumerationKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//EnumerationDefKeyword :
		//    EnumerationKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EnumerationKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//EnumerationKeyword
		public RuleCall getEnumerationKeywordParserRuleCall_0() { return cEnumerationKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class EnumerationUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationUsageKeyword");
		private final RuleCall cEnumerationKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EnumerationUsageKeyword :
		//    EnumerationKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EnumerationKeyword
		public RuleCall getEnumerationKeywordParserRuleCall() { return cEnumerationKeywordParserRuleCall; }
	}
	public class EnumerationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionExtensionKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cEnumerationDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cEnumerationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//EnumerationDefinition returns SysML::EnumerationDefinition :
		//    DefinitionExtensionKeyword*
		//    EnumerationDefKeyword DefinitionDeclaration EnumerationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionExtensionKeyword*
		//EnumerationDefKeyword DefinitionDeclaration EnumerationBody
		public Group getGroup() { return cGroup; }
		
		//DefinitionExtensionKeyword*
		public RuleCall getDefinitionExtensionKeywordParserRuleCall_0() { return cDefinitionExtensionKeywordParserRuleCall_0; }
		
		//EnumerationDefKeyword
		public RuleCall getEnumerationDefKeywordParserRuleCall_1() { return cEnumerationDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//EnumerationBody
		public RuleCall getEnumerationBodyParserRuleCall_3() { return cEnumerationBodyParserRuleCall_3; }
	}
	public class EnumerationBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipAnnotatingMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipEnumerationUsageMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment EnumerationBody returns SysML::EnumerationDefinition :
		//      ';'
		//    | '{' ( ownedRelationship += AnnotatingMember
		//          | => ownedRelationship += EnumerationUsageMember
		//          )*
		//      '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' ( ownedRelationship += AnnotatingMember
		//      | => ownedRelationship += EnumerationUsageMember
		//      )*
		//  '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ( ownedRelationship += AnnotatingMember
		//         | => ownedRelationship += EnumerationUsageMember
		//         )*
		//     '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//( ownedRelationship += AnnotatingMember
		//         | => ownedRelationship += EnumerationUsageMember
		//         )*
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//ownedRelationship += AnnotatingMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//AnnotatingMember
		public RuleCall getOwnedRelationshipAnnotatingMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipAnnotatingMemberParserRuleCall_1_1_0_0; }
		
		//=> ownedRelationship += EnumerationUsageMember
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//EnumerationUsageMember
		public RuleCall getOwnedRelationshipEnumerationUsageMemberParserRuleCall_1_1_1_0() { return cOwnedRelationshipEnumerationUsageMemberParserRuleCall_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class EnumerationUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEnumeratedValueParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//EnumerationUsageMember returns SysML::VariantMembership :
		//    MemberPrefix ownedRelatedElement += EnumeratedValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += EnumeratedValue
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += EnumeratedValue
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//EnumeratedValue
		public RuleCall getOwnedRelatedElementEnumeratedValueParserRuleCall_1_0() { return cOwnedRelatedElementEnumeratedValueParserRuleCall_1_0; }
	}
	public class EnumeratedValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumeratedValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cEnumerationUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//EnumeratedValue returns SysML::EnumerationUsage :
		//    UsageExtensionKeyword* EnumerationUsageKeyword? Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageExtensionKeyword* EnumerationUsageKeyword? Usage
		public Group getGroup() { return cGroup; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_0() { return cUsageExtensionKeywordParserRuleCall_0; }
		
		//EnumerationUsageKeyword?
		public RuleCall getEnumerationUsageKeywordParserRuleCall_1() { return cEnumerationUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class EnumerationUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EnumerationUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cEnumerationUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//EnumerationUsage returns SysML::EnumerationUsage :
		//    UsagePrefix EnumerationUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix EnumerationUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//EnumerationUsageKeyword
		public RuleCall getEnumerationUsageKeywordParserRuleCall_1() { return cEnumerationUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class OccurrenceKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceKeyword");
		private final Keyword cOccurrenceKeyword = (Keyword)rule.eContents().get(1);
		
		///* OCCURRENCES */
		///* Occurrence Definitions */
		//OccurrenceKeyword :
		//    'occurrence'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'occurrence'
		public Keyword getOccurrenceKeyword() { return cOccurrenceKeyword; }
	}
	public class OccurrenceDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//OccurrenceDefKeyword :
		//    OccurrenceKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//OccurrenceKeyword
		public RuleCall getOccurrenceKeywordParserRuleCall_0() { return cOccurrenceKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class OccurrenceDefinitionPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceDefinitionPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBasicDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cIsIndividualAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsIndividualIndividualKeyword_1_0_0 = (Keyword)cIsIndividualAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipLifeClassMembershipParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		private final RuleCall cDefinitionExtensionKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment OccurrenceDefinitionPrefix returns SysML::OccurrenceDefinition :
		//    BasicDefinitionPrefix?
		//    ( isIndividual ?= 'individual' ownedRelationship += LifeClassMembership )?
		//    DefinitionExtensionKeyword*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicDefinitionPrefix?
		//( isIndividual ?= 'individual' ownedRelationship += LifeClassMembership )?
		//DefinitionExtensionKeyword*
		public Group getGroup() { return cGroup; }
		
		//BasicDefinitionPrefix?
		public RuleCall getBasicDefinitionPrefixParserRuleCall_0() { return cBasicDefinitionPrefixParserRuleCall_0; }
		
		//( isIndividual ?= 'individual' ownedRelationship += LifeClassMembership )?
		public Group getGroup_1() { return cGroup_1; }
		
		//isIndividual ?= 'individual'
		public Assignment getIsIndividualAssignment_1_0() { return cIsIndividualAssignment_1_0; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_0_0() { return cIsIndividualIndividualKeyword_1_0_0; }
		
		//ownedRelationship += LifeClassMembership
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//LifeClassMembership
		public RuleCall getOwnedRelationshipLifeClassMembershipParserRuleCall_1_1_0() { return cOwnedRelationshipLifeClassMembershipParserRuleCall_1_1_0; }
		
		//DefinitionExtensionKeyword*
		public RuleCall getDefinitionExtensionKeywordParserRuleCall_2() { return cDefinitionExtensionKeywordParserRuleCall_2; }
	}
	public class OccurrenceDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//OccurrenceDefinition returns SysML::OccurrenceDefinition :
		//    OccurrenceDefinitionPrefix OccurrenceDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix OccurrenceDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//OccurrenceDefKeyword
		public RuleCall getOccurrenceDefKeywordParserRuleCall_1() { return cOccurrenceDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class IndividualDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBasicDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsIndividualAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsIndividualIndividualKeyword_1_0 = (Keyword)cIsIndividualAssignment_1.eContents().get(0);
		private final RuleCall cDefinitionExtensionKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cDefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cDefinitionParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedRelationshipLifeClassMembershipParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		
		//IndividualDefinition returns SysML::OccurrenceDefinition :
		//    BasicDefinitionPrefix? isIndividual ?= 'individual'
		//    DefinitionExtensionKeyword* 'def' Definition
		//    ownedRelationship += LifeClassMembership
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicDefinitionPrefix? isIndividual ?= 'individual'
		//DefinitionExtensionKeyword* 'def' Definition
		//ownedRelationship += LifeClassMembership
		public Group getGroup() { return cGroup; }
		
		//BasicDefinitionPrefix?
		public RuleCall getBasicDefinitionPrefixParserRuleCall_0() { return cBasicDefinitionPrefixParserRuleCall_0; }
		
		//isIndividual ?= 'individual'
		public Assignment getIsIndividualAssignment_1() { return cIsIndividualAssignment_1; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_0() { return cIsIndividualIndividualKeyword_1_0; }
		
		//DefinitionExtensionKeyword*
		public RuleCall getDefinitionExtensionKeywordParserRuleCall_2() { return cDefinitionExtensionKeywordParserRuleCall_2; }
		
		//'def'
		public Keyword getDefKeyword_3() { return cDefKeyword_3; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_4() { return cDefinitionParserRuleCall_4; }
		
		//ownedRelationship += LifeClassMembership
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//LifeClassMembership
		public RuleCall getOwnedRelationshipLifeClassMembershipParserRuleCall_5_0() { return cOwnedRelationshipLifeClassMembershipParserRuleCall_5_0; }
	}
	public class LifeClassMembershipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LifeClassMembership");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementLifeClassParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//LifeClassMembership returns SysML::OwningMembership :
		//    ownedRelatedElement += LifeClass
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += LifeClass
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//LifeClass
		public RuleCall getOwnedRelatedElementLifeClassParserRuleCall_0() { return cOwnedRelatedElementLifeClassParserRuleCall_0; }
	}
	public class LifeClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.LifeClass");
		private final Action cLifeClassAction = (Action)rule.eContents().get(1);
		
		//LifeClass returns SysML::LifeClass :
		//    {SysML::LifeClass}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::LifeClass}
		public Action getLifeClassAction() { return cLifeClassAction; }
	}
	public class OccurrenceUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceUsageKeyword");
		private final RuleCall cOccurrenceKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Occurrence Usages */
		//OccurrenceUsageKeyword :
		//    OccurrenceKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceKeyword
		public RuleCall getOccurrenceKeywordParserRuleCall() { return cOccurrenceKeywordParserRuleCall; }
	}
	public class OccurrenceUsagePrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceUsagePrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBasicUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsIndividualAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsIndividualIndividualKeyword_1_0 = (Keyword)cIsIndividualAssignment_1.eContents().get(0);
		private final Assignment cPortionKindAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPortionKindPortionKindEnumRuleCall_2_0 = (RuleCall)cPortionKindAssignment_2.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//fragment OccurrenceUsagePrefix returns SysML::OccurrenceUsage :
		//      BasicUsagePrefix
		//      ( isIndividual ?= 'individual' )?
		//      ( portionKind = PortionKind )?
		//      UsageExtensionKeyword*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicUsagePrefix
		//( isIndividual ?= 'individual' )?
		//( portionKind = PortionKind )?
		//UsageExtensionKeyword*
		public Group getGroup() { return cGroup; }
		
		//BasicUsagePrefix
		public RuleCall getBasicUsagePrefixParserRuleCall_0() { return cBasicUsagePrefixParserRuleCall_0; }
		
		//( isIndividual ?= 'individual' )?
		public Assignment getIsIndividualAssignment_1() { return cIsIndividualAssignment_1; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_0() { return cIsIndividualIndividualKeyword_1_0; }
		
		//( portionKind = PortionKind )?
		public Assignment getPortionKindAssignment_2() { return cPortionKindAssignment_2; }
		
		//PortionKind
		public RuleCall getPortionKindPortionKindEnumRuleCall_2_0() { return cPortionKindPortionKindEnumRuleCall_2_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_3() { return cUsageExtensionKeywordParserRuleCall_3; }
	}
	public class OccurrenceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.OccurrenceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOccurrenceUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//OccurrenceUsage returns SysML::OccurrenceUsage :
		//    OccurrenceUsagePrefix OccurrenceUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix OccurrenceUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//OccurrenceUsageKeyword
		public RuleCall getOccurrenceUsageKeywordParserRuleCall_1() { return cOccurrenceUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class IndividualUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IndividualUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBasicUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsIndividualAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsIndividualIndividualKeyword_1_0 = (Keyword)cIsIndividualAssignment_1.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cUsageParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//IndividualUsage returns SysML::OccurrenceUsage :
		//    BasicUsagePrefix isIndividual ?= 'individual'
		//    UsageExtensionKeyword* Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicUsagePrefix isIndividual ?= 'individual'
		//UsageExtensionKeyword* Usage
		public Group getGroup() { return cGroup; }
		
		//BasicUsagePrefix
		public RuleCall getBasicUsagePrefixParserRuleCall_0() { return cBasicUsagePrefixParserRuleCall_0; }
		
		//isIndividual ?= 'individual'
		public Assignment getIsIndividualAssignment_1() { return cIsIndividualAssignment_1; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_0() { return cIsIndividualIndividualKeyword_1_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_2() { return cUsageExtensionKeywordParserRuleCall_2; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_3() { return cUsageParserRuleCall_3; }
	}
	public class PortionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBasicUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsIndividualAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsIndividualIndividualKeyword_1_0 = (Keyword)cIsIndividualAssignment_1.eContents().get(0);
		private final Assignment cPortionKindAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPortionKindPortionKindEnumRuleCall_2_0 = (RuleCall)cPortionKindAssignment_2.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cUsageParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//PortionUsage returns SysML::OccurrenceUsage :
		//    BasicUsagePrefix ( isIndividual ?= 'individual' )?
		//    portionKind = PortionKind
		//    UsageExtensionKeyword* Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicUsagePrefix ( isIndividual ?= 'individual' )?
		//portionKind = PortionKind
		//UsageExtensionKeyword* Usage
		public Group getGroup() { return cGroup; }
		
		//BasicUsagePrefix
		public RuleCall getBasicUsagePrefixParserRuleCall_0() { return cBasicUsagePrefixParserRuleCall_0; }
		
		//( isIndividual ?= 'individual' )?
		public Assignment getIsIndividualAssignment_1() { return cIsIndividualAssignment_1; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_0() { return cIsIndividualIndividualKeyword_1_0; }
		
		//portionKind = PortionKind
		public Assignment getPortionKindAssignment_2() { return cPortionKindAssignment_2; }
		
		//PortionKind
		public RuleCall getPortionKindPortionKindEnumRuleCall_2_0() { return cPortionKindPortionKindEnumRuleCall_2_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_3() { return cUsageExtensionKeywordParserRuleCall_3; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_4() { return cUsageParserRuleCall_4; }
	}
	public class EventOccurrenceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EventOccurrenceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEventKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_2_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_2_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final RuleCall cOccurrenceUsageKeywordParserRuleCall_2_1_0 = (RuleCall)cGroup_2_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2_1_1 = (RuleCall)cGroup_2_1.eContents().get(1);
		private final RuleCall cUsageCompletionParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//EventOccurrenceUsage returns SysML::EventOccurrenceUsage :
		//     OccurrenceUsagePrefix 'event'
		//    ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//       | OccurrenceUsageKeyword UsageDeclaration? )
		//    UsageCompletion
		//;
		@Override public ParserRule getRule() { return rule; }
		
		// OccurrenceUsagePrefix 'event'
		//( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//   | OccurrenceUsageKeyword UsageDeclaration? )
		//UsageCompletion
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//'event'
		public Keyword getEventKeyword_1() { return cEventKeyword_1; }
		
		//( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//   | OccurrenceUsageKeyword UsageDeclaration? )
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_2_0_0() { return cOwnedRelationshipAssignment_2_0_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_2_0_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_2_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_2_0_1() { return cFeatureSpecializationPartParserRuleCall_2_0_1; }
		
		//OccurrenceUsageKeyword UsageDeclaration?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//OccurrenceUsageKeyword
		public RuleCall getOccurrenceUsageKeywordParserRuleCall_2_1_0() { return cOccurrenceUsageKeywordParserRuleCall_2_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2_1_1() { return cUsageDeclarationParserRuleCall_2_1_1; }
		
		//UsageCompletion
		public RuleCall getUsageCompletionParserRuleCall_3() { return cUsageCompletionParserRuleCall_3; }
	}
	public class EmptySuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySuccessionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptySuccessionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* Occurrence Successions */
		//EmptySuccessionMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += EmptySuccession
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptySuccession
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptySuccession
		public RuleCall getOwnedRelatedElementEmptySuccessionParserRuleCall_0() { return cOwnedRelatedElementEmptySuccessionParserRuleCall_0; }
	}
	public class EmptySuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipEmptyTargetEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//EmptySuccession returns SysML::SuccessionAsUsage :
		//    'then' ownedRelationship += MultiplicitySourceEndMember
		//    ownedRelationship += EmptyTargetEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'then' ownedRelationship += MultiplicitySourceEndMember
		//ownedRelationship += EmptyTargetEndMember
		public Group getGroup() { return cGroup; }
		
		//'then'
		public Keyword getThenKeyword_0() { return cThenKeyword_0; }
		
		//ownedRelationship += MultiplicitySourceEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//MultiplicitySourceEndMember
		public RuleCall getOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0() { return cOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0; }
		
		//ownedRelationship += EmptyTargetEndMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//EmptyTargetEndMember
		public RuleCall getOwnedRelationshipEmptyTargetEndMemberParserRuleCall_2_0() { return cOwnedRelationshipEmptyTargetEndMemberParserRuleCall_2_0; }
	}
	public class MultiplicitySourceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicitySourceEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementMultiplicitySourceEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//MultiplicitySourceEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += MultiplicitySourceEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += MultiplicitySourceEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//MultiplicitySourceEnd
		public RuleCall getOwnedRelatedElementMultiplicitySourceEndParserRuleCall_0() { return cOwnedRelatedElementMultiplicitySourceEndParserRuleCall_0; }
	}
	public class MultiplicitySourceEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MultiplicitySourceEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferenceUsageAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//MultiplicitySourceEnd returns SysML::ReferenceUsage :
		//    {SysML::ReferenceUsage} ( ownedRelationship += OwnedMultiplicity )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ReferenceUsage} ( ownedRelationship += OwnedMultiplicity )?
		public Group getGroup() { return cGroup; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction_0() { return cReferenceUsageAction_0; }
		
		//( ownedRelationship += OwnedMultiplicity )?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedMultiplicity
		public RuleCall getOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0() { return cOwnedRelationshipOwnedMultiplicityParserRuleCall_1_0; }
	}
	public class EmptyTargetEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyTargetEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyTargetEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptyTargetEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += EmptyTargetEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptyTargetEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyTargetEnd
		public RuleCall getOwnedRelatedElementEmptyTargetEndParserRuleCall_0() { return cOwnedRelatedElementEmptyTargetEndParserRuleCall_0; }
	}
	public class EmptyTargetEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyTargetEnd");
		private final Action cReferenceUsageAction = (Action)rule.eContents().get(1);
		
		//EmptyTargetEnd returns SysML::ReferenceUsage :
		//    {SysML::ReferenceUsage}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction() { return cReferenceUsageAction; }
	}
	public class ItemKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemKeyword");
		private final Keyword cItemKeyword = (Keyword)rule.eContents().get(1);
		
		///* ITEMS */
		//ItemKeyword :
		//    'item'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'item'
		public Keyword getItemKeyword() { return cItemKeyword; }
	}
	public class ItemDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cItemKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ItemDefKeyword :
		//    ItemKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ItemKeyword
		public RuleCall getItemKeywordParserRuleCall_0() { return cItemKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ItemUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemUsageKeyword");
		private final RuleCall cItemKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ItemUsageKeyword :
		//    ItemKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ItemKeyword
		public RuleCall getItemKeywordParserRuleCall() { return cItemKeywordParserRuleCall; }
	}
	public class ItemDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cItemDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ItemDefinition returns SysML::ItemDefinition :
		//    OccurrenceDefinitionPrefix ItemDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ItemDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ItemDefKeyword
		public RuleCall getItemDefKeywordParserRuleCall_1() { return cItemDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class ItemUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cItemUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ItemUsage returns SysML::ItemUsage :
		//    OccurrenceUsagePrefix ItemUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix ItemUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//ItemUsageKeyword
		public RuleCall getItemUsageKeywordParserRuleCall_1() { return cItemUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class PartKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartKeyword");
		private final Keyword cPartKeyword = (Keyword)rule.eContents().get(1);
		
		///* PARTS */
		//PartKeyword :
		//    'part'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'part'
		public Keyword getPartKeyword() { return cPartKeyword; }
	}
	public class PartDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPartKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//PartDefKeyword :
		//    PartKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PartKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//PartKeyword
		public RuleCall getPartKeywordParserRuleCall_0() { return cPartKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class PartUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartUsageKeyword");
		private final RuleCall cPartKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PartUsageKeyword :
		//    PartKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PartKeyword
		public RuleCall getPartKeywordParserRuleCall() { return cPartKeywordParserRuleCall; }
	}
	public class PartDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPartDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PartDefinition returns SysML::PartDefinition :
		//    OccurrenceDefinitionPrefix PartDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix PartDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//PartDefKeyword
		public RuleCall getPartDefKeywordParserRuleCall_1() { return cPartDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class PartUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PartUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPartUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PartUsage returns SysML::PartUsage :
		//    OccurrenceUsagePrefix PartUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix PartUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//PartUsageKeyword
		public RuleCall getPartUsageKeywordParserRuleCall_1() { return cPartUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class PortKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortKeyword");
		private final Keyword cPortKeyword = (Keyword)rule.eContents().get(1);
		
		///* PORTS */
		///* Port Definitions */
		//PortKeyword :
		//    'port'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'port'
		public Keyword getPortKeyword() { return cPortKeyword; }
	}
	public class PortDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPortKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//PortDefKeyword :
		//    PortKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PortKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//PortKeyword
		public RuleCall getPortKeywordParserRuleCall_0() { return cPortKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class PortDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPortDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConjugatedPortDefinitionMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//PortDefinition returns SysML::PortDefinition :
		//    DefinitionPrefix PortDefKeyword Definition
		//    ownedRelationship += ConjugatedPortDefinitionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefinitionPrefix PortDefKeyword Definition
		//ownedRelationship += ConjugatedPortDefinitionMember
		public Group getGroup() { return cGroup; }
		
		//DefinitionPrefix
		public RuleCall getDefinitionPrefixParserRuleCall_0() { return cDefinitionPrefixParserRuleCall_0; }
		
		//PortDefKeyword
		public RuleCall getPortDefKeywordParserRuleCall_1() { return cPortDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
		
		//ownedRelationship += ConjugatedPortDefinitionMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConjugatedPortDefinitionMember
		public RuleCall getOwnedRelationshipConjugatedPortDefinitionMemberParserRuleCall_3_0() { return cOwnedRelationshipConjugatedPortDefinitionMemberParserRuleCall_3_0; }
	}
	public class ConjugatedPortDefinitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortDefinitionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementConjugatedPortDefinitionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ConjugatedPortDefinitionMember returns SysML::OwningMembership :
		//    ownedRelatedElement += ConjugatedPortDefinition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ConjugatedPortDefinition
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ConjugatedPortDefinition
		public RuleCall getOwnedRelatedElementConjugatedPortDefinitionParserRuleCall_0() { return cOwnedRelatedElementConjugatedPortDefinitionParserRuleCall_0; }
	}
	public class ConjugatedPortDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortDefinition");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipPortConjugationParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//ConjugatedPortDefinition returns SysML::ConjugatedPortDefinition :
		//    ownedRelationship += PortConjugation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += PortConjugation
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//PortConjugation
		public RuleCall getOwnedRelationshipPortConjugationParserRuleCall_0() { return cOwnedRelationshipPortConjugationParserRuleCall_0; }
	}
	public class PortConjugationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortConjugation");
		private final Action cPortConjugationAction = (Action)rule.eContents().get(1);
		
		//PortConjugation returns SysML::PortConjugation :
		//    {SysML::PortConjugation}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::PortConjugation}
		public Action getPortConjugationAction() { return cPortConjugationAction; }
	}
	public class ConjugatedPortTypingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedPortTyping");
		private final Assignment cConjugatedPortDefinitionAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cConjugatedPortDefinitionConjugatedPortDefinitionCrossReference_0 = (CrossReference)cConjugatedPortDefinitionAssignment.eContents().get(0);
		private final RuleCall cConjugatedPortDefinitionConjugatedPortDefinitionConjugatedQualifiedNameParserRuleCall_0_1 = (RuleCall)cConjugatedPortDefinitionConjugatedPortDefinitionCrossReference_0.eContents().get(1);
		
		//ConjugatedPortTyping returns SysML::ConjugatedPortTyping :
		//    conjugatedPortDefinition = [SysML::ConjugatedPortDefinition | ConjugatedQualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//conjugatedPortDefinition = [SysML::ConjugatedPortDefinition | ConjugatedQualifiedName]
		public Assignment getConjugatedPortDefinitionAssignment() { return cConjugatedPortDefinitionAssignment; }
		
		//[SysML::ConjugatedPortDefinition | ConjugatedQualifiedName]
		public CrossReference getConjugatedPortDefinitionConjugatedPortDefinitionCrossReference_0() { return cConjugatedPortDefinitionConjugatedPortDefinitionCrossReference_0; }
		
		//ConjugatedQualifiedName
		public RuleCall getConjugatedPortDefinitionConjugatedPortDefinitionConjugatedQualifiedNameParserRuleCall_0_1() { return cConjugatedPortDefinitionConjugatedPortDefinitionConjugatedQualifiedNameParserRuleCall_0_1; }
	}
	public class ConjugatedQualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConjugatedQualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTildeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cQualifiedNameParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ConjugatedQualifiedName :
		//    '~' QualifiedName
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'~' QualifiedName
		public Group getGroup() { return cGroup; }
		
		//'~'
		public Keyword getTildeKeyword_0() { return cTildeKeyword_0; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_1() { return cQualifiedNameParserRuleCall_1; }
	}
	public class PortUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortUsageKeyword");
		private final RuleCall cPortKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Port Usages */
		//PortUsageKeyword :
		//    PortKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PortKeyword
		public RuleCall getPortKeywordParserRuleCall() { return cPortKeywordParserRuleCall; }
	}
	public class PortUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPortUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PortUsage returns SysML::PortUsage :
		//    OccurrenceUsagePrefix PortUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix PortUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//PortUsageKeyword
		public RuleCall getPortUsageKeywordParserRuleCall_1() { return cPortUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class ConnectorEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementConnectorEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* CONNECTIONS */
		///* Connectors */
		//ConnectorEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += ConnectorEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ConnectorEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ConnectorEnd
		public RuleCall getOwnedRelatedElementConnectorEndParserRuleCall_0() { return cOwnedRelatedElementConnectorEndParserRuleCall_0; }
	}
	public class ConnectorEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cDeclaredNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cDeclaredNameNameParserRuleCall_0_0_0 = (RuleCall)cDeclaredNameAssignment_0_0.eContents().get(0);
		private final RuleCall cReferencesKeywordParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//ConnectorEnd returns SysML::ReferenceUsage :
		//    ( declaredName = Name ReferencesKeyword )?
		//    ownedRelationship += OwnedReferenceSubsetting
		//    ( ownedRelationship += OwnedMultiplicity )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( declaredName = Name ReferencesKeyword )?
		//ownedRelationship += OwnedReferenceSubsetting
		//( ownedRelationship += OwnedMultiplicity )?
		public Group getGroup() { return cGroup; }
		
		//( declaredName = Name ReferencesKeyword )?
		public Group getGroup_0() { return cGroup_0; }
		
		//declaredName = Name
		public Assignment getDeclaredNameAssignment_0_0() { return cDeclaredNameAssignment_0_0; }
		
		//Name
		public RuleCall getDeclaredNameNameParserRuleCall_0_0_0() { return cDeclaredNameNameParserRuleCall_0_0_0; }
		
		//ReferencesKeyword
		public RuleCall getReferencesKeywordParserRuleCall_0_1() { return cReferencesKeywordParserRuleCall_0_1; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0; }
		
		//( ownedRelationship += OwnedMultiplicity )?
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//OwnedMultiplicity
		public RuleCall getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0() { return cOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0; }
	}
	public class BindingKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BindingKeyword");
		private final Keyword cBindingKeyword = (Keyword)rule.eContents().get(1);
		
		///* Binding Connectors */
		//BindingKeyword :
		//    'binding'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'binding'
		public Keyword getBindingKeyword() { return cBindingKeyword; }
	}
	public class BindingConnectorAsUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BindingConnectorAsUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cBindingKeywordParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cBindKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//BindingConnectorAsUsage returns SysML::BindingConnectorAsUsage :
		//    UsagePrefix ( BindingKeyword UsageDeclaration? )?
		//    'bind' ownedRelationship += ConnectorEndMember
		//    '=' ownedRelationship += ConnectorEndMember
		//    DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix ( BindingKeyword UsageDeclaration? )?
		//'bind' ownedRelationship += ConnectorEndMember
		//'=' ownedRelationship += ConnectorEndMember
		//DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( BindingKeyword UsageDeclaration? )?
		public Group getGroup_1() { return cGroup_1; }
		
		//BindingKeyword
		public RuleCall getBindingKeywordParserRuleCall_1_0() { return cBindingKeywordParserRuleCall_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_1() { return cUsageDeclarationParserRuleCall_1_1; }
		
		//'bind'
		public Keyword getBindKeyword_2() { return cBindKeyword_2; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_5_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_5_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_6() { return cDefinitionBodyParserRuleCall_6; }
	}
	public class SuccessionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionKeyword");
		private final Keyword cSuccessionKeyword = (Keyword)rule.eContents().get(1);
		
		///* Successions */
		//SuccessionKeyword:
		//    'succession'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'succession'
		public Keyword getSuccessionKeyword() { return cSuccessionKeyword; }
	}
	public class SuccessionAsUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionAsUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cSuccessionKeywordParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cFirstKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Keyword cThenKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		private final RuleCall cDefinitionBodyParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//SuccessionAsUsage returns SysML::SuccessionAsUsage :
		//    UsagePrefix ( SuccessionKeyword UsageDeclaration? )?
		//    'first' ownedRelationship += ConnectorEndMember
		//    'then' ownedRelationship += ConnectorEndMember
		//    DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsagePrefix ( SuccessionKeyword UsageDeclaration? )?
		//'first' ownedRelationship += ConnectorEndMember
		//'then' ownedRelationship += ConnectorEndMember
		//DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//UsagePrefix
		public RuleCall getUsagePrefixParserRuleCall_0() { return cUsagePrefixParserRuleCall_0; }
		
		//( SuccessionKeyword UsageDeclaration? )?
		public Group getGroup_1() { return cGroup_1; }
		
		//SuccessionKeyword
		public RuleCall getSuccessionKeywordParserRuleCall_1_0() { return cSuccessionKeywordParserRuleCall_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_1() { return cUsageDeclarationParserRuleCall_1_1; }
		
		//'first'
		public Keyword getFirstKeyword_2() { return cFirstKeyword_2; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0; }
		
		//'then'
		public Keyword getThenKeyword_4() { return cThenKeyword_4; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_5_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_5_0; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_6() { return cDefinitionBodyParserRuleCall_6; }
	}
	public class ConnectionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionKeyword");
		private final Keyword cConnectionKeyword = (Keyword)rule.eContents().get(1);
		
		///* Connection Definitions */
		//ConnectionKeyword :
		//    'connection'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'connection'
		public Keyword getConnectionKeyword() { return cConnectionKeyword; }
	}
	public class ConnectionDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConnectionKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ConnectionDefKeyword :
		//    ConnectionKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectionKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ConnectionKeyword
		public RuleCall getConnectionKeywordParserRuleCall_0() { return cConnectionKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ConnectionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConnectionDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ConnectionDefinition returns SysML::ConnectionDefinition :
		//    OccurrenceDefinitionPrefix ConnectionDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ConnectionDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ConnectionDefKeyword
		public RuleCall getConnectionDefKeywordParserRuleCall_1() { return cConnectionDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class ConnectorKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorKeyword");
		private final Keyword cConnectKeyword = (Keyword)rule.eContents().get(1);
		
		///* Connection Usages */
		//ConnectorKeyword :
		//    'connect'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'connect'
		public Keyword getConnectKeyword() { return cConnectKeyword; }
	}
	public class ConnectionUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionUsageKeyword");
		private final RuleCall cConnectionKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ConnectionUsageKeyword :
		//    ConnectionKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConnectionKeyword
		public RuleCall getConnectionKeywordParserRuleCall() { return cConnectionKeywordParserRuleCall; }
	}
	public class ConnectionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cConnectionUsageKeywordParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_0_3 = (Group)cGroup_1_0.eContents().get(3);
		private final RuleCall cConnectorKeywordParserRuleCall_1_0_3_0 = (RuleCall)cGroup_1_0_3.eContents().get(0);
		private final RuleCall cConnectorPartParserRuleCall_1_0_3_1 = (RuleCall)cGroup_1_0_3.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final RuleCall cConnectorKeywordParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final RuleCall cConnectorPartParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ConnectionUsage returns SysML::ConnectionUsage :
		//    OccurrenceUsagePrefix
		//    ( ConnectionUsageKeyword UsageDeclaration? ValuePart?
		//      ( ConnectorKeyword ConnectorPart )?
		//    | ConnectorKeyword ConnectorPart
		//    ) UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix
		//( ConnectionUsageKeyword UsageDeclaration? ValuePart?
		//  ( ConnectorKeyword ConnectorPart )?
		//| ConnectorKeyword ConnectorPart
		//) UsageBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//( ConnectionUsageKeyword UsageDeclaration? ValuePart?
		//  ( ConnectorKeyword ConnectorPart )?
		//| ConnectorKeyword ConnectorPart
		//)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ConnectionUsageKeyword UsageDeclaration? ValuePart?
		//     ( ConnectorKeyword ConnectorPart )?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//ConnectionUsageKeyword
		public RuleCall getConnectionUsageKeywordParserRuleCall_1_0_0() { return cConnectionUsageKeywordParserRuleCall_1_0_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_0_1() { return cUsageDeclarationParserRuleCall_1_0_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_1_0_2() { return cValuePartParserRuleCall_1_0_2; }
		
		//( ConnectorKeyword ConnectorPart )?
		public Group getGroup_1_0_3() { return cGroup_1_0_3; }
		
		//ConnectorKeyword
		public RuleCall getConnectorKeywordParserRuleCall_1_0_3_0() { return cConnectorKeywordParserRuleCall_1_0_3_0; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_1_0_3_1() { return cConnectorPartParserRuleCall_1_0_3_1; }
		
		//ConnectorKeyword ConnectorPart
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//ConnectorKeyword
		public RuleCall getConnectorKeywordParserRuleCall_1_1_0() { return cConnectorKeywordParserRuleCall_1_1_0; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_1_1_1() { return cConnectorPartParserRuleCall_1_1_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_2() { return cUsageBodyParserRuleCall_2; }
	}
	public class ConnectorPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConnectorPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBinaryConnectorPartParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNaryConnectorPartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment ConnectorPart returns SysML::ConnectionUsage :
		//    BinaryConnectorPart | NaryConnectorPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BinaryConnectorPart | NaryConnectorPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BinaryConnectorPart
		public RuleCall getBinaryConnectorPartParserRuleCall_0() { return cBinaryConnectorPartParserRuleCall_0; }
		
		//NaryConnectorPart
		public RuleCall getNaryConnectorPartParserRuleCall_1() { return cNaryConnectorPartParserRuleCall_1; }
	}
	public class BinaryConnectorPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BinaryConnectorPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Keyword cToKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//fragment BinaryConnectorPart returns SysML::Connector :
		//    ownedRelationship += ConnectorEndMember 'to'
		//    ownedRelationship += ConnectorEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += ConnectorEndMember 'to'
		//ownedRelationship += ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_0_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_0_0; }
		
		//'to'
		public Keyword getToKeyword_1() { return cToKeyword_1; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_2_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_2_0; }
	}
	public class NaryConnectorPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NaryConnectorPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_4_1_0 = (RuleCall)cOwnedRelationshipAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//fragment NaryConnectorPart returns SysML::Connector :
		//    '(' ownedRelationship += ConnectorEndMember ','
		//        ownedRelationship += ConnectorEndMember
		//        ( ',' ownedRelationship += ConnectorEndMember )* ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' ownedRelationship += ConnectorEndMember ','
		//    ownedRelationship += ConnectorEndMember
		//    ( ',' ownedRelationship += ConnectorEndMember )* ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_3_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_3_0; }
		
		//( ',' ownedRelationship += ConnectorEndMember )*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_4_1() { return cOwnedRelationshipAssignment_4_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_4_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_4_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class EmptySourceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySourceEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptySourceEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptySourceEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += EmptySourceEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptySourceEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptySourceEnd
		public RuleCall getOwnedRelatedElementEmptySourceEndParserRuleCall_0() { return cOwnedRelatedElementEmptySourceEndParserRuleCall_0; }
	}
	public class EmptySourceEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptySourceEnd");
		private final Action cReferenceUsageAction = (Action)rule.eContents().get(1);
		
		//EmptySourceEnd returns SysML::ReferenceUsage :
		//    {SysML::ReferenceUsage}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction() { return cReferenceUsageAction; }
	}
	public class FlowConnectionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowConnectionKeyword");
		private final Keyword cFlowKeyword = (Keyword)rule.eContents().get(1);
		
		///* FLOW CONNECTIONS */
		///* Flow Connection Definitions */
		//FlowConnectionKeyword :
		//    'flow'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'flow'
		public Keyword getFlowKeyword() { return cFlowKeyword; }
	}
	public class FlowConnectionDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowConnectionDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFlowConnectionKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//FlowConnectionDefKeyword :
		//    FlowConnectionKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//FlowConnectionKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//FlowConnectionKeyword
		public RuleCall getFlowConnectionKeywordParserRuleCall_0() { return cFlowConnectionKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class FlowConnectionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowConnectionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFlowConnectionDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FlowConnectionDefinition returns SysML::FlowConnectionDefinition :
		//    OccurrenceDefinitionPrefix FlowConnectionDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix FlowConnectionDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//FlowConnectionDefKeyword
		public RuleCall getFlowConnectionDefKeywordParserRuleCall_1() { return cFlowConnectionDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class MessageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MessageKeyword");
		private final Keyword cMessageKeyword = (Keyword)rule.eContents().get(1);
		
		///* Messages */
		//MessageKeyword :
		//    'message'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'message'
		public Keyword getMessageKeyword() { return cMessageKeyword; }
	}
	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cMessageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cMessageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cDefinitionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//Message returns SysML::FlowConnectionUsage :
		//    OccurrenceUsagePrefix MessageKeyword MessageDeclaration DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix MessageKeyword MessageDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//MessageKeyword
		public RuleCall getMessageKeywordParserRuleCall_1() { return cMessageKeywordParserRuleCall_1; }
		
		//MessageDeclaration
		public RuleCall getMessageDeclarationParserRuleCall_2() { return cMessageDeclarationParserRuleCall_2; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_3() { return cDefinitionBodyParserRuleCall_3; }
	}
	public class MessageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MessageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cValuePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cOfKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipItemFeatureMemberParserRuleCall_0_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_2_1.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cGroup_0.eContents().get(3);
		private final Keyword cFromKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipMessageEventMemberParserRuleCall_0_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_3_1.eContents().get(0);
		private final Keyword cToKeyword_0_3_2 = (Keyword)cGroup_0_3.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_3_3 = (Assignment)cGroup_0_3.eContents().get(3);
		private final RuleCall cOwnedRelationshipMessageEventMemberParserRuleCall_0_3_3_0 = (RuleCall)cOwnedRelationshipAssignment_0_3_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipMessageEventMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Keyword cToKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipMessageEventMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2.eContents().get(0);
		
		//fragment MessageDeclaration returns SysML::FlowConnectionUsage :
		//      UsageDeclaration? ValuePart?
		//      ( 'of' ownedRelationship += ItemFeatureMember )?
		//      ( 'from' ownedRelationship += MessageEventMember
		//        'to' ownedRelationship += MessageEventMember
		//      )?
		//    | ownedRelationship += MessageEventMember 'to'
		//      ownedRelationship += MessageEventMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  UsageDeclaration? ValuePart?
		//  ( 'of' ownedRelationship += ItemFeatureMember )?
		//  ( 'from' ownedRelationship += MessageEventMember
		//    'to' ownedRelationship += MessageEventMember
		//  )?
		//| ownedRelationship += MessageEventMember 'to'
		//  ownedRelationship += MessageEventMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UsageDeclaration? ValuePart?
		//( 'of' ownedRelationship += ItemFeatureMember )?
		//( 'from' ownedRelationship += MessageEventMember
		//  'to' ownedRelationship += MessageEventMember
		//)?
		public Group getGroup_0() { return cGroup_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0_0() { return cUsageDeclarationParserRuleCall_0_0; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0_1() { return cValuePartParserRuleCall_0_1; }
		
		//( 'of' ownedRelationship += ItemFeatureMember )?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//'of'
		public Keyword getOfKeyword_0_2_0() { return cOfKeyword_0_2_0; }
		
		//ownedRelationship += ItemFeatureMember
		public Assignment getOwnedRelationshipAssignment_0_2_1() { return cOwnedRelationshipAssignment_0_2_1; }
		
		//ItemFeatureMember
		public RuleCall getOwnedRelationshipItemFeatureMemberParserRuleCall_0_2_1_0() { return cOwnedRelationshipItemFeatureMemberParserRuleCall_0_2_1_0; }
		
		//( 'from' ownedRelationship += MessageEventMember
		//  'to' ownedRelationship += MessageEventMember
		//)?
		public Group getGroup_0_3() { return cGroup_0_3; }
		
		//'from'
		public Keyword getFromKeyword_0_3_0() { return cFromKeyword_0_3_0; }
		
		//ownedRelationship += MessageEventMember
		public Assignment getOwnedRelationshipAssignment_0_3_1() { return cOwnedRelationshipAssignment_0_3_1; }
		
		//MessageEventMember
		public RuleCall getOwnedRelationshipMessageEventMemberParserRuleCall_0_3_1_0() { return cOwnedRelationshipMessageEventMemberParserRuleCall_0_3_1_0; }
		
		//'to'
		public Keyword getToKeyword_0_3_2() { return cToKeyword_0_3_2; }
		
		//ownedRelationship += MessageEventMember
		public Assignment getOwnedRelationshipAssignment_0_3_3() { return cOwnedRelationshipAssignment_0_3_3; }
		
		//MessageEventMember
		public RuleCall getOwnedRelationshipMessageEventMemberParserRuleCall_0_3_3_0() { return cOwnedRelationshipMessageEventMemberParserRuleCall_0_3_3_0; }
		
		//ownedRelationship += MessageEventMember 'to'
		//     ownedRelationship += MessageEventMember
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship += MessageEventMember
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//MessageEventMember
		public RuleCall getOwnedRelationshipMessageEventMemberParserRuleCall_1_0_0() { return cOwnedRelationshipMessageEventMemberParserRuleCall_1_0_0; }
		
		//'to'
		public Keyword getToKeyword_1_1() { return cToKeyword_1_1; }
		
		//ownedRelationship += MessageEventMember
		public Assignment getOwnedRelationshipAssignment_1_2() { return cOwnedRelationshipAssignment_1_2; }
		
		//MessageEventMember
		public RuleCall getOwnedRelationshipMessageEventMemberParserRuleCall_1_2_0() { return cOwnedRelationshipMessageEventMemberParserRuleCall_1_2_0; }
	}
	public class MessageEventMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MessageEventMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementMessageEventParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//MessageEventMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += MessageEvent
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += MessageEvent
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//MessageEvent
		public RuleCall getOwnedRelatedElementMessageEventParserRuleCall_0() { return cOwnedRelatedElementMessageEventParserRuleCall_0; }
	}
	public class MessageEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MessageEvent");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//MessageEvent returns SysML::EventOccurrenceUsage :
		//    ownedRelationship += OwnedReferenceSubsetting
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0; }
	}
	public class FlowConnectionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowConnectionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFlowConnectionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cFlowConnectionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cDefinitionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		///* Flow Connection Usages */
		//FlowConnectionUsage returns SysML::FlowConnectionUsage :
		//    OccurrenceUsagePrefix FlowConnectionKeyword
		//    FlowConnectionDeclaration DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix FlowConnectionKeyword
		//FlowConnectionDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//FlowConnectionKeyword
		public RuleCall getFlowConnectionKeywordParserRuleCall_1() { return cFlowConnectionKeywordParserRuleCall_1; }
		
		//FlowConnectionDeclaration
		public RuleCall getFlowConnectionDeclarationParserRuleCall_2() { return cFlowConnectionDeclarationParserRuleCall_2; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_3() { return cDefinitionBodyParserRuleCall_3; }
	}
	public class SuccessionFlowConnectionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionFlowConnectionKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSuccessionKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFlowConnectionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//SuccessionFlowConnectionKeyword :
		//    SuccessionKeyword FlowConnectionKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SuccessionKeyword FlowConnectionKeyword
		public Group getGroup() { return cGroup; }
		
		//SuccessionKeyword
		public RuleCall getSuccessionKeywordParserRuleCall_0() { return cSuccessionKeywordParserRuleCall_0; }
		
		//FlowConnectionKeyword
		public RuleCall getFlowConnectionKeywordParserRuleCall_1() { return cFlowConnectionKeywordParserRuleCall_1; }
	}
	public class SuccessionFlowConnectionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SuccessionFlowConnectionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cSuccessionFlowConnectionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cFlowConnectionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cDefinitionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//SuccessionFlowConnectionUsage returns SysML::SuccessionFlowConnectionUsage :
		//    OccurrenceUsagePrefix SuccessionFlowConnectionKeyword
		//    FlowConnectionDeclaration DefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix SuccessionFlowConnectionKeyword
		//FlowConnectionDeclaration DefinitionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//SuccessionFlowConnectionKeyword
		public RuleCall getSuccessionFlowConnectionKeywordParserRuleCall_1() { return cSuccessionFlowConnectionKeywordParserRuleCall_1; }
		
		//FlowConnectionDeclaration
		public RuleCall getFlowConnectionDeclarationParserRuleCall_2() { return cFlowConnectionDeclarationParserRuleCall_2; }
		
		//DefinitionBody
		public RuleCall getDefinitionBodyParserRuleCall_3() { return cDefinitionBodyParserRuleCall_3; }
	}
	public class FlowConnectionDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowConnectionDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cValuePartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cOfKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipItemFeatureMemberParserRuleCall_0_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_2_1.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cGroup_0.eContents().get(3);
		private final Keyword cFromKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_3_1 = (Assignment)cGroup_0_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipFlowEndMemberParserRuleCall_0_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_3_1.eContents().get(0);
		private final Keyword cToKeyword_0_3_2 = (Keyword)cGroup_0_3.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_0_3_3 = (Assignment)cGroup_0_3.eContents().get(3);
		private final RuleCall cOwnedRelationshipFlowEndMemberParserRuleCall_0_3_3_0 = (RuleCall)cOwnedRelationshipAssignment_0_3_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipFlowEndMemberParserRuleCall_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0.eContents().get(0);
		private final Keyword cToKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipFlowEndMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2.eContents().get(0);
		
		//fragment FlowConnectionDeclaration returns SysML::FlowConnectionUsage :
		//      UsageDeclaration? ValuePart?
		//      ( 'of'  ownedRelationship += ItemFeatureMember )?
		//      ( 'from' ownedRelationship += FlowEndMember
		//        'to' ownedRelationship += FlowEndMember )?
		//    | ownedRelationship += FlowEndMember 'to'
		//      ownedRelationship += FlowEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  UsageDeclaration? ValuePart?
		//  ( 'of'  ownedRelationship += ItemFeatureMember )?
		//  ( 'from' ownedRelationship += FlowEndMember
		//    'to' ownedRelationship += FlowEndMember )?
		//| ownedRelationship += FlowEndMember 'to'
		//  ownedRelationship += FlowEndMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UsageDeclaration? ValuePart?
		//( 'of'  ownedRelationship += ItemFeatureMember )?
		//( 'from' ownedRelationship += FlowEndMember
		//  'to' ownedRelationship += FlowEndMember )?
		public Group getGroup_0() { return cGroup_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0_0() { return cUsageDeclarationParserRuleCall_0_0; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0_1() { return cValuePartParserRuleCall_0_1; }
		
		//( 'of'  ownedRelationship += ItemFeatureMember )?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//'of'
		public Keyword getOfKeyword_0_2_0() { return cOfKeyword_0_2_0; }
		
		//ownedRelationship += ItemFeatureMember
		public Assignment getOwnedRelationshipAssignment_0_2_1() { return cOwnedRelationshipAssignment_0_2_1; }
		
		//ItemFeatureMember
		public RuleCall getOwnedRelationshipItemFeatureMemberParserRuleCall_0_2_1_0() { return cOwnedRelationshipItemFeatureMemberParserRuleCall_0_2_1_0; }
		
		//( 'from' ownedRelationship += FlowEndMember
		//  'to' ownedRelationship += FlowEndMember )?
		public Group getGroup_0_3() { return cGroup_0_3; }
		
		//'from'
		public Keyword getFromKeyword_0_3_0() { return cFromKeyword_0_3_0; }
		
		//ownedRelationship += FlowEndMember
		public Assignment getOwnedRelationshipAssignment_0_3_1() { return cOwnedRelationshipAssignment_0_3_1; }
		
		//FlowEndMember
		public RuleCall getOwnedRelationshipFlowEndMemberParserRuleCall_0_3_1_0() { return cOwnedRelationshipFlowEndMemberParserRuleCall_0_3_1_0; }
		
		//'to'
		public Keyword getToKeyword_0_3_2() { return cToKeyword_0_3_2; }
		
		//ownedRelationship += FlowEndMember
		public Assignment getOwnedRelationshipAssignment_0_3_3() { return cOwnedRelationshipAssignment_0_3_3; }
		
		//FlowEndMember
		public RuleCall getOwnedRelationshipFlowEndMemberParserRuleCall_0_3_3_0() { return cOwnedRelationshipFlowEndMemberParserRuleCall_0_3_3_0; }
		
		//ownedRelationship += FlowEndMember 'to'
		//     ownedRelationship += FlowEndMember
		public Group getGroup_1() { return cGroup_1; }
		
		//ownedRelationship += FlowEndMember
		public Assignment getOwnedRelationshipAssignment_1_0() { return cOwnedRelationshipAssignment_1_0; }
		
		//FlowEndMember
		public RuleCall getOwnedRelationshipFlowEndMemberParserRuleCall_1_0_0() { return cOwnedRelationshipFlowEndMemberParserRuleCall_1_0_0; }
		
		//'to'
		public Keyword getToKeyword_1_1() { return cToKeyword_1_1; }
		
		//ownedRelationship += FlowEndMember
		public Assignment getOwnedRelationshipAssignment_1_2() { return cOwnedRelationshipAssignment_1_2; }
		
		//FlowEndMember
		public RuleCall getOwnedRelationshipFlowEndMemberParserRuleCall_1_2_0() { return cOwnedRelationshipFlowEndMemberParserRuleCall_1_2_0; }
	}
	public class ItemFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementItemFeatureParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		///* Flow Members */
		//ItemFeatureMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += ItemFeature
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ItemFeature
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ItemFeature
		public RuleCall getOwnedRelatedElementItemFeatureParserRuleCall_0() { return cOwnedRelatedElementItemFeatureParserRuleCall_0; }
	}
	public class ItemFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ItemFeature");
		private final RuleCall cPayloadFeatureParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ItemFeature returns SysML::ItemFeature :
		//      PayloadFeature
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PayloadFeature
		public RuleCall getPayloadFeatureParserRuleCall() { return cPayloadFeatureParserRuleCall; }
	}
	public class PayloadFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PayloadFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cIdentificationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cPayloadFeatureSpecializationPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cIdentificationParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cValuePartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedFeatureTypingParserRuleCall_2_0_0 = (RuleCall)cOwnedRelationshipAssignment_2_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedMultiplicityParserRuleCall_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedMultiplicityParserRuleCall_3_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedFeatureTypingParserRuleCall_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1.eContents().get(0);
		
		//fragment PayloadFeature returns SysML::Feature :
		//      Identification? PayloadFeatureSpecializationPart ValuePart?
		//    | Identification? ValuePart
		//    | ownedRelationship += OwnedFeatureTyping ( ownedRelationship += OwnedMultiplicity )?
		//    | ownedRelationship += OwnedMultiplicity ownedRelationship += OwnedFeatureTyping
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  Identification? PayloadFeatureSpecializationPart ValuePart?
		//| Identification? ValuePart
		//| ownedRelationship += OwnedFeatureTyping ( ownedRelationship += OwnedMultiplicity )?
		//| ownedRelationship += OwnedMultiplicity ownedRelationship += OwnedFeatureTyping
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Identification? PayloadFeatureSpecializationPart ValuePart?
		public Group getGroup_0() { return cGroup_0; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_0_0() { return cIdentificationParserRuleCall_0_0; }
		
		//PayloadFeatureSpecializationPart
		public RuleCall getPayloadFeatureSpecializationPartParserRuleCall_0_1() { return cPayloadFeatureSpecializationPartParserRuleCall_0_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_0_2() { return cValuePartParserRuleCall_0_2; }
		
		//Identification? ValuePart
		public Group getGroup_1() { return cGroup_1; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_1_0() { return cIdentificationParserRuleCall_1_0; }
		
		//ValuePart
		public RuleCall getValuePartParserRuleCall_1_1() { return cValuePartParserRuleCall_1_1; }
		
		//ownedRelationship += OwnedFeatureTyping ( ownedRelationship += OwnedMultiplicity )?
		public Group getGroup_2() { return cGroup_2; }
		
		//ownedRelationship += OwnedFeatureTyping
		public Assignment getOwnedRelationshipAssignment_2_0() { return cOwnedRelationshipAssignment_2_0; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationshipOwnedFeatureTypingParserRuleCall_2_0_0() { return cOwnedRelationshipOwnedFeatureTypingParserRuleCall_2_0_0; }
		
		//( ownedRelationship += OwnedMultiplicity )?
		public Assignment getOwnedRelationshipAssignment_2_1() { return cOwnedRelationshipAssignment_2_1; }
		
		//OwnedMultiplicity
		public RuleCall getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_1_0() { return cOwnedRelationshipOwnedMultiplicityParserRuleCall_2_1_0; }
		
		//ownedRelationship += OwnedMultiplicity ownedRelationship += OwnedFeatureTyping
		public Group getGroup_3() { return cGroup_3; }
		
		//ownedRelationship += OwnedMultiplicity
		public Assignment getOwnedRelationshipAssignment_3_0() { return cOwnedRelationshipAssignment_3_0; }
		
		//OwnedMultiplicity
		public RuleCall getOwnedRelationshipOwnedMultiplicityParserRuleCall_3_0_0() { return cOwnedRelationshipOwnedMultiplicityParserRuleCall_3_0_0; }
		
		//ownedRelationship += OwnedFeatureTyping
		public Assignment getOwnedRelationshipAssignment_3_1() { return cOwnedRelationshipAssignment_3_1; }
		
		//OwnedFeatureTyping
		public RuleCall getOwnedRelationshipOwnedFeatureTypingParserRuleCall_3_1_0() { return cOwnedRelationshipOwnedFeatureTypingParserRuleCall_3_1_0; }
	}
	public class PayloadFeatureSpecializationPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PayloadFeatureSpecializationPart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cMultiplicityPartParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cMultiplicityPartParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment PayloadFeatureSpecializationPart returns SysML::Feature :
		//      ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		//    | MultiplicityPart FeatureSpecialization+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		//| MultiplicityPart FeatureSpecialization+
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
		public Group getGroup_0() { return cGroup_0; }
		
		//( -> FeatureSpecialization )+
		public RuleCall getFeatureSpecializationParserRuleCall_0_0() { return cFeatureSpecializationParserRuleCall_0_0; }
		
		//MultiplicityPart?
		public RuleCall getMultiplicityPartParserRuleCall_0_1() { return cMultiplicityPartParserRuleCall_0_1; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_2() { return cFeatureSpecializationParserRuleCall_0_2; }
		
		//MultiplicityPart FeatureSpecialization+
		public Group getGroup_1() { return cGroup_1; }
		
		//MultiplicityPart
		public RuleCall getMultiplicityPartParserRuleCall_1_0() { return cMultiplicityPartParserRuleCall_1_0; }
		
		//FeatureSpecialization+
		public RuleCall getFeatureSpecializationParserRuleCall_1_1() { return cFeatureSpecializationParserRuleCall_1_1; }
	}
	public class FlowEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementFlowEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//FlowEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += FlowEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += FlowEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//FlowEnd
		public RuleCall getOwnedRelatedElementFlowEndParserRuleCall_0() { return cOwnedRelatedElementFlowEndParserRuleCall_0; }
	}
	public class FlowEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipFlowEndSubsettingParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipFlowFeatureMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//FlowEnd returns SysML::ItemFlowEnd :
		//    ( ownedRelationship += FlowEndSubsetting )?
		//    ownedRelationship += FlowFeatureMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ownedRelationship += FlowEndSubsetting )?
		//ownedRelationship += FlowFeatureMember
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += FlowEndSubsetting )?
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//FlowEndSubsetting
		public RuleCall getOwnedRelationshipFlowEndSubsettingParserRuleCall_0_0() { return cOwnedRelationshipFlowEndSubsettingParserRuleCall_0_0; }
		
		//ownedRelationship += FlowFeatureMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//FlowFeatureMember
		public RuleCall getOwnedRelationshipFlowFeatureMemberParserRuleCall_1_0() { return cOwnedRelationshipFlowFeatureMemberParserRuleCall_1_0; }
	}
	public class FlowEndSubsettingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowEndSubsetting");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cReferencedFeatureAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cReferencedFeatureFeatureCrossReference_0_0_0 = (CrossReference)cReferencedFeatureAssignment_0_0.eContents().get(0);
		private final RuleCall cReferencedFeatureFeatureQualifiedNameParserRuleCall_0_0_0_1 = (RuleCall)cReferencedFeatureFeatureCrossReference_0_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelatedElementFeatureChainPrefixParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//FlowEndSubsetting returns SysML::ReferenceSubsetting :
		//      referencedFeature = [SysML::Feature | QualifiedName] '.'
		//    | ownedRelatedElement += FeatureChainPrefix
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  referencedFeature = [SysML::Feature | QualifiedName] '.'
		//| ownedRelatedElement += FeatureChainPrefix
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//referencedFeature = [SysML::Feature | QualifiedName] '.'
		public Group getGroup_0() { return cGroup_0; }
		
		//referencedFeature = [SysML::Feature | QualifiedName]
		public Assignment getReferencedFeatureAssignment_0_0() { return cReferencedFeatureAssignment_0_0; }
		
		//[SysML::Feature | QualifiedName]
		public CrossReference getReferencedFeatureFeatureCrossReference_0_0_0() { return cReferencedFeatureFeatureCrossReference_0_0_0; }
		
		//QualifiedName
		public RuleCall getReferencedFeatureFeatureQualifiedNameParserRuleCall_0_0_0_1() { return cReferencedFeatureFeatureQualifiedNameParserRuleCall_0_0_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }
		
		//ownedRelatedElement += FeatureChainPrefix
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//FeatureChainPrefix
		public RuleCall getOwnedRelatedElementFeatureChainPrefixParserRuleCall_1_0() { return cOwnedRelatedElementFeatureChainPrefixParserRuleCall_1_0; }
	}
	public class FeatureChainPrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureChainPrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedFeatureChainingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//FeatureChainPrefix returns SysML::Feature :
		//    ( ownedRelationship += OwnedFeatureChaining '.' )+
		//    ownedRelationship += OwnedFeatureChaining '.'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( ownedRelationship += OwnedFeatureChaining '.' )+
		//ownedRelationship += OwnedFeatureChaining '.'
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += OwnedFeatureChaining '.' )+
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += OwnedFeatureChaining
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//OwnedFeatureChaining
		public RuleCall getOwnedRelationshipOwnedFeatureChainingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedFeatureChainingParserRuleCall_0_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }
		
		//ownedRelationship += OwnedFeatureChaining
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedFeatureChaining
		public RuleCall getOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_0() { return cOwnedRelationshipOwnedFeatureChainingParserRuleCall_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
	}
	public class FlowFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementFlowFeatureParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//FlowFeatureMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += FlowFeature
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += FlowFeature
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//FlowFeature
		public RuleCall getOwnedRelatedElementFlowFeatureParserRuleCall_0() { return cOwnedRelatedElementFlowFeatureParserRuleCall_0; }
	}
	public class FlowFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowFeature");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipFlowRedefinitionParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//FlowFeature returns SysML::ReferenceUsage :
		//    ownedRelationship += FlowRedefinition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += FlowRedefinition
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//FlowRedefinition
		public RuleCall getOwnedRelationshipFlowRedefinitionParserRuleCall_0() { return cOwnedRelationshipFlowRedefinitionParserRuleCall_0; }
	}
	public class FlowRedefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FlowRedefinition");
		private final Assignment cRedefinedFeatureAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRedefinedFeatureFeatureCrossReference_0 = (CrossReference)cRedefinedFeatureAssignment.eContents().get(0);
		private final RuleCall cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1 = (RuleCall)cRedefinedFeatureFeatureCrossReference_0.eContents().get(1);
		
		//FlowRedefinition returns SysML::Redefinition :
		//    redefinedFeature = [SysML::Feature|QualifiedName]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//redefinedFeature = [SysML::Feature|QualifiedName]
		public Assignment getRedefinedFeatureAssignment() { return cRedefinedFeatureAssignment; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getRedefinedFeatureFeatureCrossReference_0() { return cRedefinedFeatureFeatureCrossReference_0; }
		
		//QualifiedName
		public RuleCall getRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1() { return cRedefinedFeatureFeatureQualifiedNameParserRuleCall_0_1; }
	}
	public class InterfaceKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceKeyword");
		private final Keyword cInterfaceKeyword = (Keyword)rule.eContents().get(1);
		
		///* INTERFACES */
		///* Interface Definitions */
		//InterfaceKeyword :
		//    'interface'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'interface'
		public Keyword getInterfaceKeyword() { return cInterfaceKeyword; }
	}
	public class InterfaceDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cInterfaceKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//InterfaceDefKeyword :
		//    InterfaceKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//InterfaceKeyword
		public RuleCall getInterfaceKeywordParserRuleCall_0() { return cInterfaceKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class InterfaceDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cInterfaceBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//InterfaceDefinition returns SysML::InterfaceDefinition :
		//    OccurrenceDefinitionPrefix InterfaceDefKeyword DefinitionDeclaration InterfaceBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix InterfaceDefKeyword DefinitionDeclaration InterfaceBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//InterfaceDefKeyword
		public RuleCall getInterfaceDefKeywordParserRuleCall_1() { return cInterfaceDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//InterfaceBody
		public RuleCall getInterfaceBodyParserRuleCall_3() { return cInterfaceBodyParserRuleCall_3; }
	}
	public class InterfaceBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cInterfaceBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment InterfaceBody returns SysML::Type :
		//    ';' | '{' InterfaceBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' InterfaceBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' InterfaceBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//InterfaceBodyItem*
		public RuleCall getInterfaceBodyItemParserRuleCall_1_1() { return cInterfaceBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class InterfaceBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelationshipDefinitionMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipVariantUsageMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipInterfaceNonOccurrenceUsageMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_3_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipInterfaceOccurrenceUsageMemberParserRuleCall_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedRelationshipAliasMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		
		//fragment InterfaceBodyItem returns SysML::Type :
		//      ownedRelationship += DefinitionMember
		//    | ownedRelationship += VariantUsageMember
		//    | ownedRelationship += InterfaceNonOccurrenceUsageMember
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += InterfaceOccurrenceUsageMember
		//    | ownedRelationship += AliasMember
		//    | => ownedRelationship += Import
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += DefinitionMember
		//| ownedRelationship += VariantUsageMember
		//| ownedRelationship += InterfaceNonOccurrenceUsageMember
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += InterfaceOccurrenceUsageMember
		//| ownedRelationship += AliasMember
		//| => ownedRelationship += Import
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += DefinitionMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//DefinitionMember
		public RuleCall getOwnedRelationshipDefinitionMemberParserRuleCall_0_0() { return cOwnedRelationshipDefinitionMemberParserRuleCall_0_0; }
		
		//ownedRelationship += VariantUsageMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//VariantUsageMember
		public RuleCall getOwnedRelationshipVariantUsageMemberParserRuleCall_1_0() { return cOwnedRelationshipVariantUsageMemberParserRuleCall_1_0; }
		
		//ownedRelationship += InterfaceNonOccurrenceUsageMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//InterfaceNonOccurrenceUsageMember
		public RuleCall getOwnedRelationshipInterfaceNonOccurrenceUsageMemberParserRuleCall_2_0() { return cOwnedRelationshipInterfaceNonOccurrenceUsageMemberParserRuleCall_2_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += InterfaceOccurrenceUsageMember
		public Group getGroup_3() { return cGroup_3; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_3_0() { return cOwnedRelationshipAssignment_3_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_3_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_3_0_0; }
		
		//ownedRelationship += InterfaceOccurrenceUsageMember
		public Assignment getOwnedRelationshipAssignment_3_1() { return cOwnedRelationshipAssignment_3_1; }
		
		//InterfaceOccurrenceUsageMember
		public RuleCall getOwnedRelationshipInterfaceOccurrenceUsageMemberParserRuleCall_3_1_0() { return cOwnedRelationshipInterfaceOccurrenceUsageMemberParserRuleCall_3_1_0; }
		
		//ownedRelationship += AliasMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//AliasMember
		public RuleCall getOwnedRelationshipAliasMemberParserRuleCall_4_0() { return cOwnedRelationshipAliasMemberParserRuleCall_4_0; }
		
		//=> ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_5_0() { return cOwnedRelationshipImportParserRuleCall_5_0; }
	}
	public class InterfaceNonOccurrenceUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceNonOccurrenceUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementInterfaceNonOccurrenceUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//InterfaceNonOccurrenceUsageMember returns SysML::FeatureMembership :
		//    MemberPrefix ownedRelatedElement += InterfaceNonOccurrenceUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += InterfaceNonOccurrenceUsageElement
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += InterfaceNonOccurrenceUsageElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//InterfaceNonOccurrenceUsageElement
		public RuleCall getOwnedRelatedElementInterfaceNonOccurrenceUsageElementParserRuleCall_1_0() { return cOwnedRelatedElementInterfaceNonOccurrenceUsageElementParserRuleCall_1_0; }
	}
	public class InterfaceNonOccurrenceUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceNonOccurrenceUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAttributeUsageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnumerationUsageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBindingConnectorAsUsageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSuccessionAsUsageParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//InterfaceNonOccurrenceUsageElement returns SysML::Usage :
		//      ReferenceUsage
		//    | AttributeUsage
		//    | EnumerationUsage
		//    | BindingConnectorAsUsage
		//    | SuccessionAsUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ReferenceUsage
		//| AttributeUsage
		//| EnumerationUsage
		//| BindingConnectorAsUsage
		//| SuccessionAsUsage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ReferenceUsage
		public RuleCall getReferenceUsageParserRuleCall_0() { return cReferenceUsageParserRuleCall_0; }
		
		//AttributeUsage
		public RuleCall getAttributeUsageParserRuleCall_1() { return cAttributeUsageParserRuleCall_1; }
		
		//EnumerationUsage
		public RuleCall getEnumerationUsageParserRuleCall_2() { return cEnumerationUsageParserRuleCall_2; }
		
		//BindingConnectorAsUsage
		public RuleCall getBindingConnectorAsUsageParserRuleCall_3() { return cBindingConnectorAsUsageParserRuleCall_3; }
		
		//SuccessionAsUsage
		public RuleCall getSuccessionAsUsageParserRuleCall_4() { return cSuccessionAsUsageParserRuleCall_4; }
	}
	public class InterfaceOccurrenceUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceOccurrenceUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementInterfaceOccurrenceUsageElementParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//InterfaceOccurrenceUsageMember returns SysML::FeatureMembership :
		//    MemberPrefix ownedRelatedElement += InterfaceOccurrenceUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += InterfaceOccurrenceUsageElement
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += InterfaceOccurrenceUsageElement
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//InterfaceOccurrenceUsageElement
		public RuleCall getOwnedRelatedElementInterfaceOccurrenceUsageElementParserRuleCall_1_0() { return cOwnedRelatedElementInterfaceOccurrenceUsageElementParserRuleCall_1_0; }
	}
	public class InterfaceOccurrenceUsageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceOccurrenceUsageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefaultInterfaceEndParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStructureUsageElementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBehaviorUsageElementParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//InterfaceOccurrenceUsageElement returns SysML::Usage :
		//    DefaultInterfaceEnd | StructureUsageElement | BehaviorUsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//DefaultInterfaceEnd | StructureUsageElement | BehaviorUsageElement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefaultInterfaceEnd
		public RuleCall getDefaultInterfaceEndParserRuleCall_0() { return cDefaultInterfaceEndParserRuleCall_0; }
		
		//StructureUsageElement
		public RuleCall getStructureUsageElementParserRuleCall_1() { return cStructureUsageElementParserRuleCall_1; }
		
		//BehaviorUsageElement
		public RuleCall getBehaviorUsageElementParserRuleCall_2() { return cBehaviorUsageElementParserRuleCall_2; }
	}
	public class DefaultInterfaceEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefaultInterfaceEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDirectionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDirectionFeatureDirectionEnumRuleCall_0_0 = (RuleCall)cDirectionAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cIsAbstractAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final Keyword cIsAbstractAbstractKeyword_1_0_0 = (Keyword)cIsAbstractAssignment_1_0.eContents().get(0);
		private final Assignment cIsVariationAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final Keyword cIsVariationVariationKeyword_1_1_0 = (Keyword)cIsVariationAssignment_1_1.eContents().get(0);
		private final Assignment cIsEndAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsEndEndKeyword_2_0 = (Keyword)cIsEndAssignment_2.eContents().get(0);
		private final RuleCall cUsageParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//DefaultInterfaceEnd returns SysML::PortUsage :
		//    ( direction = FeatureDirection )?
		//    ( isAbstract ?= 'abstract' | isVariation ?= 'variation')?
		//    isEnd ?= 'end' Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( direction = FeatureDirection )?
		//( isAbstract ?= 'abstract' | isVariation ?= 'variation')?
		//isEnd ?= 'end' Usage
		public Group getGroup() { return cGroup; }
		
		//( direction = FeatureDirection )?
		public Assignment getDirectionAssignment_0() { return cDirectionAssignment_0; }
		
		//FeatureDirection
		public RuleCall getDirectionFeatureDirectionEnumRuleCall_0_0() { return cDirectionFeatureDirectionEnumRuleCall_0_0; }
		
		//( isAbstract ?= 'abstract' | isVariation ?= 'variation')?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//isAbstract ?= 'abstract'
		public Assignment getIsAbstractAssignment_1_0() { return cIsAbstractAssignment_1_0; }
		
		//'abstract'
		public Keyword getIsAbstractAbstractKeyword_1_0_0() { return cIsAbstractAbstractKeyword_1_0_0; }
		
		//isVariation ?= 'variation'
		public Assignment getIsVariationAssignment_1_1() { return cIsVariationAssignment_1_1; }
		
		//'variation'
		public Keyword getIsVariationVariationKeyword_1_1_0() { return cIsVariationVariationKeyword_1_1_0; }
		
		//isEnd ?= 'end'
		public Assignment getIsEndAssignment_2() { return cIsEndAssignment_2; }
		
		//'end'
		public Keyword getIsEndEndKeyword_2_0() { return cIsEndEndKeyword_2_0; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_3() { return cUsageParserRuleCall_3; }
	}
	public class InterfaceUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsageKeyword");
		private final RuleCall cInterfaceKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Interface Usages */
		//InterfaceUsageKeyword :
		//    InterfaceKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//InterfaceKeyword
		public RuleCall getInterfaceKeywordParserRuleCall() { return cInterfaceKeywordParserRuleCall; }
	}
	public class InterfaceUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cInterfaceUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cInterfaceUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cInterfaceBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//InterfaceUsage returns SysML::InterfaceUsage :
		//    OccurrenceUsagePrefix InterfaceUsageKeyword InterfaceUsageDeclaration InterfaceBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix InterfaceUsageKeyword InterfaceUsageDeclaration InterfaceBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//InterfaceUsageKeyword
		public RuleCall getInterfaceUsageKeywordParserRuleCall_1() { return cInterfaceUsageKeywordParserRuleCall_1; }
		
		//InterfaceUsageDeclaration
		public RuleCall getInterfaceUsageDeclarationParserRuleCall_2() { return cInterfaceUsageDeclarationParserRuleCall_2; }
		
		//InterfaceBody
		public RuleCall getInterfaceBodyParserRuleCall_3() { return cInterfaceBodyParserRuleCall_3; }
	}
	public class InterfaceUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceUsageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final RuleCall cConnectorKeywordParserRuleCall_0_1_0 = (RuleCall)cGroup_0_1.eContents().get(0);
		private final RuleCall cInterfacePartParserRuleCall_0_1_1 = (RuleCall)cGroup_0_1.eContents().get(1);
		private final RuleCall cInterfacePartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment InterfaceUsageDeclaration returns SysML::InterfaceUsage :
		//    UsageDeclaration? ( ConnectorKeyword InterfacePart )? | InterfacePart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? ( ConnectorKeyword InterfacePart )? | InterfacePart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UsageDeclaration? ( ConnectorKeyword InterfacePart )?
		public Group getGroup_0() { return cGroup_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0_0() { return cUsageDeclarationParserRuleCall_0_0; }
		
		//( ConnectorKeyword InterfacePart )?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//ConnectorKeyword
		public RuleCall getConnectorKeywordParserRuleCall_0_1_0() { return cConnectorKeywordParserRuleCall_0_1_0; }
		
		//InterfacePart
		public RuleCall getInterfacePartParserRuleCall_0_1_1() { return cInterfacePartParserRuleCall_0_1_1; }
		
		//InterfacePart
		public RuleCall getInterfacePartParserRuleCall_1() { return cInterfacePartParserRuleCall_1; }
	}
	public class InterfacePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfacePart");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBinaryInterfacePartParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNaryInterfacePartParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//fragment InterfacePart returns SysML::ConnectionUsage :
		//    BinaryInterfacePart | NaryInterfacePart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BinaryInterfacePart | NaryInterfacePart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BinaryInterfacePart
		public RuleCall getBinaryInterfacePartParserRuleCall_0() { return cBinaryInterfacePartParserRuleCall_0; }
		
		//NaryInterfacePart
		public RuleCall getNaryInterfacePartParserRuleCall_1() { return cNaryInterfacePartParserRuleCall_1; }
	}
	public class BinaryInterfacePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.BinaryInterfacePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipInterfaceEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Keyword cToKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipInterfaceEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//fragment BinaryInterfacePart returns SysML::Connector :
		//    ownedRelationship += InterfaceEndMember 'to'
		//    ownedRelationship += InterfaceEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += InterfaceEndMember 'to'
		//ownedRelationship += InterfaceEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += InterfaceEndMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//InterfaceEndMember
		public RuleCall getOwnedRelationshipInterfaceEndMemberParserRuleCall_0_0() { return cOwnedRelationshipInterfaceEndMemberParserRuleCall_0_0; }
		
		//'to'
		public Keyword getToKeyword_1() { return cToKeyword_1; }
		
		//ownedRelationship += InterfaceEndMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//InterfaceEndMember
		public RuleCall getOwnedRelationshipInterfaceEndMemberParserRuleCall_2_0() { return cOwnedRelationshipInterfaceEndMemberParserRuleCall_2_0; }
	}
	public class NaryInterfacePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NaryInterfacePart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipInterfaceEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipInterfaceEndMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOwnedRelationshipInterfaceEndMemberParserRuleCall_4_1_0 = (RuleCall)cOwnedRelationshipAssignment_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//fragment NaryInterfacePart returns SysML::Connector :
		//    '(' ownedRelationship += InterfaceEndMember ','
		//        ownedRelationship += InterfaceEndMember
		//        ( ',' ownedRelationship += InterfaceEndMember )* ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'(' ownedRelationship += InterfaceEndMember ','
		//    ownedRelationship += InterfaceEndMember
		//    ( ',' ownedRelationship += InterfaceEndMember )* ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//ownedRelationship += InterfaceEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//InterfaceEndMember
		public RuleCall getOwnedRelationshipInterfaceEndMemberParserRuleCall_1_0() { return cOwnedRelationshipInterfaceEndMemberParserRuleCall_1_0; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//ownedRelationship += InterfaceEndMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//InterfaceEndMember
		public RuleCall getOwnedRelationshipInterfaceEndMemberParserRuleCall_3_0() { return cOwnedRelationshipInterfaceEndMemberParserRuleCall_3_0; }
		
		//( ',' ownedRelationship += InterfaceEndMember )*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//ownedRelationship += InterfaceEndMember
		public Assignment getOwnedRelationshipAssignment_4_1() { return cOwnedRelationshipAssignment_4_1; }
		
		//InterfaceEndMember
		public RuleCall getOwnedRelationshipInterfaceEndMemberParserRuleCall_4_1_0() { return cOwnedRelationshipInterfaceEndMemberParserRuleCall_4_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class InterfaceEndMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceEndMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementInterfaceEndParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//InterfaceEndMember returns SysML::EndFeatureMembership :
		//    ownedRelatedElement += InterfaceEnd
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += InterfaceEnd
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//InterfaceEnd
		public RuleCall getOwnedRelatedElementInterfaceEndParserRuleCall_0() { return cOwnedRelatedElementInterfaceEndParserRuleCall_0; }
	}
	public class InterfaceEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InterfaceEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cDeclaredNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cDeclaredNameNameParserRuleCall_0_0_0 = (RuleCall)cDeclaredNameAssignment_0_0.eContents().get(0);
		private final RuleCall cReferencesKeywordParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//InterfaceEnd returns SysML::PortUsage :
		//    ( declaredName = Name ReferencesKeyword )?
		//    ownedRelationship += OwnedReferenceSubsetting
		//    ( ownedRelationship += OwnedMultiplicity )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( declaredName = Name ReferencesKeyword )?
		//ownedRelationship += OwnedReferenceSubsetting
		//( ownedRelationship += OwnedMultiplicity )?
		public Group getGroup() { return cGroup; }
		
		//( declaredName = Name ReferencesKeyword )?
		public Group getGroup_0() { return cGroup_0; }
		
		//declaredName = Name
		public Assignment getDeclaredNameAssignment_0_0() { return cDeclaredNameAssignment_0_0; }
		
		//Name
		public RuleCall getDeclaredNameNameParserRuleCall_0_0_0() { return cDeclaredNameNameParserRuleCall_0_0_0; }
		
		//ReferencesKeyword
		public RuleCall getReferencesKeywordParserRuleCall_0_1() { return cReferencesKeywordParserRuleCall_0_1; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_1_0; }
		
		//( ownedRelationship += OwnedMultiplicity )?
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//OwnedMultiplicity
		public RuleCall getOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0() { return cOwnedRelationshipOwnedMultiplicityParserRuleCall_2_0; }
	}
	public class AllocationKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationKeyword");
		private final Keyword cAllocationKeyword = (Keyword)rule.eContents().get(1);
		
		///* ALLOCATIONS */
		///* Allocation Definitions */
		//AllocationKeyword :
		//    'allocation'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'allocation'
		public Keyword getAllocationKeyword() { return cAllocationKeyword; }
	}
	public class AllocationDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAllocationKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//AllocationDefKeyword :
		//    AllocationKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AllocationKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//AllocationKeyword
		public RuleCall getAllocationKeywordParserRuleCall_0() { return cAllocationKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class AllocationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAllocationDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AllocationDefinition returns SysML::AllocationDefinition :
		//    OccurrenceDefinitionPrefix AllocationDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix AllocationDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//AllocationDefKeyword
		public RuleCall getAllocationDefKeywordParserRuleCall_1() { return cAllocationDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class AllocationUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationUsageKeyword");
		private final RuleCall cAllocationKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* AllocationUsage Usages */
		//AllocationUsageKeyword :
		//    AllocationKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AllocationKeyword
		public RuleCall getAllocationKeywordParserRuleCall() { return cAllocationKeywordParserRuleCall; }
	}
	public class AllocateKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocateKeyword");
		private final Keyword cAllocateKeyword = (Keyword)rule.eContents().get(1);
		
		//AllocateKeyword :
		//    'allocate'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'allocate'
		public Keyword getAllocateKeyword() { return cAllocateKeyword; }
	}
	public class AllocationUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAllocationUsageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AllocationUsage returns SysML::AllocationUsage :
		//    OccurrenceUsagePrefix AllocationUsageDeclaration UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix AllocationUsageDeclaration UsageBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//AllocationUsageDeclaration
		public RuleCall getAllocationUsageDeclarationParserRuleCall_1() { return cAllocationUsageDeclarationParserRuleCall_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_2() { return cUsageBodyParserRuleCall_2; }
	}
	public class AllocationUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AllocationUsageDeclaration");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cAllocationUsageKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final RuleCall cAllocateKeywordParserRuleCall_0_2_0 = (RuleCall)cGroup_0_2.eContents().get(0);
		private final RuleCall cConnectorPartParserRuleCall_0_2_1 = (RuleCall)cGroup_0_2.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cAllocateKeywordParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cConnectorPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//fragment AllocationUsageDeclaration returns SysML::AllocationUsage :
		//        AllocationUsageKeyword UsageDeclaration? ( AllocateKeyword ConnectorPart )?
		//      | AllocateKeyword ConnectorPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  AllocationUsageKeyword UsageDeclaration? ( AllocateKeyword ConnectorPart )?
		//| AllocateKeyword ConnectorPart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AllocationUsageKeyword UsageDeclaration? ( AllocateKeyword ConnectorPart )?
		public Group getGroup_0() { return cGroup_0; }
		
		//AllocationUsageKeyword
		public RuleCall getAllocationUsageKeywordParserRuleCall_0_0() { return cAllocationUsageKeywordParserRuleCall_0_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0_1() { return cUsageDeclarationParserRuleCall_0_1; }
		
		//( AllocateKeyword ConnectorPart )?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//AllocateKeyword
		public RuleCall getAllocateKeywordParserRuleCall_0_2_0() { return cAllocateKeywordParserRuleCall_0_2_0; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_0_2_1() { return cConnectorPartParserRuleCall_0_2_1; }
		
		//AllocateKeyword ConnectorPart
		public Group getGroup_1() { return cGroup_1; }
		
		//AllocateKeyword
		public RuleCall getAllocateKeywordParserRuleCall_1_0() { return cAllocateKeywordParserRuleCall_1_0; }
		
		//ConnectorPart
		public RuleCall getConnectorPartParserRuleCall_1_1() { return cConnectorPartParserRuleCall_1_1; }
	}
	public class ActionKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionKeyword");
		private final Keyword cActionKeyword = (Keyword)rule.eContents().get(1);
		
		///* ACTION */
		///* Action Definitions */
		//ActionKeyword :
		//    'action'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'action'
		public Keyword getActionKeyword() { return cActionKeyword; }
	}
	public class ActionDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ActionDefKeyword :
		//    ActionKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ActionKeyword
		public RuleCall getActionKeywordParserRuleCall_0() { return cActionKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ActionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActionDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ActionDefinition returns SysML::ActionDefinition :
		//    OccurrenceDefinitionPrefix ActionDefKeyword DefinitionDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ActionDefKeyword DefinitionDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ActionDefKeyword
		public RuleCall getActionDefKeywordParserRuleCall_1() { return cActionDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class ActionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cActionBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ActionBody returns SysML::Type :
		//      ';'
		//      // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//      // while incrementally parsing.
		//    | '{' => ActionBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//  // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//  // while incrementally parsing.
		//| '{' => ActionBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => ActionBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> ActionBodyItem*
		public RuleCall getActionBodyItemParserRuleCall_1_1() { return cActionBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ActionBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipAliasMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipDefinitionMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipVariantUsageMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cOwnedRelationshipAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_5_0_0 = (RuleCall)cOwnedRelationshipAssignment_5_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOwnedRelationshipStructureUsageMemberParserRuleCall_5_1_0 = (RuleCall)cOwnedRelationshipAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cOwnedRelationshipAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cOwnedRelationshipInitialNodeMemberParserRuleCall_6_0_0 = (RuleCall)cOwnedRelationshipAssignment_6_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOwnedRelationshipTargetSuccessionMemberParserRuleCall_6_1_0 = (RuleCall)cOwnedRelationshipAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cOwnedRelationshipAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_7_0_0 = (RuleCall)cOwnedRelationshipAssignment_7_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final Alternatives cOwnedRelationshipAlternatives_7_1_0 = (Alternatives)cOwnedRelationshipAssignment_7_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipBehaviorUsageMemberParserRuleCall_7_1_0_0 = (RuleCall)cOwnedRelationshipAlternatives_7_1_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipActionNodeMemberParserRuleCall_7_1_0_1 = (RuleCall)cOwnedRelationshipAlternatives_7_1_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cOwnedRelationshipTargetSuccessionMemberParserRuleCall_7_2_0 = (RuleCall)cOwnedRelationshipAssignment_7_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cOwnedRelationshipGuardedSuccessionMemberParserRuleCall_8_0 = (RuleCall)cOwnedRelationshipAssignment_8.eContents().get(0);
		
		//fragment ActionBodyItem returns SysML::Type :
		//      ownedRelationship += Import
		//    | ownedRelationship += AliasMember
		//    | ownedRelationship += DefinitionMember
		//    | ownedRelationship += VariantUsageMember
		//    | ownedRelationship += NonOccurrenceUsageMember
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += StructureUsageMember
		//    | ownedRelationship += InitialNodeMember
		//      ( => ownedRelationship += TargetSuccessionMember )*
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += ( BehaviorUsageMember | ActionNodeMember )
		//      ( => ownedRelationship += TargetSuccessionMember )*
		//    | ownedRelationship += GuardedSuccessionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += Import
		//| ownedRelationship += AliasMember
		//| ownedRelationship += DefinitionMember
		//| ownedRelationship += VariantUsageMember
		//| ownedRelationship += NonOccurrenceUsageMember
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += StructureUsageMember
		//| ownedRelationship += InitialNodeMember
		//  ( => ownedRelationship += TargetSuccessionMember )*
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += ( BehaviorUsageMember | ActionNodeMember )
		//  ( => ownedRelationship += TargetSuccessionMember )*
		//| ownedRelationship += GuardedSuccessionMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_0_0() { return cOwnedRelationshipImportParserRuleCall_0_0; }
		
		//ownedRelationship += AliasMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//AliasMember
		public RuleCall getOwnedRelationshipAliasMemberParserRuleCall_1_0() { return cOwnedRelationshipAliasMemberParserRuleCall_1_0; }
		
		//ownedRelationship += DefinitionMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//DefinitionMember
		public RuleCall getOwnedRelationshipDefinitionMemberParserRuleCall_2_0() { return cOwnedRelationshipDefinitionMemberParserRuleCall_2_0; }
		
		//ownedRelationship += VariantUsageMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//VariantUsageMember
		public RuleCall getOwnedRelationshipVariantUsageMemberParserRuleCall_3_0() { return cOwnedRelationshipVariantUsageMemberParserRuleCall_3_0; }
		
		//ownedRelationship += NonOccurrenceUsageMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//NonOccurrenceUsageMember
		public RuleCall getOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_4_0() { return cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_4_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += StructureUsageMember
		public Group getGroup_5() { return cGroup_5; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_5_0() { return cOwnedRelationshipAssignment_5_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_5_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_5_0_0; }
		
		//ownedRelationship += StructureUsageMember
		public Assignment getOwnedRelationshipAssignment_5_1() { return cOwnedRelationshipAssignment_5_1; }
		
		//StructureUsageMember
		public RuleCall getOwnedRelationshipStructureUsageMemberParserRuleCall_5_1_0() { return cOwnedRelationshipStructureUsageMemberParserRuleCall_5_1_0; }
		
		//ownedRelationship += InitialNodeMember
		//     ( => ownedRelationship += TargetSuccessionMember )*
		public Group getGroup_6() { return cGroup_6; }
		
		//ownedRelationship += InitialNodeMember
		public Assignment getOwnedRelationshipAssignment_6_0() { return cOwnedRelationshipAssignment_6_0; }
		
		//InitialNodeMember
		public RuleCall getOwnedRelationshipInitialNodeMemberParserRuleCall_6_0_0() { return cOwnedRelationshipInitialNodeMemberParserRuleCall_6_0_0; }
		
		//( => ownedRelationship += TargetSuccessionMember )*
		public Assignment getOwnedRelationshipAssignment_6_1() { return cOwnedRelationshipAssignment_6_1; }
		
		//TargetSuccessionMember
		public RuleCall getOwnedRelationshipTargetSuccessionMemberParserRuleCall_6_1_0() { return cOwnedRelationshipTargetSuccessionMemberParserRuleCall_6_1_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += ( BehaviorUsageMember | ActionNodeMember )
		//     ( => ownedRelationship += TargetSuccessionMember )*
		public Group getGroup_7() { return cGroup_7; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_7_0() { return cOwnedRelationshipAssignment_7_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_7_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_7_0_0; }
		
		//ownedRelationship += ( BehaviorUsageMember | ActionNodeMember )
		public Assignment getOwnedRelationshipAssignment_7_1() { return cOwnedRelationshipAssignment_7_1; }
		
		//( BehaviorUsageMember | ActionNodeMember )
		public Alternatives getOwnedRelationshipAlternatives_7_1_0() { return cOwnedRelationshipAlternatives_7_1_0; }
		
		//BehaviorUsageMember
		public RuleCall getOwnedRelationshipBehaviorUsageMemberParserRuleCall_7_1_0_0() { return cOwnedRelationshipBehaviorUsageMemberParserRuleCall_7_1_0_0; }
		
		//ActionNodeMember
		public RuleCall getOwnedRelationshipActionNodeMemberParserRuleCall_7_1_0_1() { return cOwnedRelationshipActionNodeMemberParserRuleCall_7_1_0_1; }
		
		//( => ownedRelationship += TargetSuccessionMember )*
		public Assignment getOwnedRelationshipAssignment_7_2() { return cOwnedRelationshipAssignment_7_2; }
		
		//TargetSuccessionMember
		public RuleCall getOwnedRelationshipTargetSuccessionMemberParserRuleCall_7_2_0() { return cOwnedRelationshipTargetSuccessionMemberParserRuleCall_7_2_0; }
		
		//ownedRelationship += GuardedSuccessionMember
		public Assignment getOwnedRelationshipAssignment_8() { return cOwnedRelationshipAssignment_8; }
		
		//GuardedSuccessionMember
		public RuleCall getOwnedRelationshipGuardedSuccessionMemberParserRuleCall_8_0() { return cOwnedRelationshipGuardedSuccessionMemberParserRuleCall_8_0; }
	}
	public class InitialNodeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.InitialNodeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFirstKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMemberElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMemberElementFeatureCrossReference_2_0 = (CrossReference)cMemberElementAssignment_2.eContents().get(0);
		private final RuleCall cMemberElementFeatureQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cMemberElementFeatureCrossReference_2_0.eContents().get(1);
		private final RuleCall cRelationshipBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//InitialNodeMember returns SysML::Membership :
		//    MemberPrefix 'first' memberElement = [SysML::Feature|QualifiedName]
		//    RelationshipBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix 'first' memberElement = [SysML::Feature|QualifiedName]
		//RelationshipBody
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//'first'
		public Keyword getFirstKeyword_1() { return cFirstKeyword_1; }
		
		//memberElement = [SysML::Feature|QualifiedName]
		public Assignment getMemberElementAssignment_2() { return cMemberElementAssignment_2; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberElementFeatureCrossReference_2_0() { return cMemberElementFeatureCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getMemberElementFeatureQualifiedNameParserRuleCall_2_0_1() { return cMemberElementFeatureQualifiedNameParserRuleCall_2_0_1; }
		
		//RelationshipBody
		public RuleCall getRelationshipBodyParserRuleCall_3() { return cRelationshipBodyParserRuleCall_3; }
	}
	public class ActionNodeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNodeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementActionNodeParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//ActionNodeMember returns SysML::FeatureMembership :
		//    MemberPrefix ownedRelatedElement += ActionNode
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += ActionNode
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += ActionNode
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ActionNode
		public RuleCall getOwnedRelatedElementActionNodeParserRuleCall_1_0() { return cOwnedRelatedElementActionNodeParserRuleCall_1_0; }
	}
	public class TargetSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetSuccessionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementActionTargetSuccessionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//TargetSuccessionMember returns SysML::FeatureMembership :
		//    MemberPrefix ownedRelatedElement += ActionTargetSuccession
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += ActionTargetSuccession
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += ActionTargetSuccession
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ActionTargetSuccession
		public RuleCall getOwnedRelatedElementActionTargetSuccessionParserRuleCall_1_0() { return cOwnedRelatedElementActionTargetSuccessionParserRuleCall_1_0; }
	}
	public class GuardedSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardedSuccessionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementGuardedSuccessionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//GuardedSuccessionMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += GuardedSuccession
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += GuardedSuccession
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//GuardedSuccession
		public RuleCall getOwnedRelatedElementGuardedSuccessionParserRuleCall_0() { return cOwnedRelatedElementGuardedSuccessionParserRuleCall_0; }
	}
	public class ActionUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageKeyword");
		private final RuleCall cActionKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Action Usages */
		//ActionUsageKeyword :
		//    ActionKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionKeyword
		public RuleCall getActionKeywordParserRuleCall() { return cActionKeywordParserRuleCall; }
	}
	public class ActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActionUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ActionUsage returns SysML::ActionUsage :
		//    OccurrenceUsagePrefix ActionUsageKeyword ActionUsageDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix ActionUsageKeyword ActionUsageDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_1() { return cActionUsageKeywordParserRuleCall_1; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class PerformActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformActionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cPerformKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cPerformActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//PerformActionUsage returns SysML::PerformActionUsage :
		//    OccurrenceUsagePrefix 'perform' PerformActionUsageDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix 'perform' PerformActionUsageDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//'perform'
		public Keyword getPerformKeyword_1() { return cPerformKeyword_1; }
		
		//PerformActionUsageDeclaration
		public RuleCall getPerformActionUsageDeclarationParserRuleCall_2() { return cPerformActionUsageDeclarationParserRuleCall_2; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_3() { return cActionBodyParserRuleCall_3; }
	}
	public class PerformActionUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformActionUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final RuleCall cActionUsageKeywordParserRuleCall_0_1_0 = (RuleCall)cGroup_0_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_1_1 = (RuleCall)cGroup_0_1.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment PerformActionUsageDeclaration returns SysML::ActionUsage :
		//       ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//       | ActionUsageKeyword UsageDeclaration? )
		//    ValuePart?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//   ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//   | ActionUsageKeyword UsageDeclaration? )
		//ValuePart?
		public Group getGroup() { return cGroup; }
		
		//( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//| ActionUsageKeyword UsageDeclaration? )
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		public Group getGroup_0_0() { return cGroup_0_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_0_0_0() { return cOwnedRelationshipAssignment_0_0_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_0_0_1() { return cFeatureSpecializationPartParserRuleCall_0_0_1; }
		
		//ActionUsageKeyword UsageDeclaration?
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_0_1_0() { return cActionUsageKeywordParserRuleCall_0_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0_1_1() { return cUsageDeclarationParserRuleCall_0_1_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_1() { return cValuePartParserRuleCall_1; }
	}
	public class ActionUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cValuePartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ActionUsageDeclaration returns SysML::ActionUsage :
		//      UsageDeclaration? ValuePart?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? ValuePart?
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_1() { return cValuePartParserRuleCall_1; }
	}
	public class ActionNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSendNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAcceptNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAssignmentNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cIfNodeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cWhileLoopNodeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cForLoopNodeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cControlNodeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		///* Action Nodes */
		//ActionNode returns SysML::ActionUsage :
		//      SendNode | AcceptNode | AssignmentNode
		//    | IfNode | WhileLoopNode | ForLoopNode
		//    | ControlNode
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  SendNode | AcceptNode | AssignmentNode
		//| IfNode | WhileLoopNode | ForLoopNode
		//| ControlNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SendNode
		public RuleCall getSendNodeParserRuleCall_0() { return cSendNodeParserRuleCall_0; }
		
		//AcceptNode
		public RuleCall getAcceptNodeParserRuleCall_1() { return cAcceptNodeParserRuleCall_1; }
		
		//AssignmentNode
		public RuleCall getAssignmentNodeParserRuleCall_2() { return cAssignmentNodeParserRuleCall_2; }
		
		//IfNode
		public RuleCall getIfNodeParserRuleCall_3() { return cIfNodeParserRuleCall_3; }
		
		//WhileLoopNode
		public RuleCall getWhileLoopNodeParserRuleCall_4() { return cWhileLoopNodeParserRuleCall_4; }
		
		//ForLoopNode
		public RuleCall getForLoopNodeParserRuleCall_5() { return cForLoopNodeParserRuleCall_5; }
		
		//ControlNode
		public RuleCall getControlNodeParserRuleCall_6() { return cControlNodeParserRuleCall_6; }
	}
	public class ActionNodeUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNodeUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionUsageKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ActionNodeUsageDeclaration returns SysML::ActionUsage :
		//    ActionUsageKeyword UsageDeclaration?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionUsageKeyword UsageDeclaration?
		public Group getGroup() { return cGroup; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_0() { return cActionUsageKeywordParserRuleCall_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1() { return cUsageDeclarationParserRuleCall_1; }
	}
	public class ActionNodePrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNodePrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cActionNodeUsageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ActionNodePrefix returns SysML::ActionUsage :
		//    OccurrenceUsagePrefix ActionNodeUsageDeclaration?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix ActionNodeUsageDeclaration?
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//ActionNodeUsageDeclaration?
		public RuleCall getActionNodeUsageDeclarationParserRuleCall_1() { return cActionNodeUsageDeclarationParserRuleCall_1; }
	}
	public class AcceptNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AcceptNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAcceptNodeDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AcceptNode returns SysML::AcceptActionUsage :
		//    OccurrenceUsagePrefix AcceptNodeDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix AcceptNodeDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//AcceptNodeDeclaration
		public RuleCall getAcceptNodeDeclarationParserRuleCall_1() { return cAcceptNodeDeclarationParserRuleCall_1; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_2() { return cActionBodyParserRuleCall_2; }
	}
	public class AcceptNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AcceptNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionNodeUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAcceptKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cAcceptParameterPartParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//fragment AcceptNodeDeclaration returns SysML::ActionUsage :
		//    ActionNodeUsageDeclaration? 'accept' AcceptParameterPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionNodeUsageDeclaration? 'accept' AcceptParameterPart
		public Group getGroup() { return cGroup; }
		
		//ActionNodeUsageDeclaration?
		public RuleCall getActionNodeUsageDeclarationParserRuleCall_0() { return cActionNodeUsageDeclarationParserRuleCall_0; }
		
		//'accept'
		public Keyword getAcceptKeyword_1() { return cAcceptKeyword_1; }
		
		//AcceptParameterPart
		public RuleCall getAcceptParameterPartParserRuleCall_2() { return cAcceptParameterPartParserRuleCall_2; }
	}
	public class AcceptParameterPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AcceptParameterPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipPayloadParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cViaKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipNodeParameterMemberParserRuleCall_1_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//fragment AcceptParameterPart returns SysML::ActionUsage :
		//    ownedRelationship += PayloadParameterMember
		//    ( 'via' ownedRelationship += NodeParameterMember
		//    | ownedRelationship += EmptyParameterMember
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += PayloadParameterMember
		//( 'via' ownedRelationship += NodeParameterMember
		//| ownedRelationship += EmptyParameterMember
		//)
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += PayloadParameterMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//PayloadParameterMember
		public RuleCall getOwnedRelationshipPayloadParameterMemberParserRuleCall_0_0() { return cOwnedRelationshipPayloadParameterMemberParserRuleCall_0_0; }
		
		//( 'via' ownedRelationship += NodeParameterMember
		//| ownedRelationship += EmptyParameterMember
		//)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'via' ownedRelationship += NodeParameterMember
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'via'
		public Keyword getViaKeyword_1_0_0() { return cViaKeyword_1_0_0; }
		
		//ownedRelationship += NodeParameterMember
		public Assignment getOwnedRelationshipAssignment_1_0_1() { return cOwnedRelationshipAssignment_1_0_1; }
		
		//NodeParameterMember
		public RuleCall getOwnedRelationshipNodeParameterMemberParserRuleCall_1_0_1_0() { return cOwnedRelationshipNodeParameterMemberParserRuleCall_1_0_1_0; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_0; }
	}
	public class PayloadParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PayloadParameterMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementPayloadParameterParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//PayloadParameterMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += PayloadParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += PayloadParameter
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//PayloadParameter
		public RuleCall getOwnedRelatedElementPayloadParameterParserRuleCall_0() { return cOwnedRelatedElementPayloadParameterParserRuleCall_0; }
	}
	public class PayloadParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PayloadParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPayloadFeatureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cIdentificationParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cPayloadFeatureSpecializationPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cTriggerValuePartParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//PayloadParameter returns SysML::ReferenceUsage :
		//      PayloadFeature
		//    | Identification? PayloadFeatureSpecializationPart? TriggerValuePart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  PayloadFeature
		//| Identification? PayloadFeatureSpecializationPart? TriggerValuePart
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PayloadFeature
		public RuleCall getPayloadFeatureParserRuleCall_0() { return cPayloadFeatureParserRuleCall_0; }
		
		//Identification? PayloadFeatureSpecializationPart? TriggerValuePart
		public Group getGroup_1() { return cGroup_1; }
		
		//Identification?
		public RuleCall getIdentificationParserRuleCall_1_0() { return cIdentificationParserRuleCall_1_0; }
		
		//PayloadFeatureSpecializationPart?
		public RuleCall getPayloadFeatureSpecializationPartParserRuleCall_1_1() { return cPayloadFeatureSpecializationPartParserRuleCall_1_1; }
		
		//TriggerValuePart
		public RuleCall getTriggerValuePartParserRuleCall_1_2() { return cTriggerValuePartParserRuleCall_1_2; }
	}
	public class TriggerValuePartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerValuePart");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipTriggerFeatureValueParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//fragment TriggerValuePart returns SysML::Feature :
		//    ownedRelationship += TriggerFeatureValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += TriggerFeatureValue
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//TriggerFeatureValue
		public RuleCall getOwnedRelationshipTriggerFeatureValueParserRuleCall_0() { return cOwnedRelationshipTriggerFeatureValueParserRuleCall_0; }
	}
	public class TriggerFeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerFeatureValue");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTriggerExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//TriggerFeatureValue returns SysML::FeatureValue :
		//    ownedRelatedElement += TriggerExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += TriggerExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//TriggerExpression
		public RuleCall getOwnedRelatedElementTriggerExpressionParserRuleCall_0() { return cOwnedRelatedElementTriggerExpressionParserRuleCall_0; }
	}
	public class TriggerExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cKindAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cKindTimeTriggerKindParserRuleCall_0_0_0 = (RuleCall)cKindAssignment_0_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipArgumentMemberParserRuleCall_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cKindAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cKindChangeTriggerKindParserRuleCall_1_0_0 = (RuleCall)cKindAssignment_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipArgumentExpressionMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		
		//TriggerExpression returns SysML::TriggerInvocationExpression :
		//      kind = TimeTriggerKind
		//      ownedRelationship += ArgumentMember
		//    | kind = ChangeTriggerKind
		//      ownedRelationship += ArgumentExpressionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  kind = TimeTriggerKind
		//  ownedRelationship += ArgumentMember
		//| kind = ChangeTriggerKind
		//  ownedRelationship += ArgumentExpressionMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//kind = TimeTriggerKind
		//ownedRelationship += ArgumentMember
		public Group getGroup_0() { return cGroup_0; }
		
		//kind = TimeTriggerKind
		public Assignment getKindAssignment_0_0() { return cKindAssignment_0_0; }
		
		//TimeTriggerKind
		public RuleCall getKindTimeTriggerKindParserRuleCall_0_0_0() { return cKindTimeTriggerKindParserRuleCall_0_0_0; }
		
		//ownedRelationship += ArgumentMember
		public Assignment getOwnedRelationshipAssignment_0_1() { return cOwnedRelationshipAssignment_0_1; }
		
		//ArgumentMember
		public RuleCall getOwnedRelationshipArgumentMemberParserRuleCall_0_1_0() { return cOwnedRelationshipArgumentMemberParserRuleCall_0_1_0; }
		
		//kind = ChangeTriggerKind
		//     ownedRelationship += ArgumentExpressionMember
		public Group getGroup_1() { return cGroup_1; }
		
		//kind = ChangeTriggerKind
		public Assignment getKindAssignment_1_0() { return cKindAssignment_1_0; }
		
		//ChangeTriggerKind
		public RuleCall getKindChangeTriggerKindParserRuleCall_1_0_0() { return cKindChangeTriggerKindParserRuleCall_1_0_0; }
		
		//ownedRelationship += ArgumentExpressionMember
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//ArgumentExpressionMember
		public RuleCall getOwnedRelationshipArgumentExpressionMemberParserRuleCall_1_1_0() { return cOwnedRelationshipArgumentExpressionMemberParserRuleCall_1_1_0; }
	}
	public class TimeTriggerKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TimeTriggerKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAtKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cAfterKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//TimeTriggerKind returns SysML::TriggerKind :
		//    'at' | 'after'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'at' | 'after'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'at'
		public Keyword getAtKeyword_0() { return cAtKeyword_0; }
		
		//'after'
		public Keyword getAfterKeyword_1() { return cAfterKeyword_1; }
	}
	public class ChangeTriggerKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ChangeTriggerKind");
		private final Keyword cWhenKeyword = (Keyword)rule.eContents().get(1);
		
		//ChangeTriggerKind returns SysML::TriggerKind :
		//    'when'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'when'
		public Keyword getWhenKeyword() { return cWhenKeyword; }
	}
	public class ArgumentExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ArgumentExpressionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementArgumentExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ArgumentExpressionMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += ArgumentExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ArgumentExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ArgumentExpression
		public RuleCall getOwnedRelatedElementArgumentExpressionParserRuleCall_0() { return cOwnedRelatedElementArgumentExpressionParserRuleCall_0; }
	}
	public class ArgumentExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ArgumentExpression");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipArgumentExpressionValueParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//ArgumentExpression returns SysML::Feature :
		//    ownedRelationship += ArgumentExpressionValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += ArgumentExpressionValue
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//ArgumentExpressionValue
		public RuleCall getOwnedRelationshipArgumentExpressionValueParserRuleCall_0() { return cOwnedRelationshipArgumentExpressionValueParserRuleCall_0; }
	}
	public class ArgumentExpressionValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ArgumentExpressionValue");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionReferenceParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ArgumentExpressionValue returns SysML::FeatureValue :
		//    ownedRelatedElement += OwnedExpressionReference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += OwnedExpressionReference
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//OwnedExpressionReference
		public RuleCall getOwnedRelatedElementOwnedExpressionReferenceParserRuleCall_0() { return cOwnedRelatedElementOwnedExpressionReferenceParserRuleCall_0; }
	}
	public class SendNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SendNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cSendNodeDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SendNode returns SysML::SendActionUsage :
		//    OccurrenceUsagePrefix SendNodeDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix SendNodeDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//SendNodeDeclaration
		public RuleCall getSendNodeDeclarationParserRuleCall_1() { return cSendNodeDeclarationParserRuleCall_1; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_2() { return cActionBodyParserRuleCall_2; }
	}
	public class SendNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SendNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionNodeUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSendKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipNodeParameterMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cViaKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipNodeParameterMemberParserRuleCall_3_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Keyword cToKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipNodeParameterMemberParserRuleCall_4_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_4_0_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_4_1_0 = (RuleCall)cOwnedRelationshipAssignment_4_1.eContents().get(0);
		
		//fragment SendNodeDeclaration returns SysML::ActionUsage :
		//    ActionNodeUsageDeclaration? 'send' ownedRelationship += NodeParameterMember
		//    ( 'via' ownedRelationship += NodeParameterMember
		//    | ownedRelationship += EmptyParameterMember
		//    )
		//    ( 'to' ownedRelationship += NodeParameterMember
		//    | ownedRelationship += EmptyParameterMember
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionNodeUsageDeclaration? 'send' ownedRelationship += NodeParameterMember
		//( 'via' ownedRelationship += NodeParameterMember
		//| ownedRelationship += EmptyParameterMember
		//)
		//( 'to' ownedRelationship += NodeParameterMember
		//| ownedRelationship += EmptyParameterMember
		//)
		public Group getGroup() { return cGroup; }
		
		//ActionNodeUsageDeclaration?
		public RuleCall getActionNodeUsageDeclarationParserRuleCall_0() { return cActionNodeUsageDeclarationParserRuleCall_0; }
		
		//'send'
		public Keyword getSendKeyword_1() { return cSendKeyword_1; }
		
		//ownedRelationship += NodeParameterMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//NodeParameterMember
		public RuleCall getOwnedRelationshipNodeParameterMemberParserRuleCall_2_0() { return cOwnedRelationshipNodeParameterMemberParserRuleCall_2_0; }
		
		//( 'via' ownedRelationship += NodeParameterMember
		//| ownedRelationship += EmptyParameterMember
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'via' ownedRelationship += NodeParameterMember
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'via'
		public Keyword getViaKeyword_3_0_0() { return cViaKeyword_3_0_0; }
		
		//ownedRelationship += NodeParameterMember
		public Assignment getOwnedRelationshipAssignment_3_0_1() { return cOwnedRelationshipAssignment_3_0_1; }
		
		//NodeParameterMember
		public RuleCall getOwnedRelationshipNodeParameterMemberParserRuleCall_3_0_1_0() { return cOwnedRelationshipNodeParameterMemberParserRuleCall_3_0_1_0; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_3_1() { return cOwnedRelationshipAssignment_3_1; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_3_1_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_3_1_0; }
		
		//( 'to' ownedRelationship += NodeParameterMember
		//| ownedRelationship += EmptyParameterMember
		//)
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//'to' ownedRelationship += NodeParameterMember
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//'to'
		public Keyword getToKeyword_4_0_0() { return cToKeyword_4_0_0; }
		
		//ownedRelationship += NodeParameterMember
		public Assignment getOwnedRelationshipAssignment_4_0_1() { return cOwnedRelationshipAssignment_4_0_1; }
		
		//NodeParameterMember
		public RuleCall getOwnedRelationshipNodeParameterMemberParserRuleCall_4_0_1_0() { return cOwnedRelationshipNodeParameterMemberParserRuleCall_4_0_1_0; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_4_1() { return cOwnedRelationshipAssignment_4_1; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_4_1_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_4_1_0; }
	}
	public class NodeParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NodeParameterMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementNodeParameterParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//NodeParameterMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += NodeParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += NodeParameter
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//NodeParameter
		public RuleCall getOwnedRelatedElementNodeParameterParserRuleCall_0() { return cOwnedRelatedElementNodeParameterParserRuleCall_0; }
	}
	public class NodeParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NodeParameter");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureBindingParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//NodeParameter returns SysML::ReferenceUsage :
		//    ownedRelationship += FeatureBinding
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += FeatureBinding
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//FeatureBinding
		public RuleCall getOwnedRelationshipFeatureBindingParserRuleCall_0() { return cOwnedRelationshipFeatureBindingParserRuleCall_0; }
	}
	public class FeatureBindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureBinding");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//FeatureBinding returns SysML::FeatureValue :
		//    ownedRelatedElement += OwnedExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_0; }
	}
	public class AssignmentNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssignmentNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAssignmentNodeDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AssignmentNode returns SysML::AssignmentActionUsage :
		//    OccurrenceUsagePrefix AssignmentNodeDeclaration ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix AssignmentNodeDeclaration ActionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//AssignmentNodeDeclaration
		public RuleCall getAssignmentNodeDeclarationParserRuleCall_1() { return cAssignmentNodeDeclarationParserRuleCall_1; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_2() { return cActionBodyParserRuleCall_2; }
	}
	public class AssignmentNodeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssignmentNodeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionNodeUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAssignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipAssignmentTargetMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipFeatureChainMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Keyword cColonEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedRelationshipNodeParameterMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		
		//fragment AssignmentNodeDeclaration returns SysML::ActionUsage :
		//    ActionNodeUsageDeclaration? 'assign'
		//    ownedRelationship += AssignmentTargetMember
		//    ownedRelationship += FeatureChainMember ':='
		//    ownedRelationship += NodeParameterMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionNodeUsageDeclaration? 'assign'
		//ownedRelationship += AssignmentTargetMember
		//ownedRelationship += FeatureChainMember ':='
		//ownedRelationship += NodeParameterMember
		public Group getGroup() { return cGroup; }
		
		//ActionNodeUsageDeclaration?
		public RuleCall getActionNodeUsageDeclarationParserRuleCall_0() { return cActionNodeUsageDeclarationParserRuleCall_0; }
		
		//'assign'
		public Keyword getAssignKeyword_1() { return cAssignKeyword_1; }
		
		//ownedRelationship += AssignmentTargetMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//AssignmentTargetMember
		public RuleCall getOwnedRelationshipAssignmentTargetMemberParserRuleCall_2_0() { return cOwnedRelationshipAssignmentTargetMemberParserRuleCall_2_0; }
		
		//ownedRelationship += FeatureChainMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//FeatureChainMember
		public RuleCall getOwnedRelationshipFeatureChainMemberParserRuleCall_3_0() { return cOwnedRelationshipFeatureChainMemberParserRuleCall_3_0; }
		
		//':='
		public Keyword getColonEqualsSignKeyword_4() { return cColonEqualsSignKeyword_4; }
		
		//ownedRelationship += NodeParameterMember
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//NodeParameterMember
		public RuleCall getOwnedRelationshipNodeParameterMemberParserRuleCall_5_0() { return cOwnedRelationshipNodeParameterMemberParserRuleCall_5_0; }
	}
	public class AssignmentTargetMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssignmentTargetMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTargetParameterParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//AssignmentTargetMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += TargetParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += TargetParameter
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//TargetParameter
		public RuleCall getOwnedRelatedElementTargetParameterParserRuleCall_0() { return cOwnedRelatedElementTargetParameterParserRuleCall_0; }
	}
	public class TargetParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipTargetBindingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipTargetFeatureMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//TargetParameter returns SysML::ReferenceUsage :
		//    ( => ownedRelationship += TargetBinding '.' )?
		//    ownedRelationship += TargetFeatureMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( => ownedRelationship += TargetBinding '.' )?
		//ownedRelationship += TargetFeatureMember
		public Group getGroup() { return cGroup; }
		
		//( => ownedRelationship += TargetBinding '.' )?
		public Group getGroup_0() { return cGroup_0; }
		
		//=> ownedRelationship += TargetBinding
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//TargetBinding
		public RuleCall getOwnedRelationshipTargetBindingParserRuleCall_0_0_0() { return cOwnedRelationshipTargetBindingParserRuleCall_0_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }
		
		//ownedRelationship += TargetFeatureMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//TargetFeatureMember
		public RuleCall getOwnedRelationshipTargetFeatureMemberParserRuleCall_1_0() { return cOwnedRelationshipTargetFeatureMemberParserRuleCall_1_0; }
	}
	public class TargetFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTargetFeatureParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//TargetFeatureMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += TargetFeature
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += TargetFeature
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//TargetFeature
		public RuleCall getOwnedRelatedElementTargetFeatureParserRuleCall_0() { return cOwnedRelatedElementTargetFeatureParserRuleCall_0; }
	}
	public class TargetFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetFeature");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipTargetAccessedFeatureMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//TargetFeature returns SysML::ReferenceUsage :
		//    ownedRelationship += TargetAccessedFeatureMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += TargetAccessedFeatureMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//TargetAccessedFeatureMember
		public RuleCall getOwnedRelationshipTargetAccessedFeatureMemberParserRuleCall_0() { return cOwnedRelationshipTargetAccessedFeatureMemberParserRuleCall_0; }
	}
	public class TargetAccessedFeatureMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetAccessedFeatureMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyUsageParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//TargetAccessedFeatureMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += EmptyUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptyUsage
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyUsage
		public RuleCall getOwnedRelatedElementEmptyUsageParserRuleCall_0() { return cOwnedRelatedElementEmptyUsageParserRuleCall_0; }
	}
	public class TargetBindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetBinding");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTargetExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//TargetBinding returns SysML::FeatureValue :
		//    ownedRelatedElement += TargetExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += TargetExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//TargetExpression
		public RuleCall getOwnedRelatedElementTargetExpressionParserRuleCall_0() { return cOwnedRelatedElementTargetExpressionParserRuleCall_0; }
	}
	public class TargetExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBaseExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Action cFeatureChainExpressionOperandAction_1_0_0 = (Action)cGroup_1_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOwnedRelationshipFeatureChainMemberParserRuleCall_1_0_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_0_2.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cAlternatives_1_1.eContents().get(0);
		private final Action cOperatorExpressionOperandAction_1_1_0_0 = (Action)cGroup_1_1_0.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1_0_1 = (Assignment)cGroup_1_1_0.eContents().get(1);
		private final Keyword cOperatorLeftSquareBracketKeyword_1_1_0_1_0 = (Keyword)cOperatorAssignment_1_1_0_1.eContents().get(0);
		private final Assignment cOperandAssignment_1_1_0_2 = (Assignment)cGroup_1_1_0.eContents().get(2);
		private final RuleCall cOperandSequenceExpressionParserRuleCall_1_1_0_2_0 = (RuleCall)cOperandAssignment_1_1_0_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_1_0_3 = (Keyword)cGroup_1_1_0.eContents().get(3);
		private final Group cGroup_1_1_1 = (Group)cAlternatives_1_1.eContents().get(1);
		private final Action cOperatorExpressionOperandAction_1_1_1_0 = (Action)cGroup_1_1_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_1_1_1 = (Keyword)cGroup_1_1_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_1_2 = (Assignment)cGroup_1_1_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipReferenceTypingParserRuleCall_1_1_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1_2.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1_3 = (Alternatives)cGroup_1_1_1.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_1_1_1_3_0 = (Assignment)cAlternatives_1_1_1_3.eContents().get(0);
		private final RuleCall cOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_1_3_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1_3_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1_3_1 = (Assignment)cAlternatives_1_1_1_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipFunctionReferenceMemberParserRuleCall_1_1_1_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1_3_1.eContents().get(0);
		private final RuleCall cArgumentListParserRuleCall_1_1_1_3_2 = (RuleCall)cAlternatives_1_1_1_3.eContents().get(2);
		private final Group cGroup_1_1_2 = (Group)cAlternatives_1_1.eContents().get(2);
		private final Action cCollectExpressionOperandAction_1_1_2_0 = (Action)cGroup_1_1_2.eContents().get(0);
		private final Keyword cFullStopKeyword_1_1_2_1 = (Keyword)cGroup_1_1_2.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_2_2 = (Assignment)cGroup_1_1_2.eContents().get(2);
		private final RuleCall cOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_2_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_2_2.eContents().get(0);
		private final Group cGroup_1_1_3 = (Group)cAlternatives_1_1.eContents().get(3);
		private final Action cSelectExpressionOperandAction_1_1_3_0 = (Action)cGroup_1_1_3.eContents().get(0);
		private final Keyword cFullStopQuestionMarkKeyword_1_1_3_1 = (Keyword)cGroup_1_1_3.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_3_2 = (Assignment)cGroup_1_1_3.eContents().get(2);
		private final RuleCall cOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_3_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_3_2.eContents().get(0);
		
		//TargetExpression returns SysML::Expression :
		//    BaseExpression
		//    ( ( {SysML::FeatureChainExpression.operand += current} '.'
		//      ownedRelationship += FeatureChainMember
		//      )?
		//      ( {SysML::OperatorExpression.operand += current}
		//        operator = '[' operand += SequenceExpression ']'
		//      | {SysML::OperatorExpression.operand += current} '->'
		//        ownedRelationship += ReferenceTyping
		//        ( ownedRelationship += ExpressionBodyMember
		//        | ownedRelationship += FunctionReferenceMember
		//        | ArgumentList
		//        )
		//      | {SysML::CollectExpression.operand += current} '.'
		//        ownedRelationship += ExpressionBodyMember
		//      | {SysML::SelectExpression.operand += current} '.?'
		//        ownedRelationship += ExpressionBodyMember
		//      )
		//    )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BaseExpression
		//( ( {SysML::FeatureChainExpression.operand += current} '.'
		//  ownedRelationship += FeatureChainMember
		//  )?
		//  ( {SysML::OperatorExpression.operand += current}
		//    operator = '[' operand += SequenceExpression ']'
		//  | {SysML::OperatorExpression.operand += current} '->'
		//    ownedRelationship += ReferenceTyping
		//    ( ownedRelationship += ExpressionBodyMember
		//    | ownedRelationship += FunctionReferenceMember
		//    | ArgumentList
		//    )
		//  | {SysML::CollectExpression.operand += current} '.'
		//    ownedRelationship += ExpressionBodyMember
		//  | {SysML::SelectExpression.operand += current} '.?'
		//    ownedRelationship += ExpressionBodyMember
		//  )
		//)*
		public Group getGroup() { return cGroup; }
		
		//BaseExpression
		public RuleCall getBaseExpressionParserRuleCall_0() { return cBaseExpressionParserRuleCall_0; }
		
		//( ( {SysML::FeatureChainExpression.operand += current} '.'
		//  ownedRelationship += FeatureChainMember
		//  )?
		//  ( {SysML::OperatorExpression.operand += current}
		//    operator = '[' operand += SequenceExpression ']'
		//  | {SysML::OperatorExpression.operand += current} '->'
		//    ownedRelationship += ReferenceTyping
		//    ( ownedRelationship += ExpressionBodyMember
		//    | ownedRelationship += FunctionReferenceMember
		//    | ArgumentList
		//    )
		//  | {SysML::CollectExpression.operand += current} '.'
		//    ownedRelationship += ExpressionBodyMember
		//  | {SysML::SelectExpression.operand += current} '.?'
		//    ownedRelationship += ExpressionBodyMember
		//  )
		//)*
		public Group getGroup_1() { return cGroup_1; }
		
		//( {SysML::FeatureChainExpression.operand += current} '.'
		//     ownedRelationship += FeatureChainMember
		//     )?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//{SysML::FeatureChainExpression.operand += current}
		public Action getFeatureChainExpressionOperandAction_1_0_0() { return cFeatureChainExpressionOperandAction_1_0_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0_1() { return cFullStopKeyword_1_0_1; }
		
		//ownedRelationship += FeatureChainMember
		public Assignment getOwnedRelationshipAssignment_1_0_2() { return cOwnedRelationshipAssignment_1_0_2; }
		
		//FeatureChainMember
		public RuleCall getOwnedRelationshipFeatureChainMemberParserRuleCall_1_0_2_0() { return cOwnedRelationshipFeatureChainMemberParserRuleCall_1_0_2_0; }
		
		//( {SysML::OperatorExpression.operand += current}
		//  operator = '[' operand += SequenceExpression ']'
		//| {SysML::OperatorExpression.operand += current} '->'
		//  ownedRelationship += ReferenceTyping
		//  ( ownedRelationship += ExpressionBodyMember
		//  | ownedRelationship += FunctionReferenceMember
		//  | ArgumentList
		//  )
		//| {SysML::CollectExpression.operand += current} '.'
		//  ownedRelationship += ExpressionBodyMember
		//| {SysML::SelectExpression.operand += current} '.?'
		//  ownedRelationship += ExpressionBodyMember
		//)
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//{SysML::OperatorExpression.operand += current}
		//       operator = '[' operand += SequenceExpression ']'
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }
		
		//{SysML::OperatorExpression.operand += current}
		public Action getOperatorExpressionOperandAction_1_1_0_0() { return cOperatorExpressionOperandAction_1_1_0_0; }
		
		//operator = '['
		public Assignment getOperatorAssignment_1_1_0_1() { return cOperatorAssignment_1_1_0_1; }
		
		//'['
		public Keyword getOperatorLeftSquareBracketKeyword_1_1_0_1_0() { return cOperatorLeftSquareBracketKeyword_1_1_0_1_0; }
		
		//operand += SequenceExpression
		public Assignment getOperandAssignment_1_1_0_2() { return cOperandAssignment_1_1_0_2; }
		
		//SequenceExpression
		public RuleCall getOperandSequenceExpressionParserRuleCall_1_1_0_2_0() { return cOperandSequenceExpressionParserRuleCall_1_1_0_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_1_0_3() { return cRightSquareBracketKeyword_1_1_0_3; }
		
		//{SysML::OperatorExpression.operand += current} '->'
		//       ownedRelationship += ReferenceTyping
		//       ( ownedRelationship += ExpressionBodyMember
		//       | ownedRelationship += FunctionReferenceMember
		//       | ArgumentList
		//       )
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }
		
		//{SysML::OperatorExpression.operand += current}
		public Action getOperatorExpressionOperandAction_1_1_1_0() { return cOperatorExpressionOperandAction_1_1_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_1_1_1() { return cHyphenMinusGreaterThanSignKeyword_1_1_1_1; }
		
		//ownedRelationship += ReferenceTyping
		public Assignment getOwnedRelationshipAssignment_1_1_1_2() { return cOwnedRelationshipAssignment_1_1_1_2; }
		
		//ReferenceTyping
		public RuleCall getOwnedRelationshipReferenceTypingParserRuleCall_1_1_1_2_0() { return cOwnedRelationshipReferenceTypingParserRuleCall_1_1_1_2_0; }
		
		//( ownedRelationship += ExpressionBodyMember
		//| ownedRelationship += FunctionReferenceMember
		//| ArgumentList
		//)
		public Alternatives getAlternatives_1_1_1_3() { return cAlternatives_1_1_1_3; }
		
		//ownedRelationship += ExpressionBodyMember
		public Assignment getOwnedRelationshipAssignment_1_1_1_3_0() { return cOwnedRelationshipAssignment_1_1_1_3_0; }
		
		//ExpressionBodyMember
		public RuleCall getOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_1_3_0_0() { return cOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_1_3_0_0; }
		
		//ownedRelationship += FunctionReferenceMember
		public Assignment getOwnedRelationshipAssignment_1_1_1_3_1() { return cOwnedRelationshipAssignment_1_1_1_3_1; }
		
		//FunctionReferenceMember
		public RuleCall getOwnedRelationshipFunctionReferenceMemberParserRuleCall_1_1_1_3_1_0() { return cOwnedRelationshipFunctionReferenceMemberParserRuleCall_1_1_1_3_1_0; }
		
		//ArgumentList
		public RuleCall getArgumentListParserRuleCall_1_1_1_3_2() { return cArgumentListParserRuleCall_1_1_1_3_2; }
		
		//{SysML::CollectExpression.operand += current} '.'
		//       ownedRelationship += ExpressionBodyMember
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//{SysML::CollectExpression.operand += current}
		public Action getCollectExpressionOperandAction_1_1_2_0() { return cCollectExpressionOperandAction_1_1_2_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1_1_2_1() { return cFullStopKeyword_1_1_2_1; }
		
		//ownedRelationship += ExpressionBodyMember
		public Assignment getOwnedRelationshipAssignment_1_1_2_2() { return cOwnedRelationshipAssignment_1_1_2_2; }
		
		//ExpressionBodyMember
		public RuleCall getOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_2_2_0() { return cOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_2_2_0; }
		
		//{SysML::SelectExpression.operand += current} '.?'
		//       ownedRelationship += ExpressionBodyMember
		public Group getGroup_1_1_3() { return cGroup_1_1_3; }
		
		//{SysML::SelectExpression.operand += current}
		public Action getSelectExpressionOperandAction_1_1_3_0() { return cSelectExpressionOperandAction_1_1_3_0; }
		
		//'.?'
		public Keyword getFullStopQuestionMarkKeyword_1_1_3_1() { return cFullStopQuestionMarkKeyword_1_1_3_1; }
		
		//ownedRelationship += ExpressionBodyMember
		public Assignment getOwnedRelationshipAssignment_1_1_3_2() { return cOwnedRelationshipAssignment_1_1_3_2; }
		
		//ExpressionBodyMember
		public RuleCall getOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_3_2_0() { return cOwnedRelationshipExpressionBodyMemberParserRuleCall_1_1_3_2_0; }
	}
	public class ExpressionParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExpressionParameterMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ExpressionParameterMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += OwnedExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_0; }
	}
	public class IfNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IfNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionNodePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cIfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipExpressionParameterMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipActionBodyParameterMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElseKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Alternatives cOwnedRelationshipAlternatives_4_1_0 = (Alternatives)cOwnedRelationshipAssignment_4_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipActionBodyParameterMemberParserRuleCall_4_1_0_0 = (RuleCall)cOwnedRelationshipAlternatives_4_1_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipIfNodeParameterMemberParserRuleCall_4_1_0_1 = (RuleCall)cOwnedRelationshipAlternatives_4_1_0.eContents().get(1);
		
		//IfNode returns SysML::IfActionUsage :
		//    ActionNodePrefix
		//    'if' ownedRelationship += ExpressionParameterMember
		//    ownedRelationship += ActionBodyParameterMember
		//    ( 'else' ownedRelationship += ( ActionBodyParameterMember | IfNodeParameterMember ) )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionNodePrefix
		//'if' ownedRelationship += ExpressionParameterMember
		//ownedRelationship += ActionBodyParameterMember
		//( 'else' ownedRelationship += ( ActionBodyParameterMember | IfNodeParameterMember ) )?
		public Group getGroup() { return cGroup; }
		
		//ActionNodePrefix
		public RuleCall getActionNodePrefixParserRuleCall_0() { return cActionNodePrefixParserRuleCall_0; }
		
		//'if'
		public Keyword getIfKeyword_1() { return cIfKeyword_1; }
		
		//ownedRelationship += ExpressionParameterMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ExpressionParameterMember
		public RuleCall getOwnedRelationshipExpressionParameterMemberParserRuleCall_2_0() { return cOwnedRelationshipExpressionParameterMemberParserRuleCall_2_0; }
		
		//ownedRelationship += ActionBodyParameterMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ActionBodyParameterMember
		public RuleCall getOwnedRelationshipActionBodyParameterMemberParserRuleCall_3_0() { return cOwnedRelationshipActionBodyParameterMemberParserRuleCall_3_0; }
		
		//( 'else' ownedRelationship += ( ActionBodyParameterMember | IfNodeParameterMember ) )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'else'
		public Keyword getElseKeyword_4_0() { return cElseKeyword_4_0; }
		
		//ownedRelationship += ( ActionBodyParameterMember | IfNodeParameterMember )
		public Assignment getOwnedRelationshipAssignment_4_1() { return cOwnedRelationshipAssignment_4_1; }
		
		//( ActionBodyParameterMember | IfNodeParameterMember )
		public Alternatives getOwnedRelationshipAlternatives_4_1_0() { return cOwnedRelationshipAlternatives_4_1_0; }
		
		//ActionBodyParameterMember
		public RuleCall getOwnedRelationshipActionBodyParameterMemberParserRuleCall_4_1_0_0() { return cOwnedRelationshipActionBodyParameterMemberParserRuleCall_4_1_0_0; }
		
		//IfNodeParameterMember
		public RuleCall getOwnedRelationshipIfNodeParameterMemberParserRuleCall_4_1_0_1() { return cOwnedRelationshipIfNodeParameterMemberParserRuleCall_4_1_0_1; }
	}
	public class ActionBodyParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionBodyParameterMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementActionBodyParameterParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ActionBodyParameterMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += ActionBodyParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ActionBodyParameter
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ActionBodyParameter
		public RuleCall getOwnedRelatedElementActionBodyParameterParserRuleCall_0() { return cOwnedRelatedElementActionBodyParameterParserRuleCall_0; }
	}
	public class ActionBodyParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionBodyParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionUsageAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cActionUsageKeywordParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cActionBodyItemParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ActionBodyParameter returns SysML::ActionUsage :
		//    {SysML::ActionUsage} ( ActionUsageKeyword UsageDeclaration? )? '{' => ActionBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ActionUsage} ( ActionUsageKeyword UsageDeclaration? )? '{' => ActionBodyItem* '}'
		public Group getGroup() { return cGroup; }
		
		//{SysML::ActionUsage}
		public Action getActionUsageAction_0() { return cActionUsageAction_0; }
		
		//( ActionUsageKeyword UsageDeclaration? )?
		public Group getGroup_1() { return cGroup_1; }
		
		//ActionUsageKeyword
		public RuleCall getActionUsageKeywordParserRuleCall_1_0() { return cActionUsageKeywordParserRuleCall_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_1() { return cUsageDeclarationParserRuleCall_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//=> ActionBodyItem*
		public RuleCall getActionBodyItemParserRuleCall_3() { return cActionBodyItemParserRuleCall_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class IfNodeParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IfNodeParameterMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementIfNodeParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//IfNodeParameterMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += IfNode
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += IfNode
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//IfNode
		public RuleCall getOwnedRelatedElementIfNodeParserRuleCall_0() { return cOwnedRelatedElementIfNodeParserRuleCall_0; }
	}
	public class WhileLoopNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.WhileLoopNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionNodePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cWhileKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cOwnedRelationshipExpressionParameterMemberParserRuleCall_1_0_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cLoopKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipActionBodyParameterMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUntilKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOwnedRelationshipExpressionParameterMemberParserRuleCall_3_1_0 = (RuleCall)cOwnedRelationshipAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//WhileLoopNode returns SysML::WhileLoopActionUsage :
		//    ActionNodePrefix
		//    ( 'while' ownedRelationship += ExpressionParameterMember
		//    | 'loop' ownedRelationship += EmptyParameterMember
		//    )
		//    ownedRelationship += ActionBodyParameterMember
		//    ( 'until' ownedRelationship += ExpressionParameterMember ';' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionNodePrefix
		//( 'while' ownedRelationship += ExpressionParameterMember
		//| 'loop' ownedRelationship += EmptyParameterMember
		//)
		//ownedRelationship += ActionBodyParameterMember
		//( 'until' ownedRelationship += ExpressionParameterMember ';' )?
		public Group getGroup() { return cGroup; }
		
		//ActionNodePrefix
		public RuleCall getActionNodePrefixParserRuleCall_0() { return cActionNodePrefixParserRuleCall_0; }
		
		//( 'while' ownedRelationship += ExpressionParameterMember
		//| 'loop' ownedRelationship += EmptyParameterMember
		//)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'while' ownedRelationship += ExpressionParameterMember
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'while'
		public Keyword getWhileKeyword_1_0_0() { return cWhileKeyword_1_0_0; }
		
		//ownedRelationship += ExpressionParameterMember
		public Assignment getOwnedRelationshipAssignment_1_0_1() { return cOwnedRelationshipAssignment_1_0_1; }
		
		//ExpressionParameterMember
		public RuleCall getOwnedRelationshipExpressionParameterMemberParserRuleCall_1_0_1_0() { return cOwnedRelationshipExpressionParameterMemberParserRuleCall_1_0_1_0; }
		
		//'loop' ownedRelationship += EmptyParameterMember
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'loop'
		public Keyword getLoopKeyword_1_1_0() { return cLoopKeyword_1_1_0; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_1_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_1_0; }
		
		//ownedRelationship += ActionBodyParameterMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ActionBodyParameterMember
		public RuleCall getOwnedRelationshipActionBodyParameterMemberParserRuleCall_2_0() { return cOwnedRelationshipActionBodyParameterMemberParserRuleCall_2_0; }
		
		//( 'until' ownedRelationship += ExpressionParameterMember ';' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'until'
		public Keyword getUntilKeyword_3_0() { return cUntilKeyword_3_0; }
		
		//ownedRelationship += ExpressionParameterMember
		public Assignment getOwnedRelationshipAssignment_3_1() { return cOwnedRelationshipAssignment_3_1; }
		
		//ExpressionParameterMember
		public RuleCall getOwnedRelationshipExpressionParameterMemberParserRuleCall_3_1_0() { return cOwnedRelationshipExpressionParameterMemberParserRuleCall_3_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_2() { return cSemicolonKeyword_3_2; }
	}
	public class ForLoopNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ForLoopNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cActionNodePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cForKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipForVariableDeclarationMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Keyword cInKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedRelationshipNodeParameterMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedRelationshipActionBodyParameterMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		
		//ForLoopNode returns SysML::ForLoopActionUsage :
		//    ActionNodePrefix
		//    'for' ownedRelationship += ForVariableDeclarationMember
		//    'in' ownedRelationship += NodeParameterMember
		//    ownedRelationship += ActionBodyParameterMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ActionNodePrefix
		//'for' ownedRelationship += ForVariableDeclarationMember
		//'in' ownedRelationship += NodeParameterMember
		//ownedRelationship += ActionBodyParameterMember
		public Group getGroup() { return cGroup; }
		
		//ActionNodePrefix
		public RuleCall getActionNodePrefixParserRuleCall_0() { return cActionNodePrefixParserRuleCall_0; }
		
		//'for'
		public Keyword getForKeyword_1() { return cForKeyword_1; }
		
		//ownedRelationship += ForVariableDeclarationMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ForVariableDeclarationMember
		public RuleCall getOwnedRelationshipForVariableDeclarationMemberParserRuleCall_2_0() { return cOwnedRelationshipForVariableDeclarationMemberParserRuleCall_2_0; }
		
		//'in'
		public Keyword getInKeyword_3() { return cInKeyword_3; }
		
		//ownedRelationship += NodeParameterMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//NodeParameterMember
		public RuleCall getOwnedRelationshipNodeParameterMemberParserRuleCall_4_0() { return cOwnedRelationshipNodeParameterMemberParserRuleCall_4_0; }
		
		//ownedRelationship += ActionBodyParameterMember
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//ActionBodyParameterMember
		public RuleCall getOwnedRelationshipActionBodyParameterMemberParserRuleCall_5_0() { return cOwnedRelationshipActionBodyParameterMemberParserRuleCall_5_0; }
	}
	public class ForVariableDeclarationMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ForVariableDeclarationMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementForVariableDeclarationParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//ForVariableDeclarationMember returns SysML::FeatureMembership :
		//    ownedRelatedElement += ForVariableDeclaration
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += ForVariableDeclaration
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//ForVariableDeclaration
		public RuleCall getOwnedRelatedElementForVariableDeclarationParserRuleCall_0() { return cOwnedRelatedElementForVariableDeclarationParserRuleCall_0; }
	}
	public class ForVariableDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ForVariableDeclaration");
		private final RuleCall cUsageDeclarationParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ForVariableDeclaration returns SysML::ReferenceUsage :
		//    UsageDeclaration
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall() { return cUsageDeclarationParserRuleCall; }
	}
	public class ControlNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ControlNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMergeNodeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDecisionNodeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJoinNodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cForkNodeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ControlNode returns SysML::ControlNode :
		//      MergeNode
		//    | DecisionNode
		//    | JoinNode
		//    | ForkNode
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  MergeNode
		//| DecisionNode
		//| JoinNode
		//| ForkNode
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MergeNode
		public RuleCall getMergeNodeParserRuleCall_0() { return cMergeNodeParserRuleCall_0; }
		
		//DecisionNode
		public RuleCall getDecisionNodeParserRuleCall_1() { return cDecisionNodeParserRuleCall_1; }
		
		//JoinNode
		public RuleCall getJoinNodeParserRuleCall_2() { return cJoinNodeParserRuleCall_2; }
		
		//ForkNode
		public RuleCall getForkNodeParserRuleCall_3() { return cForkNodeParserRuleCall_3; }
	}
	public class ControlNodePrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ControlNodePrefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRefPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cIsIndividualAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsIndividualIndividualKeyword_1_0 = (Keyword)cIsIndividualAssignment_1.eContents().get(0);
		private final Assignment cPortionKindAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPortionKindPortionKindEnumRuleCall_2_0 = (RuleCall)cPortionKindAssignment_2.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//fragment ControlNodePrefix returns SysML::OccurrenceUsage :
		//      RefPrefix
		//      ( isIndividual ?= 'individual' )?
		//      ( portionKind = PortionKind )?
		//      UsageExtensionKeyword*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RefPrefix
		//( isIndividual ?= 'individual' )?
		//( portionKind = PortionKind )?
		//UsageExtensionKeyword*
		public Group getGroup() { return cGroup; }
		
		//RefPrefix
		public RuleCall getRefPrefixParserRuleCall_0() { return cRefPrefixParserRuleCall_0; }
		
		//( isIndividual ?= 'individual' )?
		public Assignment getIsIndividualAssignment_1() { return cIsIndividualAssignment_1; }
		
		//'individual'
		public Keyword getIsIndividualIndividualKeyword_1_0() { return cIsIndividualIndividualKeyword_1_0; }
		
		//( portionKind = PortionKind )?
		public Assignment getPortionKindAssignment_2() { return cPortionKindAssignment_2; }
		
		//PortionKind
		public RuleCall getPortionKindPortionKindEnumRuleCall_2_0() { return cPortionKindPortionKindEnumRuleCall_2_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_3() { return cUsageExtensionKeywordParserRuleCall_3; }
	}
	public class MergeNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MergeNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cControlNodePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cMergeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionNodeBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//MergeNode returns SysML::MergeNode :
		//    ControlNodePrefix 'merge' UsageDeclaration?
		//    ActionNodeBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ControlNodePrefix 'merge' UsageDeclaration?
		//ActionNodeBody
		public Group getGroup() { return cGroup; }
		
		//ControlNodePrefix
		public RuleCall getControlNodePrefixParserRuleCall_0() { return cControlNodePrefixParserRuleCall_0; }
		
		//'merge'
		public Keyword getMergeKeyword_1() { return cMergeKeyword_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//ActionNodeBody
		public RuleCall getActionNodeBodyParserRuleCall_3() { return cActionNodeBodyParserRuleCall_3; }
	}
	public class DecisionNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DecisionNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cControlNodePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDecideKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionNodeBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//DecisionNode returns SysML::DecisionNode :
		//    ControlNodePrefix 'decide' UsageDeclaration?
		//    ActionNodeBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ControlNodePrefix 'decide' UsageDeclaration?
		//ActionNodeBody
		public Group getGroup() { return cGroup; }
		
		//ControlNodePrefix
		public RuleCall getControlNodePrefixParserRuleCall_0() { return cControlNodePrefixParserRuleCall_0; }
		
		//'decide'
		public Keyword getDecideKeyword_1() { return cDecideKeyword_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//ActionNodeBody
		public RuleCall getActionNodeBodyParserRuleCall_3() { return cActionNodeBodyParserRuleCall_3; }
	}
	public class JoinNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.JoinNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cControlNodePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cJoinKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionNodeBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//JoinNode returns SysML::JoinNode :
		//    ControlNodePrefix 'join' UsageDeclaration?
		//    ActionNodeBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ControlNodePrefix 'join' UsageDeclaration?
		//ActionNodeBody
		public Group getGroup() { return cGroup; }
		
		//ControlNodePrefix
		public RuleCall getControlNodePrefixParserRuleCall_0() { return cControlNodePrefixParserRuleCall_0; }
		
		//'join'
		public Keyword getJoinKeyword_1() { return cJoinKeyword_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//ActionNodeBody
		public RuleCall getActionNodeBodyParserRuleCall_3() { return cActionNodeBodyParserRuleCall_3; }
	}
	public class ForkNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ForkNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cControlNodePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cForkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cActionNodeBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ForkNode returns SysML::ForkNode :
		//    ControlNodePrefix 'fork' UsageDeclaration?
		//    ActionNodeBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ControlNodePrefix 'fork' UsageDeclaration?
		//ActionNodeBody
		public Group getGroup() { return cGroup; }
		
		//ControlNodePrefix
		public RuleCall getControlNodePrefixParserRuleCall_0() { return cControlNodePrefixParserRuleCall_0; }
		
		//'fork'
		public Keyword getForkKeyword_1() { return cForkKeyword_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//ActionNodeBody
		public RuleCall getActionNodeBodyParserRuleCall_3() { return cActionNodeBodyParserRuleCall_3; }
	}
	public class ActionNodeBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionNodeBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipAnnotatingMemberParserRuleCall_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ActionNodeBody returns SysML::ControlNode :
		//    ';' | '{' ( ownedRelationship += AnnotatingMember )* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' ( ownedRelationship += AnnotatingMember )* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ( ownedRelationship += AnnotatingMember )* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//( ownedRelationship += AnnotatingMember )*
		public Assignment getOwnedRelationshipAssignment_1_1() { return cOwnedRelationshipAssignment_1_1; }
		
		//AnnotatingMember
		public RuleCall getOwnedRelationshipAnnotatingMemberParserRuleCall_1_1_0() { return cOwnedRelationshipAnnotatingMemberParserRuleCall_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class EmptyParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyParameterMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEmptyUsageParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//EmptyParameterMember returns SysML::ParameterMembership :
		//    ownedRelatedElement += EmptyUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += EmptyUsage
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//EmptyUsage
		public RuleCall getOwnedRelatedElementEmptyUsageParserRuleCall_0() { return cOwnedRelatedElementEmptyUsageParserRuleCall_0; }
	}
	public class EmptyUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyUsage");
		private final Action cReferenceUsageAction = (Action)rule.eContents().get(1);
		
		//EmptyUsage returns SysML::ReferenceUsage :
		//    {SysML::ReferenceUsage}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ReferenceUsage}
		public Action getReferenceUsageAction() { return cReferenceUsageAction; }
	}
	public class ActionTargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActionTargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cTargetSuccessionParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cGuardedTargetSuccessionParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cDefaultTargetSuccessionParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final RuleCall cUsageBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		///* Action Successions */
		//ActionTargetSuccession returns SysML::Usage :
		//    ( TargetSuccession | GuardedTargetSuccession | DefaultTargetSuccession )
		//    UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( TargetSuccession | GuardedTargetSuccession | DefaultTargetSuccession )
		//UsageBody
		public Group getGroup() { return cGroup; }
		
		//( TargetSuccession | GuardedTargetSuccession | DefaultTargetSuccession )
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//TargetSuccession
		public RuleCall getTargetSuccessionParserRuleCall_0_0() { return cTargetSuccessionParserRuleCall_0_0; }
		
		//GuardedTargetSuccession
		public RuleCall getGuardedTargetSuccessionParserRuleCall_0_1() { return cGuardedTargetSuccessionParserRuleCall_0_1; }
		
		//DefaultTargetSuccession
		public RuleCall getDefaultTargetSuccessionParserRuleCall_0_2() { return cDefaultTargetSuccessionParserRuleCall_0_2; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_1() { return cUsageBodyParserRuleCall_1; }
	}
	public class TargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//TargetSuccession returns SysML::SuccessionAsUsage :
		//    'then' ownedRelationship += MultiplicitySourceEndMember
		//    ownedRelationship += ConnectorEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'then' ownedRelationship += MultiplicitySourceEndMember
		//ownedRelationship += ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//'then'
		public Keyword getThenKeyword_0() { return cThenKeyword_0; }
		
		//ownedRelationship += MultiplicitySourceEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//MultiplicitySourceEndMember
		public RuleCall getOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0() { return cOwnedRelationshipMultiplicitySourceEndMemberParserRuleCall_1_0; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_2_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_2_0; }
	}
	public class GuardedTargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardedTargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipGuardExpressionMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//GuardedTargetSuccession returns SysML::TransitionUsage :
		//    ownedRelationship += EmptyParameterMember
		//    ownedRelationship += GuardExpressionMember
		//    'then' ownedRelationship += TransitionSuccessionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += EmptyParameterMember
		//ownedRelationship += GuardExpressionMember
		//'then' ownedRelationship += TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_0_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_0_0; }
		
		//ownedRelationship += GuardExpressionMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//GuardExpressionMember
		public RuleCall getOwnedRelationshipGuardExpressionMemberParserRuleCall_1_0() { return cOwnedRelationshipGuardExpressionMemberParserRuleCall_1_0; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//ownedRelationship += TransitionSuccessionMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedRelationshipTransitionSuccessionMemberParserRuleCall_3_0() { return cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_3_0; }
	}
	public class DefaultTargetSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DefaultTargetSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Keyword cElseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//DefaultTargetSuccession returns SysML::TransitionUsage :
		//    ownedRelationship += EmptyParameterMember
		//    'else' ownedRelationship += TransitionSuccessionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += EmptyParameterMember
		//'else' ownedRelationship += TransitionSuccessionMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_0_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_0_0; }
		
		//'else'
		public Keyword getElseKeyword_1() { return cElseKeyword_1; }
		
		//ownedRelationship += TransitionSuccessionMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedRelationshipTransitionSuccessionMemberParserRuleCall_2_0() { return cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_2_0; }
	}
	public class GuardedSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardedSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cSuccessionKeywordParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cFirstKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOwnedRelationshipGuardExpressionMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Keyword cThenKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOwnedRelationshipAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_6_0 = (RuleCall)cOwnedRelationshipAssignment_6.eContents().get(0);
		private final RuleCall cUsageBodyParserRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//GuardedSuccession returns SysML::TransitionUsage :
		//    ( SuccessionKeyword UsageDeclaration )? 'first'
		//    ownedRelationship += TransitionSourceMember
		//    ownedRelationship += EmptyParameterMember
		//    ownedRelationship += GuardExpressionMember
		//    'then' ownedRelationship += TransitionSuccessionMember
		//    UsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( SuccessionKeyword UsageDeclaration )? 'first'
		//ownedRelationship += TransitionSourceMember
		//ownedRelationship += EmptyParameterMember
		//ownedRelationship += GuardExpressionMember
		//'then' ownedRelationship += TransitionSuccessionMember
		//UsageBody
		public Group getGroup() { return cGroup; }
		
		//( SuccessionKeyword UsageDeclaration )?
		public Group getGroup_0() { return cGroup_0; }
		
		//SuccessionKeyword
		public RuleCall getSuccessionKeywordParserRuleCall_0_0() { return cSuccessionKeywordParserRuleCall_0_0; }
		
		//UsageDeclaration
		public RuleCall getUsageDeclarationParserRuleCall_0_1() { return cUsageDeclarationParserRuleCall_0_1; }
		
		//'first'
		public Keyword getFirstKeyword_1() { return cFirstKeyword_1; }
		
		//ownedRelationship += TransitionSourceMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//TransitionSourceMember
		public RuleCall getOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0() { return cOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_3_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_3_0; }
		
		//ownedRelationship += GuardExpressionMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//GuardExpressionMember
		public RuleCall getOwnedRelationshipGuardExpressionMemberParserRuleCall_4_0() { return cOwnedRelationshipGuardExpressionMemberParserRuleCall_4_0; }
		
		//'then'
		public Keyword getThenKeyword_5() { return cThenKeyword_5; }
		
		//ownedRelationship += TransitionSuccessionMember
		public Assignment getOwnedRelationshipAssignment_6() { return cOwnedRelationshipAssignment_6; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedRelationshipTransitionSuccessionMemberParserRuleCall_6_0() { return cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_6_0; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_7() { return cUsageBodyParserRuleCall_7; }
	}
	public class StateKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateKeyword");
		private final Keyword cStateKeyword = (Keyword)rule.eContents().get(1);
		
		///* STATES */
		///* State Definitions */
		//StateKeyword :
		//    'state'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'state'
		public Keyword getStateKeyword() { return cStateKeyword; }
	}
	public class StateDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cStateKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//StateDefKeyword :
		//    StateKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StateKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//StateKeyword
		public RuleCall getStateKeywordParserRuleCall_0() { return cStateKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class StateDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cStateDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cStateDefBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//StateDefinition returns SysML::StateDefinition :
		//    OccurrenceDefinitionPrefix StateDefKeyword DefinitionDeclaration StateDefBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix StateDefKeyword DefinitionDeclaration StateDefBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//StateDefKeyword
		public RuleCall getStateDefKeywordParserRuleCall_1() { return cStateDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//StateDefBody
		public RuleCall getStateDefBodyParserRuleCall_3() { return cStateDefBodyParserRuleCall_3; }
	}
	public class StateDefBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateDefBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIsParallelAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsParallelParallelKeyword_1_0_0 = (Keyword)cIsParallelAssignment_1_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final RuleCall cStateBodyPartParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment StateDefBody returns SysML::StateDefinition :
		//    ';' | ( isParallel ?= 'parallel' )? '{' StateBodyPart '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | ( isParallel ?= 'parallel' )? '{' StateBodyPart '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//( isParallel ?= 'parallel' )? '{' StateBodyPart '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//( isParallel ?= 'parallel' )?
		public Assignment getIsParallelAssignment_1_0() { return cIsParallelAssignment_1_0; }
		
		//'parallel'
		public Keyword getIsParallelParallelKeyword_1_0_0() { return cIsParallelParallelKeyword_1_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_1() { return cLeftCurlyBracketKeyword_1_1; }
		
		//StateBodyPart
		public RuleCall getStateBodyPartParserRuleCall_1_2() { return cStateBodyPartParserRuleCall_1_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class StateBodyPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateBodyPart");
		private final RuleCall cStateBodyItemParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//fragment StateBodyPart returns SysML::Type :
		//    // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//    // while incrementally parsing.
		//    => StateBodyItem*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//// Note: Using a syntactic predicate here seems to avoid a possible infinite loop
		//// while incrementally parsing.
		//=> StateBodyItem*
		public RuleCall getStateBodyItemParserRuleCall() { return cStateBodyItemParserRuleCall; }
	}
	public class StateBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cOwnedRelationshipImportParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipAliasMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipDefinitionMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipVariantUsageMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cOwnedRelationshipAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_5_0_0 = (RuleCall)cOwnedRelationshipAssignment_5_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOwnedRelationshipStructureUsageMemberParserRuleCall_5_1_0 = (RuleCall)cOwnedRelationshipAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cOwnedRelationshipAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0 = (RuleCall)cOwnedRelationshipAssignment_6_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOwnedRelationshipBehaviorUsageMemberParserRuleCall_6_1_0 = (RuleCall)cOwnedRelationshipAssignment_6_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cOwnedRelationshipTargetTransitionUsageMemberParserRuleCall_6_2_0 = (RuleCall)cOwnedRelationshipAssignment_6_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cOwnedRelationshipTransitionUsageMemberParserRuleCall_7_0 = (RuleCall)cOwnedRelationshipAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cOwnedRelationshipAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cOwnedRelationshipEntryActionMemberParserRuleCall_8_0_0 = (RuleCall)cOwnedRelationshipAssignment_8_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cOwnedRelationshipEntryTransitionMemberParserRuleCall_8_1_0 = (RuleCall)cOwnedRelationshipAssignment_8_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final RuleCall cOwnedRelationshipDoActionMemberParserRuleCall_9_0 = (RuleCall)cOwnedRelationshipAssignment_9.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final RuleCall cOwnedRelationshipExitActionMemberParserRuleCall_10_0 = (RuleCall)cOwnedRelationshipAssignment_10.eContents().get(0);
		
		//fragment StateBodyItem returns SysML::Type :
		//      ownedRelationship += Import
		//    | ownedRelationship += AliasMember
		//    | ownedRelationship += DefinitionMember
		//    | ownedRelationship += VariantUsageMember
		//    | ownedRelationship += NonOccurrenceUsageMember
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += StructureUsageMember
		//    | ( ownedRelationship += EmptySuccessionMember )?
		//      ownedRelationship += BehaviorUsageMember
		//      ( ownedRelationship += TargetTransitionUsageMember )*
		//    | ownedRelationship += TransitionUsageMember
		//    | ownedRelationship += EntryActionMember
		//      ( ownedRelationship += EntryTransitionMember )*
		//    | ownedRelationship += DoActionMember
		//    | ownedRelationship += ExitActionMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += Import
		//| ownedRelationship += AliasMember
		//| ownedRelationship += DefinitionMember
		//| ownedRelationship += VariantUsageMember
		//| ownedRelationship += NonOccurrenceUsageMember
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += StructureUsageMember
		//| ( ownedRelationship += EmptySuccessionMember )?
		//  ownedRelationship += BehaviorUsageMember
		//  ( ownedRelationship += TargetTransitionUsageMember )*
		//| ownedRelationship += TransitionUsageMember
		//| ownedRelationship += EntryActionMember
		//  ( ownedRelationship += EntryTransitionMember )*
		//| ownedRelationship += DoActionMember
		//| ownedRelationship += ExitActionMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += Import
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//Import
		public RuleCall getOwnedRelationshipImportParserRuleCall_0_0() { return cOwnedRelationshipImportParserRuleCall_0_0; }
		
		//ownedRelationship += AliasMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//AliasMember
		public RuleCall getOwnedRelationshipAliasMemberParserRuleCall_1_0() { return cOwnedRelationshipAliasMemberParserRuleCall_1_0; }
		
		//ownedRelationship += DefinitionMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//DefinitionMember
		public RuleCall getOwnedRelationshipDefinitionMemberParserRuleCall_2_0() { return cOwnedRelationshipDefinitionMemberParserRuleCall_2_0; }
		
		//ownedRelationship += VariantUsageMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//VariantUsageMember
		public RuleCall getOwnedRelationshipVariantUsageMemberParserRuleCall_3_0() { return cOwnedRelationshipVariantUsageMemberParserRuleCall_3_0; }
		
		//ownedRelationship += NonOccurrenceUsageMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//NonOccurrenceUsageMember
		public RuleCall getOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_4_0() { return cOwnedRelationshipNonOccurrenceUsageMemberParserRuleCall_4_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += StructureUsageMember
		public Group getGroup_5() { return cGroup_5; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_5_0() { return cOwnedRelationshipAssignment_5_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_5_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_5_0_0; }
		
		//ownedRelationship += StructureUsageMember
		public Assignment getOwnedRelationshipAssignment_5_1() { return cOwnedRelationshipAssignment_5_1; }
		
		//StructureUsageMember
		public RuleCall getOwnedRelationshipStructureUsageMemberParserRuleCall_5_1_0() { return cOwnedRelationshipStructureUsageMemberParserRuleCall_5_1_0; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		//     ownedRelationship += BehaviorUsageMember
		//     ( ownedRelationship += TargetTransitionUsageMember )*
		public Group getGroup_6() { return cGroup_6; }
		
		//( ownedRelationship += EmptySuccessionMember )?
		public Assignment getOwnedRelationshipAssignment_6_0() { return cOwnedRelationshipAssignment_6_0; }
		
		//EmptySuccessionMember
		public RuleCall getOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0() { return cOwnedRelationshipEmptySuccessionMemberParserRuleCall_6_0_0; }
		
		//ownedRelationship += BehaviorUsageMember
		public Assignment getOwnedRelationshipAssignment_6_1() { return cOwnedRelationshipAssignment_6_1; }
		
		//BehaviorUsageMember
		public RuleCall getOwnedRelationshipBehaviorUsageMemberParserRuleCall_6_1_0() { return cOwnedRelationshipBehaviorUsageMemberParserRuleCall_6_1_0; }
		
		//( ownedRelationship += TargetTransitionUsageMember )*
		public Assignment getOwnedRelationshipAssignment_6_2() { return cOwnedRelationshipAssignment_6_2; }
		
		//TargetTransitionUsageMember
		public RuleCall getOwnedRelationshipTargetTransitionUsageMemberParserRuleCall_6_2_0() { return cOwnedRelationshipTargetTransitionUsageMemberParserRuleCall_6_2_0; }
		
		//ownedRelationship += TransitionUsageMember
		public Assignment getOwnedRelationshipAssignment_7() { return cOwnedRelationshipAssignment_7; }
		
		//TransitionUsageMember
		public RuleCall getOwnedRelationshipTransitionUsageMemberParserRuleCall_7_0() { return cOwnedRelationshipTransitionUsageMemberParserRuleCall_7_0; }
		
		//ownedRelationship += EntryActionMember
		//     ( ownedRelationship += EntryTransitionMember )*
		public Group getGroup_8() { return cGroup_8; }
		
		//ownedRelationship += EntryActionMember
		public Assignment getOwnedRelationshipAssignment_8_0() { return cOwnedRelationshipAssignment_8_0; }
		
		//EntryActionMember
		public RuleCall getOwnedRelationshipEntryActionMemberParserRuleCall_8_0_0() { return cOwnedRelationshipEntryActionMemberParserRuleCall_8_0_0; }
		
		//( ownedRelationship += EntryTransitionMember )*
		public Assignment getOwnedRelationshipAssignment_8_1() { return cOwnedRelationshipAssignment_8_1; }
		
		//EntryTransitionMember
		public RuleCall getOwnedRelationshipEntryTransitionMemberParserRuleCall_8_1_0() { return cOwnedRelationshipEntryTransitionMemberParserRuleCall_8_1_0; }
		
		//ownedRelationship += DoActionMember
		public Assignment getOwnedRelationshipAssignment_9() { return cOwnedRelationshipAssignment_9; }
		
		//DoActionMember
		public RuleCall getOwnedRelationshipDoActionMemberParserRuleCall_9_0() { return cOwnedRelationshipDoActionMemberParserRuleCall_9_0; }
		
		//ownedRelationship += ExitActionMember
		public Assignment getOwnedRelationshipAssignment_10() { return cOwnedRelationshipAssignment_10; }
		
		//ExitActionMember
		public RuleCall getOwnedRelationshipExitActionMemberParserRuleCall_10_0() { return cOwnedRelationshipExitActionMemberParserRuleCall_10_0; }
	}
	public class EntryActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EntryActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindEntryActionKindParserRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementStateActionUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//EntryActionMember returns SysML::StateSubactionMembership :
		//    MemberPrefix kind = EntryActionKind ownedRelatedElement += StateActionUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix kind = EntryActionKind ownedRelatedElement += StateActionUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//kind = EntryActionKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//EntryActionKind
		public RuleCall getKindEntryActionKindParserRuleCall_1_0() { return cKindEntryActionKindParserRuleCall_1_0; }
		
		//ownedRelatedElement += StateActionUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//StateActionUsage
		public RuleCall getOwnedRelatedElementStateActionUsageParserRuleCall_2_0() { return cOwnedRelatedElementStateActionUsageParserRuleCall_2_0; }
	}
	public class EntryActionKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EntryActionKind");
		private final Keyword cEntryKeyword = (Keyword)rule.eContents().get(1);
		
		//EntryActionKind returns SysML::StateSubactionKind :
		//    'entry'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'entry'
		public Keyword getEntryKeyword() { return cEntryKeyword; }
	}
	public class DoActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DoActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindDoActionKindParserRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementStateActionUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//DoActionMember returns SysML::StateSubactionMembership :
		//    MemberPrefix kind = DoActionKind ownedRelatedElement += StateActionUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix kind = DoActionKind ownedRelatedElement += StateActionUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//kind = DoActionKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//DoActionKind
		public RuleCall getKindDoActionKindParserRuleCall_1_0() { return cKindDoActionKindParserRuleCall_1_0; }
		
		//ownedRelatedElement += StateActionUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//StateActionUsage
		public RuleCall getOwnedRelatedElementStateActionUsageParserRuleCall_2_0() { return cOwnedRelatedElementStateActionUsageParserRuleCall_2_0; }
	}
	public class DoActionKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.DoActionKind");
		private final Keyword cDoKeyword = (Keyword)rule.eContents().get(1);
		
		//DoActionKind returns SysML::StateSubactionKind :
		//    'do'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'do'
		public Keyword getDoKeyword() { return cDoKeyword; }
	}
	public class ExitActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExitActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindExitActionKindParserRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementStateActionUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//ExitActionMember returns SysML::StateSubactionMembership :
		//    MemberPrefix kind = ExitActionKind ownedRelatedElement += StateActionUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix kind = ExitActionKind ownedRelatedElement += StateActionUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//kind = ExitActionKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//ExitActionKind
		public RuleCall getKindExitActionKindParserRuleCall_1_0() { return cKindExitActionKindParserRuleCall_1_0; }
		
		//ownedRelatedElement += StateActionUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//StateActionUsage
		public RuleCall getOwnedRelatedElementStateActionUsageParserRuleCall_2_0() { return cOwnedRelatedElementStateActionUsageParserRuleCall_2_0; }
	}
	public class ExitActionKindElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExitActionKind");
		private final Keyword cExitKeyword = (Keyword)rule.eContents().get(1);
		
		//ExitActionKind returns SysML::StateSubactionKind :
		//    'exit'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'exit'
		public Keyword getExitKeyword() { return cExitKeyword; }
	}
	public class EntryTransitionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EntryTransitionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cOwnedRelatedElementGuardedTargetSuccessionParserRuleCall_1_0_0 = (RuleCall)cOwnedRelatedElementAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cThenKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTransitionSuccessionParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//EntryTransitionMember returns SysML::FeatureMembership :
		//    MemberPrefix
		//    ( ownedRelatedElement += GuardedTargetSuccession
		//    | 'then' ownedRelatedElement += TransitionSuccession
		//    ) ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix
		//( ownedRelatedElement += GuardedTargetSuccession
		//| 'then' ownedRelatedElement += TransitionSuccession
		//) ';'
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//( ownedRelatedElement += GuardedTargetSuccession
		//| 'then' ownedRelatedElement += TransitionSuccession
		//)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ownedRelatedElement += GuardedTargetSuccession
		public Assignment getOwnedRelatedElementAssignment_1_0() { return cOwnedRelatedElementAssignment_1_0; }
		
		//GuardedTargetSuccession
		public RuleCall getOwnedRelatedElementGuardedTargetSuccessionParserRuleCall_1_0_0() { return cOwnedRelatedElementGuardedTargetSuccessionParserRuleCall_1_0_0; }
		
		//'then' ownedRelatedElement += TransitionSuccession
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'then'
		public Keyword getThenKeyword_1_1_0() { return cThenKeyword_1_1_0; }
		
		//ownedRelatedElement += TransitionSuccession
		public Assignment getOwnedRelatedElementAssignment_1_1_1() { return cOwnedRelatedElementAssignment_1_1_1; }
		
		//TransitionSuccession
		public RuleCall getOwnedRelatedElementTransitionSuccessionParserRuleCall_1_1_1_0() { return cOwnedRelatedElementTransitionSuccessionParserRuleCall_1_1_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class StateActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateActionUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cEmptyActionUsageParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cPerformedActionUsageParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cActionBodyParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//StateActionUsage returns SysML::ActionUsage :
		//    EmptyActionUsage ';' | PerformedActionUsage ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EmptyActionUsage ';' | PerformedActionUsage ActionBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EmptyActionUsage ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//EmptyActionUsage
		public RuleCall getEmptyActionUsageParserRuleCall_0_0() { return cEmptyActionUsageParserRuleCall_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_0_1() { return cSemicolonKeyword_0_1; }
		
		//PerformedActionUsage ActionBody
		public Group getGroup_1() { return cGroup_1; }
		
		//PerformedActionUsage
		public RuleCall getPerformedActionUsageParserRuleCall_1_0() { return cPerformedActionUsageParserRuleCall_1_0; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_1_1() { return cActionBodyParserRuleCall_1_1; }
	}
	public class EmptyActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EmptyActionUsage");
		private final Action cActionUsageAction = (Action)rule.eContents().get(1);
		
		//EmptyActionUsage returns SysML::ActionUsage :
		//    {SysML::ActionUsage}
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SysML::ActionUsage}
		public Action getActionUsageAction() { return cActionUsageAction; }
	}
	public class PerformedActionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PerformedActionUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cPerformActionUsageAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final RuleCall cPerformActionUsageDeclarationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cAcceptActionUsageAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final RuleCall cAcceptNodeDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cSendActionUsageAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final RuleCall cSendNodeDeclarationParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cAssignmentActionUsageAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final RuleCall cAssignmentNodeDeclarationParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		
		//PerformedActionUsage returns SysML::ActionUsage :
		//      {SysML::PerformActionUsage} PerformActionUsageDeclaration
		//    | {SysML::AcceptActionUsage} AcceptNodeDeclaration
		//    | {SysML::SendActionUsage} SendNodeDeclaration
		//    | {SysML::AssignmentActionUsage} AssignmentNodeDeclaration
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  {SysML::PerformActionUsage} PerformActionUsageDeclaration
		//| {SysML::AcceptActionUsage} AcceptNodeDeclaration
		//| {SysML::SendActionUsage} SendNodeDeclaration
		//| {SysML::AssignmentActionUsage} AssignmentNodeDeclaration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{SysML::PerformActionUsage} PerformActionUsageDeclaration
		public Group getGroup_0() { return cGroup_0; }
		
		//{SysML::PerformActionUsage}
		public Action getPerformActionUsageAction_0_0() { return cPerformActionUsageAction_0_0; }
		
		//PerformActionUsageDeclaration
		public RuleCall getPerformActionUsageDeclarationParserRuleCall_0_1() { return cPerformActionUsageDeclarationParserRuleCall_0_1; }
		
		//{SysML::AcceptActionUsage} AcceptNodeDeclaration
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::AcceptActionUsage}
		public Action getAcceptActionUsageAction_1_0() { return cAcceptActionUsageAction_1_0; }
		
		//AcceptNodeDeclaration
		public RuleCall getAcceptNodeDeclarationParserRuleCall_1_1() { return cAcceptNodeDeclarationParserRuleCall_1_1; }
		
		//{SysML::SendActionUsage} SendNodeDeclaration
		public Group getGroup_2() { return cGroup_2; }
		
		//{SysML::SendActionUsage}
		public Action getSendActionUsageAction_2_0() { return cSendActionUsageAction_2_0; }
		
		//SendNodeDeclaration
		public RuleCall getSendNodeDeclarationParserRuleCall_2_1() { return cSendNodeDeclarationParserRuleCall_2_1; }
		
		//{SysML::AssignmentActionUsage} AssignmentNodeDeclaration
		public Group getGroup_3() { return cGroup_3; }
		
		//{SysML::AssignmentActionUsage}
		public Action getAssignmentActionUsageAction_3_0() { return cAssignmentActionUsageAction_3_0; }
		
		//AssignmentNodeDeclaration
		public RuleCall getAssignmentNodeDeclarationParserRuleCall_3_1() { return cAssignmentNodeDeclarationParserRuleCall_3_1; }
	}
	public class TransitionUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTransitionUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//TransitionUsageMember returns SysML::FeatureMembership :
		//    MemberPrefix ownedRelatedElement += TransitionUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += TransitionUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += TransitionUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//TransitionUsage
		public RuleCall getOwnedRelatedElementTransitionUsageParserRuleCall_1_0() { return cOwnedRelatedElementTransitionUsageParserRuleCall_1_0; }
	}
	public class TargetTransitionUsageMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetTransitionUsageMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTargetTransitionUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//TargetTransitionUsageMember returns SysML::FeatureMembership :
		//    MemberPrefix ownedRelatedElement += TargetTransitionUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += TargetTransitionUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += TargetTransitionUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//TargetTransitionUsage
		public RuleCall getOwnedRelatedElementTargetTransitionUsageParserRuleCall_1_0() { return cOwnedRelatedElementTargetTransitionUsageParserRuleCall_1_0; }
	}
	public class StateUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateUsageKeyword");
		private final RuleCall cStateKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* State Usages */
		//StateUsageKeyword :
		//    StateKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StateKeyword
		public RuleCall getStateKeywordParserRuleCall() { return cStateKeywordParserRuleCall; }
	}
	public class StateUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cStateUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cStateUsageBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//StateUsage returns SysML::StateUsage :
		//    OccurrenceUsagePrefix StateUsageKeyword ActionUsageDeclaration StateUsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix StateUsageKeyword ActionUsageDeclaration StateUsageBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_1() { return cStateUsageKeywordParserRuleCall_1; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//StateUsageBody
		public RuleCall getStateUsageBodyParserRuleCall_3() { return cStateUsageBodyParserRuleCall_3; }
	}
	public class StateUsageBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StateUsageBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cIsParallelAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cIsParallelParallelKeyword_1_0_0 = (Keyword)cIsParallelAssignment_1_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final RuleCall cStateBodyPartParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment StateUsageBody returns SysML::StateUsage :
		//    ';' | ( isParallel ?= 'parallel' )? '{' StateBodyPart '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | ( isParallel ?= 'parallel' )? '{' StateBodyPart '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//( isParallel ?= 'parallel' )? '{' StateBodyPart '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//( isParallel ?= 'parallel' )?
		public Assignment getIsParallelAssignment_1_0() { return cIsParallelAssignment_1_0; }
		
		//'parallel'
		public Keyword getIsParallelParallelKeyword_1_0_0() { return cIsParallelParallelKeyword_1_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_1() { return cLeftCurlyBracketKeyword_1_1; }
		
		//StateBodyPart
		public RuleCall getStateBodyPartParserRuleCall_1_2() { return cStateBodyPartParserRuleCall_1_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class ExhibitStateUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExhibitStateUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cExhibitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_2_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_2_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final RuleCall cStateUsageKeywordParserRuleCall_2_1_0 = (RuleCall)cGroup_2_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2_1_1 = (RuleCall)cGroup_2_1.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cStateUsageBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ExhibitStateUsage returns SysML::ExhibitStateUsage :
		//    OccurrenceUsagePrefix 'exhibit'
		//    ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//    | StateUsageKeyword UsageDeclaration?
		//    )
		//    ValuePart? StateUsageBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix 'exhibit'
		//( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//| StateUsageKeyword UsageDeclaration?
		//)
		//ValuePart? StateUsageBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//'exhibit'
		public Keyword getExhibitKeyword_1() { return cExhibitKeyword_1; }
		
		//( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//| StateUsageKeyword UsageDeclaration?
		//)
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_2_0_0() { return cOwnedRelationshipAssignment_2_0_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_2_0_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_2_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_2_0_1() { return cFeatureSpecializationPartParserRuleCall_2_0_1; }
		
		//StateUsageKeyword UsageDeclaration?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//StateUsageKeyword
		public RuleCall getStateUsageKeywordParserRuleCall_2_1_0() { return cStateUsageKeywordParserRuleCall_2_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2_1_1() { return cUsageDeclarationParserRuleCall_2_1_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_3() { return cValuePartParserRuleCall_3; }
		
		//StateUsageBody
		public RuleCall getStateUsageBodyParserRuleCall_4() { return cStateUsageBodyParserRuleCall_4; }
	}
	public class TransitionUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionUsageKeyword");
		private final Keyword cTransitionKeyword = (Keyword)rule.eContents().get(1);
		
		///* Transition Usages */
		//TransitionUsageKeyword :
		//    'transition'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'transition'
		public Keyword getTransitionKeyword() { return cTransitionKeyword; }
	}
	public class TransitionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTransitionUsageKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cFirstKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cOwnedRelationshipAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_4_0_0 = (RuleCall)cOwnedRelationshipAssignment_4_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOwnedRelationshipTriggerActionMemberParserRuleCall_4_1_0 = (RuleCall)cOwnedRelationshipAssignment_4_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOwnedRelationshipGuardExpressionMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOwnedRelationshipEffectBehaviorMemberParserRuleCall_6_0 = (RuleCall)cOwnedRelationshipAssignment_6.eContents().get(0);
		private final Keyword cThenKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cOwnedRelationshipAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_8_0 = (RuleCall)cOwnedRelationshipAssignment_8.eContents().get(0);
		private final RuleCall cActionBodyParserRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		
		//TransitionUsage returns SysML::TransitionUsage :
		//    TransitionUsageKeyword ( UsageDeclaration? 'first' )?
		//    ownedRelationship += TransitionSourceMember
		//    ownedRelationship += EmptyParameterMember
		//    ( ownedRelationship += EmptyParameterMember
		//      ownedRelationship += TriggerActionMember )?
		//    ( ownedRelationship += GuardExpressionMember )?
		//    ( ownedRelationship += EffectBehaviorMember )?
		//    'then' ownedRelationship += TransitionSuccessionMember
		//    ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//TransitionUsageKeyword ( UsageDeclaration? 'first' )?
		//ownedRelationship += TransitionSourceMember
		//ownedRelationship += EmptyParameterMember
		//( ownedRelationship += EmptyParameterMember
		//  ownedRelationship += TriggerActionMember )?
		//( ownedRelationship += GuardExpressionMember )?
		//( ownedRelationship += EffectBehaviorMember )?
		//'then' ownedRelationship += TransitionSuccessionMember
		//ActionBody
		public Group getGroup() { return cGroup; }
		
		//TransitionUsageKeyword
		public RuleCall getTransitionUsageKeywordParserRuleCall_0() { return cTransitionUsageKeywordParserRuleCall_0; }
		
		//( UsageDeclaration? 'first' )?
		public Group getGroup_1() { return cGroup_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_1_0() { return cUsageDeclarationParserRuleCall_1_0; }
		
		//'first'
		public Keyword getFirstKeyword_1_1() { return cFirstKeyword_1_1; }
		
		//ownedRelationship += TransitionSourceMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//TransitionSourceMember
		public RuleCall getOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0() { return cOwnedRelationshipTransitionSourceMemberParserRuleCall_2_0; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_3_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_3_0; }
		
		//( ownedRelationship += EmptyParameterMember
		//  ownedRelationship += TriggerActionMember )?
		public Group getGroup_4() { return cGroup_4; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_4_0() { return cOwnedRelationshipAssignment_4_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_4_0_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_4_0_0; }
		
		//ownedRelationship += TriggerActionMember
		public Assignment getOwnedRelationshipAssignment_4_1() { return cOwnedRelationshipAssignment_4_1; }
		
		//TriggerActionMember
		public RuleCall getOwnedRelationshipTriggerActionMemberParserRuleCall_4_1_0() { return cOwnedRelationshipTriggerActionMemberParserRuleCall_4_1_0; }
		
		//( ownedRelationship += GuardExpressionMember )?
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//GuardExpressionMember
		public RuleCall getOwnedRelationshipGuardExpressionMemberParserRuleCall_5_0() { return cOwnedRelationshipGuardExpressionMemberParserRuleCall_5_0; }
		
		//( ownedRelationship += EffectBehaviorMember )?
		public Assignment getOwnedRelationshipAssignment_6() { return cOwnedRelationshipAssignment_6; }
		
		//EffectBehaviorMember
		public RuleCall getOwnedRelationshipEffectBehaviorMemberParserRuleCall_6_0() { return cOwnedRelationshipEffectBehaviorMemberParserRuleCall_6_0; }
		
		//'then'
		public Keyword getThenKeyword_7() { return cThenKeyword_7; }
		
		//ownedRelationship += TransitionSuccessionMember
		public Assignment getOwnedRelationshipAssignment_8() { return cOwnedRelationshipAssignment_8; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedRelationshipTransitionSuccessionMemberParserRuleCall_8_0() { return cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_8_0; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_9() { return cActionBodyParserRuleCall_9; }
	}
	public class TargetTransitionUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TargetTransitionUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final RuleCall cTransitionUsageKeywordParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final Group cGroup_1_0_1 = (Group)cGroup_1_0.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_0_1_0 = (Assignment)cGroup_1_0_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_1_0_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_0_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_0_1_1 = (Assignment)cGroup_1_0_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipTriggerActionMemberParserRuleCall_1_0_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_0_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_0_2 = (Assignment)cGroup_1_0.eContents().get(2);
		private final RuleCall cOwnedRelationshipGuardExpressionMemberParserRuleCall_1_0_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_0_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_0_3 = (Assignment)cGroup_1_0.eContents().get(3);
		private final RuleCall cOwnedRelationshipEffectBehaviorMemberParserRuleCall_1_0_3_0 = (RuleCall)cOwnedRelationshipAssignment_1_0_3.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cOwnedRelationshipTriggerActionMemberParserRuleCall_1_1_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipGuardExpressionMemberParserRuleCall_1_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cOwnedRelationshipEffectBehaviorMemberParserRuleCall_1_1_3_0 = (RuleCall)cOwnedRelationshipAssignment_1_1_3.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_1_2_0 = (Assignment)cGroup_1_2.eContents().get(0);
		private final RuleCall cOwnedRelationshipGuardExpressionMemberParserRuleCall_1_2_0_0 = (RuleCall)cOwnedRelationshipAssignment_1_2_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cOwnedRelationshipEffectBehaviorMemberParserRuleCall_1_2_1_0 = (RuleCall)cOwnedRelationshipAssignment_1_2_1.eContents().get(0);
		private final Keyword cThenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final RuleCall cActionBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//TargetTransitionUsage returns SysML::TransitionUsage :
		//    ownedRelationship += EmptyParameterMember
		//    ( TransitionUsageKeyword
		//      ( ownedRelationship += EmptyParameterMember
		//        ownedRelationship += TriggerActionMember )?
		//      ( ownedRelationship += GuardExpressionMember )?
		//      ( ownedRelationship += EffectBehaviorMember )?
		//    | ownedRelationship += EmptyParameterMember
		//      ownedRelationship += TriggerActionMember
		//      ( ownedRelationship += GuardExpressionMember )?
		//      ( ownedRelationship += EffectBehaviorMember )?
		//    | ownedRelationship += GuardExpressionMember
		//      ( ownedRelationship += EffectBehaviorMember )?
		//    )?
		//    'then' ownedRelationship += TransitionSuccessionMember
		//    ActionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += EmptyParameterMember
		//( TransitionUsageKeyword
		//  ( ownedRelationship += EmptyParameterMember
		//    ownedRelationship += TriggerActionMember )?
		//  ( ownedRelationship += GuardExpressionMember )?
		//  ( ownedRelationship += EffectBehaviorMember )?
		//| ownedRelationship += EmptyParameterMember
		//  ownedRelationship += TriggerActionMember
		//  ( ownedRelationship += GuardExpressionMember )?
		//  ( ownedRelationship += EffectBehaviorMember )?
		//| ownedRelationship += GuardExpressionMember
		//  ( ownedRelationship += EffectBehaviorMember )?
		//)?
		//'then' ownedRelationship += TransitionSuccessionMember
		//ActionBody
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_0_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_0_0; }
		
		//( TransitionUsageKeyword
		//  ( ownedRelationship += EmptyParameterMember
		//    ownedRelationship += TriggerActionMember )?
		//  ( ownedRelationship += GuardExpressionMember )?
		//  ( ownedRelationship += EffectBehaviorMember )?
		//| ownedRelationship += EmptyParameterMember
		//  ownedRelationship += TriggerActionMember
		//  ( ownedRelationship += GuardExpressionMember )?
		//  ( ownedRelationship += EffectBehaviorMember )?
		//| ownedRelationship += GuardExpressionMember
		//  ( ownedRelationship += EffectBehaviorMember )?
		//)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//TransitionUsageKeyword
		//     ( ownedRelationship += EmptyParameterMember
		//       ownedRelationship += TriggerActionMember )?
		//     ( ownedRelationship += GuardExpressionMember )?
		//     ( ownedRelationship += EffectBehaviorMember )?
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//TransitionUsageKeyword
		public RuleCall getTransitionUsageKeywordParserRuleCall_1_0_0() { return cTransitionUsageKeywordParserRuleCall_1_0_0; }
		
		//( ownedRelationship += EmptyParameterMember
		//  ownedRelationship += TriggerActionMember )?
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_1_0_1_0() { return cOwnedRelationshipAssignment_1_0_1_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_1_0_1_0_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_1_0_1_0_0; }
		
		//ownedRelationship += TriggerActionMember
		public Assignment getOwnedRelationshipAssignment_1_0_1_1() { return cOwnedRelationshipAssignment_1_0_1_1; }
		
		//TriggerActionMember
		public RuleCall getOwnedRelationshipTriggerActionMemberParserRuleCall_1_0_1_1_0() { return cOwnedRelationshipTriggerActionMemberParserRuleCall_1_0_1_1_0; }
		
		//( ownedRelationship += GuardExpressionMember )?
		public Assignment getOwnedRelationshipAssignment_1_0_2() { return cOwnedRelationshipAssignment_1_0_2; }
		
		//GuardExpressionMember
		public RuleCall getOwnedRelationshipGuardExpressionMemberParserRuleCall_1_0_2_0() { return cOwnedRelationshipGuardExpressionMemberParserRuleCall_1_0_2_0; }
		
		//( ownedRelationship += EffectBehaviorMember )?
		public Assignment getOwnedRelationshipAssignment_1_0_3() { return cOwnedRelationshipAssignment_1_0_3; }
		
		//EffectBehaviorMember
		public RuleCall getOwnedRelationshipEffectBehaviorMemberParserRuleCall_1_0_3_0() { return cOwnedRelationshipEffectBehaviorMemberParserRuleCall_1_0_3_0; }
		
		//ownedRelationship += EmptyParameterMember
		//     ownedRelationship += TriggerActionMember
		//     ( ownedRelationship += GuardExpressionMember )?
		//     ( ownedRelationship += EffectBehaviorMember )?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//ownedRelationship += EmptyParameterMember
		public Assignment getOwnedRelationshipAssignment_1_1_0() { return cOwnedRelationshipAssignment_1_1_0; }
		
		//EmptyParameterMember
		public RuleCall getOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_0_0() { return cOwnedRelationshipEmptyParameterMemberParserRuleCall_1_1_0_0; }
		
		//ownedRelationship += TriggerActionMember
		public Assignment getOwnedRelationshipAssignment_1_1_1() { return cOwnedRelationshipAssignment_1_1_1; }
		
		//TriggerActionMember
		public RuleCall getOwnedRelationshipTriggerActionMemberParserRuleCall_1_1_1_0() { return cOwnedRelationshipTriggerActionMemberParserRuleCall_1_1_1_0; }
		
		//( ownedRelationship += GuardExpressionMember )?
		public Assignment getOwnedRelationshipAssignment_1_1_2() { return cOwnedRelationshipAssignment_1_1_2; }
		
		//GuardExpressionMember
		public RuleCall getOwnedRelationshipGuardExpressionMemberParserRuleCall_1_1_2_0() { return cOwnedRelationshipGuardExpressionMemberParserRuleCall_1_1_2_0; }
		
		//( ownedRelationship += EffectBehaviorMember )?
		public Assignment getOwnedRelationshipAssignment_1_1_3() { return cOwnedRelationshipAssignment_1_1_3; }
		
		//EffectBehaviorMember
		public RuleCall getOwnedRelationshipEffectBehaviorMemberParserRuleCall_1_1_3_0() { return cOwnedRelationshipEffectBehaviorMemberParserRuleCall_1_1_3_0; }
		
		//ownedRelationship += GuardExpressionMember
		//     ( ownedRelationship += EffectBehaviorMember )?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//ownedRelationship += GuardExpressionMember
		public Assignment getOwnedRelationshipAssignment_1_2_0() { return cOwnedRelationshipAssignment_1_2_0; }
		
		//GuardExpressionMember
		public RuleCall getOwnedRelationshipGuardExpressionMemberParserRuleCall_1_2_0_0() { return cOwnedRelationshipGuardExpressionMemberParserRuleCall_1_2_0_0; }
		
		//( ownedRelationship += EffectBehaviorMember )?
		public Assignment getOwnedRelationshipAssignment_1_2_1() { return cOwnedRelationshipAssignment_1_2_1; }
		
		//EffectBehaviorMember
		public RuleCall getOwnedRelationshipEffectBehaviorMemberParserRuleCall_1_2_1_0() { return cOwnedRelationshipEffectBehaviorMemberParserRuleCall_1_2_1_0; }
		
		//'then'
		public Keyword getThenKeyword_2() { return cThenKeyword_2; }
		
		//ownedRelationship += TransitionSuccessionMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//TransitionSuccessionMember
		public RuleCall getOwnedRelationshipTransitionSuccessionMemberParserRuleCall_3_0() { return cOwnedRelationshipTransitionSuccessionMemberParserRuleCall_3_0; }
		
		//ActionBody
		public RuleCall getActionBodyParserRuleCall_4() { return cActionBodyParserRuleCall_4; }
	}
	public class TransitionSourceMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSourceMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cMemberElementAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final CrossReference cMemberElementFeatureCrossReference_0_0 = (CrossReference)cMemberElementAssignment_0.eContents().get(0);
		private final RuleCall cMemberElementFeatureQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cMemberElementFeatureCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cOwningMembershipAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1.eContents().get(0);
		
		//TransitionSourceMember returns SysML::Membership :
		//      memberElement = [SysML::Feature|QualifiedName]
		//    | {SysML::OwningMembership} ownedRelatedElement += OwnedFeatureChain
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  memberElement = [SysML::Feature|QualifiedName]
		//| {SysML::OwningMembership} ownedRelatedElement += OwnedFeatureChain
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//memberElement = [SysML::Feature|QualifiedName]
		public Assignment getMemberElementAssignment_0() { return cMemberElementAssignment_0; }
		
		//[SysML::Feature|QualifiedName]
		public CrossReference getMemberElementFeatureCrossReference_0_0() { return cMemberElementFeatureCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getMemberElementFeatureQualifiedNameParserRuleCall_0_0_1() { return cMemberElementFeatureQualifiedNameParserRuleCall_0_0_1; }
		
		//{SysML::OwningMembership} ownedRelatedElement += OwnedFeatureChain
		public Group getGroup_1() { return cGroup_1; }
		
		//{SysML::OwningMembership}
		public Action getOwningMembershipAction_1_0() { return cOwningMembershipAction_1_0; }
		
		//ownedRelatedElement += OwnedFeatureChain
		public Assignment getOwnedRelatedElementAssignment_1_1() { return cOwnedRelatedElementAssignment_1_1; }
		
		//OwnedFeatureChain
		public RuleCall getOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_1_0() { return cOwnedRelatedElementOwnedFeatureChainParserRuleCall_1_1_0; }
	}
	public class TriggerActionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerActionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKindTriggerFeatureKindEnumRuleCall_0_0 = (RuleCall)cKindAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTriggerActionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//TriggerActionMember returns SysML::TransitionFeatureMembership :
		//    kind = TriggerFeatureKind ownedRelatedElement += TriggerAction
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//kind = TriggerFeatureKind ownedRelatedElement += TriggerAction
		public Group getGroup() { return cGroup; }
		
		//kind = TriggerFeatureKind
		public Assignment getKindAssignment_0() { return cKindAssignment_0; }
		
		//TriggerFeatureKind
		public RuleCall getKindTriggerFeatureKindEnumRuleCall_0_0() { return cKindTriggerFeatureKindEnumRuleCall_0_0; }
		
		//ownedRelatedElement += TriggerAction
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//TriggerAction
		public RuleCall getOwnedRelatedElementTriggerActionParserRuleCall_1_0() { return cOwnedRelatedElementTriggerActionParserRuleCall_1_0; }
	}
	public class TriggerActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerAction");
		private final RuleCall cAcceptParameterPartParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//TriggerAction returns SysML::AcceptActionUsage :
		//    AcceptParameterPart
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AcceptParameterPart
		public RuleCall getAcceptParameterPartParserRuleCall() { return cAcceptParameterPartParserRuleCall; }
	}
	public class GuardExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardExpressionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKindGuardFeatureKindEnumRuleCall_0_0 = (RuleCall)cKindAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//GuardExpressionMember returns SysML::TransitionFeatureMembership :
		//    kind = GuardFeatureKind ownedRelatedElement += OwnedExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//kind = GuardFeatureKind ownedRelatedElement += OwnedExpression
		public Group getGroup() { return cGroup; }
		
		//kind = GuardFeatureKind
		public Assignment getKindAssignment_0() { return cKindAssignment_0; }
		
		//GuardFeatureKind
		public RuleCall getKindGuardFeatureKindEnumRuleCall_0_0() { return cKindGuardFeatureKindEnumRuleCall_0_0; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0; }
	}
	public class EffectBehaviorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectBehaviorMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKindEffectFeatureKindEnumRuleCall_0_0 = (RuleCall)cKindAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementEffectBehaviorUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//EffectBehaviorMember returns SysML::TransitionFeatureMembership :
		//    kind = EffectFeatureKind ownedRelatedElement += EffectBehaviorUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//kind = EffectFeatureKind ownedRelatedElement += EffectBehaviorUsage
		public Group getGroup() { return cGroup; }
		
		//kind = EffectFeatureKind
		public Assignment getKindAssignment_0() { return cKindAssignment_0; }
		
		//EffectFeatureKind
		public RuleCall getKindEffectFeatureKindEnumRuleCall_0_0() { return cKindEffectFeatureKindEnumRuleCall_0_0; }
		
		//ownedRelatedElement += EffectBehaviorUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//EffectBehaviorUsage
		public RuleCall getOwnedRelatedElementEffectBehaviorUsageParserRuleCall_1_0() { return cOwnedRelatedElementEffectBehaviorUsageParserRuleCall_1_0; }
	}
	public class EffectBehaviorUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectBehaviorUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmptyActionUsageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cPerformedActionUsageParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cActionBodyItemParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		
		//EffectBehaviorUsage returns SysML::ActionUsage :
		//      EmptyActionUsage | PerformedActionUsage ( '{' ActionBodyItem* '}' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EmptyActionUsage | PerformedActionUsage ( '{' ActionBodyItem* '}' )?
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EmptyActionUsage
		public RuleCall getEmptyActionUsageParserRuleCall_0() { return cEmptyActionUsageParserRuleCall_0; }
		
		//PerformedActionUsage ( '{' ActionBodyItem* '}' )?
		public Group getGroup_1() { return cGroup_1; }
		
		//PerformedActionUsage
		public RuleCall getPerformedActionUsageParserRuleCall_1_0() { return cPerformedActionUsageParserRuleCall_1_0; }
		
		//( '{' ActionBodyItem* '}' )?
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_1_0() { return cLeftCurlyBracketKeyword_1_1_0; }
		
		//ActionBodyItem*
		public RuleCall getActionBodyItemParserRuleCall_1_1_1() { return cActionBodyItemParserRuleCall_1_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_1_2() { return cRightCurlyBracketKeyword_1_1_2; }
	}
	public class TransitionSuccessionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSuccessionMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementTransitionSuccessionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//TransitionSuccessionMember returns SysML::OwningMembership :
		//    ownedRelatedElement += TransitionSuccession
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += TransitionSuccession
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//TransitionSuccession
		public RuleCall getOwnedRelatedElementTransitionSuccessionParserRuleCall_0() { return cOwnedRelatedElementTransitionSuccessionParserRuleCall_0; }
	}
	public class TransitionSuccessionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TransitionSuccession");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOwnedRelationshipEmptySourceEndMemberParserRuleCall_0_0 = (RuleCall)cOwnedRelationshipAssignment_0.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//TransitionSuccession returns SysML::SuccessionAsUsage :
		//    ownedRelationship += EmptySourceEndMember
		//    ownedRelationship += ConnectorEndMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += EmptySourceEndMember
		//ownedRelationship += ConnectorEndMember
		public Group getGroup() { return cGroup; }
		
		//ownedRelationship += EmptySourceEndMember
		public Assignment getOwnedRelationshipAssignment_0() { return cOwnedRelationshipAssignment_0; }
		
		//EmptySourceEndMember
		public RuleCall getOwnedRelationshipEmptySourceEndMemberParserRuleCall_0_0() { return cOwnedRelationshipEmptySourceEndMemberParserRuleCall_0_0; }
		
		//ownedRelationship += ConnectorEndMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ConnectorEndMember
		public RuleCall getOwnedRelationshipConnectorEndMemberParserRuleCall_1_0() { return cOwnedRelationshipConnectorEndMemberParserRuleCall_1_0; }
	}
	public class CalculationKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationKeyword");
		private final Keyword cCalcKeyword = (Keyword)rule.eContents().get(1);
		
		///* CALCULATIONS */
		///* Calculation Definitions */
		//CalculationKeyword :
		//    'calc'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'calc'
		public Keyword getCalcKeyword() { return cCalcKeyword; }
	}
	public class CalculationDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCalculationKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//CalculationDefKeyword :
		//    CalculationKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//CalculationKeyword
		public RuleCall getCalculationKeywordParserRuleCall_0() { return cCalculationKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class CalculationDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCalculationDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CalculationDefinition returns SysML::CalculationDefinition :
		//    OccurrenceDefinitionPrefix CalculationDefKeyword DefinitionDeclaration
		//    CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix CalculationDefKeyword DefinitionDeclaration
		//CalculationBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//CalculationDefKeyword
		public RuleCall getCalculationDefKeywordParserRuleCall_1() { return cCalculationDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class CalculationBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCalculationBodyPartParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment CalculationBody returns SysML::Type :
		//    ';' | '{' CalculationBodyPart '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' CalculationBodyPart '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' CalculationBodyPart '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//CalculationBodyPart
		public RuleCall getCalculationBodyPartParserRuleCall_1_1() { return cCalculationBodyPartParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class CalculationBodyPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationBodyPart");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCalculationBodyItemParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelationshipResultExpressionMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment CalculationBodyPart returns SysML::Type :
		//    => CalculationBodyItem*
		//    ( ownedRelationship += ResultExpressionMember )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//=> CalculationBodyItem*
		//( ownedRelationship += ResultExpressionMember )?
		public Group getGroup() { return cGroup; }
		
		//=> CalculationBodyItem*
		public RuleCall getCalculationBodyItemParserRuleCall_0() { return cCalculationBodyItemParserRuleCall_0; }
		
		//( ownedRelationship += ResultExpressionMember )?
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ResultExpressionMember
		public RuleCall getOwnedRelationshipResultExpressionMemberParserRuleCall_1_0() { return cOwnedRelationshipResultExpressionMemberParserRuleCall_1_0; }
	}
	public class CalculationBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipReturnParameterMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		
		//fragment CalculationBodyItem returns SysML::Type :
		//      ActionBodyItem
		//    | ownedRelationship += ReturnParameterMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ActionBodyItem
		//| ownedRelationship += ReturnParameterMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ActionBodyItem
		public RuleCall getActionBodyItemParserRuleCall_0() { return cActionBodyItemParserRuleCall_0; }
		
		//ownedRelationship += ReturnParameterMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ReturnParameterMember
		public RuleCall getOwnedRelationshipReturnParameterMemberParserRuleCall_1_0() { return cOwnedRelationshipReturnParameterMemberParserRuleCall_1_0; }
	}
	public class ReturnParameterMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ReturnParameterMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cReturnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementUsageElementParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//ReturnParameterMember returns SysML::ReturnParameterMembership :
		//    MemberPrefix 'return'
		//    ownedRelatedElement += UsageElement
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix 'return'
		//ownedRelatedElement += UsageElement
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//'return'
		public Keyword getReturnKeyword_1() { return cReturnKeyword_1; }
		
		//ownedRelatedElement += UsageElement
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//UsageElement
		public RuleCall getOwnedRelatedElementUsageElementParserRuleCall_2_0() { return cOwnedRelatedElementUsageElementParserRuleCall_2_0; }
	}
	public class ResultExpressionMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ResultExpressionMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//@Override
		//ResultExpressionMember returns SysML::ResultExpressionMembership :
		//    MemberPrefix ownedRelatedElement += OwnedExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += OwnedExpression
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += OwnedExpression
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//OwnedExpression
		public RuleCall getOwnedRelatedElementOwnedExpressionParserRuleCall_1_0() { return cOwnedRelatedElementOwnedExpressionParserRuleCall_1_0; }
	}
	public class CalculationUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationUsageKeyword");
		private final RuleCall cCalculationKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Calculation Usages */
		//CalculationUsageKeyword :
		//    CalculationKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationKeyword
		public RuleCall getCalculationKeywordParserRuleCall() { return cCalculationKeywordParserRuleCall; }
	}
	public class CalculationUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CalculationUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCalculationUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CalculationUsage returns SysML::CalculationUsage :
		//    OccurrenceUsagePrefix CalculationUsageKeyword ActionUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix CalculationUsageKeyword ActionUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//CalculationUsageKeyword
		public RuleCall getCalculationUsageKeywordParserRuleCall_1() { return cCalculationUsageKeywordParserRuleCall_1; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class ConstraintKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintKeyword");
		private final Keyword cConstraintKeyword = (Keyword)rule.eContents().get(1);
		
		///* CONSTRAINTS */
		///* Constraint Definitions */
		//ConstraintKeyword :
		//    'constraint'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'constraint'
		public Keyword getConstraintKeyword() { return cConstraintKeyword; }
	}
	public class ConstraintDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConstraintKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ConstraintDefKeyword :
		//    ConstraintKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConstraintKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ConstraintKeyword
		public RuleCall getConstraintKeywordParserRuleCall_0() { return cConstraintKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ConstraintDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConstraintDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConstraintDefinition returns SysML::ConstraintDefinition :
		//    OccurrenceDefinitionPrefix ConstraintDefKeyword DefinitionDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ConstraintDefKeyword DefinitionDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ConstraintDefKeyword
		public RuleCall getConstraintDefKeywordParserRuleCall_1() { return cConstraintDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class ConstraintUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintUsageKeyword");
		private final RuleCall cConstraintKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Constraint Usages */
		//ConstraintUsageKeyword :
		//    ConstraintKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConstraintKeyword
		public RuleCall getConstraintKeywordParserRuleCall() { return cConstraintKeywordParserRuleCall; }
	}
	public class ConstraintUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCalculationBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConstraintUsage returns SysML::ConstraintUsage :
		//    OccurrenceUsagePrefix ConstraintUsageKeyword ConstraintUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix ConstraintUsageKeyword ConstraintUsageDeclaration CalculationBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_1() { return cConstraintUsageKeywordParserRuleCall_1; }
		
		//ConstraintUsageDeclaration
		public RuleCall getConstraintUsageDeclarationParserRuleCall_2() { return cConstraintUsageDeclarationParserRuleCall_2; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_3() { return cCalculationBodyParserRuleCall_3; }
	}
	public class AssertConstraintUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AssertConstraintUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAssertKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIsNegatedAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsNegatedNotKeyword_2_0 = (Keyword)cIsNegatedAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_3_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_3_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cConstraintUsageDeclarationParserRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final RuleCall cCalculationBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//AssertConstraintUsage returns SysML::AssertConstraintUsage :
		//    OccurrenceUsagePrefix 'assert' ( isNegated ?= 'not' )?
		//    ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//    | ConstraintUsageKeyword ConstraintUsageDeclaration
		//    )
		//    CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix 'assert' ( isNegated ?= 'not' )?
		//( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//| ConstraintUsageKeyword ConstraintUsageDeclaration
		//)
		//CalculationBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//'assert'
		public Keyword getAssertKeyword_1() { return cAssertKeyword_1; }
		
		//( isNegated ?= 'not' )?
		public Assignment getIsNegatedAssignment_2() { return cIsNegatedAssignment_2; }
		
		//'not'
		public Keyword getIsNegatedNotKeyword_2_0() { return cIsNegatedNotKeyword_2_0; }
		
		//( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//| ConstraintUsageKeyword ConstraintUsageDeclaration
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_3_0_0() { return cOwnedRelationshipAssignment_3_0_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_3_0_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_3_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_3_0_1() { return cFeatureSpecializationPartParserRuleCall_3_0_1; }
		
		//ConstraintUsageKeyword ConstraintUsageDeclaration
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_3_1_0() { return cConstraintUsageKeywordParserRuleCall_3_1_0; }
		
		//ConstraintUsageDeclaration
		public RuleCall getConstraintUsageDeclarationParserRuleCall_3_1_1() { return cConstraintUsageDeclarationParserRuleCall_3_1_1; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_4() { return cCalculationBodyParserRuleCall_4; }
	}
	public class ConstraintUsageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConstraintUsageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cValuePartParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//fragment ConstraintUsageDeclaration returns SysML::ConstraintUsage :
		//      UsageDeclaration? ValuePart?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageDeclaration? ValuePart?
		public Group getGroup() { return cGroup; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_0() { return cUsageDeclarationParserRuleCall_0; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_1() { return cValuePartParserRuleCall_1; }
	}
	public class RequirementKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementKeyword");
		private final Keyword cRequirementKeyword = (Keyword)rule.eContents().get(1);
		
		///* REQUIREMENTS */
		///* Requirement Definitions */
		//RequirementKeyword :
		//    'requirement'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'requirement'
		public Keyword getRequirementKeyword() { return cRequirementKeyword; }
	}
	public class RequirementDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRequirementKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//RequirementDefKeyword :
		//    RequirementKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RequirementKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//RequirementKeyword
		public RuleCall getRequirementKeywordParserRuleCall_0() { return cRequirementKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class RequirementDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRequirementDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//RequirementDefinition returns SysML::RequirementDefinition :
		//    OccurrenceDefinitionPrefix RequirementDefKeyword DefinitionDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix RequirementDefKeyword DefinitionDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//RequirementDefKeyword
		public RuleCall getRequirementDefKeywordParserRuleCall_1() { return cRequirementDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class RequirementBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cRequirementBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment RequirementBody returns SysML::Type :
		//      ';' | '{' => RequirementBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' => RequirementBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => RequirementBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> RequirementBodyItem*
		public RuleCall getRequirementBodyItemParserRuleCall_1_1() { return cRequirementBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class RequirementBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefinitionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipSubjectMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipRequirementConstraintMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipFramedConcernMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOwnedRelationshipRequirementVerificationMemberParserRuleCall_4_0 = (RuleCall)cOwnedRelationshipAssignment_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cOwnedRelationshipActorMemberParserRuleCall_5_0 = (RuleCall)cOwnedRelationshipAssignment_5.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cOwnedRelationshipStakeholderMemberParserRuleCall_6_0 = (RuleCall)cOwnedRelationshipAssignment_6.eContents().get(0);
		
		//fragment RequirementBodyItem returns SysML::Type :
		//      DefinitionBodyItem
		//    | ownedRelationship += SubjectMember
		//    | ownedRelationship += RequirementConstraintMember
		//    | ownedRelationship += FramedConcernMember
		//    | ownedRelationship += RequirementVerificationMember
		//    | ownedRelationship += ActorMember
		//    | ownedRelationship += StakeholderMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  DefinitionBodyItem
		//| ownedRelationship += SubjectMember
		//| ownedRelationship += RequirementConstraintMember
		//| ownedRelationship += FramedConcernMember
		//| ownedRelationship += RequirementVerificationMember
		//| ownedRelationship += ActorMember
		//| ownedRelationship += StakeholderMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefinitionBodyItem
		public RuleCall getDefinitionBodyItemParserRuleCall_0() { return cDefinitionBodyItemParserRuleCall_0; }
		
		//ownedRelationship += SubjectMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//SubjectMember
		public RuleCall getOwnedRelationshipSubjectMemberParserRuleCall_1_0() { return cOwnedRelationshipSubjectMemberParserRuleCall_1_0; }
		
		//ownedRelationship += RequirementConstraintMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//RequirementConstraintMember
		public RuleCall getOwnedRelationshipRequirementConstraintMemberParserRuleCall_2_0() { return cOwnedRelationshipRequirementConstraintMemberParserRuleCall_2_0; }
		
		//ownedRelationship += FramedConcernMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//FramedConcernMember
		public RuleCall getOwnedRelationshipFramedConcernMemberParserRuleCall_3_0() { return cOwnedRelationshipFramedConcernMemberParserRuleCall_3_0; }
		
		//ownedRelationship += RequirementVerificationMember
		public Assignment getOwnedRelationshipAssignment_4() { return cOwnedRelationshipAssignment_4; }
		
		//RequirementVerificationMember
		public RuleCall getOwnedRelationshipRequirementVerificationMemberParserRuleCall_4_0() { return cOwnedRelationshipRequirementVerificationMemberParserRuleCall_4_0; }
		
		//ownedRelationship += ActorMember
		public Assignment getOwnedRelationshipAssignment_5() { return cOwnedRelationshipAssignment_5; }
		
		//ActorMember
		public RuleCall getOwnedRelationshipActorMemberParserRuleCall_5_0() { return cOwnedRelationshipActorMemberParserRuleCall_5_0; }
		
		//ownedRelationship += StakeholderMember
		public Assignment getOwnedRelationshipAssignment_6() { return cOwnedRelationshipAssignment_6; }
		
		//StakeholderMember
		public RuleCall getOwnedRelationshipStakeholderMemberParserRuleCall_6_0() { return cOwnedRelationshipStakeholderMemberParserRuleCall_6_0; }
	}
	public class SubjectMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubjectMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementSubjectUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//SubjectMember returns SysML::SubjectMembership :
		//    MemberPrefix ownedRelatedElement += SubjectUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix ownedRelatedElement += SubjectUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += SubjectUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//SubjectUsage
		public RuleCall getOwnedRelatedElementSubjectUsageParserRuleCall_1_0() { return cOwnedRelatedElementSubjectUsageParserRuleCall_1_0; }
	}
	public class SubjectUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SubjectUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SubjectUsage returns SysML::ReferenceUsage :
		//    'subject' UsageExtensionKeyword* Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'subject' UsageExtensionKeyword* Usage
		public Group getGroup() { return cGroup; }
		
		//'subject'
		public Keyword getSubjectKeyword_0() { return cSubjectKeyword_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_1() { return cUsageExtensionKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class RequirementConstraintMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementConstraintMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindRequirementConstraintKindEnumRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementRequirementConstraintUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//RequirementConstraintMember returns SysML::RequirementConstraintMembership :
		//    MemberPrefix kind = RequirementConstraintKind
		//    ownedRelatedElement += RequirementConstraintUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix kind = RequirementConstraintKind
		//ownedRelatedElement += RequirementConstraintUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//kind = RequirementConstraintKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//RequirementConstraintKind
		public RuleCall getKindRequirementConstraintKindEnumRuleCall_1_0() { return cKindRequirementConstraintKindEnumRuleCall_1_0; }
		
		//ownedRelatedElement += RequirementConstraintUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//RequirementConstraintUsage
		public RuleCall getOwnedRelatedElementRequirementConstraintUsageParserRuleCall_2_0() { return cOwnedRelatedElementRequirementConstraintUsageParserRuleCall_2_0; }
	}
	public class RequirementConstraintUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementConstraintUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cCalculationBodyParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1_0_0_0 = (RuleCall)cGroup_1_0_0.eContents().get(0);
		private final RuleCall cConstraintUsageKeywordParserRuleCall_1_0_0_1 = (RuleCall)cGroup_1_0_0.eContents().get(1);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1_0_1 = (RuleCall)cAlternatives_1_0.eContents().get(1);
		private final RuleCall cConstraintUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cCalculationBodyParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//RequirementConstraintUsage returns SysML::ConstraintUsage :
		//      ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
		//      CalculationBody
		//    | ( UsageExtensionKeyword* ConstraintUsageKeyword | UsageExtensionKeyword+ )
		//      ConstraintUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
		//  CalculationBody
		//| ( UsageExtensionKeyword* ConstraintUsageKeyword | UsageExtensionKeyword+ )
		//  ConstraintUsageDeclaration CalculationBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
		//CalculationBody
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_1() { return cFeatureSpecializationParserRuleCall_0_1; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_0_2() { return cCalculationBodyParserRuleCall_0_2; }
		
		//( UsageExtensionKeyword* ConstraintUsageKeyword | UsageExtensionKeyword+ )
		//     ConstraintUsageDeclaration CalculationBody
		public Group getGroup_1() { return cGroup_1; }
		
		//( UsageExtensionKeyword* ConstraintUsageKeyword | UsageExtensionKeyword+ )
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//UsageExtensionKeyword* ConstraintUsageKeyword
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_1_0_0_0() { return cUsageExtensionKeywordParserRuleCall_1_0_0_0; }
		
		//ConstraintUsageKeyword
		public RuleCall getConstraintUsageKeywordParserRuleCall_1_0_0_1() { return cConstraintUsageKeywordParserRuleCall_1_0_0_1; }
		
		//UsageExtensionKeyword+
		public RuleCall getUsageExtensionKeywordParserRuleCall_1_0_1() { return cUsageExtensionKeywordParserRuleCall_1_0_1; }
		
		//ConstraintUsageDeclaration
		public RuleCall getConstraintUsageDeclarationParserRuleCall_1_1() { return cConstraintUsageDeclarationParserRuleCall_1_1; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_1_2() { return cCalculationBodyParserRuleCall_1_2; }
	}
	public class FramedConcernMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FramedConcernMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindFramedConcernKindEnumRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementFramedConcernUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//FramedConcernMember returns SysML::FramedConcernMembership :
		//    MemberPrefix kind = FramedConcernKind
		//    ownedRelatedElement += FramedConcernUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix kind = FramedConcernKind
		//ownedRelatedElement += FramedConcernUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//kind = FramedConcernKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//FramedConcernKind
		public RuleCall getKindFramedConcernKindEnumRuleCall_1_0() { return cKindFramedConcernKindEnumRuleCall_1_0; }
		
		//ownedRelatedElement += FramedConcernUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//FramedConcernUsage
		public RuleCall getOwnedRelatedElementFramedConcernUsageParserRuleCall_2_0() { return cOwnedRelatedElementFramedConcernUsageParserRuleCall_2_0; }
	}
	public class FramedConcernUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FramedConcernUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cRequirementBodyParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1_0_0_0 = (RuleCall)cGroup_1_0_0.eContents().get(0);
		private final RuleCall cConcernUsageKeywordParserRuleCall_1_0_0_1 = (RuleCall)cGroup_1_0_0.eContents().get(1);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1_0_1 = (RuleCall)cAlternatives_1_0.eContents().get(1);
		private final RuleCall cConstraintUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cCalculationBodyParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//FramedConcernUsage returns SysML::ConcernUsage :
		//      ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
		//      RequirementBody
		//    | ( UsageExtensionKeyword* ConcernUsageKeyword | UsageExtensionKeyword+ )
		//      ConstraintUsageDeclaration CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
		//  RequirementBody
		//| ( UsageExtensionKeyword* ConcernUsageKeyword | UsageExtensionKeyword+ )
		//  ConstraintUsageDeclaration CalculationBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
		//RequirementBody
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_1() { return cFeatureSpecializationParserRuleCall_0_1; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_0_2() { return cRequirementBodyParserRuleCall_0_2; }
		
		//( UsageExtensionKeyword* ConcernUsageKeyword | UsageExtensionKeyword+ )
		//     ConstraintUsageDeclaration CalculationBody
		public Group getGroup_1() { return cGroup_1; }
		
		//( UsageExtensionKeyword* ConcernUsageKeyword | UsageExtensionKeyword+ )
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//UsageExtensionKeyword* ConcernUsageKeyword
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_1_0_0_0() { return cUsageExtensionKeywordParserRuleCall_1_0_0_0; }
		
		//ConcernUsageKeyword
		public RuleCall getConcernUsageKeywordParserRuleCall_1_0_0_1() { return cConcernUsageKeywordParserRuleCall_1_0_0_1; }
		
		//UsageExtensionKeyword+
		public RuleCall getUsageExtensionKeywordParserRuleCall_1_0_1() { return cUsageExtensionKeywordParserRuleCall_1_0_1; }
		
		//ConstraintUsageDeclaration
		public RuleCall getConstraintUsageDeclarationParserRuleCall_1_1() { return cConstraintUsageDeclarationParserRuleCall_1_1; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall_1_2() { return cCalculationBodyParserRuleCall_1_2; }
	}
	public class ActorMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActorMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementActorUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//ActorMember returns SysML::ActorMembership :
		//    MemberPrefix
		//    ownedRelatedElement += ActorUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix
		//ownedRelatedElement += ActorUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += ActorUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//ActorUsage
		public RuleCall getOwnedRelatedElementActorUsageParserRuleCall_1_0() { return cOwnedRelatedElementActorUsageParserRuleCall_1_0; }
	}
	public class ActorUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ActorUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ActorUsage returns SysML::PartUsage :
		//      'actor' UsageExtensionKeyword* Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'actor' UsageExtensionKeyword* Usage
		public Group getGroup() { return cGroup; }
		
		//'actor'
		public Keyword getActorKeyword_0() { return cActorKeyword_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_1() { return cUsageExtensionKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class StakeholderMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StakeholderMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cOwnedRelatedElementStakeholderUsageParserRuleCall_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1.eContents().get(0);
		
		//StakeholderMember returns SysML::StakeholderMembership :
		//    MemberPrefix
		//    ownedRelatedElement += StakeholderUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix
		//ownedRelatedElement += StakeholderUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//ownedRelatedElement += StakeholderUsage
		public Assignment getOwnedRelatedElementAssignment_1() { return cOwnedRelatedElementAssignment_1; }
		
		//StakeholderUsage
		public RuleCall getOwnedRelatedElementStakeholderUsageParserRuleCall_1_0() { return cOwnedRelatedElementStakeholderUsageParserRuleCall_1_0; }
	}
	public class StakeholderUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.StakeholderUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStakeholderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//StakeholderUsage returns SysML::PartUsage :
		//      'stakeholder' UsageExtensionKeyword* Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'stakeholder' UsageExtensionKeyword* Usage
		public Group getGroup() { return cGroup; }
		
		//'stakeholder'
		public Keyword getStakeholderKeyword_0() { return cStakeholderKeyword_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_1() { return cUsageExtensionKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class RequirementUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementUsageKeyword");
		private final RuleCall cRequirementKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Requirement Usages */
		//RequirementUsageKeyword :
		//    RequirementKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RequirementKeyword
		public RuleCall getRequirementKeywordParserRuleCall() { return cRequirementKeywordParserRuleCall; }
	}
	public class RequirementUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//RequirementUsage returns SysML::RequirementUsage :
		//    OccurrenceUsagePrefix RequirementUsageKeyword ConstraintUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix RequirementUsageKeyword ConstraintUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_1() { return cRequirementUsageKeywordParserRuleCall_1; }
		
		//ConstraintUsageDeclaration
		public RuleCall getConstraintUsageDeclarationParserRuleCall_2() { return cConstraintUsageDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class SatisfyRequirementUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfyRequirementUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAssertKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIsNegatedAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsNegatedNotKeyword_2_0 = (Keyword)cIsNegatedAssignment_2.eContents().get(0);
		private final Keyword cSatisfyKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_4_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_4_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_4_0_1 = (RuleCall)cGroup_4_0.eContents().get(1);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cByKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOwnedRelationshipSatisfactionSubjectMemberParserRuleCall_6_1_0 = (RuleCall)cOwnedRelationshipAssignment_6_1.eContents().get(0);
		private final RuleCall cRequirementBodyParserRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//SatisfyRequirementUsage returns SysML::SatisfyRequirementUsage :
		//    OccurrenceUsagePrefix 'assert'? ( isNegated ?= 'not' )? 'satisfy'
		//    ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//    | RequirementUsageKeyword UsageDeclaration?
		//    )
		//    ValuePart?
		//    ( 'by' ownedRelationship += SatisfactionSubjectMember )?
		//     RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix 'assert'? ( isNegated ?= 'not' )? 'satisfy'
		//( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//| RequirementUsageKeyword UsageDeclaration?
		//)
		//ValuePart?
		//( 'by' ownedRelationship += SatisfactionSubjectMember )?
		// RequirementBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//'assert'?
		public Keyword getAssertKeyword_1() { return cAssertKeyword_1; }
		
		//( isNegated ?= 'not' )?
		public Assignment getIsNegatedAssignment_2() { return cIsNegatedAssignment_2; }
		
		//'not'
		public Keyword getIsNegatedNotKeyword_2_0() { return cIsNegatedNotKeyword_2_0; }
		
		//'satisfy'
		public Keyword getSatisfyKeyword_3() { return cSatisfyKeyword_3; }
		
		//( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//| RequirementUsageKeyword UsageDeclaration?
		//)
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		public Group getGroup_4_0() { return cGroup_4_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_4_0_0() { return cOwnedRelationshipAssignment_4_0_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_4_0_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_4_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_4_0_1() { return cFeatureSpecializationPartParserRuleCall_4_0_1; }
		
		//RequirementUsageKeyword UsageDeclaration?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_4_1_0() { return cRequirementUsageKeywordParserRuleCall_4_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_4_1_1() { return cUsageDeclarationParserRuleCall_4_1_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_5() { return cValuePartParserRuleCall_5; }
		
		//( 'by' ownedRelationship += SatisfactionSubjectMember )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'by'
		public Keyword getByKeyword_6_0() { return cByKeyword_6_0; }
		
		//ownedRelationship += SatisfactionSubjectMember
		public Assignment getOwnedRelationshipAssignment_6_1() { return cOwnedRelationshipAssignment_6_1; }
		
		//SatisfactionSubjectMember
		public RuleCall getOwnedRelationshipSatisfactionSubjectMemberParserRuleCall_6_1_0() { return cOwnedRelationshipSatisfactionSubjectMemberParserRuleCall_6_1_0; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_7() { return cRequirementBodyParserRuleCall_7; }
	}
	public class SatisfactionSubjectMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfactionSubjectMember");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementSatisfactionParameterParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//SatisfactionSubjectMember returns SysML::SubjectMembership :
		//    ownedRelatedElement += SatisfactionParameter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += SatisfactionParameter
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//SatisfactionParameter
		public RuleCall getOwnedRelatedElementSatisfactionParameterParserRuleCall_0() { return cOwnedRelatedElementSatisfactionParameterParserRuleCall_0; }
	}
	public class SatisfactionParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfactionParameter");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipSatisfactionFeatureValueParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//SatisfactionParameter returns SysML::ReferenceUsage :
		//    ownedRelationship += SatisfactionFeatureValue
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += SatisfactionFeatureValue
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//SatisfactionFeatureValue
		public RuleCall getOwnedRelationshipSatisfactionFeatureValueParserRuleCall_0() { return cOwnedRelationshipSatisfactionFeatureValueParserRuleCall_0; }
	}
	public class SatisfactionFeatureValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfactionFeatureValue");
		private final Assignment cOwnedRelatedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelatedElementSatisfactionReferenceExpressionParserRuleCall_0 = (RuleCall)cOwnedRelatedElementAssignment.eContents().get(0);
		
		//SatisfactionFeatureValue returns SysML::FeatureValue :
		//    ownedRelatedElement += SatisfactionReferenceExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelatedElement += SatisfactionReferenceExpression
		public Assignment getOwnedRelatedElementAssignment() { return cOwnedRelatedElementAssignment; }
		
		//SatisfactionReferenceExpression
		public RuleCall getOwnedRelatedElementSatisfactionReferenceExpressionParserRuleCall_0() { return cOwnedRelatedElementSatisfactionReferenceExpressionParserRuleCall_0; }
	}
	public class SatisfactionReferenceExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.SatisfactionReferenceExpression");
		private final Assignment cOwnedRelationshipAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cOwnedRelationshipFeatureChainMemberParserRuleCall_0 = (RuleCall)cOwnedRelationshipAssignment.eContents().get(0);
		
		//SatisfactionReferenceExpression returns SysML::FeatureReferenceExpression :
		//    ownedRelationship += FeatureChainMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ownedRelationship += FeatureChainMember
		public Assignment getOwnedRelationshipAssignment() { return cOwnedRelationshipAssignment; }
		
		//FeatureChainMember
		public RuleCall getOwnedRelationshipFeatureChainMemberParserRuleCall_0() { return cOwnedRelationshipFeatureChainMemberParserRuleCall_0; }
	}
	public class ConcernKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernKeyword");
		private final Keyword cConcernKeyword = (Keyword)rule.eContents().get(1);
		
		///* CONCERNS */
		///* Concern Definitions */
		//ConcernKeyword :
		//    'concern'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'concern'
		public Keyword getConcernKeyword() { return cConcernKeyword; }
	}
	public class ConcernDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cConcernKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ConcernDefKeyword :
		//    ConcernKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConcernKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ConcernKeyword
		public RuleCall getConcernKeywordParserRuleCall_0() { return cConcernKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ConcernDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConcernDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConcernDefinition returns SysML::ConcernDefinition :
		//    OccurrenceDefinitionPrefix ConcernDefKeyword DefinitionDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ConcernDefKeyword DefinitionDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ConcernDefKeyword
		public RuleCall getConcernDefKeywordParserRuleCall_1() { return cConcernDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class ConcernUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernUsageKeyword");
		private final RuleCall cConcernKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ConcernUsageKeyword :
		//    ConcernKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ConcernKeyword
		public RuleCall getConcernKeywordParserRuleCall() { return cConcernKeywordParserRuleCall; }
	}
	public class ConcernUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ConcernUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConcernUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ConcernUsage returns SysML::ConcernUsage :
		//    OccurrenceUsagePrefix ConcernUsageKeyword ConstraintUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix ConcernUsageKeyword ConstraintUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//ConcernUsageKeyword
		public RuleCall getConcernUsageKeywordParserRuleCall_1() { return cConcernUsageKeywordParserRuleCall_1; }
		
		//ConstraintUsageDeclaration
		public RuleCall getConstraintUsageDeclarationParserRuleCall_2() { return cConstraintUsageDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class CaseKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseKeyword");
		private final Keyword cCaseKeyword = (Keyword)rule.eContents().get(1);
		
		///* CASES */
		///* Case Definitions */
		//CaseKeyword :
		//    'case'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'case'
		public Keyword getCaseKeyword() { return cCaseKeyword; }
	}
	public class CaseDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cCaseKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//CaseDefKeyword :
		//    CaseKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CaseKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//CaseKeyword
		public RuleCall getCaseKeywordParserRuleCall_0() { return cCaseKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class CaseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCaseDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//CaseDefinition returns SysML::CaseDefinition :
		//    OccurrenceDefinitionPrefix CaseDefKeyword DefinitionDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix CaseDefKeyword DefinitionDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//CaseDefKeyword
		public RuleCall getCaseDefKeywordParserRuleCall_1() { return cCaseDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class CaseBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cCaseBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Assignment cOwnedRelationshipAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0 = (RuleCall)cOwnedRelationshipAssignment_1_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//fragment CaseBody returns SysML::Type :
		//        ';'
		//      | '{' => CaseBodyItem*
		//            ( ownedRelationship += ResultExpressionMember )?
		//        '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' => CaseBodyItem*
		//      ( ownedRelationship += ResultExpressionMember )?
		//  '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' => CaseBodyItem*
		//           ( ownedRelationship += ResultExpressionMember )?
		//       '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//=> CaseBodyItem*
		public RuleCall getCaseBodyItemParserRuleCall_1_1() { return cCaseBodyItemParserRuleCall_1_1; }
		
		//( ownedRelationship += ResultExpressionMember )?
		public Assignment getOwnedRelationshipAssignment_1_2() { return cOwnedRelationshipAssignment_1_2; }
		
		//ResultExpressionMember
		public RuleCall getOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0() { return cOwnedRelationshipResultExpressionMemberParserRuleCall_1_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class CaseBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCalculationBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipSubjectMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipActorMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipObjectiveMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//fragment CaseBodyItem returns SysML::Type :
		//      CalculationBodyItem
		//    | ownedRelationship += SubjectMember
		//    | ownedRelationship += ActorMember
		//    | ownedRelationship += ObjectiveMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  CalculationBodyItem
		//| ownedRelationship += SubjectMember
		//| ownedRelationship += ActorMember
		//| ownedRelationship += ObjectiveMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CalculationBodyItem
		public RuleCall getCalculationBodyItemParserRuleCall_0() { return cCalculationBodyItemParserRuleCall_0; }
		
		//ownedRelationship += SubjectMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//SubjectMember
		public RuleCall getOwnedRelationshipSubjectMemberParserRuleCall_1_0() { return cOwnedRelationshipSubjectMemberParserRuleCall_1_0; }
		
		//ownedRelationship += ActorMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ActorMember
		public RuleCall getOwnedRelationshipActorMemberParserRuleCall_2_0() { return cOwnedRelationshipActorMemberParserRuleCall_2_0; }
		
		//ownedRelationship += ObjectiveMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ObjectiveMember
		public RuleCall getOwnedRelationshipObjectiveMemberParserRuleCall_3_0() { return cOwnedRelationshipObjectiveMemberParserRuleCall_3_0; }
	}
	public class ObjectiveMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ObjectiveMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cObjectiveKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementObjectiveRequirementUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//ObjectiveMember returns SysML::ObjectiveMembership :
		//    MemberPrefix 'objective' ownedRelatedElement += ObjectiveRequirementUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix 'objective' ownedRelatedElement += ObjectiveRequirementUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//'objective'
		public Keyword getObjectiveKeyword_1() { return cObjectiveKeyword_1; }
		
		//ownedRelatedElement += ObjectiveRequirementUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//ObjectiveRequirementUsage
		public RuleCall getOwnedRelatedElementObjectiveRequirementUsageParserRuleCall_2_0() { return cOwnedRelatedElementObjectiveRequirementUsageParserRuleCall_2_0; }
	}
	public class ObjectiveRequirementUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ObjectiveRequirementUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cConstraintUsageDeclarationParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cRequirementBodyParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ObjectiveRequirementUsage returns SysML::RequirementUsage :
		//    UsageExtensionKeyword* ConstraintUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UsageExtensionKeyword* ConstraintUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_0() { return cUsageExtensionKeywordParserRuleCall_0; }
		
		//ConstraintUsageDeclaration
		public RuleCall getConstraintUsageDeclarationParserRuleCall_1() { return cConstraintUsageDeclarationParserRuleCall_1; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_2() { return cRequirementBodyParserRuleCall_2; }
	}
	public class CaseUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseUsageKeyword");
		private final RuleCall cCaseKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* Case Usages */
		//CaseUsageKeyword :
		//    CaseKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CaseKeyword
		public RuleCall getCaseKeywordParserRuleCall() { return cCaseKeywordParserRuleCall; }
	}
	public class CaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.CaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCaseUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//// TODO: Correct erroneous use of ConstraintUsageDeclaration for CaseUsage from resolution of SYSML2-783.
		//CaseUsage returns SysML::CaseUsage :
		//    OccurrenceUsagePrefix CaseUsageKeyword ActionUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix CaseUsageKeyword ActionUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//CaseUsageKeyword
		public RuleCall getCaseUsageKeywordParserRuleCall_1() { return cCaseUsageKeywordParserRuleCall_1; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class AnalysisCaseKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseKeyword");
		private final Keyword cAnalysisKeyword = (Keyword)rule.eContents().get(1);
		
		///* ANALYSIS CASES */
		//AnalysisCaseKeyword :
		//    'analysis'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'analysis'
		public Keyword getAnalysisKeyword() { return cAnalysisKeyword; }
	}
	public class AnalysisCaseDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAnalysisCaseKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//AnalysisCaseDefKeyword :
		//    AnalysisCaseKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AnalysisCaseKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//AnalysisCaseKeyword
		public RuleCall getAnalysisCaseKeywordParserRuleCall_0() { return cAnalysisCaseKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class AnalysisCaseUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseUsageKeyword");
		private final RuleCall cAnalysisCaseKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnalysisCaseUsageKeyword :
		//    AnalysisCaseKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AnalysisCaseKeyword
		public RuleCall getAnalysisCaseKeywordParserRuleCall() { return cAnalysisCaseKeywordParserRuleCall; }
	}
	public class AnalysisCaseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAnalysisCaseDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AnalysisCaseDefinition returns SysML::AnalysisCaseDefinition :
		//    OccurrenceDefinitionPrefix AnalysisCaseDefKeyword DefinitionDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix AnalysisCaseDefKeyword DefinitionDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//AnalysisCaseDefKeyword
		public RuleCall getAnalysisCaseDefKeywordParserRuleCall_1() { return cAnalysisCaseDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class AnalysisCaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.AnalysisCaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cAnalysisCaseUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//AnalysisCaseUsage returns SysML::AnalysisCaseUsage :
		//    OccurrenceUsagePrefix AnalysisCaseUsageKeyword ActionUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix AnalysisCaseUsageKeyword ActionUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//AnalysisCaseUsageKeyword
		public RuleCall getAnalysisCaseUsageKeywordParserRuleCall_1() { return cAnalysisCaseUsageKeywordParserRuleCall_1; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class VerificationCaseKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseKeyword");
		private final Keyword cVerificationKeyword = (Keyword)rule.eContents().get(1);
		
		///* VERIFICATION CASES */
		//VerificationCaseKeyword :
		//    'verification'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'verification'
		public Keyword getVerificationKeyword() { return cVerificationKeyword; }
	}
	public class VerificationCaseDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cVerificationCaseKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//VerificationCaseDefKeyword :
		//    VerificationCaseKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//VerificationCaseKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//VerificationCaseKeyword
		public RuleCall getVerificationCaseKeywordParserRuleCall_0() { return cVerificationCaseKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class VerificationCaseUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseUsageKeyword");
		private final RuleCall cVerificationCaseKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//VerificationCaseUsageKeyword :
		//    VerificationCaseKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//VerificationCaseKeyword
		public RuleCall getVerificationCaseKeywordParserRuleCall() { return cVerificationCaseKeywordParserRuleCall; }
	}
	public class VerificationCaseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cVerificationCaseDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//VerificationCaseDefinition returns SysML::VerificationCaseDefinition :
		//    OccurrenceDefinitionPrefix VerificationCaseDefKeyword DefinitionDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix VerificationCaseDefKeyword DefinitionDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//VerificationCaseDefKeyword
		public RuleCall getVerificationCaseDefKeywordParserRuleCall_1() { return cVerificationCaseDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class VerificationCaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VerificationCaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cVerificationCaseUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//VerificationCaseUsage returns SysML::VerificationCaseUsage :
		//    OccurrenceUsagePrefix VerificationCaseUsageKeyword ActionUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix VerificationCaseUsageKeyword ActionUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//VerificationCaseUsageKeyword
		public RuleCall getVerificationCaseUsageKeywordParserRuleCall_1() { return cVerificationCaseUsageKeywordParserRuleCall_1; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class RequirementVerificationMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementVerificationMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindRequirementVerificationKindEnumRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementRequirementVerificationUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//RequirementVerificationMember returns SysML::RequirementVerificationMembership :
		//    MemberPrefix kind = RequirementVerificationKind
		//    ownedRelatedElement += RequirementVerificationUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix kind = RequirementVerificationKind
		//ownedRelatedElement += RequirementVerificationUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//kind = RequirementVerificationKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }
		
		//RequirementVerificationKind
		public RuleCall getKindRequirementVerificationKindEnumRuleCall_1_0() { return cKindRequirementVerificationKindEnumRuleCall_1_0; }
		
		//ownedRelatedElement += RequirementVerificationUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//RequirementVerificationUsage
		public RuleCall getOwnedRelatedElementRequirementVerificationUsageParserRuleCall_2_0() { return cOwnedRelatedElementRequirementVerificationUsageParserRuleCall_2_0; }
	}
	public class RequirementVerificationUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementVerificationUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cRequirementBodyParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1_0_0_0 = (RuleCall)cGroup_1_0_0.eContents().get(0);
		private final RuleCall cRequirementUsageKeywordParserRuleCall_1_0_0_1 = (RuleCall)cGroup_1_0_0.eContents().get(1);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1_0_1 = (RuleCall)cAlternatives_1_0.eContents().get(1);
		private final RuleCall cConstraintUsageDeclarationParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cRequirementBodyParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//RequirementVerificationUsage returns SysML::RequirementUsage :
		//      ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
		//      RequirementBody
		//    | ( UsageExtensionKeyword* RequirementUsageKeyword | UsageExtensionKeyword+ )
		//      ConstraintUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
		//  RequirementBody
		//| ( UsageExtensionKeyword* RequirementUsageKeyword | UsageExtensionKeyword+ )
		//  ConstraintUsageDeclaration RequirementBody
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
		//RequirementBody
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_1() { return cFeatureSpecializationParserRuleCall_0_1; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_0_2() { return cRequirementBodyParserRuleCall_0_2; }
		
		//( UsageExtensionKeyword* RequirementUsageKeyword | UsageExtensionKeyword+ )
		//     ConstraintUsageDeclaration RequirementBody
		public Group getGroup_1() { return cGroup_1; }
		
		//( UsageExtensionKeyword* RequirementUsageKeyword | UsageExtensionKeyword+ )
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//UsageExtensionKeyword* RequirementUsageKeyword
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_1_0_0_0() { return cUsageExtensionKeywordParserRuleCall_1_0_0_0; }
		
		//RequirementUsageKeyword
		public RuleCall getRequirementUsageKeywordParserRuleCall_1_0_0_1() { return cRequirementUsageKeywordParserRuleCall_1_0_0_1; }
		
		//UsageExtensionKeyword+
		public RuleCall getUsageExtensionKeywordParserRuleCall_1_0_1() { return cUsageExtensionKeywordParserRuleCall_1_0_1; }
		
		//ConstraintUsageDeclaration
		public RuleCall getConstraintUsageDeclarationParserRuleCall_1_1() { return cConstraintUsageDeclarationParserRuleCall_1_1; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_1_2() { return cRequirementBodyParserRuleCall_1_2; }
	}
	public class UseCaseKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UseCaseKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCaseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		///* USE CASES */
		//UseCaseKeyword :
		//    'use' 'case'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'use' 'case'
		public Group getGroup() { return cGroup; }
		
		//'use'
		public Keyword getUseKeyword_0() { return cUseKeyword_0; }
		
		//'case'
		public Keyword getCaseKeyword_1() { return cCaseKeyword_1; }
	}
	public class UseCaseDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UseCaseDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUseCaseKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//UseCaseDefKeyword :
		//    UseCaseKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UseCaseKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//UseCaseKeyword
		public RuleCall getUseCaseKeywordParserRuleCall_0() { return cUseCaseKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class UseCaseUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UseCaseUsageKeyword");
		private final RuleCall cUseCaseKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//UseCaseUsageKeyword :
		//    UseCaseKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//UseCaseKeyword
		public RuleCall getUseCaseKeywordParserRuleCall() { return cUseCaseKeywordParserRuleCall; }
	}
	public class UseCaseDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UseCaseDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUseCaseDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//UseCaseDefinition returns SysML::UseCaseDefinition :
		//    OccurrenceDefinitionPrefix UseCaseDefKeyword DefinitionDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix UseCaseDefKeyword DefinitionDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//UseCaseDefKeyword
		public RuleCall getUseCaseDefKeywordParserRuleCall_1() { return cUseCaseDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class UseCaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.UseCaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cUseCaseUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cActionUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cCaseBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//UseCaseUsage returns SysML::UseCaseUsage :
		//    OccurrenceUsagePrefix UseCaseUsageKeyword ActionUsageDeclaration CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix UseCaseUsageKeyword ActionUsageDeclaration CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//UseCaseUsageKeyword
		public RuleCall getUseCaseUsageKeywordParserRuleCall_1() { return cUseCaseUsageKeywordParserRuleCall_1; }
		
		//ActionUsageDeclaration
		public RuleCall getActionUsageDeclarationParserRuleCall_2() { return cActionUsageDeclarationParserRuleCall_2; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_3() { return cCaseBodyParserRuleCall_3; }
	}
	public class IncludeUseCaseUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.IncludeUseCaseUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cIncludeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_2_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_2_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationPartParserRuleCall_2_0_1 = (RuleCall)cGroup_2_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final RuleCall cUseCaseUsageKeywordParserRuleCall_2_1_0 = (RuleCall)cGroup_2_1.eContents().get(0);
		private final RuleCall cUsageDeclarationParserRuleCall_2_1_1 = (RuleCall)cGroup_2_1.eContents().get(1);
		private final RuleCall cValuePartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cCaseBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//IncludeUseCaseUsage returns SysML::IncludeUseCaseUsage :
		//    OccurrenceUsagePrefix 'include'
		//       ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//       | UseCaseUsageKeyword UsageDeclaration? )
		//    ValuePart?
		//    CaseBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix 'include'
		//   ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//   | UseCaseUsageKeyword UsageDeclaration? )
		//ValuePart?
		//CaseBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//'include'
		public Keyword getIncludeKeyword_1() { return cIncludeKeyword_1; }
		
		//( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		//| UseCaseUsageKeyword UsageDeclaration? )
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_2_0_0() { return cOwnedRelationshipAssignment_2_0_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_2_0_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_2_0_0_0; }
		
		//FeatureSpecializationPart?
		public RuleCall getFeatureSpecializationPartParserRuleCall_2_0_1() { return cFeatureSpecializationPartParserRuleCall_2_0_1; }
		
		//UseCaseUsageKeyword UsageDeclaration?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//UseCaseUsageKeyword
		public RuleCall getUseCaseUsageKeywordParserRuleCall_2_1_0() { return cUseCaseUsageKeywordParserRuleCall_2_1_0; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2_1_1() { return cUsageDeclarationParserRuleCall_2_1_1; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_3() { return cValuePartParserRuleCall_3; }
		
		//CaseBody
		public RuleCall getCaseBodyParserRuleCall_4() { return cCaseBodyParserRuleCall_4; }
	}
	public class ViewKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewKeyword");
		private final Keyword cViewKeyword = (Keyword)rule.eContents().get(1);
		
		///* VIEWS */
		///* View Definitions */
		//ViewKeyword :
		//    'view'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'view'
		public Keyword getViewKeyword() { return cViewKeyword; }
	}
	public class ViewDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cViewKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ViewDefKeyword :
		//    ViewKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ViewKeyword
		public RuleCall getViewKeywordParserRuleCall_0() { return cViewKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ViewDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cViewDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cViewDefinitionBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ViewDefinition returns SysML::ViewDefinition :
		//    OccurrenceDefinitionPrefix ViewDefKeyword DefinitionDeclaration ViewDefinitionBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ViewDefKeyword DefinitionDeclaration ViewDefinitionBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ViewDefKeyword
		public RuleCall getViewDefKeywordParserRuleCall_1() { return cViewDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//ViewDefinitionBody
		public RuleCall getViewDefinitionBodyParserRuleCall_3() { return cViewDefinitionBodyParserRuleCall_3; }
	}
	public class ViewDefinitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewDefinitionBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cViewDefinitionBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ViewDefinitionBody returns SysML::ViewDefinition :
		//      ';'
		//    | '{' ViewDefinitionBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ';'
		//| '{' ViewDefinitionBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ViewDefinitionBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//ViewDefinitionBodyItem*
		public RuleCall getViewDefinitionBodyItemParserRuleCall_1_1() { return cViewDefinitionBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ViewDefinitionBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewDefinitionBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefinitionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipElementFilterMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipViewRenderingMemberParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		
		//fragment ViewDefinitionBodyItem returns SysML::ViewDefinition :
		//      DefinitionBodyItem
		//    | ownedRelationship += ElementFilterMember
		//    | ownedRelationship += ViewRenderingMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  DefinitionBodyItem
		//| ownedRelationship += ElementFilterMember
		//| ownedRelationship += ViewRenderingMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefinitionBodyItem
		public RuleCall getDefinitionBodyItemParserRuleCall_0() { return cDefinitionBodyItemParserRuleCall_0; }
		
		//ownedRelationship += ElementFilterMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ElementFilterMember
		public RuleCall getOwnedRelationshipElementFilterMemberParserRuleCall_1_0() { return cOwnedRelationshipElementFilterMemberParserRuleCall_1_0; }
		
		//ownedRelationship += ViewRenderingMember
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//ViewRenderingMember
		public RuleCall getOwnedRelationshipViewRenderingMemberParserRuleCall_2_0() { return cOwnedRelationshipViewRenderingMemberParserRuleCall_2_0; }
	}
	public class ViewRenderingMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewRenderingMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMemberPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRenderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOwnedRelatedElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOwnedRelatedElementViewRenderingUsageParserRuleCall_2_0 = (RuleCall)cOwnedRelatedElementAssignment_2.eContents().get(0);
		
		//ViewRenderingMember returns SysML::ViewRenderingMembership :
		//    MemberPrefix 'render'
		//    ownedRelatedElement += ViewRenderingUsage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//MemberPrefix 'render'
		//ownedRelatedElement += ViewRenderingUsage
		public Group getGroup() { return cGroup; }
		
		//MemberPrefix
		public RuleCall getMemberPrefixParserRuleCall_0() { return cMemberPrefixParserRuleCall_0; }
		
		//'render'
		public Keyword getRenderKeyword_1() { return cRenderKeyword_1; }
		
		//ownedRelatedElement += ViewRenderingUsage
		public Assignment getOwnedRelatedElementAssignment_2() { return cOwnedRelatedElementAssignment_2; }
		
		//ViewRenderingUsage
		public RuleCall getOwnedRelatedElementViewRenderingUsageParserRuleCall_2_0() { return cOwnedRelatedElementViewRenderingUsageParserRuleCall_2_0; }
	}
	public class ViewRenderingUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewRenderingUsage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0 = (RuleCall)cOwnedRelationshipAssignment_0_0.eContents().get(0);
		private final RuleCall cFeatureSpecializationParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cUsageBodyParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1_0_0_0 = (RuleCall)cGroup_1_0_0.eContents().get(0);
		private final Keyword cRenderingKeyword_1_0_0_1 = (Keyword)cGroup_1_0_0.eContents().get(1);
		private final RuleCall cUsageExtensionKeywordParserRuleCall_1_0_1 = (RuleCall)cAlternatives_1_0.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//ViewRenderingUsage returns SysML::RenderingUsage :
		//      ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization* UsageBody
		//    | ( UsageExtensionKeyword* 'rendering' | UsageExtensionKeyword+ ) Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization* UsageBody
		//| ( UsageExtensionKeyword* 'rendering' | UsageExtensionKeyword+ ) Usage
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization* UsageBody
		public Group getGroup_0() { return cGroup_0; }
		
		//ownedRelationship += OwnedReferenceSubsetting
		public Assignment getOwnedRelationshipAssignment_0_0() { return cOwnedRelationshipAssignment_0_0; }
		
		//OwnedReferenceSubsetting
		public RuleCall getOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0() { return cOwnedRelationshipOwnedReferenceSubsettingParserRuleCall_0_0_0; }
		
		//FeatureSpecialization*
		public RuleCall getFeatureSpecializationParserRuleCall_0_1() { return cFeatureSpecializationParserRuleCall_0_1; }
		
		//UsageBody
		public RuleCall getUsageBodyParserRuleCall_0_2() { return cUsageBodyParserRuleCall_0_2; }
		
		//( UsageExtensionKeyword* 'rendering' | UsageExtensionKeyword+ ) Usage
		public Group getGroup_1() { return cGroup_1; }
		
		//( UsageExtensionKeyword* 'rendering' | UsageExtensionKeyword+ )
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//UsageExtensionKeyword* 'rendering'
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//UsageExtensionKeyword*
		public RuleCall getUsageExtensionKeywordParserRuleCall_1_0_0_0() { return cUsageExtensionKeywordParserRuleCall_1_0_0_0; }
		
		//'rendering'
		public Keyword getRenderingKeyword_1_0_0_1() { return cRenderingKeyword_1_0_0_1; }
		
		//UsageExtensionKeyword+
		public RuleCall getUsageExtensionKeywordParserRuleCall_1_0_1() { return cUsageExtensionKeywordParserRuleCall_1_0_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_1_1() { return cUsageParserRuleCall_1_1; }
	}
	public class ViewUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewUsageKeyword");
		private final RuleCall cViewKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* View Usages */
		//ViewUsageKeyword :
		//    ViewKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewKeyword
		public RuleCall getViewKeywordParserRuleCall() { return cViewKeywordParserRuleCall; }
	}
	public class ViewUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cViewUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cValuePartParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final RuleCall cViewBodyParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//ViewUsage returns SysML::ViewUsage :
		//    OccurrenceUsagePrefix ViewUsageKeyword UsageDeclaration? ValuePart? ViewBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix ViewUsageKeyword UsageDeclaration? ValuePart? ViewBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//ViewUsageKeyword
		public RuleCall getViewUsageKeywordParserRuleCall_1() { return cViewUsageKeywordParserRuleCall_1; }
		
		//UsageDeclaration?
		public RuleCall getUsageDeclarationParserRuleCall_2() { return cUsageDeclarationParserRuleCall_2; }
		
		//ValuePart?
		public RuleCall getValuePartParserRuleCall_3() { return cValuePartParserRuleCall_3; }
		
		//ViewBody
		public RuleCall getViewBodyParserRuleCall_4() { return cViewBodyParserRuleCall_4; }
	}
	public class ViewBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewBody");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSemicolonKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cViewBodyItemParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//fragment ViewBody returns SysML::ViewUsage :
		//    ';' | '{' ViewBodyItem* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//';' | '{' ViewBodyItem* '}'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//';'
		public Keyword getSemicolonKeyword_0() { return cSemicolonKeyword_0; }
		
		//'{' ViewBodyItem* '}'
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//ViewBodyItem*
		public RuleCall getViewBodyItemParserRuleCall_1_1() { return cViewBodyItemParserRuleCall_1_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}
	public class ViewBodyItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewBodyItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefinitionBodyItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cOwnedRelationshipElementFilterMemberParserRuleCall_1_0 = (RuleCall)cOwnedRelationshipAssignment_1.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cOwnedRelationshipExposeParserRuleCall_2_0 = (RuleCall)cOwnedRelationshipAssignment_2.eContents().get(0);
		private final Assignment cOwnedRelationshipAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOwnedRelationshipViewRenderingMemberParserRuleCall_3_0 = (RuleCall)cOwnedRelationshipAssignment_3.eContents().get(0);
		
		//fragment ViewBodyItem returns SysML::ViewUsage :
		//      DefinitionBodyItem
		//    | ownedRelationship += ElementFilterMember
		//    | ownedRelationship += Expose
		//    | ownedRelationship += ViewRenderingMember
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//  DefinitionBodyItem
		//| ownedRelationship += ElementFilterMember
		//| ownedRelationship += Expose
		//| ownedRelationship += ViewRenderingMember
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DefinitionBodyItem
		public RuleCall getDefinitionBodyItemParserRuleCall_0() { return cDefinitionBodyItemParserRuleCall_0; }
		
		//ownedRelationship += ElementFilterMember
		public Assignment getOwnedRelationshipAssignment_1() { return cOwnedRelationshipAssignment_1; }
		
		//ElementFilterMember
		public RuleCall getOwnedRelationshipElementFilterMemberParserRuleCall_1_0() { return cOwnedRelationshipElementFilterMemberParserRuleCall_1_0; }
		
		//ownedRelationship += Expose
		public Assignment getOwnedRelationshipAssignment_2() { return cOwnedRelationshipAssignment_2; }
		
		//Expose
		public RuleCall getOwnedRelationshipExposeParserRuleCall_2_0() { return cOwnedRelationshipExposeParserRuleCall_2_0; }
		
		//ownedRelationship += ViewRenderingMember
		public Assignment getOwnedRelationshipAssignment_3() { return cOwnedRelationshipAssignment_3; }
		
		//ViewRenderingMember
		public RuleCall getOwnedRelationshipViewRenderingMemberParserRuleCall_3_0() { return cOwnedRelationshipViewRenderingMemberParserRuleCall_3_0; }
	}
	public class ExposePrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExposePrefix");
		private final Assignment cVisibilityAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cVisibilityExposeVisibilityKindEnumRuleCall_0 = (RuleCall)cVisibilityAssignment.eContents().get(0);
		
		//fragment ExposePrefix returns SysML::Expose :
		//    visibility = ExposeVisibilityKind
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//visibility = ExposeVisibilityKind
		public Assignment getVisibilityAssignment() { return cVisibilityAssignment; }
		
		//ExposeVisibilityKind
		public RuleCall getVisibilityExposeVisibilityKindEnumRuleCall_0() { return cVisibilityExposeVisibilityKindEnumRuleCall_0; }
	}
	public class ExposeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.Expose");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cMembershipExposeParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cNamespaceExposeParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cRelationshipBodyParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//Expose returns SysML::Expose :
		//    ( MembershipExpose | NamespaceExpose )
		//    RelationshipBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//( MembershipExpose | NamespaceExpose )
		//RelationshipBody
		public Group getGroup() { return cGroup; }
		
		//( MembershipExpose | NamespaceExpose )
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//MembershipExpose
		public RuleCall getMembershipExposeParserRuleCall_0_0() { return cMembershipExposeParserRuleCall_0_0; }
		
		//NamespaceExpose
		public RuleCall getNamespaceExposeParserRuleCall_0_1() { return cNamespaceExposeParserRuleCall_0_1; }
		
		//RelationshipBody
		public RuleCall getRelationshipBodyParserRuleCall_1() { return cRelationshipBodyParserRuleCall_1; }
	}
	public class MembershipExposeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.MembershipExpose");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cExposePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cImportedMembershipParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//MembershipExpose returns SysML::MembershipExpose :
		//    ExposePrefix ImportedMembership
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ExposePrefix ImportedMembership
		public Group getGroup() { return cGroup; }
		
		//ExposePrefix
		public RuleCall getExposePrefixParserRuleCall_0() { return cExposePrefixParserRuleCall_0; }
		
		//ImportedMembership
		public RuleCall getImportedMembershipParserRuleCall_1() { return cImportedMembershipParserRuleCall_1; }
	}
	public class NamespaceExposeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.NamespaceExpose");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cExposePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final Assignment cOwnedRelatedElementAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cOwnedRelatedElementFilterPackageParserRuleCall_1_1_0 = (RuleCall)cOwnedRelatedElementAssignment_1_1.eContents().get(0);
		
		//NamespaceExpose returns SysML::NamespaceExpose :
		//    ExposePrefix
		//    ( ImportedNamespace
		//    | ownedRelatedElement += FilterPackage
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ExposePrefix
		//( ImportedNamespace
		//| ownedRelatedElement += FilterPackage
		//)
		public Group getGroup() { return cGroup; }
		
		//ExposePrefix
		public RuleCall getExposePrefixParserRuleCall_0() { return cExposePrefixParserRuleCall_0; }
		
		//( ImportedNamespace
		//| ownedRelatedElement += FilterPackage
		//)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//ImportedNamespace
		public RuleCall getImportedNamespaceParserRuleCall_1_0() { return cImportedNamespaceParserRuleCall_1_0; }
		
		//ownedRelatedElement += FilterPackage
		public Assignment getOwnedRelatedElementAssignment_1_1() { return cOwnedRelatedElementAssignment_1_1; }
		
		//FilterPackage
		public RuleCall getOwnedRelatedElementFilterPackageParserRuleCall_1_1_0() { return cOwnedRelatedElementFilterPackageParserRuleCall_1_1_0; }
	}
	public class ViewpointKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointKeyword");
		private final Keyword cViewpointKeyword = (Keyword)rule.eContents().get(1);
		
		///* VIEWPOINTS */
		//ViewpointKeyword :
		//    'viewpoint'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'viewpoint'
		public Keyword getViewpointKeyword() { return cViewpointKeyword; }
	}
	public class ViewpointDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cViewpointKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ViewpointDefKeyword :
		//    ViewpointKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewpointKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//ViewpointKeyword
		public RuleCall getViewpointKeywordParserRuleCall_0() { return cViewpointKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class ViewpointUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointUsageKeyword");
		private final RuleCall cViewpointKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ViewpointUsageKeyword :
		//    ViewpointKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ViewpointKeyword
		public RuleCall getViewpointKeywordParserRuleCall() { return cViewpointKeywordParserRuleCall; }
	}
	public class ViewpointDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cViewpointDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ViewpointDefinition returns SysML::ViewpointDefinition :
		//    OccurrenceDefinitionPrefix ViewpointDefKeyword DefinitionDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix ViewpointDefKeyword DefinitionDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//ViewpointDefKeyword
		public RuleCall getViewpointDefKeywordParserRuleCall_1() { return cViewpointDefKeywordParserRuleCall_1; }
		
		//DefinitionDeclaration
		public RuleCall getDefinitionDeclarationParserRuleCall_2() { return cDefinitionDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class ViewpointUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ViewpointUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cViewpointUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cConstraintUsageDeclarationParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final RuleCall cRequirementBodyParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ViewpointUsage returns SysML::ViewpointUsage :
		//    OccurrenceUsagePrefix ViewpointUsageKeyword ConstraintUsageDeclaration RequirementBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix ViewpointUsageKeyword ConstraintUsageDeclaration RequirementBody
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//ViewpointUsageKeyword
		public RuleCall getViewpointUsageKeywordParserRuleCall_1() { return cViewpointUsageKeywordParserRuleCall_1; }
		
		//ConstraintUsageDeclaration
		public RuleCall getConstraintUsageDeclarationParserRuleCall_2() { return cConstraintUsageDeclarationParserRuleCall_2; }
		
		//RequirementBody
		public RuleCall getRequirementBodyParserRuleCall_3() { return cRequirementBodyParserRuleCall_3; }
	}
	public class RenderingKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingKeyword");
		private final Keyword cRenderingKeyword = (Keyword)rule.eContents().get(1);
		
		///* RENDERINGS */
		//RenderingKeyword :
		//    'rendering'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'rendering'
		public Keyword getRenderingKeyword() { return cRenderingKeyword; }
	}
	public class RenderingDefKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingDefKeyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cRenderingKeywordParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//RenderingDefKeyword :
		//    RenderingKeyword 'def'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RenderingKeyword 'def'
		public Group getGroup() { return cGroup; }
		
		//RenderingKeyword
		public RuleCall getRenderingKeywordParserRuleCall_0() { return cRenderingKeywordParserRuleCall_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
	}
	public class RenderingDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceDefinitionPrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRenderingDefKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cDefinitionParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RenderingDefinition returns SysML::RenderingDefinition :
		//    OccurrenceDefinitionPrefix RenderingDefKeyword Definition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceDefinitionPrefix RenderingDefKeyword Definition
		public Group getGroup() { return cGroup; }
		
		//OccurrenceDefinitionPrefix
		public RuleCall getOccurrenceDefinitionPrefixParserRuleCall_0() { return cOccurrenceDefinitionPrefixParserRuleCall_0; }
		
		//RenderingDefKeyword
		public RuleCall getRenderingDefKeywordParserRuleCall_1() { return cRenderingDefKeywordParserRuleCall_1; }
		
		//Definition
		public RuleCall getDefinitionParserRuleCall_2() { return cDefinitionParserRuleCall_2; }
	}
	public class RenderingUsageKeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingUsageKeyword");
		private final RuleCall cRenderingKeywordParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//RenderingUsageKeyword :
		//    RenderingKeyword
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//RenderingKeyword
		public RuleCall getRenderingKeywordParserRuleCall() { return cRenderingKeywordParserRuleCall; }
	}
	public class RenderingUsageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RenderingUsage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOccurrenceUsagePrefixParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cRenderingUsageKeywordParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cUsageParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RenderingUsage returns SysML::RenderingUsage :
		//    OccurrenceUsagePrefix RenderingUsageKeyword Usage
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//OccurrenceUsagePrefix RenderingUsageKeyword Usage
		public Group getGroup() { return cGroup; }
		
		//OccurrenceUsagePrefix
		public RuleCall getOccurrenceUsagePrefixParserRuleCall_0() { return cOccurrenceUsagePrefixParserRuleCall_0; }
		
		//RenderingUsageKeyword
		public RuleCall getRenderingUsageKeywordParserRuleCall_1() { return cRenderingUsageKeywordParserRuleCall_1; }
		
		//Usage
		public RuleCall getUsageParserRuleCall_2() { return cUsageParserRuleCall_2; }
	}
	public class ExpressionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExpressionBody");
		private final RuleCall cCalculationBodyParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		///* EXPRESSIONS */
		//@Override
		//ExpressionBody returns SysML::Expression :
		//    CalculationBody
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//CalculationBody
		public RuleCall getCalculationBodyParserRuleCall() { return cCalculationBodyParserRuleCall; }
	}
	
	public class FilterPackageMemberVisibilityElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FilterPackageMemberVisibility");
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cPrivateLeftSquareBracketKeyword_0 = (Keyword)cPrivateEnumLiteralDeclaration.eContents().get(0);
		
		//enum FilterPackageMemberVisibility returns SysML::VisibilityKind :
		//    private = '['
		//;
		public EnumRule getRule() { return rule; }
		
		//private = '['
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration() { return cPrivateEnumLiteralDeclaration; }
		
		//'['
		public Keyword getPrivateLeftSquareBracketKeyword_0() { return cPrivateLeftSquareBracketKeyword_0; }
	}
	public class VisibilityIndicatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.VisibilityIndicator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivatePrivateKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cProtectedProtectedKeyword_2_0 = (Keyword)cProtectedEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum VisibilityIndicator returns SysML::VisibilityKind:
		//    public = 'public' | private = 'private'| protected = 'protected'
		//;
		public EnumRule getRule() { return rule; }
		
		//public = 'public' | private = 'private'| protected = 'protected'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//public = 'public'
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//'public'
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//private = 'private'
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }
		
		//'private'
		public Keyword getPrivatePrivateKeyword_1_0() { return cPrivatePrivateKeyword_1_0; }
		
		//protected = 'protected'
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_2() { return cProtectedEnumLiteralDeclaration_2; }
		
		//'protected'
		public Keyword getProtectedProtectedKeyword_2_0() { return cProtectedProtectedKeyword_2_0; }
	}
	public class FeatureDirectionElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FeatureDirection");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cInEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cInInKeyword_0_0 = (Keyword)cInEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOutEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOutOutKeyword_1_0 = (Keyword)cOutEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInoutEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInoutInoutKeyword_2_0 = (Keyword)cInoutEnumLiteralDeclaration_2.eContents().get(0);
		
		///* Usages */
		//enum FeatureDirection returns SysML::FeatureDirectionKind:
		//    in = 'in' | out = 'out' | inout = 'inout'
		//;
		public EnumRule getRule() { return rule; }
		
		//in = 'in' | out = 'out' | inout = 'inout'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//in = 'in'
		public EnumLiteralDeclaration getInEnumLiteralDeclaration_0() { return cInEnumLiteralDeclaration_0; }
		
		//'in'
		public Keyword getInInKeyword_0_0() { return cInInKeyword_0_0; }
		
		//out = 'out'
		public EnumLiteralDeclaration getOutEnumLiteralDeclaration_1() { return cOutEnumLiteralDeclaration_1; }
		
		//'out'
		public Keyword getOutOutKeyword_1_0() { return cOutOutKeyword_1_0; }
		
		//inout = 'inout'
		public EnumLiteralDeclaration getInoutEnumLiteralDeclaration_2() { return cInoutEnumLiteralDeclaration_2; }
		
		//'inout'
		public Keyword getInoutInoutKeyword_2_0() { return cInoutInoutKeyword_2_0; }
	}
	public class PortionKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.PortionKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSnapshotEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSnapshotSnapshotKeyword_0_0 = (Keyword)cSnapshotEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTimesliceEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTimesliceTimesliceKeyword_1_0 = (Keyword)cTimesliceEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum PortionKind returns SysML::PortionKind :
		//    // Literal keywords identified explicitly so they can be found by syntax highlighting script
		//    snapshot = 'snapshot' | timeslice = 'timeslice'
		//;
		public EnumRule getRule() { return rule; }
		
		//// Literal keywords identified explicitly so they can be found by syntax highlighting script
		//snapshot = 'snapshot' | timeslice = 'timeslice'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//// Literal keywords identified explicitly so they can be found by syntax highlighting script
		//snapshot = 'snapshot'
		public EnumLiteralDeclaration getSnapshotEnumLiteralDeclaration_0() { return cSnapshotEnumLiteralDeclaration_0; }
		
		//'snapshot'
		public Keyword getSnapshotSnapshotKeyword_0_0() { return cSnapshotSnapshotKeyword_0_0; }
		
		//timeslice = 'timeslice'
		public EnumLiteralDeclaration getTimesliceEnumLiteralDeclaration_1() { return cTimesliceEnumLiteralDeclaration_1; }
		
		//'timeslice'
		public Keyword getTimesliceTimesliceKeyword_1_0() { return cTimesliceTimesliceKeyword_1_0; }
	}
	public class TriggerFeatureKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.TriggerFeatureKind");
		private final EnumLiteralDeclaration cTriggerEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cTriggerAcceptKeyword_0 = (Keyword)cTriggerEnumLiteralDeclaration.eContents().get(0);
		
		//enum TriggerFeatureKind returns SysML::TransitionFeatureKind :
		//    trigger = 'accept'
		//;
		public EnumRule getRule() { return rule; }
		
		//trigger = 'accept'
		public EnumLiteralDeclaration getTriggerEnumLiteralDeclaration() { return cTriggerEnumLiteralDeclaration; }
		
		//'accept'
		public Keyword getTriggerAcceptKeyword_0() { return cTriggerAcceptKeyword_0; }
	}
	public class GuardFeatureKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.GuardFeatureKind");
		private final EnumLiteralDeclaration cGuardEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cGuardIfKeyword_0 = (Keyword)cGuardEnumLiteralDeclaration.eContents().get(0);
		
		//enum GuardFeatureKind returns SysML::TransitionFeatureKind :
		//    guard = 'if'
		//;
		public EnumRule getRule() { return rule; }
		
		//guard = 'if'
		public EnumLiteralDeclaration getGuardEnumLiteralDeclaration() { return cGuardEnumLiteralDeclaration; }
		
		//'if'
		public Keyword getGuardIfKeyword_0() { return cGuardIfKeyword_0; }
	}
	public class EffectFeatureKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.EffectFeatureKind");
		private final EnumLiteralDeclaration cEffectEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cEffectDoKeyword_0 = (Keyword)cEffectEnumLiteralDeclaration.eContents().get(0);
		
		//enum EffectFeatureKind returns SysML::TransitionFeatureKind :
		//    effect = 'do'
		//;
		public EnumRule getRule() { return rule; }
		
		//effect = 'do'
		public EnumLiteralDeclaration getEffectEnumLiteralDeclaration() { return cEffectEnumLiteralDeclaration; }
		
		//'do'
		public Keyword getEffectDoKeyword_0() { return cEffectDoKeyword_0; }
	}
	public class RequirementConstraintKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementConstraintKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAssumptionEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAssumptionAssumeKeyword_0_0 = (Keyword)cAssumptionEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRequirementEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRequirementRequireKeyword_1_0 = (Keyword)cRequirementEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum RequirementConstraintKind returns SysML::RequirementConstraintKind :
		//    assumption = 'assume' | requirement = 'require'
		//;
		public EnumRule getRule() { return rule; }
		
		//assumption = 'assume' | requirement = 'require'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//assumption = 'assume'
		public EnumLiteralDeclaration getAssumptionEnumLiteralDeclaration_0() { return cAssumptionEnumLiteralDeclaration_0; }
		
		//'assume'
		public Keyword getAssumptionAssumeKeyword_0_0() { return cAssumptionAssumeKeyword_0_0; }
		
		//requirement = 'require'
		public EnumLiteralDeclaration getRequirementEnumLiteralDeclaration_1() { return cRequirementEnumLiteralDeclaration_1; }
		
		//'require'
		public Keyword getRequirementRequireKeyword_1_0() { return cRequirementRequireKeyword_1_0; }
	}
	public class FramedConcernKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.FramedConcernKind");
		private final EnumLiteralDeclaration cRequirementEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cRequirementFrameKeyword_0 = (Keyword)cRequirementEnumLiteralDeclaration.eContents().get(0);
		
		//enum FramedConcernKind returns SysML::RequirementConstraintKind :
		//    requirement = 'frame'
		//;
		public EnumRule getRule() { return rule; }
		
		//requirement = 'frame'
		public EnumLiteralDeclaration getRequirementEnumLiteralDeclaration() { return cRequirementEnumLiteralDeclaration; }
		
		//'frame'
		public Keyword getRequirementFrameKeyword_0() { return cRequirementFrameKeyword_0; }
	}
	public class RequirementVerificationKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.RequirementVerificationKind");
		private final EnumLiteralDeclaration cRequirementEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cRequirementVerifyKeyword_0 = (Keyword)cRequirementEnumLiteralDeclaration.eContents().get(0);
		
		//enum RequirementVerificationKind returns SysML::RequirementConstraintKind :
		//    requirement = 'verify'
		//;
		public EnumRule getRule() { return rule; }
		
		//requirement = 'verify'
		public EnumLiteralDeclaration getRequirementEnumLiteralDeclaration() { return cRequirementEnumLiteralDeclaration; }
		
		//'verify'
		public Keyword getRequirementVerifyKeyword_0() { return cRequirementVerifyKeyword_0; }
	}
	public class ExposeVisibilityKindElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.omg.sysml.xtext.SysML.ExposeVisibilityKind");
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cProtectedExposeKeyword_0 = (Keyword)cProtectedEnumLiteralDeclaration.eContents().get(0);
		
		//enum ExposeVisibilityKind returns SysML::VisibilityKind :
		//    protected = 'expose'
		//;
		public EnumRule getRule() { return rule; }
		
		//protected = 'expose'
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration() { return cProtectedEnumLiteralDeclaration; }
		
		//'expose'
		public Keyword getProtectedExposeKeyword_0() { return cProtectedExposeKeyword_0; }
	}
	
	private final RootNamespaceElements pRootNamespace;
	private final IdentificationElements pIdentification;
	private final RelationshipBodyElements pRelationshipBody;
	private final DependencyElements pDependency;
	private final AnnotationElements pAnnotation;
	private final OwnedAnnotationElements pOwnedAnnotation;
	private final AnnotatingMemberElements pAnnotatingMember;
	private final AnnotatingElementElements pAnnotatingElement;
	private final CommentElements pComment;
	private final DocumentationElements pDocumentation;
	private final TextualRepresentationElements pTextualRepresentation;
	private final MetadataKeywordElements pMetadataKeyword;
	private final MetadataDefKeywordElements pMetadataDefKeyword;
	private final MetadataUsageKeywordElements pMetadataUsageKeyword;
	private final MetadataDefinitionElements pMetadataDefinition;
	private final PrefixMetadataAnnotationElements pPrefixMetadataAnnotation;
	private final PrefixMetadataMemberElements pPrefixMetadataMember;
	private final PrefixMetadataUsageElements pPrefixMetadataUsage;
	private final MetadataUsageElements pMetadataUsage;
	private final MetadataUsageDeclarationElements pMetadataUsageDeclaration;
	private final MetadataTypingElements pMetadataTyping;
	private final MetadataBodyElements pMetadataBody;
	private final MetadataBodyUsageMemberElements pMetadataBodyUsageMember;
	private final MetadataBodyUsageElements pMetadataBodyUsage;
	private final PackageElements pPackage;
	private final LibraryPackageElements pLibraryPackage;
	private final PackageDeclarationElements pPackageDeclaration;
	private final PackageBodyElements pPackageBody;
	private final PackageBodyElementElements pPackageBodyElement;
	private final MemberPrefixElements pMemberPrefix;
	private final PackageMemberElements pPackageMember;
	private final ElementFilterMemberElements pElementFilterMember;
	private final AliasMemberElements pAliasMember;
	private final ImportPrefixElements pImportPrefix;
	private final ImportElements pImport;
	private final MembershipImportElements pMembershipImport;
	private final ImportedMembershipElements pImportedMembership;
	private final NamespaceImportElements pNamespaceImport;
	private final ImportedNamespaceElements pImportedNamespace;
	private final FilterPackageElements pFilterPackage;
	private final FilterPackageImportElements pFilterPackageImport;
	private final FilterPackageMembershipImportElements pFilterPackageMembershipImport;
	private final FilterPackageNamespaceImportElements pFilterPackageNamespaceImport;
	private final FilterPackageMemberElements pFilterPackageMember;
	private final FilterPackageMemberVisibilityElements eFilterPackageMemberVisibility;
	private final VisibilityIndicatorElements eVisibilityIndicator;
	private final DefinitionElementElements pDefinitionElement;
	private final UsageElementElements pUsageElement;
	private final SubclassificationPartElements pSubclassificationPart;
	private final SpecializesKeywordElements pSpecializesKeyword;
	private final OwnedSubclassificationElements pOwnedSubclassification;
	private final FeatureDeclarationElements pFeatureDeclaration;
	private final FeatureSpecializationPartElements pFeatureSpecializationPart;
	private final MultiplicityPartElements pMultiplicityPart;
	private final FeatureSpecializationElements pFeatureSpecialization;
	private final TypingsElements pTypings;
	private final TypedByElements pTypedBy;
	private final DefinedByKeywordElements pDefinedByKeyword;
	private final SubsettingsElements pSubsettings;
	private final SubsetsElements pSubsets;
	private final SubsetsKeywordElements pSubsetsKeyword;
	private final ReferencesElements pReferences;
	private final ReferencesKeywordElements pReferencesKeyword;
	private final RedefinitionsElements pRedefinitions;
	private final RedefinesElements pRedefines;
	private final RedefinesKeywordElements pRedefinesKeyword;
	private final FeatureTypingElements pFeatureTyping;
	private final OwnedSubsettingElements pOwnedSubsetting;
	private final OwnedReferenceSubsettingElements pOwnedReferenceSubsetting;
	private final OwnedRedefinitionElements pOwnedRedefinition;
	private final OwnedMultiplicityElements pOwnedMultiplicity;
	private final MultiplicityRangeElements pMultiplicityRange;
	private final MultiplicityExpressionMemberElements pMultiplicityExpressionMember;
	private final BasicDefinitionPrefixElements pBasicDefinitionPrefix;
	private final DefinitionExtensionKeywordElements pDefinitionExtensionKeyword;
	private final DefinitionPrefixElements pDefinitionPrefix;
	private final DefinitionElements pDefinition;
	private final DefinitionDeclarationElements pDefinitionDeclaration;
	private final DefinitionBodyElements pDefinitionBody;
	private final DefinitionBodyItemElements pDefinitionBodyItem;
	private final DefinitionMemberElements pDefinitionMember;
	private final VariantUsageMemberElements pVariantUsageMember;
	private final NonOccurrenceUsageMemberElements pNonOccurrenceUsageMember;
	private final OccurrenceUsageMemberElements pOccurrenceUsageMember;
	private final StructureUsageMemberElements pStructureUsageMember;
	private final BehaviorUsageMemberElements pBehaviorUsageMember;
	private final FeatureDirectionElements eFeatureDirection;
	private final RefPrefixElements pRefPrefix;
	private final BasicUsagePrefixElements pBasicUsagePrefix;
	private final UsageExtensionKeywordElements pUsageExtensionKeyword;
	private final UsagePrefixElements pUsagePrefix;
	private final UsageElements pUsage;
	private final UsageDeclarationElements pUsageDeclaration;
	private final UsageCompletionElements pUsageCompletion;
	private final UsageBodyElements pUsageBody;
	private final ValuePartElements pValuePart;
	private final FeatureValueElements pFeatureValue;
	private final ReferenceKeywordElements pReferenceKeyword;
	private final ReferenceUsageKeywordElements pReferenceUsageKeyword;
	private final DefaultReferenceUsageElements pDefaultReferenceUsage;
	private final ReferenceUsageElements pReferenceUsage;
	private final VariantReferenceElements pVariantReference;
	private final NonOccurrenceUsageElementElements pNonOccurrenceUsageElement;
	private final OccurrenceUsageElementElements pOccurrenceUsageElement;
	private final StructureUsageElementElements pStructureUsageElement;
	private final BehaviorUsageElementElements pBehaviorUsageElement;
	private final VariantUsageElementElements pVariantUsageElement;
	private final ExtendedDefinitionElements pExtendedDefinition;
	private final ExtendedUsageElements pExtendedUsage;
	private final AttributeKeywordElements pAttributeKeyword;
	private final AttributeDefKeywordElements pAttributeDefKeyword;
	private final AttributeUsageKeywordElements pAttributeUsageKeyword;
	private final AttributeDefinitionElements pAttributeDefinition;
	private final AttributeUsageElements pAttributeUsage;
	private final EnumerationKeywordElements pEnumerationKeyword;
	private final EnumerationDefKeywordElements pEnumerationDefKeyword;
	private final EnumerationUsageKeywordElements pEnumerationUsageKeyword;
	private final EnumerationDefinitionElements pEnumerationDefinition;
	private final EnumerationBodyElements pEnumerationBody;
	private final EnumerationUsageMemberElements pEnumerationUsageMember;
	private final EnumeratedValueElements pEnumeratedValue;
	private final EnumerationUsageElements pEnumerationUsage;
	private final OccurrenceKeywordElements pOccurrenceKeyword;
	private final OccurrenceDefKeywordElements pOccurrenceDefKeyword;
	private final OccurrenceDefinitionPrefixElements pOccurrenceDefinitionPrefix;
	private final OccurrenceDefinitionElements pOccurrenceDefinition;
	private final IndividualDefinitionElements pIndividualDefinition;
	private final LifeClassMembershipElements pLifeClassMembership;
	private final LifeClassElements pLifeClass;
	private final OccurrenceUsageKeywordElements pOccurrenceUsageKeyword;
	private final OccurrenceUsagePrefixElements pOccurrenceUsagePrefix;
	private final OccurrenceUsageElements pOccurrenceUsage;
	private final IndividualUsageElements pIndividualUsage;
	private final PortionUsageElements pPortionUsage;
	private final PortionKindElements ePortionKind;
	private final EventOccurrenceUsageElements pEventOccurrenceUsage;
	private final EmptySuccessionMemberElements pEmptySuccessionMember;
	private final EmptySuccessionElements pEmptySuccession;
	private final MultiplicitySourceEndMemberElements pMultiplicitySourceEndMember;
	private final MultiplicitySourceEndElements pMultiplicitySourceEnd;
	private final EmptyTargetEndMemberElements pEmptyTargetEndMember;
	private final EmptyTargetEndElements pEmptyTargetEnd;
	private final ItemKeywordElements pItemKeyword;
	private final ItemDefKeywordElements pItemDefKeyword;
	private final ItemUsageKeywordElements pItemUsageKeyword;
	private final ItemDefinitionElements pItemDefinition;
	private final ItemUsageElements pItemUsage;
	private final PartKeywordElements pPartKeyword;
	private final PartDefKeywordElements pPartDefKeyword;
	private final PartUsageKeywordElements pPartUsageKeyword;
	private final PartDefinitionElements pPartDefinition;
	private final PartUsageElements pPartUsage;
	private final PortKeywordElements pPortKeyword;
	private final PortDefKeywordElements pPortDefKeyword;
	private final PortDefinitionElements pPortDefinition;
	private final ConjugatedPortDefinitionMemberElements pConjugatedPortDefinitionMember;
	private final ConjugatedPortDefinitionElements pConjugatedPortDefinition;
	private final PortConjugationElements pPortConjugation;
	private final ConjugatedPortTypingElements pConjugatedPortTyping;
	private final ConjugatedQualifiedNameElements pConjugatedQualifiedName;
	private final PortUsageKeywordElements pPortUsageKeyword;
	private final PortUsageElements pPortUsage;
	private final ConnectorEndMemberElements pConnectorEndMember;
	private final ConnectorEndElements pConnectorEnd;
	private final BindingKeywordElements pBindingKeyword;
	private final BindingConnectorAsUsageElements pBindingConnectorAsUsage;
	private final SuccessionKeywordElements pSuccessionKeyword;
	private final SuccessionAsUsageElements pSuccessionAsUsage;
	private final ConnectionKeywordElements pConnectionKeyword;
	private final ConnectionDefKeywordElements pConnectionDefKeyword;
	private final ConnectionDefinitionElements pConnectionDefinition;
	private final ConnectorKeywordElements pConnectorKeyword;
	private final ConnectionUsageKeywordElements pConnectionUsageKeyword;
	private final ConnectionUsageElements pConnectionUsage;
	private final ConnectorPartElements pConnectorPart;
	private final BinaryConnectorPartElements pBinaryConnectorPart;
	private final NaryConnectorPartElements pNaryConnectorPart;
	private final EmptySourceEndMemberElements pEmptySourceEndMember;
	private final EmptySourceEndElements pEmptySourceEnd;
	private final FlowConnectionKeywordElements pFlowConnectionKeyword;
	private final FlowConnectionDefKeywordElements pFlowConnectionDefKeyword;
	private final FlowConnectionDefinitionElements pFlowConnectionDefinition;
	private final MessageKeywordElements pMessageKeyword;
	private final MessageElements pMessage;
	private final MessageDeclarationElements pMessageDeclaration;
	private final MessageEventMemberElements pMessageEventMember;
	private final MessageEventElements pMessageEvent;
	private final FlowConnectionUsageElements pFlowConnectionUsage;
	private final SuccessionFlowConnectionKeywordElements pSuccessionFlowConnectionKeyword;
	private final SuccessionFlowConnectionUsageElements pSuccessionFlowConnectionUsage;
	private final FlowConnectionDeclarationElements pFlowConnectionDeclaration;
	private final ItemFeatureMemberElements pItemFeatureMember;
	private final ItemFeatureElements pItemFeature;
	private final PayloadFeatureElements pPayloadFeature;
	private final PayloadFeatureSpecializationPartElements pPayloadFeatureSpecializationPart;
	private final FlowEndMemberElements pFlowEndMember;
	private final FlowEndElements pFlowEnd;
	private final FlowEndSubsettingElements pFlowEndSubsetting;
	private final FeatureChainPrefixElements pFeatureChainPrefix;
	private final FlowFeatureMemberElements pFlowFeatureMember;
	private final FlowFeatureElements pFlowFeature;
	private final FlowRedefinitionElements pFlowRedefinition;
	private final InterfaceKeywordElements pInterfaceKeyword;
	private final InterfaceDefKeywordElements pInterfaceDefKeyword;
	private final InterfaceDefinitionElements pInterfaceDefinition;
	private final InterfaceBodyElements pInterfaceBody;
	private final InterfaceBodyItemElements pInterfaceBodyItem;
	private final InterfaceNonOccurrenceUsageMemberElements pInterfaceNonOccurrenceUsageMember;
	private final InterfaceNonOccurrenceUsageElementElements pInterfaceNonOccurrenceUsageElement;
	private final InterfaceOccurrenceUsageMemberElements pInterfaceOccurrenceUsageMember;
	private final InterfaceOccurrenceUsageElementElements pInterfaceOccurrenceUsageElement;
	private final DefaultInterfaceEndElements pDefaultInterfaceEnd;
	private final InterfaceUsageKeywordElements pInterfaceUsageKeyword;
	private final InterfaceUsageElements pInterfaceUsage;
	private final InterfaceUsageDeclarationElements pInterfaceUsageDeclaration;
	private final InterfacePartElements pInterfacePart;
	private final BinaryInterfacePartElements pBinaryInterfacePart;
	private final NaryInterfacePartElements pNaryInterfacePart;
	private final InterfaceEndMemberElements pInterfaceEndMember;
	private final InterfaceEndElements pInterfaceEnd;
	private final AllocationKeywordElements pAllocationKeyword;
	private final AllocationDefKeywordElements pAllocationDefKeyword;
	private final AllocationDefinitionElements pAllocationDefinition;
	private final AllocationUsageKeywordElements pAllocationUsageKeyword;
	private final AllocateKeywordElements pAllocateKeyword;
	private final AllocationUsageElements pAllocationUsage;
	private final AllocationUsageDeclarationElements pAllocationUsageDeclaration;
	private final ActionKeywordElements pActionKeyword;
	private final ActionDefKeywordElements pActionDefKeyword;
	private final ActionDefinitionElements pActionDefinition;
	private final ActionBodyElements pActionBody;
	private final ActionBodyItemElements pActionBodyItem;
	private final InitialNodeMemberElements pInitialNodeMember;
	private final ActionNodeMemberElements pActionNodeMember;
	private final TargetSuccessionMemberElements pTargetSuccessionMember;
	private final GuardedSuccessionMemberElements pGuardedSuccessionMember;
	private final ActionUsageKeywordElements pActionUsageKeyword;
	private final ActionUsageElements pActionUsage;
	private final PerformActionUsageElements pPerformActionUsage;
	private final PerformActionUsageDeclarationElements pPerformActionUsageDeclaration;
	private final ActionUsageDeclarationElements pActionUsageDeclaration;
	private final ActionNodeElements pActionNode;
	private final ActionNodeUsageDeclarationElements pActionNodeUsageDeclaration;
	private final ActionNodePrefixElements pActionNodePrefix;
	private final AcceptNodeElements pAcceptNode;
	private final AcceptNodeDeclarationElements pAcceptNodeDeclaration;
	private final AcceptParameterPartElements pAcceptParameterPart;
	private final PayloadParameterMemberElements pPayloadParameterMember;
	private final PayloadParameterElements pPayloadParameter;
	private final TriggerValuePartElements pTriggerValuePart;
	private final TriggerFeatureValueElements pTriggerFeatureValue;
	private final TriggerExpressionElements pTriggerExpression;
	private final TimeTriggerKindElements pTimeTriggerKind;
	private final ChangeTriggerKindElements pChangeTriggerKind;
	private final ArgumentExpressionMemberElements pArgumentExpressionMember;
	private final ArgumentExpressionElements pArgumentExpression;
	private final ArgumentExpressionValueElements pArgumentExpressionValue;
	private final SendNodeElements pSendNode;
	private final SendNodeDeclarationElements pSendNodeDeclaration;
	private final NodeParameterMemberElements pNodeParameterMember;
	private final NodeParameterElements pNodeParameter;
	private final FeatureBindingElements pFeatureBinding;
	private final AssignmentNodeElements pAssignmentNode;
	private final AssignmentNodeDeclarationElements pAssignmentNodeDeclaration;
	private final AssignmentTargetMemberElements pAssignmentTargetMember;
	private final TargetParameterElements pTargetParameter;
	private final TargetFeatureMemberElements pTargetFeatureMember;
	private final TargetFeatureElements pTargetFeature;
	private final TargetAccessedFeatureMemberElements pTargetAccessedFeatureMember;
	private final TargetBindingElements pTargetBinding;
	private final TargetExpressionElements pTargetExpression;
	private final ExpressionParameterMemberElements pExpressionParameterMember;
	private final IfNodeElements pIfNode;
	private final ActionBodyParameterMemberElements pActionBodyParameterMember;
	private final ActionBodyParameterElements pActionBodyParameter;
	private final IfNodeParameterMemberElements pIfNodeParameterMember;
	private final WhileLoopNodeElements pWhileLoopNode;
	private final ForLoopNodeElements pForLoopNode;
	private final ForVariableDeclarationMemberElements pForVariableDeclarationMember;
	private final ForVariableDeclarationElements pForVariableDeclaration;
	private final ControlNodeElements pControlNode;
	private final ControlNodePrefixElements pControlNodePrefix;
	private final MergeNodeElements pMergeNode;
	private final DecisionNodeElements pDecisionNode;
	private final JoinNodeElements pJoinNode;
	private final ForkNodeElements pForkNode;
	private final ActionNodeBodyElements pActionNodeBody;
	private final EmptyParameterMemberElements pEmptyParameterMember;
	private final EmptyUsageElements pEmptyUsage;
	private final ActionTargetSuccessionElements pActionTargetSuccession;
	private final TargetSuccessionElements pTargetSuccession;
	private final GuardedTargetSuccessionElements pGuardedTargetSuccession;
	private final DefaultTargetSuccessionElements pDefaultTargetSuccession;
	private final GuardedSuccessionElements pGuardedSuccession;
	private final StateKeywordElements pStateKeyword;
	private final StateDefKeywordElements pStateDefKeyword;
	private final StateDefinitionElements pStateDefinition;
	private final StateDefBodyElements pStateDefBody;
	private final StateBodyPartElements pStateBodyPart;
	private final StateBodyItemElements pStateBodyItem;
	private final EntryActionMemberElements pEntryActionMember;
	private final EntryActionKindElements pEntryActionKind;
	private final DoActionMemberElements pDoActionMember;
	private final DoActionKindElements pDoActionKind;
	private final ExitActionMemberElements pExitActionMember;
	private final ExitActionKindElements pExitActionKind;
	private final EntryTransitionMemberElements pEntryTransitionMember;
	private final StateActionUsageElements pStateActionUsage;
	private final EmptyActionUsageElements pEmptyActionUsage;
	private final PerformedActionUsageElements pPerformedActionUsage;
	private final TransitionUsageMemberElements pTransitionUsageMember;
	private final TargetTransitionUsageMemberElements pTargetTransitionUsageMember;
	private final StateUsageKeywordElements pStateUsageKeyword;
	private final StateUsageElements pStateUsage;
	private final StateUsageBodyElements pStateUsageBody;
	private final ExhibitStateUsageElements pExhibitStateUsage;
	private final TransitionUsageKeywordElements pTransitionUsageKeyword;
	private final TransitionUsageElements pTransitionUsage;
	private final TargetTransitionUsageElements pTargetTransitionUsage;
	private final TransitionSourceMemberElements pTransitionSourceMember;
	private final TriggerActionMemberElements pTriggerActionMember;
	private final TriggerFeatureKindElements eTriggerFeatureKind;
	private final TriggerActionElements pTriggerAction;
	private final GuardExpressionMemberElements pGuardExpressionMember;
	private final GuardFeatureKindElements eGuardFeatureKind;
	private final EffectBehaviorMemberElements pEffectBehaviorMember;
	private final EffectFeatureKindElements eEffectFeatureKind;
	private final EffectBehaviorUsageElements pEffectBehaviorUsage;
	private final TransitionSuccessionMemberElements pTransitionSuccessionMember;
	private final TransitionSuccessionElements pTransitionSuccession;
	private final CalculationKeywordElements pCalculationKeyword;
	private final CalculationDefKeywordElements pCalculationDefKeyword;
	private final CalculationDefinitionElements pCalculationDefinition;
	private final CalculationBodyElements pCalculationBody;
	private final CalculationBodyPartElements pCalculationBodyPart;
	private final CalculationBodyItemElements pCalculationBodyItem;
	private final ReturnParameterMemberElements pReturnParameterMember;
	private final ResultExpressionMemberElements pResultExpressionMember;
	private final CalculationUsageKeywordElements pCalculationUsageKeyword;
	private final CalculationUsageElements pCalculationUsage;
	private final ConstraintKeywordElements pConstraintKeyword;
	private final ConstraintDefKeywordElements pConstraintDefKeyword;
	private final ConstraintDefinitionElements pConstraintDefinition;
	private final ConstraintUsageKeywordElements pConstraintUsageKeyword;
	private final ConstraintUsageElements pConstraintUsage;
	private final AssertConstraintUsageElements pAssertConstraintUsage;
	private final ConstraintUsageDeclarationElements pConstraintUsageDeclaration;
	private final RequirementKeywordElements pRequirementKeyword;
	private final RequirementDefKeywordElements pRequirementDefKeyword;
	private final RequirementDefinitionElements pRequirementDefinition;
	private final RequirementBodyElements pRequirementBody;
	private final RequirementBodyItemElements pRequirementBodyItem;
	private final SubjectMemberElements pSubjectMember;
	private final SubjectUsageElements pSubjectUsage;
	private final RequirementConstraintMemberElements pRequirementConstraintMember;
	private final RequirementConstraintKindElements eRequirementConstraintKind;
	private final RequirementConstraintUsageElements pRequirementConstraintUsage;
	private final FramedConcernMemberElements pFramedConcernMember;
	private final FramedConcernKindElements eFramedConcernKind;
	private final FramedConcernUsageElements pFramedConcernUsage;
	private final ActorMemberElements pActorMember;
	private final ActorUsageElements pActorUsage;
	private final StakeholderMemberElements pStakeholderMember;
	private final StakeholderUsageElements pStakeholderUsage;
	private final RequirementUsageKeywordElements pRequirementUsageKeyword;
	private final RequirementUsageElements pRequirementUsage;
	private final SatisfyRequirementUsageElements pSatisfyRequirementUsage;
	private final SatisfactionSubjectMemberElements pSatisfactionSubjectMember;
	private final SatisfactionParameterElements pSatisfactionParameter;
	private final SatisfactionFeatureValueElements pSatisfactionFeatureValue;
	private final SatisfactionReferenceExpressionElements pSatisfactionReferenceExpression;
	private final ConcernKeywordElements pConcernKeyword;
	private final ConcernDefKeywordElements pConcernDefKeyword;
	private final ConcernDefinitionElements pConcernDefinition;
	private final ConcernUsageKeywordElements pConcernUsageKeyword;
	private final ConcernUsageElements pConcernUsage;
	private final CaseKeywordElements pCaseKeyword;
	private final CaseDefKeywordElements pCaseDefKeyword;
	private final CaseDefinitionElements pCaseDefinition;
	private final CaseBodyElements pCaseBody;
	private final CaseBodyItemElements pCaseBodyItem;
	private final ObjectiveMemberElements pObjectiveMember;
	private final ObjectiveRequirementUsageElements pObjectiveRequirementUsage;
	private final CaseUsageKeywordElements pCaseUsageKeyword;
	private final CaseUsageElements pCaseUsage;
	private final AnalysisCaseKeywordElements pAnalysisCaseKeyword;
	private final AnalysisCaseDefKeywordElements pAnalysisCaseDefKeyword;
	private final AnalysisCaseUsageKeywordElements pAnalysisCaseUsageKeyword;
	private final AnalysisCaseDefinitionElements pAnalysisCaseDefinition;
	private final AnalysisCaseUsageElements pAnalysisCaseUsage;
	private final VerificationCaseKeywordElements pVerificationCaseKeyword;
	private final VerificationCaseDefKeywordElements pVerificationCaseDefKeyword;
	private final VerificationCaseUsageKeywordElements pVerificationCaseUsageKeyword;
	private final VerificationCaseDefinitionElements pVerificationCaseDefinition;
	private final VerificationCaseUsageElements pVerificationCaseUsage;
	private final RequirementVerificationMemberElements pRequirementVerificationMember;
	private final RequirementVerificationKindElements eRequirementVerificationKind;
	private final RequirementVerificationUsageElements pRequirementVerificationUsage;
	private final UseCaseKeywordElements pUseCaseKeyword;
	private final UseCaseDefKeywordElements pUseCaseDefKeyword;
	private final UseCaseUsageKeywordElements pUseCaseUsageKeyword;
	private final UseCaseDefinitionElements pUseCaseDefinition;
	private final UseCaseUsageElements pUseCaseUsage;
	private final IncludeUseCaseUsageElements pIncludeUseCaseUsage;
	private final ViewKeywordElements pViewKeyword;
	private final ViewDefKeywordElements pViewDefKeyword;
	private final ViewDefinitionElements pViewDefinition;
	private final ViewDefinitionBodyElements pViewDefinitionBody;
	private final ViewDefinitionBodyItemElements pViewDefinitionBodyItem;
	private final ViewRenderingMemberElements pViewRenderingMember;
	private final ViewRenderingUsageElements pViewRenderingUsage;
	private final ViewUsageKeywordElements pViewUsageKeyword;
	private final ViewUsageElements pViewUsage;
	private final ViewBodyElements pViewBody;
	private final ViewBodyItemElements pViewBodyItem;
	private final ExposePrefixElements pExposePrefix;
	private final ExposeVisibilityKindElements eExposeVisibilityKind;
	private final ExposeElements pExpose;
	private final MembershipExposeElements pMembershipExpose;
	private final NamespaceExposeElements pNamespaceExpose;
	private final ViewpointKeywordElements pViewpointKeyword;
	private final ViewpointDefKeywordElements pViewpointDefKeyword;
	private final ViewpointUsageKeywordElements pViewpointUsageKeyword;
	private final ViewpointDefinitionElements pViewpointDefinition;
	private final ViewpointUsageElements pViewpointUsage;
	private final RenderingKeywordElements pRenderingKeyword;
	private final RenderingDefKeywordElements pRenderingDefKeyword;
	private final RenderingDefinitionElements pRenderingDefinition;
	private final RenderingUsageKeywordElements pRenderingUsageKeyword;
	private final RenderingUsageElements pRenderingUsage;
	private final ExpressionBodyElements pExpressionBody;
	
	private final Grammar grammar;
	
	private final KerMLExpressionsGrammarAccess gaKerMLExpressions;

	@Inject
	public SysMLGrammarAccess(GrammarProvider grammarProvider,
			KerMLExpressionsGrammarAccess gaKerMLExpressions) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaKerMLExpressions = gaKerMLExpressions;
		this.pRootNamespace = new RootNamespaceElements();
		this.pIdentification = new IdentificationElements();
		this.pRelationshipBody = new RelationshipBodyElements();
		this.pDependency = new DependencyElements();
		this.pAnnotation = new AnnotationElements();
		this.pOwnedAnnotation = new OwnedAnnotationElements();
		this.pAnnotatingMember = new AnnotatingMemberElements();
		this.pAnnotatingElement = new AnnotatingElementElements();
		this.pComment = new CommentElements();
		this.pDocumentation = new DocumentationElements();
		this.pTextualRepresentation = new TextualRepresentationElements();
		this.pMetadataKeyword = new MetadataKeywordElements();
		this.pMetadataDefKeyword = new MetadataDefKeywordElements();
		this.pMetadataUsageKeyword = new MetadataUsageKeywordElements();
		this.pMetadataDefinition = new MetadataDefinitionElements();
		this.pPrefixMetadataAnnotation = new PrefixMetadataAnnotationElements();
		this.pPrefixMetadataMember = new PrefixMetadataMemberElements();
		this.pPrefixMetadataUsage = new PrefixMetadataUsageElements();
		this.pMetadataUsage = new MetadataUsageElements();
		this.pMetadataUsageDeclaration = new MetadataUsageDeclarationElements();
		this.pMetadataTyping = new MetadataTypingElements();
		this.pMetadataBody = new MetadataBodyElements();
		this.pMetadataBodyUsageMember = new MetadataBodyUsageMemberElements();
		this.pMetadataBodyUsage = new MetadataBodyUsageElements();
		this.pPackage = new PackageElements();
		this.pLibraryPackage = new LibraryPackageElements();
		this.pPackageDeclaration = new PackageDeclarationElements();
		this.pPackageBody = new PackageBodyElements();
		this.pPackageBodyElement = new PackageBodyElementElements();
		this.pMemberPrefix = new MemberPrefixElements();
		this.pPackageMember = new PackageMemberElements();
		this.pElementFilterMember = new ElementFilterMemberElements();
		this.pAliasMember = new AliasMemberElements();
		this.pImportPrefix = new ImportPrefixElements();
		this.pImport = new ImportElements();
		this.pMembershipImport = new MembershipImportElements();
		this.pImportedMembership = new ImportedMembershipElements();
		this.pNamespaceImport = new NamespaceImportElements();
		this.pImportedNamespace = new ImportedNamespaceElements();
		this.pFilterPackage = new FilterPackageElements();
		this.pFilterPackageImport = new FilterPackageImportElements();
		this.pFilterPackageMembershipImport = new FilterPackageMembershipImportElements();
		this.pFilterPackageNamespaceImport = new FilterPackageNamespaceImportElements();
		this.pFilterPackageMember = new FilterPackageMemberElements();
		this.eFilterPackageMemberVisibility = new FilterPackageMemberVisibilityElements();
		this.eVisibilityIndicator = new VisibilityIndicatorElements();
		this.pDefinitionElement = new DefinitionElementElements();
		this.pUsageElement = new UsageElementElements();
		this.pSubclassificationPart = new SubclassificationPartElements();
		this.pSpecializesKeyword = new SpecializesKeywordElements();
		this.pOwnedSubclassification = new OwnedSubclassificationElements();
		this.pFeatureDeclaration = new FeatureDeclarationElements();
		this.pFeatureSpecializationPart = new FeatureSpecializationPartElements();
		this.pMultiplicityPart = new MultiplicityPartElements();
		this.pFeatureSpecialization = new FeatureSpecializationElements();
		this.pTypings = new TypingsElements();
		this.pTypedBy = new TypedByElements();
		this.pDefinedByKeyword = new DefinedByKeywordElements();
		this.pSubsettings = new SubsettingsElements();
		this.pSubsets = new SubsetsElements();
		this.pSubsetsKeyword = new SubsetsKeywordElements();
		this.pReferences = new ReferencesElements();
		this.pReferencesKeyword = new ReferencesKeywordElements();
		this.pRedefinitions = new RedefinitionsElements();
		this.pRedefines = new RedefinesElements();
		this.pRedefinesKeyword = new RedefinesKeywordElements();
		this.pFeatureTyping = new FeatureTypingElements();
		this.pOwnedSubsetting = new OwnedSubsettingElements();
		this.pOwnedReferenceSubsetting = new OwnedReferenceSubsettingElements();
		this.pOwnedRedefinition = new OwnedRedefinitionElements();
		this.pOwnedMultiplicity = new OwnedMultiplicityElements();
		this.pMultiplicityRange = new MultiplicityRangeElements();
		this.pMultiplicityExpressionMember = new MultiplicityExpressionMemberElements();
		this.pBasicDefinitionPrefix = new BasicDefinitionPrefixElements();
		this.pDefinitionExtensionKeyword = new DefinitionExtensionKeywordElements();
		this.pDefinitionPrefix = new DefinitionPrefixElements();
		this.pDefinition = new DefinitionElements();
		this.pDefinitionDeclaration = new DefinitionDeclarationElements();
		this.pDefinitionBody = new DefinitionBodyElements();
		this.pDefinitionBodyItem = new DefinitionBodyItemElements();
		this.pDefinitionMember = new DefinitionMemberElements();
		this.pVariantUsageMember = new VariantUsageMemberElements();
		this.pNonOccurrenceUsageMember = new NonOccurrenceUsageMemberElements();
		this.pOccurrenceUsageMember = new OccurrenceUsageMemberElements();
		this.pStructureUsageMember = new StructureUsageMemberElements();
		this.pBehaviorUsageMember = new BehaviorUsageMemberElements();
		this.eFeatureDirection = new FeatureDirectionElements();
		this.pRefPrefix = new RefPrefixElements();
		this.pBasicUsagePrefix = new BasicUsagePrefixElements();
		this.pUsageExtensionKeyword = new UsageExtensionKeywordElements();
		this.pUsagePrefix = new UsagePrefixElements();
		this.pUsage = new UsageElements();
		this.pUsageDeclaration = new UsageDeclarationElements();
		this.pUsageCompletion = new UsageCompletionElements();
		this.pUsageBody = new UsageBodyElements();
		this.pValuePart = new ValuePartElements();
		this.pFeatureValue = new FeatureValueElements();
		this.pReferenceKeyword = new ReferenceKeywordElements();
		this.pReferenceUsageKeyword = new ReferenceUsageKeywordElements();
		this.pDefaultReferenceUsage = new DefaultReferenceUsageElements();
		this.pReferenceUsage = new ReferenceUsageElements();
		this.pVariantReference = new VariantReferenceElements();
		this.pNonOccurrenceUsageElement = new NonOccurrenceUsageElementElements();
		this.pOccurrenceUsageElement = new OccurrenceUsageElementElements();
		this.pStructureUsageElement = new StructureUsageElementElements();
		this.pBehaviorUsageElement = new BehaviorUsageElementElements();
		this.pVariantUsageElement = new VariantUsageElementElements();
		this.pExtendedDefinition = new ExtendedDefinitionElements();
		this.pExtendedUsage = new ExtendedUsageElements();
		this.pAttributeKeyword = new AttributeKeywordElements();
		this.pAttributeDefKeyword = new AttributeDefKeywordElements();
		this.pAttributeUsageKeyword = new AttributeUsageKeywordElements();
		this.pAttributeDefinition = new AttributeDefinitionElements();
		this.pAttributeUsage = new AttributeUsageElements();
		this.pEnumerationKeyword = new EnumerationKeywordElements();
		this.pEnumerationDefKeyword = new EnumerationDefKeywordElements();
		this.pEnumerationUsageKeyword = new EnumerationUsageKeywordElements();
		this.pEnumerationDefinition = new EnumerationDefinitionElements();
		this.pEnumerationBody = new EnumerationBodyElements();
		this.pEnumerationUsageMember = new EnumerationUsageMemberElements();
		this.pEnumeratedValue = new EnumeratedValueElements();
		this.pEnumerationUsage = new EnumerationUsageElements();
		this.pOccurrenceKeyword = new OccurrenceKeywordElements();
		this.pOccurrenceDefKeyword = new OccurrenceDefKeywordElements();
		this.pOccurrenceDefinitionPrefix = new OccurrenceDefinitionPrefixElements();
		this.pOccurrenceDefinition = new OccurrenceDefinitionElements();
		this.pIndividualDefinition = new IndividualDefinitionElements();
		this.pLifeClassMembership = new LifeClassMembershipElements();
		this.pLifeClass = new LifeClassElements();
		this.pOccurrenceUsageKeyword = new OccurrenceUsageKeywordElements();
		this.pOccurrenceUsagePrefix = new OccurrenceUsagePrefixElements();
		this.pOccurrenceUsage = new OccurrenceUsageElements();
		this.pIndividualUsage = new IndividualUsageElements();
		this.pPortionUsage = new PortionUsageElements();
		this.ePortionKind = new PortionKindElements();
		this.pEventOccurrenceUsage = new EventOccurrenceUsageElements();
		this.pEmptySuccessionMember = new EmptySuccessionMemberElements();
		this.pEmptySuccession = new EmptySuccessionElements();
		this.pMultiplicitySourceEndMember = new MultiplicitySourceEndMemberElements();
		this.pMultiplicitySourceEnd = new MultiplicitySourceEndElements();
		this.pEmptyTargetEndMember = new EmptyTargetEndMemberElements();
		this.pEmptyTargetEnd = new EmptyTargetEndElements();
		this.pItemKeyword = new ItemKeywordElements();
		this.pItemDefKeyword = new ItemDefKeywordElements();
		this.pItemUsageKeyword = new ItemUsageKeywordElements();
		this.pItemDefinition = new ItemDefinitionElements();
		this.pItemUsage = new ItemUsageElements();
		this.pPartKeyword = new PartKeywordElements();
		this.pPartDefKeyword = new PartDefKeywordElements();
		this.pPartUsageKeyword = new PartUsageKeywordElements();
		this.pPartDefinition = new PartDefinitionElements();
		this.pPartUsage = new PartUsageElements();
		this.pPortKeyword = new PortKeywordElements();
		this.pPortDefKeyword = new PortDefKeywordElements();
		this.pPortDefinition = new PortDefinitionElements();
		this.pConjugatedPortDefinitionMember = new ConjugatedPortDefinitionMemberElements();
		this.pConjugatedPortDefinition = new ConjugatedPortDefinitionElements();
		this.pPortConjugation = new PortConjugationElements();
		this.pConjugatedPortTyping = new ConjugatedPortTypingElements();
		this.pConjugatedQualifiedName = new ConjugatedQualifiedNameElements();
		this.pPortUsageKeyword = new PortUsageKeywordElements();
		this.pPortUsage = new PortUsageElements();
		this.pConnectorEndMember = new ConnectorEndMemberElements();
		this.pConnectorEnd = new ConnectorEndElements();
		this.pBindingKeyword = new BindingKeywordElements();
		this.pBindingConnectorAsUsage = new BindingConnectorAsUsageElements();
		this.pSuccessionKeyword = new SuccessionKeywordElements();
		this.pSuccessionAsUsage = new SuccessionAsUsageElements();
		this.pConnectionKeyword = new ConnectionKeywordElements();
		this.pConnectionDefKeyword = new ConnectionDefKeywordElements();
		this.pConnectionDefinition = new ConnectionDefinitionElements();
		this.pConnectorKeyword = new ConnectorKeywordElements();
		this.pConnectionUsageKeyword = new ConnectionUsageKeywordElements();
		this.pConnectionUsage = new ConnectionUsageElements();
		this.pConnectorPart = new ConnectorPartElements();
		this.pBinaryConnectorPart = new BinaryConnectorPartElements();
		this.pNaryConnectorPart = new NaryConnectorPartElements();
		this.pEmptySourceEndMember = new EmptySourceEndMemberElements();
		this.pEmptySourceEnd = new EmptySourceEndElements();
		this.pFlowConnectionKeyword = new FlowConnectionKeywordElements();
		this.pFlowConnectionDefKeyword = new FlowConnectionDefKeywordElements();
		this.pFlowConnectionDefinition = new FlowConnectionDefinitionElements();
		this.pMessageKeyword = new MessageKeywordElements();
		this.pMessage = new MessageElements();
		this.pMessageDeclaration = new MessageDeclarationElements();
		this.pMessageEventMember = new MessageEventMemberElements();
		this.pMessageEvent = new MessageEventElements();
		this.pFlowConnectionUsage = new FlowConnectionUsageElements();
		this.pSuccessionFlowConnectionKeyword = new SuccessionFlowConnectionKeywordElements();
		this.pSuccessionFlowConnectionUsage = new SuccessionFlowConnectionUsageElements();
		this.pFlowConnectionDeclaration = new FlowConnectionDeclarationElements();
		this.pItemFeatureMember = new ItemFeatureMemberElements();
		this.pItemFeature = new ItemFeatureElements();
		this.pPayloadFeature = new PayloadFeatureElements();
		this.pPayloadFeatureSpecializationPart = new PayloadFeatureSpecializationPartElements();
		this.pFlowEndMember = new FlowEndMemberElements();
		this.pFlowEnd = new FlowEndElements();
		this.pFlowEndSubsetting = new FlowEndSubsettingElements();
		this.pFeatureChainPrefix = new FeatureChainPrefixElements();
		this.pFlowFeatureMember = new FlowFeatureMemberElements();
		this.pFlowFeature = new FlowFeatureElements();
		this.pFlowRedefinition = new FlowRedefinitionElements();
		this.pInterfaceKeyword = new InterfaceKeywordElements();
		this.pInterfaceDefKeyword = new InterfaceDefKeywordElements();
		this.pInterfaceDefinition = new InterfaceDefinitionElements();
		this.pInterfaceBody = new InterfaceBodyElements();
		this.pInterfaceBodyItem = new InterfaceBodyItemElements();
		this.pInterfaceNonOccurrenceUsageMember = new InterfaceNonOccurrenceUsageMemberElements();
		this.pInterfaceNonOccurrenceUsageElement = new InterfaceNonOccurrenceUsageElementElements();
		this.pInterfaceOccurrenceUsageMember = new InterfaceOccurrenceUsageMemberElements();
		this.pInterfaceOccurrenceUsageElement = new InterfaceOccurrenceUsageElementElements();
		this.pDefaultInterfaceEnd = new DefaultInterfaceEndElements();
		this.pInterfaceUsageKeyword = new InterfaceUsageKeywordElements();
		this.pInterfaceUsage = new InterfaceUsageElements();
		this.pInterfaceUsageDeclaration = new InterfaceUsageDeclarationElements();
		this.pInterfacePart = new InterfacePartElements();
		this.pBinaryInterfacePart = new BinaryInterfacePartElements();
		this.pNaryInterfacePart = new NaryInterfacePartElements();
		this.pInterfaceEndMember = new InterfaceEndMemberElements();
		this.pInterfaceEnd = new InterfaceEndElements();
		this.pAllocationKeyword = new AllocationKeywordElements();
		this.pAllocationDefKeyword = new AllocationDefKeywordElements();
		this.pAllocationDefinition = new AllocationDefinitionElements();
		this.pAllocationUsageKeyword = new AllocationUsageKeywordElements();
		this.pAllocateKeyword = new AllocateKeywordElements();
		this.pAllocationUsage = new AllocationUsageElements();
		this.pAllocationUsageDeclaration = new AllocationUsageDeclarationElements();
		this.pActionKeyword = new ActionKeywordElements();
		this.pActionDefKeyword = new ActionDefKeywordElements();
		this.pActionDefinition = new ActionDefinitionElements();
		this.pActionBody = new ActionBodyElements();
		this.pActionBodyItem = new ActionBodyItemElements();
		this.pInitialNodeMember = new InitialNodeMemberElements();
		this.pActionNodeMember = new ActionNodeMemberElements();
		this.pTargetSuccessionMember = new TargetSuccessionMemberElements();
		this.pGuardedSuccessionMember = new GuardedSuccessionMemberElements();
		this.pActionUsageKeyword = new ActionUsageKeywordElements();
		this.pActionUsage = new ActionUsageElements();
		this.pPerformActionUsage = new PerformActionUsageElements();
		this.pPerformActionUsageDeclaration = new PerformActionUsageDeclarationElements();
		this.pActionUsageDeclaration = new ActionUsageDeclarationElements();
		this.pActionNode = new ActionNodeElements();
		this.pActionNodeUsageDeclaration = new ActionNodeUsageDeclarationElements();
		this.pActionNodePrefix = new ActionNodePrefixElements();
		this.pAcceptNode = new AcceptNodeElements();
		this.pAcceptNodeDeclaration = new AcceptNodeDeclarationElements();
		this.pAcceptParameterPart = new AcceptParameterPartElements();
		this.pPayloadParameterMember = new PayloadParameterMemberElements();
		this.pPayloadParameter = new PayloadParameterElements();
		this.pTriggerValuePart = new TriggerValuePartElements();
		this.pTriggerFeatureValue = new TriggerFeatureValueElements();
		this.pTriggerExpression = new TriggerExpressionElements();
		this.pTimeTriggerKind = new TimeTriggerKindElements();
		this.pChangeTriggerKind = new ChangeTriggerKindElements();
		this.pArgumentExpressionMember = new ArgumentExpressionMemberElements();
		this.pArgumentExpression = new ArgumentExpressionElements();
		this.pArgumentExpressionValue = new ArgumentExpressionValueElements();
		this.pSendNode = new SendNodeElements();
		this.pSendNodeDeclaration = new SendNodeDeclarationElements();
		this.pNodeParameterMember = new NodeParameterMemberElements();
		this.pNodeParameter = new NodeParameterElements();
		this.pFeatureBinding = new FeatureBindingElements();
		this.pAssignmentNode = new AssignmentNodeElements();
		this.pAssignmentNodeDeclaration = new AssignmentNodeDeclarationElements();
		this.pAssignmentTargetMember = new AssignmentTargetMemberElements();
		this.pTargetParameter = new TargetParameterElements();
		this.pTargetFeatureMember = new TargetFeatureMemberElements();
		this.pTargetFeature = new TargetFeatureElements();
		this.pTargetAccessedFeatureMember = new TargetAccessedFeatureMemberElements();
		this.pTargetBinding = new TargetBindingElements();
		this.pTargetExpression = new TargetExpressionElements();
		this.pExpressionParameterMember = new ExpressionParameterMemberElements();
		this.pIfNode = new IfNodeElements();
		this.pActionBodyParameterMember = new ActionBodyParameterMemberElements();
		this.pActionBodyParameter = new ActionBodyParameterElements();
		this.pIfNodeParameterMember = new IfNodeParameterMemberElements();
		this.pWhileLoopNode = new WhileLoopNodeElements();
		this.pForLoopNode = new ForLoopNodeElements();
		this.pForVariableDeclarationMember = new ForVariableDeclarationMemberElements();
		this.pForVariableDeclaration = new ForVariableDeclarationElements();
		this.pControlNode = new ControlNodeElements();
		this.pControlNodePrefix = new ControlNodePrefixElements();
		this.pMergeNode = new MergeNodeElements();
		this.pDecisionNode = new DecisionNodeElements();
		this.pJoinNode = new JoinNodeElements();
		this.pForkNode = new ForkNodeElements();
		this.pActionNodeBody = new ActionNodeBodyElements();
		this.pEmptyParameterMember = new EmptyParameterMemberElements();
		this.pEmptyUsage = new EmptyUsageElements();
		this.pActionTargetSuccession = new ActionTargetSuccessionElements();
		this.pTargetSuccession = new TargetSuccessionElements();
		this.pGuardedTargetSuccession = new GuardedTargetSuccessionElements();
		this.pDefaultTargetSuccession = new DefaultTargetSuccessionElements();
		this.pGuardedSuccession = new GuardedSuccessionElements();
		this.pStateKeyword = new StateKeywordElements();
		this.pStateDefKeyword = new StateDefKeywordElements();
		this.pStateDefinition = new StateDefinitionElements();
		this.pStateDefBody = new StateDefBodyElements();
		this.pStateBodyPart = new StateBodyPartElements();
		this.pStateBodyItem = new StateBodyItemElements();
		this.pEntryActionMember = new EntryActionMemberElements();
		this.pEntryActionKind = new EntryActionKindElements();
		this.pDoActionMember = new DoActionMemberElements();
		this.pDoActionKind = new DoActionKindElements();
		this.pExitActionMember = new ExitActionMemberElements();
		this.pExitActionKind = new ExitActionKindElements();
		this.pEntryTransitionMember = new EntryTransitionMemberElements();
		this.pStateActionUsage = new StateActionUsageElements();
		this.pEmptyActionUsage = new EmptyActionUsageElements();
		this.pPerformedActionUsage = new PerformedActionUsageElements();
		this.pTransitionUsageMember = new TransitionUsageMemberElements();
		this.pTargetTransitionUsageMember = new TargetTransitionUsageMemberElements();
		this.pStateUsageKeyword = new StateUsageKeywordElements();
		this.pStateUsage = new StateUsageElements();
		this.pStateUsageBody = new StateUsageBodyElements();
		this.pExhibitStateUsage = new ExhibitStateUsageElements();
		this.pTransitionUsageKeyword = new TransitionUsageKeywordElements();
		this.pTransitionUsage = new TransitionUsageElements();
		this.pTargetTransitionUsage = new TargetTransitionUsageElements();
		this.pTransitionSourceMember = new TransitionSourceMemberElements();
		this.pTriggerActionMember = new TriggerActionMemberElements();
		this.eTriggerFeatureKind = new TriggerFeatureKindElements();
		this.pTriggerAction = new TriggerActionElements();
		this.pGuardExpressionMember = new GuardExpressionMemberElements();
		this.eGuardFeatureKind = new GuardFeatureKindElements();
		this.pEffectBehaviorMember = new EffectBehaviorMemberElements();
		this.eEffectFeatureKind = new EffectFeatureKindElements();
		this.pEffectBehaviorUsage = new EffectBehaviorUsageElements();
		this.pTransitionSuccessionMember = new TransitionSuccessionMemberElements();
		this.pTransitionSuccession = new TransitionSuccessionElements();
		this.pCalculationKeyword = new CalculationKeywordElements();
		this.pCalculationDefKeyword = new CalculationDefKeywordElements();
		this.pCalculationDefinition = new CalculationDefinitionElements();
		this.pCalculationBody = new CalculationBodyElements();
		this.pCalculationBodyPart = new CalculationBodyPartElements();
		this.pCalculationBodyItem = new CalculationBodyItemElements();
		this.pReturnParameterMember = new ReturnParameterMemberElements();
		this.pResultExpressionMember = new ResultExpressionMemberElements();
		this.pCalculationUsageKeyword = new CalculationUsageKeywordElements();
		this.pCalculationUsage = new CalculationUsageElements();
		this.pConstraintKeyword = new ConstraintKeywordElements();
		this.pConstraintDefKeyword = new ConstraintDefKeywordElements();
		this.pConstraintDefinition = new ConstraintDefinitionElements();
		this.pConstraintUsageKeyword = new ConstraintUsageKeywordElements();
		this.pConstraintUsage = new ConstraintUsageElements();
		this.pAssertConstraintUsage = new AssertConstraintUsageElements();
		this.pConstraintUsageDeclaration = new ConstraintUsageDeclarationElements();
		this.pRequirementKeyword = new RequirementKeywordElements();
		this.pRequirementDefKeyword = new RequirementDefKeywordElements();
		this.pRequirementDefinition = new RequirementDefinitionElements();
		this.pRequirementBody = new RequirementBodyElements();
		this.pRequirementBodyItem = new RequirementBodyItemElements();
		this.pSubjectMember = new SubjectMemberElements();
		this.pSubjectUsage = new SubjectUsageElements();
		this.pRequirementConstraintMember = new RequirementConstraintMemberElements();
		this.eRequirementConstraintKind = new RequirementConstraintKindElements();
		this.pRequirementConstraintUsage = new RequirementConstraintUsageElements();
		this.pFramedConcernMember = new FramedConcernMemberElements();
		this.eFramedConcernKind = new FramedConcernKindElements();
		this.pFramedConcernUsage = new FramedConcernUsageElements();
		this.pActorMember = new ActorMemberElements();
		this.pActorUsage = new ActorUsageElements();
		this.pStakeholderMember = new StakeholderMemberElements();
		this.pStakeholderUsage = new StakeholderUsageElements();
		this.pRequirementUsageKeyword = new RequirementUsageKeywordElements();
		this.pRequirementUsage = new RequirementUsageElements();
		this.pSatisfyRequirementUsage = new SatisfyRequirementUsageElements();
		this.pSatisfactionSubjectMember = new SatisfactionSubjectMemberElements();
		this.pSatisfactionParameter = new SatisfactionParameterElements();
		this.pSatisfactionFeatureValue = new SatisfactionFeatureValueElements();
		this.pSatisfactionReferenceExpression = new SatisfactionReferenceExpressionElements();
		this.pConcernKeyword = new ConcernKeywordElements();
		this.pConcernDefKeyword = new ConcernDefKeywordElements();
		this.pConcernDefinition = new ConcernDefinitionElements();
		this.pConcernUsageKeyword = new ConcernUsageKeywordElements();
		this.pConcernUsage = new ConcernUsageElements();
		this.pCaseKeyword = new CaseKeywordElements();
		this.pCaseDefKeyword = new CaseDefKeywordElements();
		this.pCaseDefinition = new CaseDefinitionElements();
		this.pCaseBody = new CaseBodyElements();
		this.pCaseBodyItem = new CaseBodyItemElements();
		this.pObjectiveMember = new ObjectiveMemberElements();
		this.pObjectiveRequirementUsage = new ObjectiveRequirementUsageElements();
		this.pCaseUsageKeyword = new CaseUsageKeywordElements();
		this.pCaseUsage = new CaseUsageElements();
		this.pAnalysisCaseKeyword = new AnalysisCaseKeywordElements();
		this.pAnalysisCaseDefKeyword = new AnalysisCaseDefKeywordElements();
		this.pAnalysisCaseUsageKeyword = new AnalysisCaseUsageKeywordElements();
		this.pAnalysisCaseDefinition = new AnalysisCaseDefinitionElements();
		this.pAnalysisCaseUsage = new AnalysisCaseUsageElements();
		this.pVerificationCaseKeyword = new VerificationCaseKeywordElements();
		this.pVerificationCaseDefKeyword = new VerificationCaseDefKeywordElements();
		this.pVerificationCaseUsageKeyword = new VerificationCaseUsageKeywordElements();
		this.pVerificationCaseDefinition = new VerificationCaseDefinitionElements();
		this.pVerificationCaseUsage = new VerificationCaseUsageElements();
		this.pRequirementVerificationMember = new RequirementVerificationMemberElements();
		this.eRequirementVerificationKind = new RequirementVerificationKindElements();
		this.pRequirementVerificationUsage = new RequirementVerificationUsageElements();
		this.pUseCaseKeyword = new UseCaseKeywordElements();
		this.pUseCaseDefKeyword = new UseCaseDefKeywordElements();
		this.pUseCaseUsageKeyword = new UseCaseUsageKeywordElements();
		this.pUseCaseDefinition = new UseCaseDefinitionElements();
		this.pUseCaseUsage = new UseCaseUsageElements();
		this.pIncludeUseCaseUsage = new IncludeUseCaseUsageElements();
		this.pViewKeyword = new ViewKeywordElements();
		this.pViewDefKeyword = new ViewDefKeywordElements();
		this.pViewDefinition = new ViewDefinitionElements();
		this.pViewDefinitionBody = new ViewDefinitionBodyElements();
		this.pViewDefinitionBodyItem = new ViewDefinitionBodyItemElements();
		this.pViewRenderingMember = new ViewRenderingMemberElements();
		this.pViewRenderingUsage = new ViewRenderingUsageElements();
		this.pViewUsageKeyword = new ViewUsageKeywordElements();
		this.pViewUsage = new ViewUsageElements();
		this.pViewBody = new ViewBodyElements();
		this.pViewBodyItem = new ViewBodyItemElements();
		this.pExposePrefix = new ExposePrefixElements();
		this.eExposeVisibilityKind = new ExposeVisibilityKindElements();
		this.pExpose = new ExposeElements();
		this.pMembershipExpose = new MembershipExposeElements();
		this.pNamespaceExpose = new NamespaceExposeElements();
		this.pViewpointKeyword = new ViewpointKeywordElements();
		this.pViewpointDefKeyword = new ViewpointDefKeywordElements();
		this.pViewpointUsageKeyword = new ViewpointUsageKeywordElements();
		this.pViewpointDefinition = new ViewpointDefinitionElements();
		this.pViewpointUsage = new ViewpointUsageElements();
		this.pRenderingKeyword = new RenderingKeywordElements();
		this.pRenderingDefKeyword = new RenderingDefKeywordElements();
		this.pRenderingDefinition = new RenderingDefinitionElements();
		this.pRenderingUsageKeyword = new RenderingUsageKeywordElements();
		this.pRenderingUsage = new RenderingUsageElements();
		this.pExpressionBody = new ExpressionBodyElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.omg.sysml.xtext.SysML".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public KerMLExpressionsGrammarAccess getKerMLExpressionsGrammarAccess() {
		return gaKerMLExpressions;
	}

	
	///* ROOT NAMESPACE */
	//RootNamespace returns SysML::Namespace :
	//    {SysML::Namespace} PackageBodyElement*
	//;
	public RootNamespaceElements getRootNamespaceAccess() {
		return pRootNamespace;
	}
	
	public ParserRule getRootNamespaceRule() {
		return getRootNamespaceAccess().getRule();
	}
	
	///* BASIC ELEMENTS */
	//fragment Identification returns SysML::Element :
	//      '<' declaredShortName = Name '>' ( declaredName = Name )?
	//    | declaredName = Name
	//;
	public IdentificationElements getIdentificationAccess() {
		return pIdentification;
	}
	
	public ParserRule getIdentificationRule() {
		return getIdentificationAccess().getRule();
	}
	
	//fragment RelationshipBody returns SysML::Relationship :
	//    ';' | '{' ( ownedRelationship += OwnedAnnotation )* '}'
	//;
	public RelationshipBodyElements getRelationshipBodyAccess() {
		return pRelationshipBody;
	}
	
	public ParserRule getRelationshipBodyRule() {
		return getRelationshipBodyAccess().getRule();
	}
	
	///* DEPENDENCIES */
	//Dependency returns SysML::Dependency :
	//    ( ownedRelationship += PrefixMetadataAnnotation )*
	//    'dependency' ( Identification? 'from' )?
	//    client += [SysML::Element|QualifiedName] ( ',' client += [SysML::Element|QualifiedName] )* 'to'
	//    supplier += [SysML::Element|QualifiedName] ( ',' supplier += [SysML::Element|QualifiedName] )*
	//    RelationshipBody
	//;
	public DependencyElements getDependencyAccess() {
		return pDependency;
	}
	
	public ParserRule getDependencyRule() {
		return getDependencyAccess().getRule();
	}
	
	///* ANNOTATIONS */
	//Annotation returns SysML::Annotation :
	//    annotatedElement = [SysML::Element|QualifiedName]
	//;
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}
	
	//OwnedAnnotation returns SysML::Annotation :
	//    ownedRelatedElement += AnnotatingElement
	//;
	public OwnedAnnotationElements getOwnedAnnotationAccess() {
		return pOwnedAnnotation;
	}
	
	public ParserRule getOwnedAnnotationRule() {
		return getOwnedAnnotationAccess().getRule();
	}
	
	//AnnotatingMember returns SysML::OwningMembership :
	//    ownedRelatedElement += AnnotatingElement
	//;
	public AnnotatingMemberElements getAnnotatingMemberAccess() {
		return pAnnotatingMember;
	}
	
	public ParserRule getAnnotatingMemberRule() {
		return getAnnotatingMemberAccess().getRule();
	}
	
	//AnnotatingElement returns SysML::AnnotatingElement :
	//      Comment
	//    | Documentation
	//    | TextualRepresentation
	//    | MetadataUsage
	//;
	public AnnotatingElementElements getAnnotatingElementAccess() {
		return pAnnotatingElement;
	}
	
	public ParserRule getAnnotatingElementRule() {
		return getAnnotatingElementAccess().getRule();
	}
	
	///* Comments */
	//Comment returns SysML::Comment :
	//    ( 'comment' Identification?
	//      ('about' ownedRelationship += Annotation
	//         ( ',' ownedRelationship += Annotation )* )?
	//    )?
	//    ( 'locale' locale = STRING_VALUE )?
	//    body = REGULAR_COMMENT
	//;
	public CommentElements getCommentAccess() {
		return pComment;
	}
	
	public ParserRule getCommentRule() {
		return getCommentAccess().getRule();
	}
	
	//Documentation returns SysML::Documentation :
	//    'doc' Identification?
	//    ( 'locale' locale = STRING_VALUE )?
	//    body = REGULAR_COMMENT
	//;
	public DocumentationElements getDocumentationAccess() {
		return pDocumentation;
	}
	
	public ParserRule getDocumentationRule() {
		return getDocumentationAccess().getRule();
	}
	
	///* Textual Representation */
	//TextualRepresentation returns SysML::TextualRepresentation :
	//    ( 'rep' Identification? )?
	//    'language' language = STRING_VALUE
	//    body = REGULAR_COMMENT
	//;
	public TextualRepresentationElements getTextualRepresentationAccess() {
		return pTextualRepresentation;
	}
	
	public ParserRule getTextualRepresentationRule() {
		return getTextualRepresentationAccess().getRule();
	}
	
	///* Metadata */
	//MetadataKeyword :
	//    'metadata'
	//;
	public MetadataKeywordElements getMetadataKeywordAccess() {
		return pMetadataKeyword;
	}
	
	public ParserRule getMetadataKeywordRule() {
		return getMetadataKeywordAccess().getRule();
	}
	
	//MetadataDefKeyword :
	//    MetadataKeyword 'def'
	//;
	public MetadataDefKeywordElements getMetadataDefKeywordAccess() {
		return pMetadataDefKeyword;
	}
	
	public ParserRule getMetadataDefKeywordRule() {
		return getMetadataDefKeywordAccess().getRule();
	}
	
	//MetadataUsageKeyword :
	//    MetadataKeyword | '@'
	//;
	public MetadataUsageKeywordElements getMetadataUsageKeywordAccess() {
		return pMetadataUsageKeyword;
	}
	
	public ParserRule getMetadataUsageKeywordRule() {
		return getMetadataUsageKeywordAccess().getRule();
	}
	
	//MetadataDefinition returns SysML::MetadataDefinition :
	//    ( isAbstract ?= 'abstract')?
	//    DefinitionExtensionKeyword* MetadataDefKeyword
	//    Definition
	//;
	public MetadataDefinitionElements getMetadataDefinitionAccess() {
		return pMetadataDefinition;
	}
	
	public ParserRule getMetadataDefinitionRule() {
		return getMetadataDefinitionAccess().getRule();
	}
	
	//PrefixMetadataAnnotation returns SysML::Annotation :
	//    '#' ownedRelatedElement += PrefixMetadataUsage
	//;
	public PrefixMetadataAnnotationElements getPrefixMetadataAnnotationAccess() {
		return pPrefixMetadataAnnotation;
	}
	
	public ParserRule getPrefixMetadataAnnotationRule() {
		return getPrefixMetadataAnnotationAccess().getRule();
	}
	
	//PrefixMetadataMember returns SysML::OwningMembership :
	//    '#' ownedRelatedElement += PrefixMetadataUsage
	//;
	public PrefixMetadataMemberElements getPrefixMetadataMemberAccess() {
		return pPrefixMetadataMember;
	}
	
	public ParserRule getPrefixMetadataMemberRule() {
		return getPrefixMetadataMemberAccess().getRule();
	}
	
	//PrefixMetadataUsage returns SysML::MetadataUsage :
	//    ownedRelationship += MetadataTyping
	////    ( ownedRelationship += MetadataBodyUsageMember )*
	//;
	public PrefixMetadataUsageElements getPrefixMetadataUsageAccess() {
		return pPrefixMetadataUsage;
	}
	
	public ParserRule getPrefixMetadataUsageRule() {
		return getPrefixMetadataUsageAccess().getRule();
	}
	
	//MetadataUsage returns SysML::MetadataUsage :
	//    UsageExtensionKeyword*
	//    MetadataUsageKeyword MetadataUsageDeclaration
	//    ( 'about' ownedRelationship += Annotation
	//        ( ',' ownedRelationship += Annotation )*
	//    )?
	//    MetadataBody
	//;
	public MetadataUsageElements getMetadataUsageAccess() {
		return pMetadataUsage;
	}
	
	public ParserRule getMetadataUsageRule() {
		return getMetadataUsageAccess().getRule();
	}
	
	//fragment MetadataUsageDeclaration returns SysML::MetadataUsage :
	//    ( Identification? DefinedByKeyword )? ownedRelationship += MetadataTyping
	//;
	public MetadataUsageDeclarationElements getMetadataUsageDeclarationAccess() {
		return pMetadataUsageDeclaration;
	}
	
	public ParserRule getMetadataUsageDeclarationRule() {
		return getMetadataUsageDeclarationAccess().getRule();
	}
	
	//MetadataTyping returns SysML::FeatureTyping :
	//    type = [SysML::Metaclass | QualifiedName]
	//;
	public MetadataTypingElements getMetadataTypingAccess() {
		return pMetadataTyping;
	}
	
	public ParserRule getMetadataTypingRule() {
		return getMetadataTypingAccess().getRule();
	}
	
	//fragment MetadataBody returns SysML::Usage :
	//      ';'
	//    | '{' ( ownedRelationship += DefinitionMember
	//          | ownedRelationship += MetadataBodyUsageMember
	//          | ownedRelationship += AliasMember
	//          | ownedRelationship += Import
	//          )*
	//      '}'
	//;
	public MetadataBodyElements getMetadataBodyAccess() {
		return pMetadataBody;
	}
	
	public ParserRule getMetadataBodyRule() {
		return getMetadataBodyAccess().getRule();
	}
	
	//MetadataBodyUsageMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += MetadataBodyUsage
	//;
	public MetadataBodyUsageMemberElements getMetadataBodyUsageMemberAccess() {
		return pMetadataBodyUsageMember;
	}
	
	public ParserRule getMetadataBodyUsageMemberRule() {
		return getMetadataBodyUsageMemberAccess().getRule();
	}
	
	//MetadataBodyUsage returns SysML::ReferenceUsage :
	//    'ref'? ( ':>>' | 'redefines' )? ownedRelationship += OwnedRedefinition
	//    FeatureSpecializationPart? ValuePart?
	//    MetadataBody
	//;
	public MetadataBodyUsageElements getMetadataBodyUsageAccess() {
		return pMetadataBodyUsage;
	}
	
	public ParserRule getMetadataBodyUsageRule() {
		return getMetadataBodyUsageAccess().getRule();
	}
	
	///* PACKAGES */
	///* Packages */
	//Package returns SysML::Package :
	//    ( ownedRelationship += PrefixMetadataMember )*
	//    PackageDeclaration PackageBody
	//;
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}
	
	//LibraryPackage returns SysML::LibraryPackage :
	//    ( isStandard ?= 'standard' )? 'library'
	//    ( ownedRelationship += PrefixMetadataMember )*
	//    PackageDeclaration PackageBody
	//;
	public LibraryPackageElements getLibraryPackageAccess() {
		return pLibraryPackage;
	}
	
	public ParserRule getLibraryPackageRule() {
		return getLibraryPackageAccess().getRule();
	}
	
	//fragment PackageDeclaration returns SysML::Package :
	//    'package' Identification?
	//;
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return pPackageDeclaration;
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}
	
	//fragment PackageBody returns SysML::Package :
	//     ';'
	//    | '{' ( // Note: PackageBodyElement is expanded here to avoid
	//            // infinite loops in the incremental parser.
	//            ownedRelationship += PackageMember
	//          | ownedRelationship += ElementFilterMember
	//          | ownedRelationship += AliasMember
	//          | ownedRelationship += Import )*
	//      '}'
	//;
	public PackageBodyElements getPackageBodyAccess() {
		return pPackageBody;
	}
	
	public ParserRule getPackageBodyRule() {
		return getPackageBodyAccess().getRule();
	}
	
	///* Package Bodies */
	//fragment PackageBodyElement returns SysML::Namespace :
	//      ownedRelationship += PackageMember
	//    | ownedRelationship += ElementFilterMember
	//    | ownedRelationship += AliasMember
	//    | ownedRelationship += Import
	//;
	public PackageBodyElementElements getPackageBodyElementAccess() {
		return pPackageBodyElement;
	}
	
	public ParserRule getPackageBodyElementRule() {
		return getPackageBodyElementAccess().getRule();
	}
	
	//fragment MemberPrefix returns SysML::Membership :
	//    ( visibility = VisibilityIndicator )?
	//;
	public MemberPrefixElements getMemberPrefixAccess() {
		return pMemberPrefix;
	}
	
	public ParserRule getMemberPrefixRule() {
		return getMemberPrefixAccess().getRule();
	}
	
	//PackageMember returns SysML::OwningMembership :
	//    MemberPrefix
	//    ( ownedRelatedElement += DefinitionElement
	//    | ownedRelatedElement += UsageElement
	//    )
	//;
	public PackageMemberElements getPackageMemberAccess() {
		return pPackageMember;
	}
	
	public ParserRule getPackageMemberRule() {
		return getPackageMemberAccess().getRule();
	}
	
	//ElementFilterMember returns SysML::ElementFilterMembership :
	//    MemberPrefix
	//    'filter' ownedRelatedElement += OwnedExpression ';'
	//;
	public ElementFilterMemberElements getElementFilterMemberAccess() {
		return pElementFilterMember;
	}
	
	public ParserRule getElementFilterMemberRule() {
		return getElementFilterMemberAccess().getRule();
	}
	
	//AliasMember returns SysML::Membership :
	//    MemberPrefix
	//    'alias' ( '<' memberShortName = Name '>' )? ( memberName = Name )?
	//    'for' memberElement = [SysML::Element|QualifiedName]
	//    RelationshipBody
	//;
	public AliasMemberElements getAliasMemberAccess() {
		return pAliasMember;
	}
	
	public ParserRule getAliasMemberRule() {
		return getAliasMemberAccess().getRule();
	}
	
	//fragment ImportPrefix returns SysML::Import :
	//    visibility = VisibilityIndicator
	//    'import' ( isImportAll ?= 'all' )?
	//;
	public ImportPrefixElements getImportPrefixAccess() {
		return pImportPrefix;
	}
	
	public ParserRule getImportPrefixRule() {
		return getImportPrefixAccess().getRule();
	}
	
	//Import returns SysML::Import :
	//    ( MembershipImport | NamespaceImport )
	//    RelationshipBody
	//;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//MembershipImport returns SysML::MembershipImport :
	//    ImportPrefix ImportedMembership
	//;
	public MembershipImportElements getMembershipImportAccess() {
		return pMembershipImport;
	}
	
	public ParserRule getMembershipImportRule() {
		return getMembershipImportAccess().getRule();
	}
	
	//fragment ImportedMembership returns SysML::MembershipImport :
	//    importedMembership = [SysML::Membership|QualifiedName]
	//    ( '::' isRecursive ?= '**' )?
	//;
	public ImportedMembershipElements getImportedMembershipAccess() {
		return pImportedMembership;
	}
	
	public ParserRule getImportedMembershipRule() {
		return getImportedMembershipAccess().getRule();
	}
	
	//NamespaceImport returns SysML::NamespaceImport :
	//    ImportPrefix
	//    ( ImportedNamespace
	//    | ownedRelatedElement += FilterPackage
	//    )
	//;
	public NamespaceImportElements getNamespaceImportAccess() {
		return pNamespaceImport;
	}
	
	public ParserRule getNamespaceImportRule() {
		return getNamespaceImportAccess().getRule();
	}
	
	//fragment ImportedNamespace returns SysML::NamespaceImport :
	//    importedNamespace = [SysML::Namespace|QualifiedName] '::' '*'
	//    ( '::' isRecursive ?= '**' )?
	//;
	public ImportedNamespaceElements getImportedNamespaceAccess() {
		return pImportedNamespace;
	}
	
	public ParserRule getImportedNamespaceRule() {
		return getImportedNamespaceAccess().getRule();
	}
	
	//FilterPackage returns SysML::Package :
	//    ownedRelationship += FilterPackageImport
	//    ( ownedRelationship += FilterPackageMember )+
	//;
	public FilterPackageElements getFilterPackageAccess() {
		return pFilterPackage;
	}
	
	public ParserRule getFilterPackageRule() {
		return getFilterPackageAccess().getRule();
	}
	
	//FilterPackageImport returns SysML::Import :
	//     FilterPackageMembershipImport | FilterPackageNamespaceImport
	//;
	public FilterPackageImportElements getFilterPackageImportAccess() {
		return pFilterPackageImport;
	}
	
	public ParserRule getFilterPackageImportRule() {
		return getFilterPackageImportAccess().getRule();
	}
	
	//FilterPackageMembershipImport returns SysML::MembershipImport :
	//    ImportedMembership
	//;
	public FilterPackageMembershipImportElements getFilterPackageMembershipImportAccess() {
		return pFilterPackageMembershipImport;
	}
	
	public ParserRule getFilterPackageMembershipImportRule() {
		return getFilterPackageMembershipImportAccess().getRule();
	}
	
	//FilterPackageNamespaceImport returns SysML::NamespaceImport :
	//    ImportedNamespace
	//;
	public FilterPackageNamespaceImportElements getFilterPackageNamespaceImportAccess() {
		return pFilterPackageNamespaceImport;
	}
	
	public ParserRule getFilterPackageNamespaceImportRule() {
		return getFilterPackageNamespaceImportAccess().getRule();
	}
	
	//FilterPackageMember returns SysML::ElementFilterMembership :
	//    visibility = FilterPackageMemberVisibility ownedRelatedElement += OwnedExpression ']'
	//;
	public FilterPackageMemberElements getFilterPackageMemberAccess() {
		return pFilterPackageMember;
	}
	
	public ParserRule getFilterPackageMemberRule() {
		return getFilterPackageMemberAccess().getRule();
	}
	
	//enum FilterPackageMemberVisibility returns SysML::VisibilityKind :
	//    private = '['
	//;
	public FilterPackageMemberVisibilityElements getFilterPackageMemberVisibilityAccess() {
		return eFilterPackageMemberVisibility;
	}
	
	public EnumRule getFilterPackageMemberVisibilityRule() {
		return getFilterPackageMemberVisibilityAccess().getRule();
	}
	
	//enum VisibilityIndicator returns SysML::VisibilityKind:
	//    public = 'public' | private = 'private'| protected = 'protected'
	//;
	public VisibilityIndicatorElements getVisibilityIndicatorAccess() {
		return eVisibilityIndicator;
	}
	
	public EnumRule getVisibilityIndicatorRule() {
		return getVisibilityIndicatorAccess().getRule();
	}
	
	///* Package Elements */
	//DefinitionElement returns SysML::Element :
	//      Package
	//    | LibraryPackage
	//    | AnnotatingElement
	//    | Dependency
	//    | AttributeDefinition
	//    | EnumerationDefinition
	//    | OccurrenceDefinition
	//    | IndividualDefinition
	//    | ItemDefinition
	//    | MetadataDefinition
	//    | PartDefinition
	//    | ConnectionDefinition
	//    | FlowConnectionDefinition
	//    | InterfaceDefinition
	//    | AllocationDefinition
	//    | PortDefinition
	//    | ActionDefinition
	//    | CalculationDefinition
	//    | StateDefinition
	//    | ConstraintDefinition
	//    | RequirementDefinition
	//    | ConcernDefinition
	//    | CaseDefinition
	//    | AnalysisCaseDefinition
	//    | VerificationCaseDefinition
	//    | UseCaseDefinition
	//    | ViewDefinition
	//    | ViewpointDefinition
	//    | RenderingDefinition
	//    | ExtendedDefinition
	//;
	public DefinitionElementElements getDefinitionElementAccess() {
		return pDefinitionElement;
	}
	
	public ParserRule getDefinitionElementRule() {
		return getDefinitionElementAccess().getRule();
	}
	
	//UsageElement returns SysML::Usage :
	//      NonOccurrenceUsageElement
	//    | OccurrenceUsageElement
	//;
	public UsageElementElements getUsageElementAccess() {
		return pUsageElement;
	}
	
	public ParserRule getUsageElementRule() {
		return getUsageElementAccess().getRule();
	}
	
	///* CLASSIFIERS */
	///* Subclassification */
	//fragment SubclassificationPart returns SysML::Classifier :
	//    SpecializesKeyword ownedRelationship += OwnedSubclassification
	//    ( ',' ownedRelationship += OwnedSubclassification )*
	//;
	public SubclassificationPartElements getSubclassificationPartAccess() {
		return pSubclassificationPart;
	}
	
	public ParserRule getSubclassificationPartRule() {
		return getSubclassificationPartAccess().getRule();
	}
	
	//SpecializesKeyword :
	//    ':>' | 'specializes'
	//;
	public SpecializesKeywordElements getSpecializesKeywordAccess() {
		return pSpecializesKeyword;
	}
	
	public ParserRule getSpecializesKeywordRule() {
		return getSpecializesKeywordAccess().getRule();
	}
	
	//OwnedSubclassification returns SysML::Subclassification:
	//    superclassifier = [SysML::Classifier | QualifiedName]
	//;
	public OwnedSubclassificationElements getOwnedSubclassificationAccess() {
		return pOwnedSubclassification;
	}
	
	public ParserRule getOwnedSubclassificationRule() {
		return getOwnedSubclassificationAccess().getRule();
	}
	
	///* FEATURES */
	///* Features */
	//fragment FeatureDeclaration returns SysML::Feature :
	//      Identification FeatureSpecializationPart?
	//    | FeatureSpecializationPart
	//;
	public FeatureDeclarationElements getFeatureDeclarationAccess() {
		return pFeatureDeclaration;
	}
	
	public ParserRule getFeatureDeclarationRule() {
		return getFeatureDeclarationAccess().getRule();
	}
	
	//fragment FeatureSpecializationPart returns SysML::Feature :
	//      ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
	//    | MultiplicityPart FeatureSpecialization*
	//;
	public FeatureSpecializationPartElements getFeatureSpecializationPartAccess() {
		return pFeatureSpecializationPart;
	}
	
	public ParserRule getFeatureSpecializationPartRule() {
		return getFeatureSpecializationPartAccess().getRule();
	}
	
	//fragment MultiplicityPart returns SysML::Feature :
	//      ownedRelationship += OwnedMultiplicity
	//    | ( ownedRelationship += OwnedMultiplicity )?
	//      ( isOrdered ?= 'ordered' isNonunique ?= 'nonunique'?
	//      | isNonunique ?= 'nonunique' isOrdered ?= 'ordered'?
	//      )
	//;
	public MultiplicityPartElements getMultiplicityPartAccess() {
		return pMultiplicityPart;
	}
	
	public ParserRule getMultiplicityPartRule() {
		return getMultiplicityPartAccess().getRule();
	}
	
	//fragment FeatureSpecialization returns SysML::Feature :
	//    Typings | Subsettings | References | Redefinitions
	//;
	public FeatureSpecializationElements getFeatureSpecializationAccess() {
		return pFeatureSpecialization;
	}
	
	public ParserRule getFeatureSpecializationRule() {
		return getFeatureSpecializationAccess().getRule();
	}
	
	//fragment Typings returns SysML::Feature :
	//    TypedBy ( ',' ownedRelationship += FeatureTyping )*
	//;
	public TypingsElements getTypingsAccess() {
		return pTypings;
	}
	
	public ParserRule getTypingsRule() {
		return getTypingsAccess().getRule();
	}
	
	//fragment TypedBy returns SysML::Feature :
	//    DefinedByKeyword ownedRelationship += FeatureTyping
	//;
	public TypedByElements getTypedByAccess() {
		return pTypedBy;
	}
	
	public ParserRule getTypedByRule() {
		return getTypedByAccess().getRule();
	}
	
	//DefinedByKeyword :
	//    ':' | 'defined' 'by'
	//;
	public DefinedByKeywordElements getDefinedByKeywordAccess() {
		return pDefinedByKeyword;
	}
	
	public ParserRule getDefinedByKeywordRule() {
		return getDefinedByKeywordAccess().getRule();
	}
	
	//fragment Subsettings returns SysML::Feature :
	//    Subsets ( ',' ownedRelationship += OwnedSubsetting )*
	//;
	public SubsettingsElements getSubsettingsAccess() {
		return pSubsettings;
	}
	
	public ParserRule getSubsettingsRule() {
		return getSubsettingsAccess().getRule();
	}
	
	//fragment Subsets returns SysML::Feature :
	//    SubsetsKeyword ownedRelationship += OwnedSubsetting
	//;
	public SubsetsElements getSubsetsAccess() {
		return pSubsets;
	}
	
	public ParserRule getSubsetsRule() {
		return getSubsetsAccess().getRule();
	}
	
	//SubsetsKeyword :
	//    ':>' | 'subsets'
	//;
	public SubsetsKeywordElements getSubsetsKeywordAccess() {
		return pSubsetsKeyword;
	}
	
	public ParserRule getSubsetsKeywordRule() {
		return getSubsetsKeywordAccess().getRule();
	}
	
	//fragment References returns SysML::Feature :
	//    ReferencesKeyword ownedRelationship += OwnedReferenceSubsetting
	//;
	public ReferencesElements getReferencesAccess() {
		return pReferences;
	}
	
	public ParserRule getReferencesRule() {
		return getReferencesAccess().getRule();
	}
	
	//ReferencesKeyword :
	//    '::>' | 'references'
	//;
	public ReferencesKeywordElements getReferencesKeywordAccess() {
		return pReferencesKeyword;
	}
	
	public ParserRule getReferencesKeywordRule() {
		return getReferencesKeywordAccess().getRule();
	}
	
	//fragment Redefinitions returns SysML::Feature :
	//    Redefines ( ',' ownedRelationship += OwnedRedefinition )*
	//;
	public RedefinitionsElements getRedefinitionsAccess() {
		return pRedefinitions;
	}
	
	public ParserRule getRedefinitionsRule() {
		return getRedefinitionsAccess().getRule();
	}
	
	//fragment Redefines returns SysML::Feature :
	//    RedefinesKeyword ownedRelationship += OwnedRedefinition
	//;
	public RedefinesElements getRedefinesAccess() {
		return pRedefines;
	}
	
	public ParserRule getRedefinesRule() {
		return getRedefinesAccess().getRule();
	}
	
	//RedefinesKeyword :
	//    ':>>' | 'redefines'
	//;
	public RedefinesKeywordElements getRedefinesKeywordAccess() {
		return pRedefinesKeyword;
	}
	
	public ParserRule getRedefinesKeywordRule() {
		return getRedefinesKeywordAccess().getRule();
	}
	
	///* Feature Typing, Subsetting and Redefinition */
	//FeatureTyping returns SysML::FeatureTyping :
	//    OwnedFeatureTyping | ConjugatedPortTyping
	//;
	public FeatureTypingElements getFeatureTypingAccess() {
		return pFeatureTyping;
	}
	
	public ParserRule getFeatureTypingRule() {
		return getFeatureTypingAccess().getRule();
	}
	
	//// OwnedFeatureTyping inherited from Expression syntax.
	//OwnedSubsetting returns SysML::Subsetting :
	//      subsettedFeature = [SysML::Feature|QualifiedName]
	//    | ownedRelatedElement += OwnedFeatureChain
	//;
	public OwnedSubsettingElements getOwnedSubsettingAccess() {
		return pOwnedSubsetting;
	}
	
	public ParserRule getOwnedSubsettingRule() {
		return getOwnedSubsettingAccess().getRule();
	}
	
	//OwnedReferenceSubsetting returns SysML::ReferenceSubsetting :
	//      referencedFeature = [SysML::Feature|QualifiedName]
	//    | ownedRelatedElement += OwnedFeatureChain
	//;
	public OwnedReferenceSubsettingElements getOwnedReferenceSubsettingAccess() {
		return pOwnedReferenceSubsetting;
	}
	
	public ParserRule getOwnedReferenceSubsettingRule() {
		return getOwnedReferenceSubsettingAccess().getRule();
	}
	
	//OwnedRedefinition returns SysML::Redefinition:
	//      redefinedFeature = [SysML::Feature | QualifiedName]
	//    | ownedRelatedElement += OwnedFeatureChain
	//;
	public OwnedRedefinitionElements getOwnedRedefinitionAccess() {
		return pOwnedRedefinition;
	}
	
	public ParserRule getOwnedRedefinitionRule() {
		return getOwnedRedefinitionAccess().getRule();
	}
	
	///* Multiplicity */
	//OwnedMultiplicity returns SysML::OwningMembership :
	//    ownedRelatedElement += MultiplicityRange
	//;
	public OwnedMultiplicityElements getOwnedMultiplicityAccess() {
		return pOwnedMultiplicity;
	}
	
	public ParserRule getOwnedMultiplicityRule() {
		return getOwnedMultiplicityAccess().getRule();
	}
	
	//MultiplicityRange returns SysML::MultiplicityRange :
	//    // TODO: Allow general expressions for bounds. (Causes LL parsing issues.)
	//    '[' ownedRelationship += MultiplicityExpressionMember
	//          ( '..' ownedRelationship += MultiplicityExpressionMember )? ']'
	//;
	public MultiplicityRangeElements getMultiplicityRangeAccess() {
		return pMultiplicityRange;
	}
	
	public ParserRule getMultiplicityRangeRule() {
		return getMultiplicityRangeAccess().getRule();
	}
	
	//MultiplicityExpressionMember returns SysML::OwningMembership :
	//    ownedRelatedElement += ( LiteralExpression | FeatureReferenceExpression )
	//;
	public MultiplicityExpressionMemberElements getMultiplicityExpressionMemberAccess() {
		return pMultiplicityExpressionMember;
	}
	
	public ParserRule getMultiplicityExpressionMemberRule() {
		return getMultiplicityExpressionMemberAccess().getRule();
	}
	
	///* DEFINITION AND USAGE */
	///* Definitions */
	//fragment BasicDefinitionPrefix returns SysML::Definition :
	//    isAbstract ?= 'abstract' | isVariation ?= 'variation'
	//;
	public BasicDefinitionPrefixElements getBasicDefinitionPrefixAccess() {
		return pBasicDefinitionPrefix;
	}
	
	public ParserRule getBasicDefinitionPrefixRule() {
		return getBasicDefinitionPrefixAccess().getRule();
	}
	
	//fragment DefinitionExtensionKeyword returns SysML::Definition :
	//    ownedRelationship += PrefixMetadataMember
	//;
	public DefinitionExtensionKeywordElements getDefinitionExtensionKeywordAccess() {
		return pDefinitionExtensionKeyword;
	}
	
	public ParserRule getDefinitionExtensionKeywordRule() {
		return getDefinitionExtensionKeywordAccess().getRule();
	}
	
	//fragment DefinitionPrefix returns SysML::Definition :
	//    BasicDefinitionPrefix? DefinitionExtensionKeyword*
	//;
	public DefinitionPrefixElements getDefinitionPrefixAccess() {
		return pDefinitionPrefix;
	}
	
	public ParserRule getDefinitionPrefixRule() {
		return getDefinitionPrefixAccess().getRule();
	}
	
	//fragment Definition returns SysML::Definition :
	//    DefinitionDeclaration DefinitionBody
	//;
	public DefinitionElements getDefinitionAccess() {
		return pDefinition;
	}
	
	public ParserRule getDefinitionRule() {
		return getDefinitionAccess().getRule();
	}
	
	//fragment DefinitionDeclaration returns SysML::Definition :
	//    Identification? SubclassificationPart?
	//;
	public DefinitionDeclarationElements getDefinitionDeclarationAccess() {
		return pDefinitionDeclaration;
	}
	
	public ParserRule getDefinitionDeclarationRule() {
		return getDefinitionDeclarationAccess().getRule();
	}
	
	//fragment DefinitionBody returns SysML::Type :
	//    ';' | '{' DefinitionBodyItem* '}'
	//;
	public DefinitionBodyElements getDefinitionBodyAccess() {
		return pDefinitionBody;
	}
	
	public ParserRule getDefinitionBodyRule() {
		return getDefinitionBodyAccess().getRule();
	}
	
	//fragment DefinitionBodyItem returns SysML::Type :
	//      ownedRelationship += DefinitionMember
	//    | ownedRelationship += VariantUsageMember
	//    | ownedRelationship += NonOccurrenceUsageMember
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += OccurrenceUsageMember
	//    | ownedRelationship += AliasMember
	//    | => ownedRelationship += Import
	//;
	public DefinitionBodyItemElements getDefinitionBodyItemAccess() {
		return pDefinitionBodyItem;
	}
	
	public ParserRule getDefinitionBodyItemRule() {
		return getDefinitionBodyItemAccess().getRule();
	}
	
	//DefinitionMember returns SysML::OwningMembership :
	//    MemberPrefix
	//    ownedRelatedElement += DefinitionElement
	//;
	public DefinitionMemberElements getDefinitionMemberAccess() {
		return pDefinitionMember;
	}
	
	public ParserRule getDefinitionMemberRule() {
		return getDefinitionMemberAccess().getRule();
	}
	
	//VariantUsageMember returns SysML::VariantMembership :
	//    MemberPrefix 'variant'
	//    ownedRelatedElement += VariantUsageElement
	//;
	public VariantUsageMemberElements getVariantUsageMemberAccess() {
		return pVariantUsageMember;
	}
	
	public ParserRule getVariantUsageMemberRule() {
		return getVariantUsageMemberAccess().getRule();
	}
	
	//NonOccurrenceUsageMember returns SysML::FeatureMembership :
	//    MemberPrefix ownedRelatedElement += NonOccurrenceUsageElement
	//;
	public NonOccurrenceUsageMemberElements getNonOccurrenceUsageMemberAccess() {
		return pNonOccurrenceUsageMember;
	}
	
	public ParserRule getNonOccurrenceUsageMemberRule() {
		return getNonOccurrenceUsageMemberAccess().getRule();
	}
	
	//OccurrenceUsageMember returns SysML::FeatureMembership :
	//    MemberPrefix ownedRelatedElement += OccurrenceUsageElement
	//;
	public OccurrenceUsageMemberElements getOccurrenceUsageMemberAccess() {
		return pOccurrenceUsageMember;
	}
	
	public ParserRule getOccurrenceUsageMemberRule() {
		return getOccurrenceUsageMemberAccess().getRule();
	}
	
	//StructureUsageMember returns SysML::FeatureMembership :
	//    MemberPrefix ownedRelatedElement += StructureUsageElement
	//;
	public StructureUsageMemberElements getStructureUsageMemberAccess() {
		return pStructureUsageMember;
	}
	
	public ParserRule getStructureUsageMemberRule() {
		return getStructureUsageMemberAccess().getRule();
	}
	
	//BehaviorUsageMember returns SysML::FeatureMembership :
	//    MemberPrefix ownedRelatedElement += BehaviorUsageElement
	//;
	public BehaviorUsageMemberElements getBehaviorUsageMemberAccess() {
		return pBehaviorUsageMember;
	}
	
	public ParserRule getBehaviorUsageMemberRule() {
		return getBehaviorUsageMemberAccess().getRule();
	}
	
	///* Usages */
	//enum FeatureDirection returns SysML::FeatureDirectionKind:
	//    in = 'in' | out = 'out' | inout = 'inout'
	//;
	public FeatureDirectionElements getFeatureDirectionAccess() {
		return eFeatureDirection;
	}
	
	public EnumRule getFeatureDirectionRule() {
		return getFeatureDirectionAccess().getRule();
	}
	
	//fragment RefPrefix returns SysML::Usage :
	//    ( direction = FeatureDirection )?
	//    ( isAbstract ?= 'abstract' | isVariation ?= 'variation')?
	//    ( isReadOnly ?= 'readonly' )?
	//    ( isDerived ?= 'derived' )?
	//    ( isEnd ?= 'end' )?
	//;
	public RefPrefixElements getRefPrefixAccess() {
		return pRefPrefix;
	}
	
	public ParserRule getRefPrefixRule() {
		return getRefPrefixAccess().getRule();
	}
	
	//fragment BasicUsagePrefix returns SysML::Usage :
	//    RefPrefix
	//    ( isReference ?= 'ref' )?
	//;
	public BasicUsagePrefixElements getBasicUsagePrefixAccess() {
		return pBasicUsagePrefix;
	}
	
	public ParserRule getBasicUsagePrefixRule() {
		return getBasicUsagePrefixAccess().getRule();
	}
	
	//fragment UsageExtensionKeyword returns SysML::Usage :
	//    ownedRelationship += PrefixMetadataMember
	//;
	public UsageExtensionKeywordElements getUsageExtensionKeywordAccess() {
		return pUsageExtensionKeyword;
	}
	
	public ParserRule getUsageExtensionKeywordRule() {
		return getUsageExtensionKeywordAccess().getRule();
	}
	
	//fragment UsagePrefix returns SysML::Usage :
	//    BasicUsagePrefix UsageExtensionKeyword*
	//;
	public UsagePrefixElements getUsagePrefixAccess() {
		return pUsagePrefix;
	}
	
	public ParserRule getUsagePrefixRule() {
		return getUsagePrefixAccess().getRule();
	}
	
	//fragment Usage returns SysML::Usage :
	//    UsageDeclaration? UsageCompletion
	//;
	public UsageElements getUsageAccess() {
		return pUsage;
	}
	
	public ParserRule getUsageRule() {
		return getUsageAccess().getRule();
	}
	
	//fragment UsageDeclaration returns SysML::Usage :
	//      FeatureDeclaration
	//;
	public UsageDeclarationElements getUsageDeclarationAccess() {
		return pUsageDeclaration;
	}
	
	public ParserRule getUsageDeclarationRule() {
		return getUsageDeclarationAccess().getRule();
	}
	
	//fragment UsageCompletion returns SysML::Usage :
	//    ValuePart? UsageBody
	//;
	public UsageCompletionElements getUsageCompletionAccess() {
		return pUsageCompletion;
	}
	
	public ParserRule getUsageCompletionRule() {
		return getUsageCompletionAccess().getRule();
	}
	
	//fragment UsageBody returns SysML::Usage :
	//    DefinitionBody
	//;
	public UsageBodyElements getUsageBodyAccess() {
		return pUsageBody;
	}
	
	public ParserRule getUsageBodyRule() {
		return getUsageBodyAccess().getRule();
	}
	
	//fragment ValuePart returns SysML::Feature :
	//      ownedRelationship += FeatureValue
	//;
	public ValuePartElements getValuePartAccess() {
		return pValuePart;
	}
	
	public ParserRule getValuePartRule() {
		return getValuePartAccess().getRule();
	}
	
	//FeatureValue returns SysML::FeatureValue :
	//    ( '='
	//    | isInitial ?= ':='
	//    | isDefault ?= 'default' ( '=' | isInitial ?= ':=' )?
	//    )
	//    ownedRelatedElement += OwnedExpression
	//;
	public FeatureValueElements getFeatureValueAccess() {
		return pFeatureValue;
	}
	
	public ParserRule getFeatureValueRule() {
		return getFeatureValueAccess().getRule();
	}
	
	///* Reference Usages */
	//ReferenceKeyword :
	//    'ref'
	//;
	public ReferenceKeywordElements getReferenceKeywordAccess() {
		return pReferenceKeyword;
	}
	
	public ParserRule getReferenceKeywordRule() {
		return getReferenceKeywordAccess().getRule();
	}
	
	//ReferenceUsageKeyword :
	//    ReferenceKeyword
	//;
	public ReferenceUsageKeywordElements getReferenceUsageKeywordAccess() {
		return pReferenceUsageKeyword;
	}
	
	public ParserRule getReferenceUsageKeywordRule() {
		return getReferenceUsageKeywordAccess().getRule();
	}
	
	//DefaultReferenceUsage returns SysML::ReferenceUsage :
	//    RefPrefix UsageDeclaration ValuePart? UsageBody
	//;
	public DefaultReferenceUsageElements getDefaultReferenceUsageAccess() {
		return pDefaultReferenceUsage;
	}
	
	public ParserRule getDefaultReferenceUsageRule() {
		return getDefaultReferenceUsageAccess().getRule();
	}
	
	//ReferenceUsage returns SysML::ReferenceUsage :
	//    RefPrefix ReferenceUsageKeyword Usage
	//;
	public ReferenceUsageElements getReferenceUsageAccess() {
		return pReferenceUsage;
	}
	
	public ParserRule getReferenceUsageRule() {
		return getReferenceUsageAccess().getRule();
	}
	
	//VariantReference returns SysML::ReferenceUsage :
	//    ownedRelationship += OwnedReferenceSubsetting
	//    FeatureSpecialization* UsageBody
	//;
	public VariantReferenceElements getVariantReferenceAccess() {
		return pVariantReference;
	}
	
	public ParserRule getVariantReferenceRule() {
		return getVariantReferenceAccess().getRule();
	}
	
	///* Body Elements */
	//NonOccurrenceUsageElement returns SysML::Usage :
	//      DefaultReferenceUsage
	//    | ReferenceUsage
	//    | AttributeUsage
	//    | EnumerationUsage
	//    | BindingConnectorAsUsage
	//    | SuccessionAsUsage
	//    | ExtendedUsage
	//;
	public NonOccurrenceUsageElementElements getNonOccurrenceUsageElementAccess() {
		return pNonOccurrenceUsageElement;
	}
	
	public ParserRule getNonOccurrenceUsageElementRule() {
		return getNonOccurrenceUsageElementAccess().getRule();
	}
	
	//OccurrenceUsageElement returns SysML::Usage :
	//    StructureUsageElement | BehaviorUsageElement
	//;
	public OccurrenceUsageElementElements getOccurrenceUsageElementAccess() {
		return pOccurrenceUsageElement;
	}
	
	public ParserRule getOccurrenceUsageElementRule() {
		return getOccurrenceUsageElementAccess().getRule();
	}
	
	//StructureUsageElement returns SysML::Usage :
	//      OccurrenceUsage
	//    | IndividualUsage
	//    | PortionUsage
	//    | EventOccurrenceUsage
	//    | ItemUsage
	//    | PartUsage
	//    | ViewUsage
	//    | RenderingUsage
	//    | PortUsage
	//    | ConnectionUsage
	//    | InterfaceUsage
	//    | AllocationUsage
	//    | Message
	//    | FlowConnectionUsage
	//    | SuccessionFlowConnectionUsage
	//;
	public StructureUsageElementElements getStructureUsageElementAccess() {
		return pStructureUsageElement;
	}
	
	public ParserRule getStructureUsageElementRule() {
		return getStructureUsageElementAccess().getRule();
	}
	
	//BehaviorUsageElement returns SysML::Usage :
	//      ActionUsage
	//    | CalculationUsage
	//    | StateUsage
	//    | ConstraintUsage
	//    | RequirementUsage
	//    | ConcernUsage
	//    | CaseUsage
	//    | AnalysisCaseUsage
	//    | VerificationCaseUsage
	//    | UseCaseUsage
	//    | ViewpointUsage
	//    | PerformActionUsage
	//    | ExhibitStateUsage
	//    | IncludeUseCaseUsage
	//    | AssertConstraintUsage
	//    | SatisfyRequirementUsage
	//;
	public BehaviorUsageElementElements getBehaviorUsageElementAccess() {
		return pBehaviorUsageElement;
	}
	
	public ParserRule getBehaviorUsageElementRule() {
		return getBehaviorUsageElementAccess().getRule();
	}
	
	//VariantUsageElement returns SysML::Usage :
	//      VariantReference
	//    | ReferenceUsage
	//    | AttributeUsage
	//    | BindingConnectorAsUsage
	//    | SuccessionAsUsage
	//    | OccurrenceUsage
	//    | IndividualUsage
	//    | PortionUsage
	//    | EventOccurrenceUsage
	//    | ItemUsage
	//    | PartUsage
	//    | ViewUsage
	//    | RenderingUsage
	//    | PortUsage
	//    | ConnectionUsage
	//    | InterfaceUsage
	//    | AllocationUsage
	//    | Message
	//    | FlowConnectionUsage
	//    | SuccessionFlowConnectionUsage
	//    | BehaviorUsageElement
	//;
	public VariantUsageElementElements getVariantUsageElementAccess() {
		return pVariantUsageElement;
	}
	
	public ParserRule getVariantUsageElementRule() {
		return getVariantUsageElementAccess().getRule();
	}
	
	///* EXTENSION */
	//ExtendedDefinition returns SysML::Definition :
	//    BasicDefinitionPrefix? DefinitionExtensionKeyword+ 'def' Definition
	//;
	public ExtendedDefinitionElements getExtendedDefinitionAccess() {
		return pExtendedDefinition;
	}
	
	public ParserRule getExtendedDefinitionRule() {
		return getExtendedDefinitionAccess().getRule();
	}
	
	//ExtendedUsage returns SysML::Usage :
	//    BasicUsagePrefix UsageExtensionKeyword+ Usage
	//;
	public ExtendedUsageElements getExtendedUsageAccess() {
		return pExtendedUsage;
	}
	
	public ParserRule getExtendedUsageRule() {
		return getExtendedUsageAccess().getRule();
	}
	
	///* ATTRIBUTES */
	//AttributeKeyword :
	//    'attribute'
	//;
	public AttributeKeywordElements getAttributeKeywordAccess() {
		return pAttributeKeyword;
	}
	
	public ParserRule getAttributeKeywordRule() {
		return getAttributeKeywordAccess().getRule();
	}
	
	//AttributeDefKeyword :
	//    AttributeKeyword 'def'
	//;
	public AttributeDefKeywordElements getAttributeDefKeywordAccess() {
		return pAttributeDefKeyword;
	}
	
	public ParserRule getAttributeDefKeywordRule() {
		return getAttributeDefKeywordAccess().getRule();
	}
	
	//AttributeUsageKeyword :
	//    AttributeKeyword
	//;
	public AttributeUsageKeywordElements getAttributeUsageKeywordAccess() {
		return pAttributeUsageKeyword;
	}
	
	public ParserRule getAttributeUsageKeywordRule() {
		return getAttributeUsageKeywordAccess().getRule();
	}
	
	//AttributeDefinition returns SysML::AttributeDefinition :
	//    DefinitionPrefix AttributeDefKeyword Definition
	//;
	public AttributeDefinitionElements getAttributeDefinitionAccess() {
		return pAttributeDefinition;
	}
	
	public ParserRule getAttributeDefinitionRule() {
		return getAttributeDefinitionAccess().getRule();
	}
	
	//AttributeUsage returns SysML::AttributeUsage :
	//    UsagePrefix AttributeUsageKeyword Usage
	//;
	public AttributeUsageElements getAttributeUsageAccess() {
		return pAttributeUsage;
	}
	
	public ParserRule getAttributeUsageRule() {
		return getAttributeUsageAccess().getRule();
	}
	
	///* ENUMERATIONS */
	//EnumerationKeyword :
	//    'enum'
	//;
	public EnumerationKeywordElements getEnumerationKeywordAccess() {
		return pEnumerationKeyword;
	}
	
	public ParserRule getEnumerationKeywordRule() {
		return getEnumerationKeywordAccess().getRule();
	}
	
	//EnumerationDefKeyword :
	//    EnumerationKeyword 'def'
	//;
	public EnumerationDefKeywordElements getEnumerationDefKeywordAccess() {
		return pEnumerationDefKeyword;
	}
	
	public ParserRule getEnumerationDefKeywordRule() {
		return getEnumerationDefKeywordAccess().getRule();
	}
	
	//EnumerationUsageKeyword :
	//    EnumerationKeyword
	//;
	public EnumerationUsageKeywordElements getEnumerationUsageKeywordAccess() {
		return pEnumerationUsageKeyword;
	}
	
	public ParserRule getEnumerationUsageKeywordRule() {
		return getEnumerationUsageKeywordAccess().getRule();
	}
	
	//EnumerationDefinition returns SysML::EnumerationDefinition :
	//    DefinitionExtensionKeyword*
	//    EnumerationDefKeyword DefinitionDeclaration EnumerationBody
	//;
	public EnumerationDefinitionElements getEnumerationDefinitionAccess() {
		return pEnumerationDefinition;
	}
	
	public ParserRule getEnumerationDefinitionRule() {
		return getEnumerationDefinitionAccess().getRule();
	}
	
	//fragment EnumerationBody returns SysML::EnumerationDefinition :
	//      ';'
	//    | '{' ( ownedRelationship += AnnotatingMember
	//          | => ownedRelationship += EnumerationUsageMember
	//          )*
	//      '}'
	//;
	public EnumerationBodyElements getEnumerationBodyAccess() {
		return pEnumerationBody;
	}
	
	public ParserRule getEnumerationBodyRule() {
		return getEnumerationBodyAccess().getRule();
	}
	
	//EnumerationUsageMember returns SysML::VariantMembership :
	//    MemberPrefix ownedRelatedElement += EnumeratedValue
	//;
	public EnumerationUsageMemberElements getEnumerationUsageMemberAccess() {
		return pEnumerationUsageMember;
	}
	
	public ParserRule getEnumerationUsageMemberRule() {
		return getEnumerationUsageMemberAccess().getRule();
	}
	
	//EnumeratedValue returns SysML::EnumerationUsage :
	//    UsageExtensionKeyword* EnumerationUsageKeyword? Usage
	//;
	public EnumeratedValueElements getEnumeratedValueAccess() {
		return pEnumeratedValue;
	}
	
	public ParserRule getEnumeratedValueRule() {
		return getEnumeratedValueAccess().getRule();
	}
	
	//EnumerationUsage returns SysML::EnumerationUsage :
	//    UsagePrefix EnumerationUsageKeyword Usage
	//;
	public EnumerationUsageElements getEnumerationUsageAccess() {
		return pEnumerationUsage;
	}
	
	public ParserRule getEnumerationUsageRule() {
		return getEnumerationUsageAccess().getRule();
	}
	
	///* OCCURRENCES */
	///* Occurrence Definitions */
	//OccurrenceKeyword :
	//    'occurrence'
	//;
	public OccurrenceKeywordElements getOccurrenceKeywordAccess() {
		return pOccurrenceKeyword;
	}
	
	public ParserRule getOccurrenceKeywordRule() {
		return getOccurrenceKeywordAccess().getRule();
	}
	
	//OccurrenceDefKeyword :
	//    OccurrenceKeyword 'def'
	//;
	public OccurrenceDefKeywordElements getOccurrenceDefKeywordAccess() {
		return pOccurrenceDefKeyword;
	}
	
	public ParserRule getOccurrenceDefKeywordRule() {
		return getOccurrenceDefKeywordAccess().getRule();
	}
	
	//fragment OccurrenceDefinitionPrefix returns SysML::OccurrenceDefinition :
	//    BasicDefinitionPrefix?
	//    ( isIndividual ?= 'individual' ownedRelationship += LifeClassMembership )?
	//    DefinitionExtensionKeyword*
	//;
	public OccurrenceDefinitionPrefixElements getOccurrenceDefinitionPrefixAccess() {
		return pOccurrenceDefinitionPrefix;
	}
	
	public ParserRule getOccurrenceDefinitionPrefixRule() {
		return getOccurrenceDefinitionPrefixAccess().getRule();
	}
	
	//OccurrenceDefinition returns SysML::OccurrenceDefinition :
	//    OccurrenceDefinitionPrefix OccurrenceDefKeyword Definition
	//;
	public OccurrenceDefinitionElements getOccurrenceDefinitionAccess() {
		return pOccurrenceDefinition;
	}
	
	public ParserRule getOccurrenceDefinitionRule() {
		return getOccurrenceDefinitionAccess().getRule();
	}
	
	//IndividualDefinition returns SysML::OccurrenceDefinition :
	//    BasicDefinitionPrefix? isIndividual ?= 'individual'
	//    DefinitionExtensionKeyword* 'def' Definition
	//    ownedRelationship += LifeClassMembership
	//;
	public IndividualDefinitionElements getIndividualDefinitionAccess() {
		return pIndividualDefinition;
	}
	
	public ParserRule getIndividualDefinitionRule() {
		return getIndividualDefinitionAccess().getRule();
	}
	
	//LifeClassMembership returns SysML::OwningMembership :
	//    ownedRelatedElement += LifeClass
	//;
	public LifeClassMembershipElements getLifeClassMembershipAccess() {
		return pLifeClassMembership;
	}
	
	public ParserRule getLifeClassMembershipRule() {
		return getLifeClassMembershipAccess().getRule();
	}
	
	//LifeClass returns SysML::LifeClass :
	//    {SysML::LifeClass}
	//;
	public LifeClassElements getLifeClassAccess() {
		return pLifeClass;
	}
	
	public ParserRule getLifeClassRule() {
		return getLifeClassAccess().getRule();
	}
	
	///* Occurrence Usages */
	//OccurrenceUsageKeyword :
	//    OccurrenceKeyword
	//;
	public OccurrenceUsageKeywordElements getOccurrenceUsageKeywordAccess() {
		return pOccurrenceUsageKeyword;
	}
	
	public ParserRule getOccurrenceUsageKeywordRule() {
		return getOccurrenceUsageKeywordAccess().getRule();
	}
	
	//fragment OccurrenceUsagePrefix returns SysML::OccurrenceUsage :
	//      BasicUsagePrefix
	//      ( isIndividual ?= 'individual' )?
	//      ( portionKind = PortionKind )?
	//      UsageExtensionKeyword*
	//;
	public OccurrenceUsagePrefixElements getOccurrenceUsagePrefixAccess() {
		return pOccurrenceUsagePrefix;
	}
	
	public ParserRule getOccurrenceUsagePrefixRule() {
		return getOccurrenceUsagePrefixAccess().getRule();
	}
	
	//OccurrenceUsage returns SysML::OccurrenceUsage :
	//    OccurrenceUsagePrefix OccurrenceUsageKeyword Usage
	//;
	public OccurrenceUsageElements getOccurrenceUsageAccess() {
		return pOccurrenceUsage;
	}
	
	public ParserRule getOccurrenceUsageRule() {
		return getOccurrenceUsageAccess().getRule();
	}
	
	//IndividualUsage returns SysML::OccurrenceUsage :
	//    BasicUsagePrefix isIndividual ?= 'individual'
	//    UsageExtensionKeyword* Usage
	//;
	public IndividualUsageElements getIndividualUsageAccess() {
		return pIndividualUsage;
	}
	
	public ParserRule getIndividualUsageRule() {
		return getIndividualUsageAccess().getRule();
	}
	
	//PortionUsage returns SysML::OccurrenceUsage :
	//    BasicUsagePrefix ( isIndividual ?= 'individual' )?
	//    portionKind = PortionKind
	//    UsageExtensionKeyword* Usage
	//;
	public PortionUsageElements getPortionUsageAccess() {
		return pPortionUsage;
	}
	
	public ParserRule getPortionUsageRule() {
		return getPortionUsageAccess().getRule();
	}
	
	//enum PortionKind returns SysML::PortionKind :
	//    // Literal keywords identified explicitly so they can be found by syntax highlighting script
	//    snapshot = 'snapshot' | timeslice = 'timeslice'
	//;
	public PortionKindElements getPortionKindAccess() {
		return ePortionKind;
	}
	
	public EnumRule getPortionKindRule() {
		return getPortionKindAccess().getRule();
	}
	
	//EventOccurrenceUsage returns SysML::EventOccurrenceUsage :
	//     OccurrenceUsagePrefix 'event'
	//    ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
	//       | OccurrenceUsageKeyword UsageDeclaration? )
	//    UsageCompletion
	//;
	public EventOccurrenceUsageElements getEventOccurrenceUsageAccess() {
		return pEventOccurrenceUsage;
	}
	
	public ParserRule getEventOccurrenceUsageRule() {
		return getEventOccurrenceUsageAccess().getRule();
	}
	
	///* Occurrence Successions */
	//EmptySuccessionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += EmptySuccession
	//;
	public EmptySuccessionMemberElements getEmptySuccessionMemberAccess() {
		return pEmptySuccessionMember;
	}
	
	public ParserRule getEmptySuccessionMemberRule() {
		return getEmptySuccessionMemberAccess().getRule();
	}
	
	//EmptySuccession returns SysML::SuccessionAsUsage :
	//    'then' ownedRelationship += MultiplicitySourceEndMember
	//    ownedRelationship += EmptyTargetEndMember
	//;
	public EmptySuccessionElements getEmptySuccessionAccess() {
		return pEmptySuccession;
	}
	
	public ParserRule getEmptySuccessionRule() {
		return getEmptySuccessionAccess().getRule();
	}
	
	//MultiplicitySourceEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += MultiplicitySourceEnd
	//;
	public MultiplicitySourceEndMemberElements getMultiplicitySourceEndMemberAccess() {
		return pMultiplicitySourceEndMember;
	}
	
	public ParserRule getMultiplicitySourceEndMemberRule() {
		return getMultiplicitySourceEndMemberAccess().getRule();
	}
	
	//MultiplicitySourceEnd returns SysML::ReferenceUsage :
	//    {SysML::ReferenceUsage} ( ownedRelationship += OwnedMultiplicity )?
	//;
	public MultiplicitySourceEndElements getMultiplicitySourceEndAccess() {
		return pMultiplicitySourceEnd;
	}
	
	public ParserRule getMultiplicitySourceEndRule() {
		return getMultiplicitySourceEndAccess().getRule();
	}
	
	//EmptyTargetEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += EmptyTargetEnd
	//;
	public EmptyTargetEndMemberElements getEmptyTargetEndMemberAccess() {
		return pEmptyTargetEndMember;
	}
	
	public ParserRule getEmptyTargetEndMemberRule() {
		return getEmptyTargetEndMemberAccess().getRule();
	}
	
	//EmptyTargetEnd returns SysML::ReferenceUsage :
	//    {SysML::ReferenceUsage}
	//;
	public EmptyTargetEndElements getEmptyTargetEndAccess() {
		return pEmptyTargetEnd;
	}
	
	public ParserRule getEmptyTargetEndRule() {
		return getEmptyTargetEndAccess().getRule();
	}
	
	///* ITEMS */
	//ItemKeyword :
	//    'item'
	//;
	public ItemKeywordElements getItemKeywordAccess() {
		return pItemKeyword;
	}
	
	public ParserRule getItemKeywordRule() {
		return getItemKeywordAccess().getRule();
	}
	
	//ItemDefKeyword :
	//    ItemKeyword 'def'
	//;
	public ItemDefKeywordElements getItemDefKeywordAccess() {
		return pItemDefKeyword;
	}
	
	public ParserRule getItemDefKeywordRule() {
		return getItemDefKeywordAccess().getRule();
	}
	
	//ItemUsageKeyword :
	//    ItemKeyword
	//;
	public ItemUsageKeywordElements getItemUsageKeywordAccess() {
		return pItemUsageKeyword;
	}
	
	public ParserRule getItemUsageKeywordRule() {
		return getItemUsageKeywordAccess().getRule();
	}
	
	//ItemDefinition returns SysML::ItemDefinition :
	//    OccurrenceDefinitionPrefix ItemDefKeyword Definition
	//;
	public ItemDefinitionElements getItemDefinitionAccess() {
		return pItemDefinition;
	}
	
	public ParserRule getItemDefinitionRule() {
		return getItemDefinitionAccess().getRule();
	}
	
	//ItemUsage returns SysML::ItemUsage :
	//    OccurrenceUsagePrefix ItemUsageKeyword Usage
	//;
	public ItemUsageElements getItemUsageAccess() {
		return pItemUsage;
	}
	
	public ParserRule getItemUsageRule() {
		return getItemUsageAccess().getRule();
	}
	
	///* PARTS */
	//PartKeyword :
	//    'part'
	//;
	public PartKeywordElements getPartKeywordAccess() {
		return pPartKeyword;
	}
	
	public ParserRule getPartKeywordRule() {
		return getPartKeywordAccess().getRule();
	}
	
	//PartDefKeyword :
	//    PartKeyword 'def'
	//;
	public PartDefKeywordElements getPartDefKeywordAccess() {
		return pPartDefKeyword;
	}
	
	public ParserRule getPartDefKeywordRule() {
		return getPartDefKeywordAccess().getRule();
	}
	
	//PartUsageKeyword :
	//    PartKeyword
	//;
	public PartUsageKeywordElements getPartUsageKeywordAccess() {
		return pPartUsageKeyword;
	}
	
	public ParserRule getPartUsageKeywordRule() {
		return getPartUsageKeywordAccess().getRule();
	}
	
	//PartDefinition returns SysML::PartDefinition :
	//    OccurrenceDefinitionPrefix PartDefKeyword Definition
	//;
	public PartDefinitionElements getPartDefinitionAccess() {
		return pPartDefinition;
	}
	
	public ParserRule getPartDefinitionRule() {
		return getPartDefinitionAccess().getRule();
	}
	
	//PartUsage returns SysML::PartUsage :
	//    OccurrenceUsagePrefix PartUsageKeyword Usage
	//;
	public PartUsageElements getPartUsageAccess() {
		return pPartUsage;
	}
	
	public ParserRule getPartUsageRule() {
		return getPartUsageAccess().getRule();
	}
	
	///* PORTS */
	///* Port Definitions */
	//PortKeyword :
	//    'port'
	//;
	public PortKeywordElements getPortKeywordAccess() {
		return pPortKeyword;
	}
	
	public ParserRule getPortKeywordRule() {
		return getPortKeywordAccess().getRule();
	}
	
	//PortDefKeyword :
	//    PortKeyword 'def'
	//;
	public PortDefKeywordElements getPortDefKeywordAccess() {
		return pPortDefKeyword;
	}
	
	public ParserRule getPortDefKeywordRule() {
		return getPortDefKeywordAccess().getRule();
	}
	
	//PortDefinition returns SysML::PortDefinition :
	//    DefinitionPrefix PortDefKeyword Definition
	//    ownedRelationship += ConjugatedPortDefinitionMember
	//;
	public PortDefinitionElements getPortDefinitionAccess() {
		return pPortDefinition;
	}
	
	public ParserRule getPortDefinitionRule() {
		return getPortDefinitionAccess().getRule();
	}
	
	//ConjugatedPortDefinitionMember returns SysML::OwningMembership :
	//    ownedRelatedElement += ConjugatedPortDefinition
	//;
	public ConjugatedPortDefinitionMemberElements getConjugatedPortDefinitionMemberAccess() {
		return pConjugatedPortDefinitionMember;
	}
	
	public ParserRule getConjugatedPortDefinitionMemberRule() {
		return getConjugatedPortDefinitionMemberAccess().getRule();
	}
	
	//ConjugatedPortDefinition returns SysML::ConjugatedPortDefinition :
	//    ownedRelationship += PortConjugation
	//;
	public ConjugatedPortDefinitionElements getConjugatedPortDefinitionAccess() {
		return pConjugatedPortDefinition;
	}
	
	public ParserRule getConjugatedPortDefinitionRule() {
		return getConjugatedPortDefinitionAccess().getRule();
	}
	
	//PortConjugation returns SysML::PortConjugation :
	//    {SysML::PortConjugation}
	//;
	public PortConjugationElements getPortConjugationAccess() {
		return pPortConjugation;
	}
	
	public ParserRule getPortConjugationRule() {
		return getPortConjugationAccess().getRule();
	}
	
	//ConjugatedPortTyping returns SysML::ConjugatedPortTyping :
	//    conjugatedPortDefinition = [SysML::ConjugatedPortDefinition | ConjugatedQualifiedName]
	//;
	public ConjugatedPortTypingElements getConjugatedPortTypingAccess() {
		return pConjugatedPortTyping;
	}
	
	public ParserRule getConjugatedPortTypingRule() {
		return getConjugatedPortTypingAccess().getRule();
	}
	
	//ConjugatedQualifiedName :
	//    '~' QualifiedName
	//;
	public ConjugatedQualifiedNameElements getConjugatedQualifiedNameAccess() {
		return pConjugatedQualifiedName;
	}
	
	public ParserRule getConjugatedQualifiedNameRule() {
		return getConjugatedQualifiedNameAccess().getRule();
	}
	
	///* Port Usages */
	//PortUsageKeyword :
	//    PortKeyword
	//;
	public PortUsageKeywordElements getPortUsageKeywordAccess() {
		return pPortUsageKeyword;
	}
	
	public ParserRule getPortUsageKeywordRule() {
		return getPortUsageKeywordAccess().getRule();
	}
	
	//PortUsage returns SysML::PortUsage :
	//    OccurrenceUsagePrefix PortUsageKeyword Usage
	//;
	public PortUsageElements getPortUsageAccess() {
		return pPortUsage;
	}
	
	public ParserRule getPortUsageRule() {
		return getPortUsageAccess().getRule();
	}
	
	///* CONNECTIONS */
	///* Connectors */
	//ConnectorEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += ConnectorEnd
	//;
	public ConnectorEndMemberElements getConnectorEndMemberAccess() {
		return pConnectorEndMember;
	}
	
	public ParserRule getConnectorEndMemberRule() {
		return getConnectorEndMemberAccess().getRule();
	}
	
	//ConnectorEnd returns SysML::ReferenceUsage :
	//    ( declaredName = Name ReferencesKeyword )?
	//    ownedRelationship += OwnedReferenceSubsetting
	//    ( ownedRelationship += OwnedMultiplicity )?
	//;
	public ConnectorEndElements getConnectorEndAccess() {
		return pConnectorEnd;
	}
	
	public ParserRule getConnectorEndRule() {
		return getConnectorEndAccess().getRule();
	}
	
	///* Binding Connectors */
	//BindingKeyword :
	//    'binding'
	//;
	public BindingKeywordElements getBindingKeywordAccess() {
		return pBindingKeyword;
	}
	
	public ParserRule getBindingKeywordRule() {
		return getBindingKeywordAccess().getRule();
	}
	
	//BindingConnectorAsUsage returns SysML::BindingConnectorAsUsage :
	//    UsagePrefix ( BindingKeyword UsageDeclaration? )?
	//    'bind' ownedRelationship += ConnectorEndMember
	//    '=' ownedRelationship += ConnectorEndMember
	//    DefinitionBody
	//;
	public BindingConnectorAsUsageElements getBindingConnectorAsUsageAccess() {
		return pBindingConnectorAsUsage;
	}
	
	public ParserRule getBindingConnectorAsUsageRule() {
		return getBindingConnectorAsUsageAccess().getRule();
	}
	
	///* Successions */
	//SuccessionKeyword:
	//    'succession'
	//;
	public SuccessionKeywordElements getSuccessionKeywordAccess() {
		return pSuccessionKeyword;
	}
	
	public ParserRule getSuccessionKeywordRule() {
		return getSuccessionKeywordAccess().getRule();
	}
	
	//SuccessionAsUsage returns SysML::SuccessionAsUsage :
	//    UsagePrefix ( SuccessionKeyword UsageDeclaration? )?
	//    'first' ownedRelationship += ConnectorEndMember
	//    'then' ownedRelationship += ConnectorEndMember
	//    DefinitionBody
	//;
	public SuccessionAsUsageElements getSuccessionAsUsageAccess() {
		return pSuccessionAsUsage;
	}
	
	public ParserRule getSuccessionAsUsageRule() {
		return getSuccessionAsUsageAccess().getRule();
	}
	
	///* Connection Definitions */
	//ConnectionKeyword :
	//    'connection'
	//;
	public ConnectionKeywordElements getConnectionKeywordAccess() {
		return pConnectionKeyword;
	}
	
	public ParserRule getConnectionKeywordRule() {
		return getConnectionKeywordAccess().getRule();
	}
	
	//ConnectionDefKeyword :
	//    ConnectionKeyword 'def'
	//;
	public ConnectionDefKeywordElements getConnectionDefKeywordAccess() {
		return pConnectionDefKeyword;
	}
	
	public ParserRule getConnectionDefKeywordRule() {
		return getConnectionDefKeywordAccess().getRule();
	}
	
	//ConnectionDefinition returns SysML::ConnectionDefinition :
	//    OccurrenceDefinitionPrefix ConnectionDefKeyword Definition
	//;
	public ConnectionDefinitionElements getConnectionDefinitionAccess() {
		return pConnectionDefinition;
	}
	
	public ParserRule getConnectionDefinitionRule() {
		return getConnectionDefinitionAccess().getRule();
	}
	
	///* Connection Usages */
	//ConnectorKeyword :
	//    'connect'
	//;
	public ConnectorKeywordElements getConnectorKeywordAccess() {
		return pConnectorKeyword;
	}
	
	public ParserRule getConnectorKeywordRule() {
		return getConnectorKeywordAccess().getRule();
	}
	
	//ConnectionUsageKeyword :
	//    ConnectionKeyword
	//;
	public ConnectionUsageKeywordElements getConnectionUsageKeywordAccess() {
		return pConnectionUsageKeyword;
	}
	
	public ParserRule getConnectionUsageKeywordRule() {
		return getConnectionUsageKeywordAccess().getRule();
	}
	
	//ConnectionUsage returns SysML::ConnectionUsage :
	//    OccurrenceUsagePrefix
	//    ( ConnectionUsageKeyword UsageDeclaration? ValuePart?
	//      ( ConnectorKeyword ConnectorPart )?
	//    | ConnectorKeyword ConnectorPart
	//    ) UsageBody
	//;
	public ConnectionUsageElements getConnectionUsageAccess() {
		return pConnectionUsage;
	}
	
	public ParserRule getConnectionUsageRule() {
		return getConnectionUsageAccess().getRule();
	}
	
	//fragment ConnectorPart returns SysML::ConnectionUsage :
	//    BinaryConnectorPart | NaryConnectorPart
	//;
	public ConnectorPartElements getConnectorPartAccess() {
		return pConnectorPart;
	}
	
	public ParserRule getConnectorPartRule() {
		return getConnectorPartAccess().getRule();
	}
	
	//fragment BinaryConnectorPart returns SysML::Connector :
	//    ownedRelationship += ConnectorEndMember 'to'
	//    ownedRelationship += ConnectorEndMember
	//;
	public BinaryConnectorPartElements getBinaryConnectorPartAccess() {
		return pBinaryConnectorPart;
	}
	
	public ParserRule getBinaryConnectorPartRule() {
		return getBinaryConnectorPartAccess().getRule();
	}
	
	//fragment NaryConnectorPart returns SysML::Connector :
	//    '(' ownedRelationship += ConnectorEndMember ','
	//        ownedRelationship += ConnectorEndMember
	//        ( ',' ownedRelationship += ConnectorEndMember )* ')'
	//;
	public NaryConnectorPartElements getNaryConnectorPartAccess() {
		return pNaryConnectorPart;
	}
	
	public ParserRule getNaryConnectorPartRule() {
		return getNaryConnectorPartAccess().getRule();
	}
	
	//EmptySourceEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += EmptySourceEnd
	//;
	public EmptySourceEndMemberElements getEmptySourceEndMemberAccess() {
		return pEmptySourceEndMember;
	}
	
	public ParserRule getEmptySourceEndMemberRule() {
		return getEmptySourceEndMemberAccess().getRule();
	}
	
	//EmptySourceEnd returns SysML::ReferenceUsage :
	//    {SysML::ReferenceUsage}
	//;
	public EmptySourceEndElements getEmptySourceEndAccess() {
		return pEmptySourceEnd;
	}
	
	public ParserRule getEmptySourceEndRule() {
		return getEmptySourceEndAccess().getRule();
	}
	
	///* FLOW CONNECTIONS */
	///* Flow Connection Definitions */
	//FlowConnectionKeyword :
	//    'flow'
	//;
	public FlowConnectionKeywordElements getFlowConnectionKeywordAccess() {
		return pFlowConnectionKeyword;
	}
	
	public ParserRule getFlowConnectionKeywordRule() {
		return getFlowConnectionKeywordAccess().getRule();
	}
	
	//FlowConnectionDefKeyword :
	//    FlowConnectionKeyword 'def'
	//;
	public FlowConnectionDefKeywordElements getFlowConnectionDefKeywordAccess() {
		return pFlowConnectionDefKeyword;
	}
	
	public ParserRule getFlowConnectionDefKeywordRule() {
		return getFlowConnectionDefKeywordAccess().getRule();
	}
	
	//FlowConnectionDefinition returns SysML::FlowConnectionDefinition :
	//    OccurrenceDefinitionPrefix FlowConnectionDefKeyword Definition
	//;
	public FlowConnectionDefinitionElements getFlowConnectionDefinitionAccess() {
		return pFlowConnectionDefinition;
	}
	
	public ParserRule getFlowConnectionDefinitionRule() {
		return getFlowConnectionDefinitionAccess().getRule();
	}
	
	///* Messages */
	//MessageKeyword :
	//    'message'
	//;
	public MessageKeywordElements getMessageKeywordAccess() {
		return pMessageKeyword;
	}
	
	public ParserRule getMessageKeywordRule() {
		return getMessageKeywordAccess().getRule();
	}
	
	//Message returns SysML::FlowConnectionUsage :
	//    OccurrenceUsagePrefix MessageKeyword MessageDeclaration DefinitionBody
	//;
	public MessageElements getMessageAccess() {
		return pMessage;
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}
	
	//fragment MessageDeclaration returns SysML::FlowConnectionUsage :
	//      UsageDeclaration? ValuePart?
	//      ( 'of' ownedRelationship += ItemFeatureMember )?
	//      ( 'from' ownedRelationship += MessageEventMember
	//        'to' ownedRelationship += MessageEventMember
	//      )?
	//    | ownedRelationship += MessageEventMember 'to'
	//      ownedRelationship += MessageEventMember
	//;
	public MessageDeclarationElements getMessageDeclarationAccess() {
		return pMessageDeclaration;
	}
	
	public ParserRule getMessageDeclarationRule() {
		return getMessageDeclarationAccess().getRule();
	}
	
	//MessageEventMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += MessageEvent
	//;
	public MessageEventMemberElements getMessageEventMemberAccess() {
		return pMessageEventMember;
	}
	
	public ParserRule getMessageEventMemberRule() {
		return getMessageEventMemberAccess().getRule();
	}
	
	//MessageEvent returns SysML::EventOccurrenceUsage :
	//    ownedRelationship += OwnedReferenceSubsetting
	//;
	public MessageEventElements getMessageEventAccess() {
		return pMessageEvent;
	}
	
	public ParserRule getMessageEventRule() {
		return getMessageEventAccess().getRule();
	}
	
	///* Flow Connection Usages */
	//FlowConnectionUsage returns SysML::FlowConnectionUsage :
	//    OccurrenceUsagePrefix FlowConnectionKeyword
	//    FlowConnectionDeclaration DefinitionBody
	//;
	public FlowConnectionUsageElements getFlowConnectionUsageAccess() {
		return pFlowConnectionUsage;
	}
	
	public ParserRule getFlowConnectionUsageRule() {
		return getFlowConnectionUsageAccess().getRule();
	}
	
	//SuccessionFlowConnectionKeyword :
	//    SuccessionKeyword FlowConnectionKeyword
	//;
	public SuccessionFlowConnectionKeywordElements getSuccessionFlowConnectionKeywordAccess() {
		return pSuccessionFlowConnectionKeyword;
	}
	
	public ParserRule getSuccessionFlowConnectionKeywordRule() {
		return getSuccessionFlowConnectionKeywordAccess().getRule();
	}
	
	//SuccessionFlowConnectionUsage returns SysML::SuccessionFlowConnectionUsage :
	//    OccurrenceUsagePrefix SuccessionFlowConnectionKeyword
	//    FlowConnectionDeclaration DefinitionBody
	//;
	public SuccessionFlowConnectionUsageElements getSuccessionFlowConnectionUsageAccess() {
		return pSuccessionFlowConnectionUsage;
	}
	
	public ParserRule getSuccessionFlowConnectionUsageRule() {
		return getSuccessionFlowConnectionUsageAccess().getRule();
	}
	
	//fragment FlowConnectionDeclaration returns SysML::FlowConnectionUsage :
	//      UsageDeclaration? ValuePart?
	//      ( 'of'  ownedRelationship += ItemFeatureMember )?
	//      ( 'from' ownedRelationship += FlowEndMember
	//        'to' ownedRelationship += FlowEndMember )?
	//    | ownedRelationship += FlowEndMember 'to'
	//      ownedRelationship += FlowEndMember
	//;
	public FlowConnectionDeclarationElements getFlowConnectionDeclarationAccess() {
		return pFlowConnectionDeclaration;
	}
	
	public ParserRule getFlowConnectionDeclarationRule() {
		return getFlowConnectionDeclarationAccess().getRule();
	}
	
	///* Flow Members */
	//ItemFeatureMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += ItemFeature
	//;
	public ItemFeatureMemberElements getItemFeatureMemberAccess() {
		return pItemFeatureMember;
	}
	
	public ParserRule getItemFeatureMemberRule() {
		return getItemFeatureMemberAccess().getRule();
	}
	
	//ItemFeature returns SysML::ItemFeature :
	//      PayloadFeature
	//;
	public ItemFeatureElements getItemFeatureAccess() {
		return pItemFeature;
	}
	
	public ParserRule getItemFeatureRule() {
		return getItemFeatureAccess().getRule();
	}
	
	//fragment PayloadFeature returns SysML::Feature :
	//      Identification? PayloadFeatureSpecializationPart ValuePart?
	//    | Identification? ValuePart
	//    | ownedRelationship += OwnedFeatureTyping ( ownedRelationship += OwnedMultiplicity )?
	//    | ownedRelationship += OwnedMultiplicity ownedRelationship += OwnedFeatureTyping
	//;
	public PayloadFeatureElements getPayloadFeatureAccess() {
		return pPayloadFeature;
	}
	
	public ParserRule getPayloadFeatureRule() {
		return getPayloadFeatureAccess().getRule();
	}
	
	//fragment PayloadFeatureSpecializationPart returns SysML::Feature :
	//      ( -> FeatureSpecialization )+ MultiplicityPart? FeatureSpecialization*
	//    | MultiplicityPart FeatureSpecialization+
	//;
	public PayloadFeatureSpecializationPartElements getPayloadFeatureSpecializationPartAccess() {
		return pPayloadFeatureSpecializationPart;
	}
	
	public ParserRule getPayloadFeatureSpecializationPartRule() {
		return getPayloadFeatureSpecializationPartAccess().getRule();
	}
	
	//FlowEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += FlowEnd
	//;
	public FlowEndMemberElements getFlowEndMemberAccess() {
		return pFlowEndMember;
	}
	
	public ParserRule getFlowEndMemberRule() {
		return getFlowEndMemberAccess().getRule();
	}
	
	//FlowEnd returns SysML::ItemFlowEnd :
	//    ( ownedRelationship += FlowEndSubsetting )?
	//    ownedRelationship += FlowFeatureMember
	//;
	public FlowEndElements getFlowEndAccess() {
		return pFlowEnd;
	}
	
	public ParserRule getFlowEndRule() {
		return getFlowEndAccess().getRule();
	}
	
	//FlowEndSubsetting returns SysML::ReferenceSubsetting :
	//      referencedFeature = [SysML::Feature | QualifiedName] '.'
	//    | ownedRelatedElement += FeatureChainPrefix
	//;
	public FlowEndSubsettingElements getFlowEndSubsettingAccess() {
		return pFlowEndSubsetting;
	}
	
	public ParserRule getFlowEndSubsettingRule() {
		return getFlowEndSubsettingAccess().getRule();
	}
	
	//FeatureChainPrefix returns SysML::Feature :
	//    ( ownedRelationship += OwnedFeatureChaining '.' )+
	//    ownedRelationship += OwnedFeatureChaining '.'
	//;
	public FeatureChainPrefixElements getFeatureChainPrefixAccess() {
		return pFeatureChainPrefix;
	}
	
	public ParserRule getFeatureChainPrefixRule() {
		return getFeatureChainPrefixAccess().getRule();
	}
	
	//FlowFeatureMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += FlowFeature
	//;
	public FlowFeatureMemberElements getFlowFeatureMemberAccess() {
		return pFlowFeatureMember;
	}
	
	public ParserRule getFlowFeatureMemberRule() {
		return getFlowFeatureMemberAccess().getRule();
	}
	
	//FlowFeature returns SysML::ReferenceUsage :
	//    ownedRelationship += FlowRedefinition
	//;
	public FlowFeatureElements getFlowFeatureAccess() {
		return pFlowFeature;
	}
	
	public ParserRule getFlowFeatureRule() {
		return getFlowFeatureAccess().getRule();
	}
	
	//FlowRedefinition returns SysML::Redefinition :
	//    redefinedFeature = [SysML::Feature|QualifiedName]
	//;
	public FlowRedefinitionElements getFlowRedefinitionAccess() {
		return pFlowRedefinition;
	}
	
	public ParserRule getFlowRedefinitionRule() {
		return getFlowRedefinitionAccess().getRule();
	}
	
	///* INTERFACES */
	///* Interface Definitions */
	//InterfaceKeyword :
	//    'interface'
	//;
	public InterfaceKeywordElements getInterfaceKeywordAccess() {
		return pInterfaceKeyword;
	}
	
	public ParserRule getInterfaceKeywordRule() {
		return getInterfaceKeywordAccess().getRule();
	}
	
	//InterfaceDefKeyword :
	//    InterfaceKeyword 'def'
	//;
	public InterfaceDefKeywordElements getInterfaceDefKeywordAccess() {
		return pInterfaceDefKeyword;
	}
	
	public ParserRule getInterfaceDefKeywordRule() {
		return getInterfaceDefKeywordAccess().getRule();
	}
	
	//InterfaceDefinition returns SysML::InterfaceDefinition :
	//    OccurrenceDefinitionPrefix InterfaceDefKeyword DefinitionDeclaration InterfaceBody
	//;
	public InterfaceDefinitionElements getInterfaceDefinitionAccess() {
		return pInterfaceDefinition;
	}
	
	public ParserRule getInterfaceDefinitionRule() {
		return getInterfaceDefinitionAccess().getRule();
	}
	
	//fragment InterfaceBody returns SysML::Type :
	//    ';' | '{' InterfaceBodyItem* '}'
	//;
	public InterfaceBodyElements getInterfaceBodyAccess() {
		return pInterfaceBody;
	}
	
	public ParserRule getInterfaceBodyRule() {
		return getInterfaceBodyAccess().getRule();
	}
	
	//fragment InterfaceBodyItem returns SysML::Type :
	//      ownedRelationship += DefinitionMember
	//    | ownedRelationship += VariantUsageMember
	//    | ownedRelationship += InterfaceNonOccurrenceUsageMember
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += InterfaceOccurrenceUsageMember
	//    | ownedRelationship += AliasMember
	//    | => ownedRelationship += Import
	//;
	public InterfaceBodyItemElements getInterfaceBodyItemAccess() {
		return pInterfaceBodyItem;
	}
	
	public ParserRule getInterfaceBodyItemRule() {
		return getInterfaceBodyItemAccess().getRule();
	}
	
	//InterfaceNonOccurrenceUsageMember returns SysML::FeatureMembership :
	//    MemberPrefix ownedRelatedElement += InterfaceNonOccurrenceUsageElement
	//;
	public InterfaceNonOccurrenceUsageMemberElements getInterfaceNonOccurrenceUsageMemberAccess() {
		return pInterfaceNonOccurrenceUsageMember;
	}
	
	public ParserRule getInterfaceNonOccurrenceUsageMemberRule() {
		return getInterfaceNonOccurrenceUsageMemberAccess().getRule();
	}
	
	//InterfaceNonOccurrenceUsageElement returns SysML::Usage :
	//      ReferenceUsage
	//    | AttributeUsage
	//    | EnumerationUsage
	//    | BindingConnectorAsUsage
	//    | SuccessionAsUsage
	//;
	public InterfaceNonOccurrenceUsageElementElements getInterfaceNonOccurrenceUsageElementAccess() {
		return pInterfaceNonOccurrenceUsageElement;
	}
	
	public ParserRule getInterfaceNonOccurrenceUsageElementRule() {
		return getInterfaceNonOccurrenceUsageElementAccess().getRule();
	}
	
	//InterfaceOccurrenceUsageMember returns SysML::FeatureMembership :
	//    MemberPrefix ownedRelatedElement += InterfaceOccurrenceUsageElement
	//;
	public InterfaceOccurrenceUsageMemberElements getInterfaceOccurrenceUsageMemberAccess() {
		return pInterfaceOccurrenceUsageMember;
	}
	
	public ParserRule getInterfaceOccurrenceUsageMemberRule() {
		return getInterfaceOccurrenceUsageMemberAccess().getRule();
	}
	
	//InterfaceOccurrenceUsageElement returns SysML::Usage :
	//    DefaultInterfaceEnd | StructureUsageElement | BehaviorUsageElement
	//;
	public InterfaceOccurrenceUsageElementElements getInterfaceOccurrenceUsageElementAccess() {
		return pInterfaceOccurrenceUsageElement;
	}
	
	public ParserRule getInterfaceOccurrenceUsageElementRule() {
		return getInterfaceOccurrenceUsageElementAccess().getRule();
	}
	
	//DefaultInterfaceEnd returns SysML::PortUsage :
	//    ( direction = FeatureDirection )?
	//    ( isAbstract ?= 'abstract' | isVariation ?= 'variation')?
	//    isEnd ?= 'end' Usage
	//;
	public DefaultInterfaceEndElements getDefaultInterfaceEndAccess() {
		return pDefaultInterfaceEnd;
	}
	
	public ParserRule getDefaultInterfaceEndRule() {
		return getDefaultInterfaceEndAccess().getRule();
	}
	
	///* Interface Usages */
	//InterfaceUsageKeyword :
	//    InterfaceKeyword
	//;
	public InterfaceUsageKeywordElements getInterfaceUsageKeywordAccess() {
		return pInterfaceUsageKeyword;
	}
	
	public ParserRule getInterfaceUsageKeywordRule() {
		return getInterfaceUsageKeywordAccess().getRule();
	}
	
	//InterfaceUsage returns SysML::InterfaceUsage :
	//    OccurrenceUsagePrefix InterfaceUsageKeyword InterfaceUsageDeclaration InterfaceBody
	//;
	public InterfaceUsageElements getInterfaceUsageAccess() {
		return pInterfaceUsage;
	}
	
	public ParserRule getInterfaceUsageRule() {
		return getInterfaceUsageAccess().getRule();
	}
	
	//fragment InterfaceUsageDeclaration returns SysML::InterfaceUsage :
	//    UsageDeclaration? ( ConnectorKeyword InterfacePart )? | InterfacePart
	//;
	public InterfaceUsageDeclarationElements getInterfaceUsageDeclarationAccess() {
		return pInterfaceUsageDeclaration;
	}
	
	public ParserRule getInterfaceUsageDeclarationRule() {
		return getInterfaceUsageDeclarationAccess().getRule();
	}
	
	//fragment InterfacePart returns SysML::ConnectionUsage :
	//    BinaryInterfacePart | NaryInterfacePart
	//;
	public InterfacePartElements getInterfacePartAccess() {
		return pInterfacePart;
	}
	
	public ParserRule getInterfacePartRule() {
		return getInterfacePartAccess().getRule();
	}
	
	//fragment BinaryInterfacePart returns SysML::Connector :
	//    ownedRelationship += InterfaceEndMember 'to'
	//    ownedRelationship += InterfaceEndMember
	//;
	public BinaryInterfacePartElements getBinaryInterfacePartAccess() {
		return pBinaryInterfacePart;
	}
	
	public ParserRule getBinaryInterfacePartRule() {
		return getBinaryInterfacePartAccess().getRule();
	}
	
	//fragment NaryInterfacePart returns SysML::Connector :
	//    '(' ownedRelationship += InterfaceEndMember ','
	//        ownedRelationship += InterfaceEndMember
	//        ( ',' ownedRelationship += InterfaceEndMember )* ')'
	//;
	public NaryInterfacePartElements getNaryInterfacePartAccess() {
		return pNaryInterfacePart;
	}
	
	public ParserRule getNaryInterfacePartRule() {
		return getNaryInterfacePartAccess().getRule();
	}
	
	//InterfaceEndMember returns SysML::EndFeatureMembership :
	//    ownedRelatedElement += InterfaceEnd
	//;
	public InterfaceEndMemberElements getInterfaceEndMemberAccess() {
		return pInterfaceEndMember;
	}
	
	public ParserRule getInterfaceEndMemberRule() {
		return getInterfaceEndMemberAccess().getRule();
	}
	
	//InterfaceEnd returns SysML::PortUsage :
	//    ( declaredName = Name ReferencesKeyword )?
	//    ownedRelationship += OwnedReferenceSubsetting
	//    ( ownedRelationship += OwnedMultiplicity )?
	//;
	public InterfaceEndElements getInterfaceEndAccess() {
		return pInterfaceEnd;
	}
	
	public ParserRule getInterfaceEndRule() {
		return getInterfaceEndAccess().getRule();
	}
	
	///* ALLOCATIONS */
	///* Allocation Definitions */
	//AllocationKeyword :
	//    'allocation'
	//;
	public AllocationKeywordElements getAllocationKeywordAccess() {
		return pAllocationKeyword;
	}
	
	public ParserRule getAllocationKeywordRule() {
		return getAllocationKeywordAccess().getRule();
	}
	
	//AllocationDefKeyword :
	//    AllocationKeyword 'def'
	//;
	public AllocationDefKeywordElements getAllocationDefKeywordAccess() {
		return pAllocationDefKeyword;
	}
	
	public ParserRule getAllocationDefKeywordRule() {
		return getAllocationDefKeywordAccess().getRule();
	}
	
	//AllocationDefinition returns SysML::AllocationDefinition :
	//    OccurrenceDefinitionPrefix AllocationDefKeyword Definition
	//;
	public AllocationDefinitionElements getAllocationDefinitionAccess() {
		return pAllocationDefinition;
	}
	
	public ParserRule getAllocationDefinitionRule() {
		return getAllocationDefinitionAccess().getRule();
	}
	
	///* AllocationUsage Usages */
	//AllocationUsageKeyword :
	//    AllocationKeyword
	//;
	public AllocationUsageKeywordElements getAllocationUsageKeywordAccess() {
		return pAllocationUsageKeyword;
	}
	
	public ParserRule getAllocationUsageKeywordRule() {
		return getAllocationUsageKeywordAccess().getRule();
	}
	
	//AllocateKeyword :
	//    'allocate'
	//;
	public AllocateKeywordElements getAllocateKeywordAccess() {
		return pAllocateKeyword;
	}
	
	public ParserRule getAllocateKeywordRule() {
		return getAllocateKeywordAccess().getRule();
	}
	
	//AllocationUsage returns SysML::AllocationUsage :
	//    OccurrenceUsagePrefix AllocationUsageDeclaration UsageBody
	//;
	public AllocationUsageElements getAllocationUsageAccess() {
		return pAllocationUsage;
	}
	
	public ParserRule getAllocationUsageRule() {
		return getAllocationUsageAccess().getRule();
	}
	
	//fragment AllocationUsageDeclaration returns SysML::AllocationUsage :
	//        AllocationUsageKeyword UsageDeclaration? ( AllocateKeyword ConnectorPart )?
	//      | AllocateKeyword ConnectorPart
	//;
	public AllocationUsageDeclarationElements getAllocationUsageDeclarationAccess() {
		return pAllocationUsageDeclaration;
	}
	
	public ParserRule getAllocationUsageDeclarationRule() {
		return getAllocationUsageDeclarationAccess().getRule();
	}
	
	///* ACTION */
	///* Action Definitions */
	//ActionKeyword :
	//    'action'
	//;
	public ActionKeywordElements getActionKeywordAccess() {
		return pActionKeyword;
	}
	
	public ParserRule getActionKeywordRule() {
		return getActionKeywordAccess().getRule();
	}
	
	//ActionDefKeyword :
	//    ActionKeyword 'def'
	//;
	public ActionDefKeywordElements getActionDefKeywordAccess() {
		return pActionDefKeyword;
	}
	
	public ParserRule getActionDefKeywordRule() {
		return getActionDefKeywordAccess().getRule();
	}
	
	//ActionDefinition returns SysML::ActionDefinition :
	//    OccurrenceDefinitionPrefix ActionDefKeyword DefinitionDeclaration ActionBody
	//;
	public ActionDefinitionElements getActionDefinitionAccess() {
		return pActionDefinition;
	}
	
	public ParserRule getActionDefinitionRule() {
		return getActionDefinitionAccess().getRule();
	}
	
	//fragment ActionBody returns SysML::Type :
	//      ';'
	//      // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
	//      // while incrementally parsing.
	//    | '{' => ActionBodyItem* '}'
	//;
	public ActionBodyElements getActionBodyAccess() {
		return pActionBody;
	}
	
	public ParserRule getActionBodyRule() {
		return getActionBodyAccess().getRule();
	}
	
	//fragment ActionBodyItem returns SysML::Type :
	//      ownedRelationship += Import
	//    | ownedRelationship += AliasMember
	//    | ownedRelationship += DefinitionMember
	//    | ownedRelationship += VariantUsageMember
	//    | ownedRelationship += NonOccurrenceUsageMember
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += StructureUsageMember
	//    | ownedRelationship += InitialNodeMember
	//      ( => ownedRelationship += TargetSuccessionMember )*
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += ( BehaviorUsageMember | ActionNodeMember )
	//      ( => ownedRelationship += TargetSuccessionMember )*
	//    | ownedRelationship += GuardedSuccessionMember
	//;
	public ActionBodyItemElements getActionBodyItemAccess() {
		return pActionBodyItem;
	}
	
	public ParserRule getActionBodyItemRule() {
		return getActionBodyItemAccess().getRule();
	}
	
	//InitialNodeMember returns SysML::Membership :
	//    MemberPrefix 'first' memberElement = [SysML::Feature|QualifiedName]
	//    RelationshipBody
	//;
	public InitialNodeMemberElements getInitialNodeMemberAccess() {
		return pInitialNodeMember;
	}
	
	public ParserRule getInitialNodeMemberRule() {
		return getInitialNodeMemberAccess().getRule();
	}
	
	//ActionNodeMember returns SysML::FeatureMembership :
	//    MemberPrefix ownedRelatedElement += ActionNode
	//;
	public ActionNodeMemberElements getActionNodeMemberAccess() {
		return pActionNodeMember;
	}
	
	public ParserRule getActionNodeMemberRule() {
		return getActionNodeMemberAccess().getRule();
	}
	
	//TargetSuccessionMember returns SysML::FeatureMembership :
	//    MemberPrefix ownedRelatedElement += ActionTargetSuccession
	//;
	public TargetSuccessionMemberElements getTargetSuccessionMemberAccess() {
		return pTargetSuccessionMember;
	}
	
	public ParserRule getTargetSuccessionMemberRule() {
		return getTargetSuccessionMemberAccess().getRule();
	}
	
	//GuardedSuccessionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += GuardedSuccession
	//;
	public GuardedSuccessionMemberElements getGuardedSuccessionMemberAccess() {
		return pGuardedSuccessionMember;
	}
	
	public ParserRule getGuardedSuccessionMemberRule() {
		return getGuardedSuccessionMemberAccess().getRule();
	}
	
	///* Action Usages */
	//ActionUsageKeyword :
	//    ActionKeyword
	//;
	public ActionUsageKeywordElements getActionUsageKeywordAccess() {
		return pActionUsageKeyword;
	}
	
	public ParserRule getActionUsageKeywordRule() {
		return getActionUsageKeywordAccess().getRule();
	}
	
	//ActionUsage returns SysML::ActionUsage :
	//    OccurrenceUsagePrefix ActionUsageKeyword ActionUsageDeclaration ActionBody
	//;
	public ActionUsageElements getActionUsageAccess() {
		return pActionUsage;
	}
	
	public ParserRule getActionUsageRule() {
		return getActionUsageAccess().getRule();
	}
	
	//PerformActionUsage returns SysML::PerformActionUsage :
	//    OccurrenceUsagePrefix 'perform' PerformActionUsageDeclaration ActionBody
	//;
	public PerformActionUsageElements getPerformActionUsageAccess() {
		return pPerformActionUsage;
	}
	
	public ParserRule getPerformActionUsageRule() {
		return getPerformActionUsageAccess().getRule();
	}
	
	//fragment PerformActionUsageDeclaration returns SysML::ActionUsage :
	//       ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
	//       | ActionUsageKeyword UsageDeclaration? )
	//    ValuePart?
	//;
	public PerformActionUsageDeclarationElements getPerformActionUsageDeclarationAccess() {
		return pPerformActionUsageDeclaration;
	}
	
	public ParserRule getPerformActionUsageDeclarationRule() {
		return getPerformActionUsageDeclarationAccess().getRule();
	}
	
	//fragment ActionUsageDeclaration returns SysML::ActionUsage :
	//      UsageDeclaration? ValuePart?
	//;
	public ActionUsageDeclarationElements getActionUsageDeclarationAccess() {
		return pActionUsageDeclaration;
	}
	
	public ParserRule getActionUsageDeclarationRule() {
		return getActionUsageDeclarationAccess().getRule();
	}
	
	///* Action Nodes */
	//ActionNode returns SysML::ActionUsage :
	//      SendNode | AcceptNode | AssignmentNode
	//    | IfNode | WhileLoopNode | ForLoopNode
	//    | ControlNode
	//;
	public ActionNodeElements getActionNodeAccess() {
		return pActionNode;
	}
	
	public ParserRule getActionNodeRule() {
		return getActionNodeAccess().getRule();
	}
	
	//fragment ActionNodeUsageDeclaration returns SysML::ActionUsage :
	//    ActionUsageKeyword UsageDeclaration?
	//;
	public ActionNodeUsageDeclarationElements getActionNodeUsageDeclarationAccess() {
		return pActionNodeUsageDeclaration;
	}
	
	public ParserRule getActionNodeUsageDeclarationRule() {
		return getActionNodeUsageDeclarationAccess().getRule();
	}
	
	//fragment ActionNodePrefix returns SysML::ActionUsage :
	//    OccurrenceUsagePrefix ActionNodeUsageDeclaration?
	//;
	public ActionNodePrefixElements getActionNodePrefixAccess() {
		return pActionNodePrefix;
	}
	
	public ParserRule getActionNodePrefixRule() {
		return getActionNodePrefixAccess().getRule();
	}
	
	//AcceptNode returns SysML::AcceptActionUsage :
	//    OccurrenceUsagePrefix AcceptNodeDeclaration ActionBody
	//;
	public AcceptNodeElements getAcceptNodeAccess() {
		return pAcceptNode;
	}
	
	public ParserRule getAcceptNodeRule() {
		return getAcceptNodeAccess().getRule();
	}
	
	//fragment AcceptNodeDeclaration returns SysML::ActionUsage :
	//    ActionNodeUsageDeclaration? 'accept' AcceptParameterPart
	//;
	public AcceptNodeDeclarationElements getAcceptNodeDeclarationAccess() {
		return pAcceptNodeDeclaration;
	}
	
	public ParserRule getAcceptNodeDeclarationRule() {
		return getAcceptNodeDeclarationAccess().getRule();
	}
	
	//fragment AcceptParameterPart returns SysML::ActionUsage :
	//    ownedRelationship += PayloadParameterMember
	//    ( 'via' ownedRelationship += NodeParameterMember
	//    | ownedRelationship += EmptyParameterMember
	//    )
	//;
	public AcceptParameterPartElements getAcceptParameterPartAccess() {
		return pAcceptParameterPart;
	}
	
	public ParserRule getAcceptParameterPartRule() {
		return getAcceptParameterPartAccess().getRule();
	}
	
	//PayloadParameterMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += PayloadParameter
	//;
	public PayloadParameterMemberElements getPayloadParameterMemberAccess() {
		return pPayloadParameterMember;
	}
	
	public ParserRule getPayloadParameterMemberRule() {
		return getPayloadParameterMemberAccess().getRule();
	}
	
	//PayloadParameter returns SysML::ReferenceUsage :
	//      PayloadFeature
	//    | Identification? PayloadFeatureSpecializationPart? TriggerValuePart
	//;
	public PayloadParameterElements getPayloadParameterAccess() {
		return pPayloadParameter;
	}
	
	public ParserRule getPayloadParameterRule() {
		return getPayloadParameterAccess().getRule();
	}
	
	//fragment TriggerValuePart returns SysML::Feature :
	//    ownedRelationship += TriggerFeatureValue
	//;
	public TriggerValuePartElements getTriggerValuePartAccess() {
		return pTriggerValuePart;
	}
	
	public ParserRule getTriggerValuePartRule() {
		return getTriggerValuePartAccess().getRule();
	}
	
	//TriggerFeatureValue returns SysML::FeatureValue :
	//    ownedRelatedElement += TriggerExpression
	//;
	public TriggerFeatureValueElements getTriggerFeatureValueAccess() {
		return pTriggerFeatureValue;
	}
	
	public ParserRule getTriggerFeatureValueRule() {
		return getTriggerFeatureValueAccess().getRule();
	}
	
	//TriggerExpression returns SysML::TriggerInvocationExpression :
	//      kind = TimeTriggerKind
	//      ownedRelationship += ArgumentMember
	//    | kind = ChangeTriggerKind
	//      ownedRelationship += ArgumentExpressionMember
	//;
	public TriggerExpressionElements getTriggerExpressionAccess() {
		return pTriggerExpression;
	}
	
	public ParserRule getTriggerExpressionRule() {
		return getTriggerExpressionAccess().getRule();
	}
	
	//TimeTriggerKind returns SysML::TriggerKind :
	//    'at' | 'after'
	//;
	public TimeTriggerKindElements getTimeTriggerKindAccess() {
		return pTimeTriggerKind;
	}
	
	public ParserRule getTimeTriggerKindRule() {
		return getTimeTriggerKindAccess().getRule();
	}
	
	//ChangeTriggerKind returns SysML::TriggerKind :
	//    'when'
	//;
	public ChangeTriggerKindElements getChangeTriggerKindAccess() {
		return pChangeTriggerKind;
	}
	
	public ParserRule getChangeTriggerKindRule() {
		return getChangeTriggerKindAccess().getRule();
	}
	
	//ArgumentExpressionMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += ArgumentExpression
	//;
	public ArgumentExpressionMemberElements getArgumentExpressionMemberAccess() {
		return pArgumentExpressionMember;
	}
	
	public ParserRule getArgumentExpressionMemberRule() {
		return getArgumentExpressionMemberAccess().getRule();
	}
	
	//ArgumentExpression returns SysML::Feature :
	//    ownedRelationship += ArgumentExpressionValue
	//;
	public ArgumentExpressionElements getArgumentExpressionAccess() {
		return pArgumentExpression;
	}
	
	public ParserRule getArgumentExpressionRule() {
		return getArgumentExpressionAccess().getRule();
	}
	
	//ArgumentExpressionValue returns SysML::FeatureValue :
	//    ownedRelatedElement += OwnedExpressionReference
	//;
	public ArgumentExpressionValueElements getArgumentExpressionValueAccess() {
		return pArgumentExpressionValue;
	}
	
	public ParserRule getArgumentExpressionValueRule() {
		return getArgumentExpressionValueAccess().getRule();
	}
	
	//SendNode returns SysML::SendActionUsage :
	//    OccurrenceUsagePrefix SendNodeDeclaration ActionBody
	//;
	public SendNodeElements getSendNodeAccess() {
		return pSendNode;
	}
	
	public ParserRule getSendNodeRule() {
		return getSendNodeAccess().getRule();
	}
	
	//fragment SendNodeDeclaration returns SysML::ActionUsage :
	//    ActionNodeUsageDeclaration? 'send' ownedRelationship += NodeParameterMember
	//    ( 'via' ownedRelationship += NodeParameterMember
	//    | ownedRelationship += EmptyParameterMember
	//    )
	//    ( 'to' ownedRelationship += NodeParameterMember
	//    | ownedRelationship += EmptyParameterMember
	//    )
	//;
	public SendNodeDeclarationElements getSendNodeDeclarationAccess() {
		return pSendNodeDeclaration;
	}
	
	public ParserRule getSendNodeDeclarationRule() {
		return getSendNodeDeclarationAccess().getRule();
	}
	
	//NodeParameterMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += NodeParameter
	//;
	public NodeParameterMemberElements getNodeParameterMemberAccess() {
		return pNodeParameterMember;
	}
	
	public ParserRule getNodeParameterMemberRule() {
		return getNodeParameterMemberAccess().getRule();
	}
	
	//NodeParameter returns SysML::ReferenceUsage :
	//    ownedRelationship += FeatureBinding
	//;
	public NodeParameterElements getNodeParameterAccess() {
		return pNodeParameter;
	}
	
	public ParserRule getNodeParameterRule() {
		return getNodeParameterAccess().getRule();
	}
	
	//FeatureBinding returns SysML::FeatureValue :
	//    ownedRelatedElement += OwnedExpression
	//;
	public FeatureBindingElements getFeatureBindingAccess() {
		return pFeatureBinding;
	}
	
	public ParserRule getFeatureBindingRule() {
		return getFeatureBindingAccess().getRule();
	}
	
	//AssignmentNode returns SysML::AssignmentActionUsage :
	//    OccurrenceUsagePrefix AssignmentNodeDeclaration ActionBody
	//;
	public AssignmentNodeElements getAssignmentNodeAccess() {
		return pAssignmentNode;
	}
	
	public ParserRule getAssignmentNodeRule() {
		return getAssignmentNodeAccess().getRule();
	}
	
	//fragment AssignmentNodeDeclaration returns SysML::ActionUsage :
	//    ActionNodeUsageDeclaration? 'assign'
	//    ownedRelationship += AssignmentTargetMember
	//    ownedRelationship += FeatureChainMember ':='
	//    ownedRelationship += NodeParameterMember
	//;
	public AssignmentNodeDeclarationElements getAssignmentNodeDeclarationAccess() {
		return pAssignmentNodeDeclaration;
	}
	
	public ParserRule getAssignmentNodeDeclarationRule() {
		return getAssignmentNodeDeclarationAccess().getRule();
	}
	
	//AssignmentTargetMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += TargetParameter
	//;
	public AssignmentTargetMemberElements getAssignmentTargetMemberAccess() {
		return pAssignmentTargetMember;
	}
	
	public ParserRule getAssignmentTargetMemberRule() {
		return getAssignmentTargetMemberAccess().getRule();
	}
	
	//TargetParameter returns SysML::ReferenceUsage :
	//    ( => ownedRelationship += TargetBinding '.' )?
	//    ownedRelationship += TargetFeatureMember
	//;
	public TargetParameterElements getTargetParameterAccess() {
		return pTargetParameter;
	}
	
	public ParserRule getTargetParameterRule() {
		return getTargetParameterAccess().getRule();
	}
	
	//TargetFeatureMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += TargetFeature
	//;
	public TargetFeatureMemberElements getTargetFeatureMemberAccess() {
		return pTargetFeatureMember;
	}
	
	public ParserRule getTargetFeatureMemberRule() {
		return getTargetFeatureMemberAccess().getRule();
	}
	
	//TargetFeature returns SysML::ReferenceUsage :
	//    ownedRelationship += TargetAccessedFeatureMember
	//;
	public TargetFeatureElements getTargetFeatureAccess() {
		return pTargetFeature;
	}
	
	public ParserRule getTargetFeatureRule() {
		return getTargetFeatureAccess().getRule();
	}
	
	//TargetAccessedFeatureMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += EmptyUsage
	//;
	public TargetAccessedFeatureMemberElements getTargetAccessedFeatureMemberAccess() {
		return pTargetAccessedFeatureMember;
	}
	
	public ParserRule getTargetAccessedFeatureMemberRule() {
		return getTargetAccessedFeatureMemberAccess().getRule();
	}
	
	//TargetBinding returns SysML::FeatureValue :
	//    ownedRelatedElement += TargetExpression
	//;
	public TargetBindingElements getTargetBindingAccess() {
		return pTargetBinding;
	}
	
	public ParserRule getTargetBindingRule() {
		return getTargetBindingAccess().getRule();
	}
	
	//TargetExpression returns SysML::Expression :
	//    BaseExpression
	//    ( ( {SysML::FeatureChainExpression.operand += current} '.'
	//      ownedRelationship += FeatureChainMember
	//      )?
	//      ( {SysML::OperatorExpression.operand += current}
	//        operator = '[' operand += SequenceExpression ']'
	//      | {SysML::OperatorExpression.operand += current} '->'
	//        ownedRelationship += ReferenceTyping
	//        ( ownedRelationship += ExpressionBodyMember
	//        | ownedRelationship += FunctionReferenceMember
	//        | ArgumentList
	//        )
	//      | {SysML::CollectExpression.operand += current} '.'
	//        ownedRelationship += ExpressionBodyMember
	//      | {SysML::SelectExpression.operand += current} '.?'
	//        ownedRelationship += ExpressionBodyMember
	//      )
	//    )*
	//;
	public TargetExpressionElements getTargetExpressionAccess() {
		return pTargetExpression;
	}
	
	public ParserRule getTargetExpressionRule() {
		return getTargetExpressionAccess().getRule();
	}
	
	//ExpressionParameterMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += OwnedExpression
	//;
	public ExpressionParameterMemberElements getExpressionParameterMemberAccess() {
		return pExpressionParameterMember;
	}
	
	public ParserRule getExpressionParameterMemberRule() {
		return getExpressionParameterMemberAccess().getRule();
	}
	
	//IfNode returns SysML::IfActionUsage :
	//    ActionNodePrefix
	//    'if' ownedRelationship += ExpressionParameterMember
	//    ownedRelationship += ActionBodyParameterMember
	//    ( 'else' ownedRelationship += ( ActionBodyParameterMember | IfNodeParameterMember ) )?
	//;
	public IfNodeElements getIfNodeAccess() {
		return pIfNode;
	}
	
	public ParserRule getIfNodeRule() {
		return getIfNodeAccess().getRule();
	}
	
	//ActionBodyParameterMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += ActionBodyParameter
	//;
	public ActionBodyParameterMemberElements getActionBodyParameterMemberAccess() {
		return pActionBodyParameterMember;
	}
	
	public ParserRule getActionBodyParameterMemberRule() {
		return getActionBodyParameterMemberAccess().getRule();
	}
	
	//ActionBodyParameter returns SysML::ActionUsage :
	//    {SysML::ActionUsage} ( ActionUsageKeyword UsageDeclaration? )? '{' => ActionBodyItem* '}'
	//;
	public ActionBodyParameterElements getActionBodyParameterAccess() {
		return pActionBodyParameter;
	}
	
	public ParserRule getActionBodyParameterRule() {
		return getActionBodyParameterAccess().getRule();
	}
	
	//IfNodeParameterMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += IfNode
	//;
	public IfNodeParameterMemberElements getIfNodeParameterMemberAccess() {
		return pIfNodeParameterMember;
	}
	
	public ParserRule getIfNodeParameterMemberRule() {
		return getIfNodeParameterMemberAccess().getRule();
	}
	
	//WhileLoopNode returns SysML::WhileLoopActionUsage :
	//    ActionNodePrefix
	//    ( 'while' ownedRelationship += ExpressionParameterMember
	//    | 'loop' ownedRelationship += EmptyParameterMember
	//    )
	//    ownedRelationship += ActionBodyParameterMember
	//    ( 'until' ownedRelationship += ExpressionParameterMember ';' )?
	//;
	public WhileLoopNodeElements getWhileLoopNodeAccess() {
		return pWhileLoopNode;
	}
	
	public ParserRule getWhileLoopNodeRule() {
		return getWhileLoopNodeAccess().getRule();
	}
	
	//ForLoopNode returns SysML::ForLoopActionUsage :
	//    ActionNodePrefix
	//    'for' ownedRelationship += ForVariableDeclarationMember
	//    'in' ownedRelationship += NodeParameterMember
	//    ownedRelationship += ActionBodyParameterMember
	//;
	public ForLoopNodeElements getForLoopNodeAccess() {
		return pForLoopNode;
	}
	
	public ParserRule getForLoopNodeRule() {
		return getForLoopNodeAccess().getRule();
	}
	
	//ForVariableDeclarationMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += ForVariableDeclaration
	//;
	public ForVariableDeclarationMemberElements getForVariableDeclarationMemberAccess() {
		return pForVariableDeclarationMember;
	}
	
	public ParserRule getForVariableDeclarationMemberRule() {
		return getForVariableDeclarationMemberAccess().getRule();
	}
	
	//ForVariableDeclaration returns SysML::ReferenceUsage :
	//    UsageDeclaration
	//;
	public ForVariableDeclarationElements getForVariableDeclarationAccess() {
		return pForVariableDeclaration;
	}
	
	public ParserRule getForVariableDeclarationRule() {
		return getForVariableDeclarationAccess().getRule();
	}
	
	//ControlNode returns SysML::ControlNode :
	//      MergeNode
	//    | DecisionNode
	//    | JoinNode
	//    | ForkNode
	//;
	public ControlNodeElements getControlNodeAccess() {
		return pControlNode;
	}
	
	public ParserRule getControlNodeRule() {
		return getControlNodeAccess().getRule();
	}
	
	//fragment ControlNodePrefix returns SysML::OccurrenceUsage :
	//      RefPrefix
	//      ( isIndividual ?= 'individual' )?
	//      ( portionKind = PortionKind )?
	//      UsageExtensionKeyword*
	//;
	public ControlNodePrefixElements getControlNodePrefixAccess() {
		return pControlNodePrefix;
	}
	
	public ParserRule getControlNodePrefixRule() {
		return getControlNodePrefixAccess().getRule();
	}
	
	//MergeNode returns SysML::MergeNode :
	//    ControlNodePrefix 'merge' UsageDeclaration?
	//    ActionNodeBody
	//;
	public MergeNodeElements getMergeNodeAccess() {
		return pMergeNode;
	}
	
	public ParserRule getMergeNodeRule() {
		return getMergeNodeAccess().getRule();
	}
	
	//DecisionNode returns SysML::DecisionNode :
	//    ControlNodePrefix 'decide' UsageDeclaration?
	//    ActionNodeBody
	//;
	public DecisionNodeElements getDecisionNodeAccess() {
		return pDecisionNode;
	}
	
	public ParserRule getDecisionNodeRule() {
		return getDecisionNodeAccess().getRule();
	}
	
	//JoinNode returns SysML::JoinNode :
	//    ControlNodePrefix 'join' UsageDeclaration?
	//    ActionNodeBody
	//;
	public JoinNodeElements getJoinNodeAccess() {
		return pJoinNode;
	}
	
	public ParserRule getJoinNodeRule() {
		return getJoinNodeAccess().getRule();
	}
	
	//ForkNode returns SysML::ForkNode :
	//    ControlNodePrefix 'fork' UsageDeclaration?
	//    ActionNodeBody
	//;
	public ForkNodeElements getForkNodeAccess() {
		return pForkNode;
	}
	
	public ParserRule getForkNodeRule() {
		return getForkNodeAccess().getRule();
	}
	
	//fragment ActionNodeBody returns SysML::ControlNode :
	//    ';' | '{' ( ownedRelationship += AnnotatingMember )* '}'
	//;
	public ActionNodeBodyElements getActionNodeBodyAccess() {
		return pActionNodeBody;
	}
	
	public ParserRule getActionNodeBodyRule() {
		return getActionNodeBodyAccess().getRule();
	}
	
	//EmptyParameterMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += EmptyUsage
	//;
	public EmptyParameterMemberElements getEmptyParameterMemberAccess() {
		return pEmptyParameterMember;
	}
	
	public ParserRule getEmptyParameterMemberRule() {
		return getEmptyParameterMemberAccess().getRule();
	}
	
	//EmptyUsage returns SysML::ReferenceUsage :
	//    {SysML::ReferenceUsage}
	//;
	public EmptyUsageElements getEmptyUsageAccess() {
		return pEmptyUsage;
	}
	
	public ParserRule getEmptyUsageRule() {
		return getEmptyUsageAccess().getRule();
	}
	
	///* Action Successions */
	//ActionTargetSuccession returns SysML::Usage :
	//    ( TargetSuccession | GuardedTargetSuccession | DefaultTargetSuccession )
	//    UsageBody
	//;
	public ActionTargetSuccessionElements getActionTargetSuccessionAccess() {
		return pActionTargetSuccession;
	}
	
	public ParserRule getActionTargetSuccessionRule() {
		return getActionTargetSuccessionAccess().getRule();
	}
	
	//TargetSuccession returns SysML::SuccessionAsUsage :
	//    'then' ownedRelationship += MultiplicitySourceEndMember
	//    ownedRelationship += ConnectorEndMember
	//;
	public TargetSuccessionElements getTargetSuccessionAccess() {
		return pTargetSuccession;
	}
	
	public ParserRule getTargetSuccessionRule() {
		return getTargetSuccessionAccess().getRule();
	}
	
	//GuardedTargetSuccession returns SysML::TransitionUsage :
	//    ownedRelationship += EmptyParameterMember
	//    ownedRelationship += GuardExpressionMember
	//    'then' ownedRelationship += TransitionSuccessionMember
	//;
	public GuardedTargetSuccessionElements getGuardedTargetSuccessionAccess() {
		return pGuardedTargetSuccession;
	}
	
	public ParserRule getGuardedTargetSuccessionRule() {
		return getGuardedTargetSuccessionAccess().getRule();
	}
	
	//DefaultTargetSuccession returns SysML::TransitionUsage :
	//    ownedRelationship += EmptyParameterMember
	//    'else' ownedRelationship += TransitionSuccessionMember
	//;
	public DefaultTargetSuccessionElements getDefaultTargetSuccessionAccess() {
		return pDefaultTargetSuccession;
	}
	
	public ParserRule getDefaultTargetSuccessionRule() {
		return getDefaultTargetSuccessionAccess().getRule();
	}
	
	//GuardedSuccession returns SysML::TransitionUsage :
	//    ( SuccessionKeyword UsageDeclaration )? 'first'
	//    ownedRelationship += TransitionSourceMember
	//    ownedRelationship += EmptyParameterMember
	//    ownedRelationship += GuardExpressionMember
	//    'then' ownedRelationship += TransitionSuccessionMember
	//    UsageBody
	//;
	public GuardedSuccessionElements getGuardedSuccessionAccess() {
		return pGuardedSuccession;
	}
	
	public ParserRule getGuardedSuccessionRule() {
		return getGuardedSuccessionAccess().getRule();
	}
	
	///* STATES */
	///* State Definitions */
	//StateKeyword :
	//    'state'
	//;
	public StateKeywordElements getStateKeywordAccess() {
		return pStateKeyword;
	}
	
	public ParserRule getStateKeywordRule() {
		return getStateKeywordAccess().getRule();
	}
	
	//StateDefKeyword :
	//    StateKeyword 'def'
	//;
	public StateDefKeywordElements getStateDefKeywordAccess() {
		return pStateDefKeyword;
	}
	
	public ParserRule getStateDefKeywordRule() {
		return getStateDefKeywordAccess().getRule();
	}
	
	//StateDefinition returns SysML::StateDefinition :
	//    OccurrenceDefinitionPrefix StateDefKeyword DefinitionDeclaration StateDefBody
	//;
	public StateDefinitionElements getStateDefinitionAccess() {
		return pStateDefinition;
	}
	
	public ParserRule getStateDefinitionRule() {
		return getStateDefinitionAccess().getRule();
	}
	
	//fragment StateDefBody returns SysML::StateDefinition :
	//    ';' | ( isParallel ?= 'parallel' )? '{' StateBodyPart '}'
	//;
	public StateDefBodyElements getStateDefBodyAccess() {
		return pStateDefBody;
	}
	
	public ParserRule getStateDefBodyRule() {
		return getStateDefBodyAccess().getRule();
	}
	
	//fragment StateBodyPart returns SysML::Type :
	//    // Note: Using a syntactic predicate here seems to avoid a possible infinite loop
	//    // while incrementally parsing.
	//    => StateBodyItem*
	//;
	public StateBodyPartElements getStateBodyPartAccess() {
		return pStateBodyPart;
	}
	
	public ParserRule getStateBodyPartRule() {
		return getStateBodyPartAccess().getRule();
	}
	
	//fragment StateBodyItem returns SysML::Type :
	//      ownedRelationship += Import
	//    | ownedRelationship += AliasMember
	//    | ownedRelationship += DefinitionMember
	//    | ownedRelationship += VariantUsageMember
	//    | ownedRelationship += NonOccurrenceUsageMember
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += StructureUsageMember
	//    | ( ownedRelationship += EmptySuccessionMember )?
	//      ownedRelationship += BehaviorUsageMember
	//      ( ownedRelationship += TargetTransitionUsageMember )*
	//    | ownedRelationship += TransitionUsageMember
	//    | ownedRelationship += EntryActionMember
	//      ( ownedRelationship += EntryTransitionMember )*
	//    | ownedRelationship += DoActionMember
	//    | ownedRelationship += ExitActionMember
	//;
	public StateBodyItemElements getStateBodyItemAccess() {
		return pStateBodyItem;
	}
	
	public ParserRule getStateBodyItemRule() {
		return getStateBodyItemAccess().getRule();
	}
	
	//EntryActionMember returns SysML::StateSubactionMembership :
	//    MemberPrefix kind = EntryActionKind ownedRelatedElement += StateActionUsage
	//;
	public EntryActionMemberElements getEntryActionMemberAccess() {
		return pEntryActionMember;
	}
	
	public ParserRule getEntryActionMemberRule() {
		return getEntryActionMemberAccess().getRule();
	}
	
	//EntryActionKind returns SysML::StateSubactionKind :
	//    'entry'
	//;
	public EntryActionKindElements getEntryActionKindAccess() {
		return pEntryActionKind;
	}
	
	public ParserRule getEntryActionKindRule() {
		return getEntryActionKindAccess().getRule();
	}
	
	//DoActionMember returns SysML::StateSubactionMembership :
	//    MemberPrefix kind = DoActionKind ownedRelatedElement += StateActionUsage
	//;
	public DoActionMemberElements getDoActionMemberAccess() {
		return pDoActionMember;
	}
	
	public ParserRule getDoActionMemberRule() {
		return getDoActionMemberAccess().getRule();
	}
	
	//DoActionKind returns SysML::StateSubactionKind :
	//    'do'
	//;
	public DoActionKindElements getDoActionKindAccess() {
		return pDoActionKind;
	}
	
	public ParserRule getDoActionKindRule() {
		return getDoActionKindAccess().getRule();
	}
	
	//ExitActionMember returns SysML::StateSubactionMembership :
	//    MemberPrefix kind = ExitActionKind ownedRelatedElement += StateActionUsage
	//;
	public ExitActionMemberElements getExitActionMemberAccess() {
		return pExitActionMember;
	}
	
	public ParserRule getExitActionMemberRule() {
		return getExitActionMemberAccess().getRule();
	}
	
	//ExitActionKind returns SysML::StateSubactionKind :
	//    'exit'
	//;
	public ExitActionKindElements getExitActionKindAccess() {
		return pExitActionKind;
	}
	
	public ParserRule getExitActionKindRule() {
		return getExitActionKindAccess().getRule();
	}
	
	//EntryTransitionMember returns SysML::FeatureMembership :
	//    MemberPrefix
	//    ( ownedRelatedElement += GuardedTargetSuccession
	//    | 'then' ownedRelatedElement += TransitionSuccession
	//    ) ';'
	//;
	public EntryTransitionMemberElements getEntryTransitionMemberAccess() {
		return pEntryTransitionMember;
	}
	
	public ParserRule getEntryTransitionMemberRule() {
		return getEntryTransitionMemberAccess().getRule();
	}
	
	//StateActionUsage returns SysML::ActionUsage :
	//    EmptyActionUsage ';' | PerformedActionUsage ActionBody
	//;
	public StateActionUsageElements getStateActionUsageAccess() {
		return pStateActionUsage;
	}
	
	public ParserRule getStateActionUsageRule() {
		return getStateActionUsageAccess().getRule();
	}
	
	//EmptyActionUsage returns SysML::ActionUsage :
	//    {SysML::ActionUsage}
	//;
	public EmptyActionUsageElements getEmptyActionUsageAccess() {
		return pEmptyActionUsage;
	}
	
	public ParserRule getEmptyActionUsageRule() {
		return getEmptyActionUsageAccess().getRule();
	}
	
	//PerformedActionUsage returns SysML::ActionUsage :
	//      {SysML::PerformActionUsage} PerformActionUsageDeclaration
	//    | {SysML::AcceptActionUsage} AcceptNodeDeclaration
	//    | {SysML::SendActionUsage} SendNodeDeclaration
	//    | {SysML::AssignmentActionUsage} AssignmentNodeDeclaration
	//;
	public PerformedActionUsageElements getPerformedActionUsageAccess() {
		return pPerformedActionUsage;
	}
	
	public ParserRule getPerformedActionUsageRule() {
		return getPerformedActionUsageAccess().getRule();
	}
	
	//TransitionUsageMember returns SysML::FeatureMembership :
	//    MemberPrefix ownedRelatedElement += TransitionUsage
	//;
	public TransitionUsageMemberElements getTransitionUsageMemberAccess() {
		return pTransitionUsageMember;
	}
	
	public ParserRule getTransitionUsageMemberRule() {
		return getTransitionUsageMemberAccess().getRule();
	}
	
	//TargetTransitionUsageMember returns SysML::FeatureMembership :
	//    MemberPrefix ownedRelatedElement += TargetTransitionUsage
	//;
	public TargetTransitionUsageMemberElements getTargetTransitionUsageMemberAccess() {
		return pTargetTransitionUsageMember;
	}
	
	public ParserRule getTargetTransitionUsageMemberRule() {
		return getTargetTransitionUsageMemberAccess().getRule();
	}
	
	///* State Usages */
	//StateUsageKeyword :
	//    StateKeyword
	//;
	public StateUsageKeywordElements getStateUsageKeywordAccess() {
		return pStateUsageKeyword;
	}
	
	public ParserRule getStateUsageKeywordRule() {
		return getStateUsageKeywordAccess().getRule();
	}
	
	//StateUsage returns SysML::StateUsage :
	//    OccurrenceUsagePrefix StateUsageKeyword ActionUsageDeclaration StateUsageBody
	//;
	public StateUsageElements getStateUsageAccess() {
		return pStateUsage;
	}
	
	public ParserRule getStateUsageRule() {
		return getStateUsageAccess().getRule();
	}
	
	//fragment StateUsageBody returns SysML::StateUsage :
	//    ';' | ( isParallel ?= 'parallel' )? '{' StateBodyPart '}'
	//;
	public StateUsageBodyElements getStateUsageBodyAccess() {
		return pStateUsageBody;
	}
	
	public ParserRule getStateUsageBodyRule() {
		return getStateUsageBodyAccess().getRule();
	}
	
	//ExhibitStateUsage returns SysML::ExhibitStateUsage :
	//    OccurrenceUsagePrefix 'exhibit'
	//    ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
	//    | StateUsageKeyword UsageDeclaration?
	//    )
	//    ValuePart? StateUsageBody
	//;
	public ExhibitStateUsageElements getExhibitStateUsageAccess() {
		return pExhibitStateUsage;
	}
	
	public ParserRule getExhibitStateUsageRule() {
		return getExhibitStateUsageAccess().getRule();
	}
	
	///* Transition Usages */
	//TransitionUsageKeyword :
	//    'transition'
	//;
	public TransitionUsageKeywordElements getTransitionUsageKeywordAccess() {
		return pTransitionUsageKeyword;
	}
	
	public ParserRule getTransitionUsageKeywordRule() {
		return getTransitionUsageKeywordAccess().getRule();
	}
	
	//TransitionUsage returns SysML::TransitionUsage :
	//    TransitionUsageKeyword ( UsageDeclaration? 'first' )?
	//    ownedRelationship += TransitionSourceMember
	//    ownedRelationship += EmptyParameterMember
	//    ( ownedRelationship += EmptyParameterMember
	//      ownedRelationship += TriggerActionMember )?
	//    ( ownedRelationship += GuardExpressionMember )?
	//    ( ownedRelationship += EffectBehaviorMember )?
	//    'then' ownedRelationship += TransitionSuccessionMember
	//    ActionBody
	//;
	public TransitionUsageElements getTransitionUsageAccess() {
		return pTransitionUsage;
	}
	
	public ParserRule getTransitionUsageRule() {
		return getTransitionUsageAccess().getRule();
	}
	
	//TargetTransitionUsage returns SysML::TransitionUsage :
	//    ownedRelationship += EmptyParameterMember
	//    ( TransitionUsageKeyword
	//      ( ownedRelationship += EmptyParameterMember
	//        ownedRelationship += TriggerActionMember )?
	//      ( ownedRelationship += GuardExpressionMember )?
	//      ( ownedRelationship += EffectBehaviorMember )?
	//    | ownedRelationship += EmptyParameterMember
	//      ownedRelationship += TriggerActionMember
	//      ( ownedRelationship += GuardExpressionMember )?
	//      ( ownedRelationship += EffectBehaviorMember )?
	//    | ownedRelationship += GuardExpressionMember
	//      ( ownedRelationship += EffectBehaviorMember )?
	//    )?
	//    'then' ownedRelationship += TransitionSuccessionMember
	//    ActionBody
	//;
	public TargetTransitionUsageElements getTargetTransitionUsageAccess() {
		return pTargetTransitionUsage;
	}
	
	public ParserRule getTargetTransitionUsageRule() {
		return getTargetTransitionUsageAccess().getRule();
	}
	
	//TransitionSourceMember returns SysML::Membership :
	//      memberElement = [SysML::Feature|QualifiedName]
	//    | {SysML::OwningMembership} ownedRelatedElement += OwnedFeatureChain
	//;
	public TransitionSourceMemberElements getTransitionSourceMemberAccess() {
		return pTransitionSourceMember;
	}
	
	public ParserRule getTransitionSourceMemberRule() {
		return getTransitionSourceMemberAccess().getRule();
	}
	
	//TriggerActionMember returns SysML::TransitionFeatureMembership :
	//    kind = TriggerFeatureKind ownedRelatedElement += TriggerAction
	//;
	public TriggerActionMemberElements getTriggerActionMemberAccess() {
		return pTriggerActionMember;
	}
	
	public ParserRule getTriggerActionMemberRule() {
		return getTriggerActionMemberAccess().getRule();
	}
	
	//enum TriggerFeatureKind returns SysML::TransitionFeatureKind :
	//    trigger = 'accept'
	//;
	public TriggerFeatureKindElements getTriggerFeatureKindAccess() {
		return eTriggerFeatureKind;
	}
	
	public EnumRule getTriggerFeatureKindRule() {
		return getTriggerFeatureKindAccess().getRule();
	}
	
	//TriggerAction returns SysML::AcceptActionUsage :
	//    AcceptParameterPart
	//;
	public TriggerActionElements getTriggerActionAccess() {
		return pTriggerAction;
	}
	
	public ParserRule getTriggerActionRule() {
		return getTriggerActionAccess().getRule();
	}
	
	//GuardExpressionMember returns SysML::TransitionFeatureMembership :
	//    kind = GuardFeatureKind ownedRelatedElement += OwnedExpression
	//;
	public GuardExpressionMemberElements getGuardExpressionMemberAccess() {
		return pGuardExpressionMember;
	}
	
	public ParserRule getGuardExpressionMemberRule() {
		return getGuardExpressionMemberAccess().getRule();
	}
	
	//enum GuardFeatureKind returns SysML::TransitionFeatureKind :
	//    guard = 'if'
	//;
	public GuardFeatureKindElements getGuardFeatureKindAccess() {
		return eGuardFeatureKind;
	}
	
	public EnumRule getGuardFeatureKindRule() {
		return getGuardFeatureKindAccess().getRule();
	}
	
	//EffectBehaviorMember returns SysML::TransitionFeatureMembership :
	//    kind = EffectFeatureKind ownedRelatedElement += EffectBehaviorUsage
	//;
	public EffectBehaviorMemberElements getEffectBehaviorMemberAccess() {
		return pEffectBehaviorMember;
	}
	
	public ParserRule getEffectBehaviorMemberRule() {
		return getEffectBehaviorMemberAccess().getRule();
	}
	
	//enum EffectFeatureKind returns SysML::TransitionFeatureKind :
	//    effect = 'do'
	//;
	public EffectFeatureKindElements getEffectFeatureKindAccess() {
		return eEffectFeatureKind;
	}
	
	public EnumRule getEffectFeatureKindRule() {
		return getEffectFeatureKindAccess().getRule();
	}
	
	//EffectBehaviorUsage returns SysML::ActionUsage :
	//      EmptyActionUsage | PerformedActionUsage ( '{' ActionBodyItem* '}' )?
	//;
	public EffectBehaviorUsageElements getEffectBehaviorUsageAccess() {
		return pEffectBehaviorUsage;
	}
	
	public ParserRule getEffectBehaviorUsageRule() {
		return getEffectBehaviorUsageAccess().getRule();
	}
	
	//TransitionSuccessionMember returns SysML::OwningMembership :
	//    ownedRelatedElement += TransitionSuccession
	//;
	public TransitionSuccessionMemberElements getTransitionSuccessionMemberAccess() {
		return pTransitionSuccessionMember;
	}
	
	public ParserRule getTransitionSuccessionMemberRule() {
		return getTransitionSuccessionMemberAccess().getRule();
	}
	
	//TransitionSuccession returns SysML::SuccessionAsUsage :
	//    ownedRelationship += EmptySourceEndMember
	//    ownedRelationship += ConnectorEndMember
	//;
	public TransitionSuccessionElements getTransitionSuccessionAccess() {
		return pTransitionSuccession;
	}
	
	public ParserRule getTransitionSuccessionRule() {
		return getTransitionSuccessionAccess().getRule();
	}
	
	///* CALCULATIONS */
	///* Calculation Definitions */
	//CalculationKeyword :
	//    'calc'
	//;
	public CalculationKeywordElements getCalculationKeywordAccess() {
		return pCalculationKeyword;
	}
	
	public ParserRule getCalculationKeywordRule() {
		return getCalculationKeywordAccess().getRule();
	}
	
	//CalculationDefKeyword :
	//    CalculationKeyword 'def'
	//;
	public CalculationDefKeywordElements getCalculationDefKeywordAccess() {
		return pCalculationDefKeyword;
	}
	
	public ParserRule getCalculationDefKeywordRule() {
		return getCalculationDefKeywordAccess().getRule();
	}
	
	//CalculationDefinition returns SysML::CalculationDefinition :
	//    OccurrenceDefinitionPrefix CalculationDefKeyword DefinitionDeclaration
	//    CalculationBody
	//;
	public CalculationDefinitionElements getCalculationDefinitionAccess() {
		return pCalculationDefinition;
	}
	
	public ParserRule getCalculationDefinitionRule() {
		return getCalculationDefinitionAccess().getRule();
	}
	
	//fragment CalculationBody returns SysML::Type :
	//    ';' | '{' CalculationBodyPart '}'
	//;
	public CalculationBodyElements getCalculationBodyAccess() {
		return pCalculationBody;
	}
	
	public ParserRule getCalculationBodyRule() {
		return getCalculationBodyAccess().getRule();
	}
	
	//fragment CalculationBodyPart returns SysML::Type :
	//    => CalculationBodyItem*
	//    ( ownedRelationship += ResultExpressionMember )?
	//;
	public CalculationBodyPartElements getCalculationBodyPartAccess() {
		return pCalculationBodyPart;
	}
	
	public ParserRule getCalculationBodyPartRule() {
		return getCalculationBodyPartAccess().getRule();
	}
	
	//fragment CalculationBodyItem returns SysML::Type :
	//      ActionBodyItem
	//    | ownedRelationship += ReturnParameterMember
	//;
	public CalculationBodyItemElements getCalculationBodyItemAccess() {
		return pCalculationBodyItem;
	}
	
	public ParserRule getCalculationBodyItemRule() {
		return getCalculationBodyItemAccess().getRule();
	}
	
	//ReturnParameterMember returns SysML::ReturnParameterMembership :
	//    MemberPrefix 'return'
	//    ownedRelatedElement += UsageElement
	//;
	public ReturnParameterMemberElements getReturnParameterMemberAccess() {
		return pReturnParameterMember;
	}
	
	public ParserRule getReturnParameterMemberRule() {
		return getReturnParameterMemberAccess().getRule();
	}
	
	//@Override
	//ResultExpressionMember returns SysML::ResultExpressionMembership :
	//    MemberPrefix ownedRelatedElement += OwnedExpression
	//;
	public ResultExpressionMemberElements getResultExpressionMemberAccess() {
		return pResultExpressionMember;
	}
	
	public ParserRule getResultExpressionMemberRule() {
		return getResultExpressionMemberAccess().getRule();
	}
	
	///* Calculation Usages */
	//CalculationUsageKeyword :
	//    CalculationKeyword
	//;
	public CalculationUsageKeywordElements getCalculationUsageKeywordAccess() {
		return pCalculationUsageKeyword;
	}
	
	public ParserRule getCalculationUsageKeywordRule() {
		return getCalculationUsageKeywordAccess().getRule();
	}
	
	//CalculationUsage returns SysML::CalculationUsage :
	//    OccurrenceUsagePrefix CalculationUsageKeyword ActionUsageDeclaration CalculationBody
	//;
	public CalculationUsageElements getCalculationUsageAccess() {
		return pCalculationUsage;
	}
	
	public ParserRule getCalculationUsageRule() {
		return getCalculationUsageAccess().getRule();
	}
	
	///* CONSTRAINTS */
	///* Constraint Definitions */
	//ConstraintKeyword :
	//    'constraint'
	//;
	public ConstraintKeywordElements getConstraintKeywordAccess() {
		return pConstraintKeyword;
	}
	
	public ParserRule getConstraintKeywordRule() {
		return getConstraintKeywordAccess().getRule();
	}
	
	//ConstraintDefKeyword :
	//    ConstraintKeyword 'def'
	//;
	public ConstraintDefKeywordElements getConstraintDefKeywordAccess() {
		return pConstraintDefKeyword;
	}
	
	public ParserRule getConstraintDefKeywordRule() {
		return getConstraintDefKeywordAccess().getRule();
	}
	
	//ConstraintDefinition returns SysML::ConstraintDefinition :
	//    OccurrenceDefinitionPrefix ConstraintDefKeyword DefinitionDeclaration CalculationBody
	//;
	public ConstraintDefinitionElements getConstraintDefinitionAccess() {
		return pConstraintDefinition;
	}
	
	public ParserRule getConstraintDefinitionRule() {
		return getConstraintDefinitionAccess().getRule();
	}
	
	///* Constraint Usages */
	//ConstraintUsageKeyword :
	//    ConstraintKeyword
	//;
	public ConstraintUsageKeywordElements getConstraintUsageKeywordAccess() {
		return pConstraintUsageKeyword;
	}
	
	public ParserRule getConstraintUsageKeywordRule() {
		return getConstraintUsageKeywordAccess().getRule();
	}
	
	//ConstraintUsage returns SysML::ConstraintUsage :
	//    OccurrenceUsagePrefix ConstraintUsageKeyword ConstraintUsageDeclaration CalculationBody
	//;
	public ConstraintUsageElements getConstraintUsageAccess() {
		return pConstraintUsage;
	}
	
	public ParserRule getConstraintUsageRule() {
		return getConstraintUsageAccess().getRule();
	}
	
	//AssertConstraintUsage returns SysML::AssertConstraintUsage :
	//    OccurrenceUsagePrefix 'assert' ( isNegated ?= 'not' )?
	//    ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
	//    | ConstraintUsageKeyword ConstraintUsageDeclaration
	//    )
	//    CalculationBody
	//;
	public AssertConstraintUsageElements getAssertConstraintUsageAccess() {
		return pAssertConstraintUsage;
	}
	
	public ParserRule getAssertConstraintUsageRule() {
		return getAssertConstraintUsageAccess().getRule();
	}
	
	//fragment ConstraintUsageDeclaration returns SysML::ConstraintUsage :
	//      UsageDeclaration? ValuePart?
	//;
	public ConstraintUsageDeclarationElements getConstraintUsageDeclarationAccess() {
		return pConstraintUsageDeclaration;
	}
	
	public ParserRule getConstraintUsageDeclarationRule() {
		return getConstraintUsageDeclarationAccess().getRule();
	}
	
	///* REQUIREMENTS */
	///* Requirement Definitions */
	//RequirementKeyword :
	//    'requirement'
	//;
	public RequirementKeywordElements getRequirementKeywordAccess() {
		return pRequirementKeyword;
	}
	
	public ParserRule getRequirementKeywordRule() {
		return getRequirementKeywordAccess().getRule();
	}
	
	//RequirementDefKeyword :
	//    RequirementKeyword 'def'
	//;
	public RequirementDefKeywordElements getRequirementDefKeywordAccess() {
		return pRequirementDefKeyword;
	}
	
	public ParserRule getRequirementDefKeywordRule() {
		return getRequirementDefKeywordAccess().getRule();
	}
	
	//RequirementDefinition returns SysML::RequirementDefinition :
	//    OccurrenceDefinitionPrefix RequirementDefKeyword DefinitionDeclaration RequirementBody
	//;
	public RequirementDefinitionElements getRequirementDefinitionAccess() {
		return pRequirementDefinition;
	}
	
	public ParserRule getRequirementDefinitionRule() {
		return getRequirementDefinitionAccess().getRule();
	}
	
	//fragment RequirementBody returns SysML::Type :
	//      ';' | '{' => RequirementBodyItem* '}'
	//;
	public RequirementBodyElements getRequirementBodyAccess() {
		return pRequirementBody;
	}
	
	public ParserRule getRequirementBodyRule() {
		return getRequirementBodyAccess().getRule();
	}
	
	//fragment RequirementBodyItem returns SysML::Type :
	//      DefinitionBodyItem
	//    | ownedRelationship += SubjectMember
	//    | ownedRelationship += RequirementConstraintMember
	//    | ownedRelationship += FramedConcernMember
	//    | ownedRelationship += RequirementVerificationMember
	//    | ownedRelationship += ActorMember
	//    | ownedRelationship += StakeholderMember
	//;
	public RequirementBodyItemElements getRequirementBodyItemAccess() {
		return pRequirementBodyItem;
	}
	
	public ParserRule getRequirementBodyItemRule() {
		return getRequirementBodyItemAccess().getRule();
	}
	
	//SubjectMember returns SysML::SubjectMembership :
	//    MemberPrefix ownedRelatedElement += SubjectUsage
	//;
	public SubjectMemberElements getSubjectMemberAccess() {
		return pSubjectMember;
	}
	
	public ParserRule getSubjectMemberRule() {
		return getSubjectMemberAccess().getRule();
	}
	
	//SubjectUsage returns SysML::ReferenceUsage :
	//    'subject' UsageExtensionKeyword* Usage
	//;
	public SubjectUsageElements getSubjectUsageAccess() {
		return pSubjectUsage;
	}
	
	public ParserRule getSubjectUsageRule() {
		return getSubjectUsageAccess().getRule();
	}
	
	//RequirementConstraintMember returns SysML::RequirementConstraintMembership :
	//    MemberPrefix kind = RequirementConstraintKind
	//    ownedRelatedElement += RequirementConstraintUsage
	//;
	public RequirementConstraintMemberElements getRequirementConstraintMemberAccess() {
		return pRequirementConstraintMember;
	}
	
	public ParserRule getRequirementConstraintMemberRule() {
		return getRequirementConstraintMemberAccess().getRule();
	}
	
	//enum RequirementConstraintKind returns SysML::RequirementConstraintKind :
	//    assumption = 'assume' | requirement = 'require'
	//;
	public RequirementConstraintKindElements getRequirementConstraintKindAccess() {
		return eRequirementConstraintKind;
	}
	
	public EnumRule getRequirementConstraintKindRule() {
		return getRequirementConstraintKindAccess().getRule();
	}
	
	//RequirementConstraintUsage returns SysML::ConstraintUsage :
	//      ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
	//      CalculationBody
	//    | ( UsageExtensionKeyword* ConstraintUsageKeyword | UsageExtensionKeyword+ )
	//      ConstraintUsageDeclaration CalculationBody
	//;
	public RequirementConstraintUsageElements getRequirementConstraintUsageAccess() {
		return pRequirementConstraintUsage;
	}
	
	public ParserRule getRequirementConstraintUsageRule() {
		return getRequirementConstraintUsageAccess().getRule();
	}
	
	//FramedConcernMember returns SysML::FramedConcernMembership :
	//    MemberPrefix kind = FramedConcernKind
	//    ownedRelatedElement += FramedConcernUsage
	//;
	public FramedConcernMemberElements getFramedConcernMemberAccess() {
		return pFramedConcernMember;
	}
	
	public ParserRule getFramedConcernMemberRule() {
		return getFramedConcernMemberAccess().getRule();
	}
	
	//enum FramedConcernKind returns SysML::RequirementConstraintKind :
	//    requirement = 'frame'
	//;
	public FramedConcernKindElements getFramedConcernKindAccess() {
		return eFramedConcernKind;
	}
	
	public EnumRule getFramedConcernKindRule() {
		return getFramedConcernKindAccess().getRule();
	}
	
	//FramedConcernUsage returns SysML::ConcernUsage :
	//      ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
	//      RequirementBody
	//    | ( UsageExtensionKeyword* ConcernUsageKeyword | UsageExtensionKeyword+ )
	//      ConstraintUsageDeclaration CalculationBody
	//;
	public FramedConcernUsageElements getFramedConcernUsageAccess() {
		return pFramedConcernUsage;
	}
	
	public ParserRule getFramedConcernUsageRule() {
		return getFramedConcernUsageAccess().getRule();
	}
	
	//ActorMember returns SysML::ActorMembership :
	//    MemberPrefix
	//    ownedRelatedElement += ActorUsage
	//;
	public ActorMemberElements getActorMemberAccess() {
		return pActorMember;
	}
	
	public ParserRule getActorMemberRule() {
		return getActorMemberAccess().getRule();
	}
	
	//ActorUsage returns SysML::PartUsage :
	//      'actor' UsageExtensionKeyword* Usage
	//;
	public ActorUsageElements getActorUsageAccess() {
		return pActorUsage;
	}
	
	public ParserRule getActorUsageRule() {
		return getActorUsageAccess().getRule();
	}
	
	//StakeholderMember returns SysML::StakeholderMembership :
	//    MemberPrefix
	//    ownedRelatedElement += StakeholderUsage
	//;
	public StakeholderMemberElements getStakeholderMemberAccess() {
		return pStakeholderMember;
	}
	
	public ParserRule getStakeholderMemberRule() {
		return getStakeholderMemberAccess().getRule();
	}
	
	//StakeholderUsage returns SysML::PartUsage :
	//      'stakeholder' UsageExtensionKeyword* Usage
	//;
	public StakeholderUsageElements getStakeholderUsageAccess() {
		return pStakeholderUsage;
	}
	
	public ParserRule getStakeholderUsageRule() {
		return getStakeholderUsageAccess().getRule();
	}
	
	///* Requirement Usages */
	//RequirementUsageKeyword :
	//    RequirementKeyword
	//;
	public RequirementUsageKeywordElements getRequirementUsageKeywordAccess() {
		return pRequirementUsageKeyword;
	}
	
	public ParserRule getRequirementUsageKeywordRule() {
		return getRequirementUsageKeywordAccess().getRule();
	}
	
	//RequirementUsage returns SysML::RequirementUsage :
	//    OccurrenceUsagePrefix RequirementUsageKeyword ConstraintUsageDeclaration RequirementBody
	//;
	public RequirementUsageElements getRequirementUsageAccess() {
		return pRequirementUsage;
	}
	
	public ParserRule getRequirementUsageRule() {
		return getRequirementUsageAccess().getRule();
	}
	
	//SatisfyRequirementUsage returns SysML::SatisfyRequirementUsage :
	//    OccurrenceUsagePrefix 'assert'? ( isNegated ?= 'not' )? 'satisfy'
	//    ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
	//    | RequirementUsageKeyword UsageDeclaration?
	//    )
	//    ValuePart?
	//    ( 'by' ownedRelationship += SatisfactionSubjectMember )?
	//     RequirementBody
	//;
	public SatisfyRequirementUsageElements getSatisfyRequirementUsageAccess() {
		return pSatisfyRequirementUsage;
	}
	
	public ParserRule getSatisfyRequirementUsageRule() {
		return getSatisfyRequirementUsageAccess().getRule();
	}
	
	//SatisfactionSubjectMember returns SysML::SubjectMembership :
	//    ownedRelatedElement += SatisfactionParameter
	//;
	public SatisfactionSubjectMemberElements getSatisfactionSubjectMemberAccess() {
		return pSatisfactionSubjectMember;
	}
	
	public ParserRule getSatisfactionSubjectMemberRule() {
		return getSatisfactionSubjectMemberAccess().getRule();
	}
	
	//SatisfactionParameter returns SysML::ReferenceUsage :
	//    ownedRelationship += SatisfactionFeatureValue
	//;
	public SatisfactionParameterElements getSatisfactionParameterAccess() {
		return pSatisfactionParameter;
	}
	
	public ParserRule getSatisfactionParameterRule() {
		return getSatisfactionParameterAccess().getRule();
	}
	
	//SatisfactionFeatureValue returns SysML::FeatureValue :
	//    ownedRelatedElement += SatisfactionReferenceExpression
	//;
	public SatisfactionFeatureValueElements getSatisfactionFeatureValueAccess() {
		return pSatisfactionFeatureValue;
	}
	
	public ParserRule getSatisfactionFeatureValueRule() {
		return getSatisfactionFeatureValueAccess().getRule();
	}
	
	//SatisfactionReferenceExpression returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += FeatureChainMember
	//;
	public SatisfactionReferenceExpressionElements getSatisfactionReferenceExpressionAccess() {
		return pSatisfactionReferenceExpression;
	}
	
	public ParserRule getSatisfactionReferenceExpressionRule() {
		return getSatisfactionReferenceExpressionAccess().getRule();
	}
	
	///* CONCERNS */
	///* Concern Definitions */
	//ConcernKeyword :
	//    'concern'
	//;
	public ConcernKeywordElements getConcernKeywordAccess() {
		return pConcernKeyword;
	}
	
	public ParserRule getConcernKeywordRule() {
		return getConcernKeywordAccess().getRule();
	}
	
	//ConcernDefKeyword :
	//    ConcernKeyword 'def'
	//;
	public ConcernDefKeywordElements getConcernDefKeywordAccess() {
		return pConcernDefKeyword;
	}
	
	public ParserRule getConcernDefKeywordRule() {
		return getConcernDefKeywordAccess().getRule();
	}
	
	//ConcernDefinition returns SysML::ConcernDefinition :
	//    OccurrenceDefinitionPrefix ConcernDefKeyword DefinitionDeclaration RequirementBody
	//;
	public ConcernDefinitionElements getConcernDefinitionAccess() {
		return pConcernDefinition;
	}
	
	public ParserRule getConcernDefinitionRule() {
		return getConcernDefinitionAccess().getRule();
	}
	
	//ConcernUsageKeyword :
	//    ConcernKeyword
	//;
	public ConcernUsageKeywordElements getConcernUsageKeywordAccess() {
		return pConcernUsageKeyword;
	}
	
	public ParserRule getConcernUsageKeywordRule() {
		return getConcernUsageKeywordAccess().getRule();
	}
	
	//ConcernUsage returns SysML::ConcernUsage :
	//    OccurrenceUsagePrefix ConcernUsageKeyword ConstraintUsageDeclaration RequirementBody
	//;
	public ConcernUsageElements getConcernUsageAccess() {
		return pConcernUsage;
	}
	
	public ParserRule getConcernUsageRule() {
		return getConcernUsageAccess().getRule();
	}
	
	///* CASES */
	///* Case Definitions */
	//CaseKeyword :
	//    'case'
	//;
	public CaseKeywordElements getCaseKeywordAccess() {
		return pCaseKeyword;
	}
	
	public ParserRule getCaseKeywordRule() {
		return getCaseKeywordAccess().getRule();
	}
	
	//CaseDefKeyword :
	//    CaseKeyword 'def'
	//;
	public CaseDefKeywordElements getCaseDefKeywordAccess() {
		return pCaseDefKeyword;
	}
	
	public ParserRule getCaseDefKeywordRule() {
		return getCaseDefKeywordAccess().getRule();
	}
	
	//CaseDefinition returns SysML::CaseDefinition :
	//    OccurrenceDefinitionPrefix CaseDefKeyword DefinitionDeclaration CaseBody
	//;
	public CaseDefinitionElements getCaseDefinitionAccess() {
		return pCaseDefinition;
	}
	
	public ParserRule getCaseDefinitionRule() {
		return getCaseDefinitionAccess().getRule();
	}
	
	//fragment CaseBody returns SysML::Type :
	//        ';'
	//      | '{' => CaseBodyItem*
	//            ( ownedRelationship += ResultExpressionMember )?
	//        '}'
	//;
	public CaseBodyElements getCaseBodyAccess() {
		return pCaseBody;
	}
	
	public ParserRule getCaseBodyRule() {
		return getCaseBodyAccess().getRule();
	}
	
	//fragment CaseBodyItem returns SysML::Type :
	//      CalculationBodyItem
	//    | ownedRelationship += SubjectMember
	//    | ownedRelationship += ActorMember
	//    | ownedRelationship += ObjectiveMember
	//;
	public CaseBodyItemElements getCaseBodyItemAccess() {
		return pCaseBodyItem;
	}
	
	public ParserRule getCaseBodyItemRule() {
		return getCaseBodyItemAccess().getRule();
	}
	
	//ObjectiveMember returns SysML::ObjectiveMembership :
	//    MemberPrefix 'objective' ownedRelatedElement += ObjectiveRequirementUsage
	//;
	public ObjectiveMemberElements getObjectiveMemberAccess() {
		return pObjectiveMember;
	}
	
	public ParserRule getObjectiveMemberRule() {
		return getObjectiveMemberAccess().getRule();
	}
	
	//ObjectiveRequirementUsage returns SysML::RequirementUsage :
	//    UsageExtensionKeyword* ConstraintUsageDeclaration RequirementBody
	//;
	public ObjectiveRequirementUsageElements getObjectiveRequirementUsageAccess() {
		return pObjectiveRequirementUsage;
	}
	
	public ParserRule getObjectiveRequirementUsageRule() {
		return getObjectiveRequirementUsageAccess().getRule();
	}
	
	///* Case Usages */
	//CaseUsageKeyword :
	//    CaseKeyword
	//;
	public CaseUsageKeywordElements getCaseUsageKeywordAccess() {
		return pCaseUsageKeyword;
	}
	
	public ParserRule getCaseUsageKeywordRule() {
		return getCaseUsageKeywordAccess().getRule();
	}
	
	//// TODO: Correct erroneous use of ConstraintUsageDeclaration for CaseUsage from resolution of SYSML2-783.
	//CaseUsage returns SysML::CaseUsage :
	//    OccurrenceUsagePrefix CaseUsageKeyword ActionUsageDeclaration CaseBody
	//;
	public CaseUsageElements getCaseUsageAccess() {
		return pCaseUsage;
	}
	
	public ParserRule getCaseUsageRule() {
		return getCaseUsageAccess().getRule();
	}
	
	///* ANALYSIS CASES */
	//AnalysisCaseKeyword :
	//    'analysis'
	//;
	public AnalysisCaseKeywordElements getAnalysisCaseKeywordAccess() {
		return pAnalysisCaseKeyword;
	}
	
	public ParserRule getAnalysisCaseKeywordRule() {
		return getAnalysisCaseKeywordAccess().getRule();
	}
	
	//AnalysisCaseDefKeyword :
	//    AnalysisCaseKeyword 'def'
	//;
	public AnalysisCaseDefKeywordElements getAnalysisCaseDefKeywordAccess() {
		return pAnalysisCaseDefKeyword;
	}
	
	public ParserRule getAnalysisCaseDefKeywordRule() {
		return getAnalysisCaseDefKeywordAccess().getRule();
	}
	
	//AnalysisCaseUsageKeyword :
	//    AnalysisCaseKeyword
	//;
	public AnalysisCaseUsageKeywordElements getAnalysisCaseUsageKeywordAccess() {
		return pAnalysisCaseUsageKeyword;
	}
	
	public ParserRule getAnalysisCaseUsageKeywordRule() {
		return getAnalysisCaseUsageKeywordAccess().getRule();
	}
	
	//AnalysisCaseDefinition returns SysML::AnalysisCaseDefinition :
	//    OccurrenceDefinitionPrefix AnalysisCaseDefKeyword DefinitionDeclaration CaseBody
	//;
	public AnalysisCaseDefinitionElements getAnalysisCaseDefinitionAccess() {
		return pAnalysisCaseDefinition;
	}
	
	public ParserRule getAnalysisCaseDefinitionRule() {
		return getAnalysisCaseDefinitionAccess().getRule();
	}
	
	//AnalysisCaseUsage returns SysML::AnalysisCaseUsage :
	//    OccurrenceUsagePrefix AnalysisCaseUsageKeyword ActionUsageDeclaration CaseBody
	//;
	public AnalysisCaseUsageElements getAnalysisCaseUsageAccess() {
		return pAnalysisCaseUsage;
	}
	
	public ParserRule getAnalysisCaseUsageRule() {
		return getAnalysisCaseUsageAccess().getRule();
	}
	
	///* VERIFICATION CASES */
	//VerificationCaseKeyword :
	//    'verification'
	//;
	public VerificationCaseKeywordElements getVerificationCaseKeywordAccess() {
		return pVerificationCaseKeyword;
	}
	
	public ParserRule getVerificationCaseKeywordRule() {
		return getVerificationCaseKeywordAccess().getRule();
	}
	
	//VerificationCaseDefKeyword :
	//    VerificationCaseKeyword 'def'
	//;
	public VerificationCaseDefKeywordElements getVerificationCaseDefKeywordAccess() {
		return pVerificationCaseDefKeyword;
	}
	
	public ParserRule getVerificationCaseDefKeywordRule() {
		return getVerificationCaseDefKeywordAccess().getRule();
	}
	
	//VerificationCaseUsageKeyword :
	//    VerificationCaseKeyword
	//;
	public VerificationCaseUsageKeywordElements getVerificationCaseUsageKeywordAccess() {
		return pVerificationCaseUsageKeyword;
	}
	
	public ParserRule getVerificationCaseUsageKeywordRule() {
		return getVerificationCaseUsageKeywordAccess().getRule();
	}
	
	//VerificationCaseDefinition returns SysML::VerificationCaseDefinition :
	//    OccurrenceDefinitionPrefix VerificationCaseDefKeyword DefinitionDeclaration CaseBody
	//;
	public VerificationCaseDefinitionElements getVerificationCaseDefinitionAccess() {
		return pVerificationCaseDefinition;
	}
	
	public ParserRule getVerificationCaseDefinitionRule() {
		return getVerificationCaseDefinitionAccess().getRule();
	}
	
	//VerificationCaseUsage returns SysML::VerificationCaseUsage :
	//    OccurrenceUsagePrefix VerificationCaseUsageKeyword ActionUsageDeclaration CaseBody
	//;
	public VerificationCaseUsageElements getVerificationCaseUsageAccess() {
		return pVerificationCaseUsage;
	}
	
	public ParserRule getVerificationCaseUsageRule() {
		return getVerificationCaseUsageAccess().getRule();
	}
	
	//RequirementVerificationMember returns SysML::RequirementVerificationMembership :
	//    MemberPrefix kind = RequirementVerificationKind
	//    ownedRelatedElement += RequirementVerificationUsage
	//;
	public RequirementVerificationMemberElements getRequirementVerificationMemberAccess() {
		return pRequirementVerificationMember;
	}
	
	public ParserRule getRequirementVerificationMemberRule() {
		return getRequirementVerificationMemberAccess().getRule();
	}
	
	//enum RequirementVerificationKind returns SysML::RequirementConstraintKind :
	//    requirement = 'verify'
	//;
	public RequirementVerificationKindElements getRequirementVerificationKindAccess() {
		return eRequirementVerificationKind;
	}
	
	public EnumRule getRequirementVerificationKindRule() {
		return getRequirementVerificationKindAccess().getRule();
	}
	
	//RequirementVerificationUsage returns SysML::RequirementUsage :
	//      ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization*
	//      RequirementBody
	//    | ( UsageExtensionKeyword* RequirementUsageKeyword | UsageExtensionKeyword+ )
	//      ConstraintUsageDeclaration RequirementBody
	//;
	public RequirementVerificationUsageElements getRequirementVerificationUsageAccess() {
		return pRequirementVerificationUsage;
	}
	
	public ParserRule getRequirementVerificationUsageRule() {
		return getRequirementVerificationUsageAccess().getRule();
	}
	
	///* USE CASES */
	//UseCaseKeyword :
	//    'use' 'case'
	//;
	public UseCaseKeywordElements getUseCaseKeywordAccess() {
		return pUseCaseKeyword;
	}
	
	public ParserRule getUseCaseKeywordRule() {
		return getUseCaseKeywordAccess().getRule();
	}
	
	//UseCaseDefKeyword :
	//    UseCaseKeyword 'def'
	//;
	public UseCaseDefKeywordElements getUseCaseDefKeywordAccess() {
		return pUseCaseDefKeyword;
	}
	
	public ParserRule getUseCaseDefKeywordRule() {
		return getUseCaseDefKeywordAccess().getRule();
	}
	
	//UseCaseUsageKeyword :
	//    UseCaseKeyword
	//;
	public UseCaseUsageKeywordElements getUseCaseUsageKeywordAccess() {
		return pUseCaseUsageKeyword;
	}
	
	public ParserRule getUseCaseUsageKeywordRule() {
		return getUseCaseUsageKeywordAccess().getRule();
	}
	
	//UseCaseDefinition returns SysML::UseCaseDefinition :
	//    OccurrenceDefinitionPrefix UseCaseDefKeyword DefinitionDeclaration CaseBody
	//;
	public UseCaseDefinitionElements getUseCaseDefinitionAccess() {
		return pUseCaseDefinition;
	}
	
	public ParserRule getUseCaseDefinitionRule() {
		return getUseCaseDefinitionAccess().getRule();
	}
	
	//UseCaseUsage returns SysML::UseCaseUsage :
	//    OccurrenceUsagePrefix UseCaseUsageKeyword ActionUsageDeclaration CaseBody
	//;
	public UseCaseUsageElements getUseCaseUsageAccess() {
		return pUseCaseUsage;
	}
	
	public ParserRule getUseCaseUsageRule() {
		return getUseCaseUsageAccess().getRule();
	}
	
	//IncludeUseCaseUsage returns SysML::IncludeUseCaseUsage :
	//    OccurrenceUsagePrefix 'include'
	//       ( ownedRelationship += OwnedReferenceSubsetting FeatureSpecializationPart?
	//       | UseCaseUsageKeyword UsageDeclaration? )
	//    ValuePart?
	//    CaseBody
	//;
	public IncludeUseCaseUsageElements getIncludeUseCaseUsageAccess() {
		return pIncludeUseCaseUsage;
	}
	
	public ParserRule getIncludeUseCaseUsageRule() {
		return getIncludeUseCaseUsageAccess().getRule();
	}
	
	///* VIEWS */
	///* View Definitions */
	//ViewKeyword :
	//    'view'
	//;
	public ViewKeywordElements getViewKeywordAccess() {
		return pViewKeyword;
	}
	
	public ParserRule getViewKeywordRule() {
		return getViewKeywordAccess().getRule();
	}
	
	//ViewDefKeyword :
	//    ViewKeyword 'def'
	//;
	public ViewDefKeywordElements getViewDefKeywordAccess() {
		return pViewDefKeyword;
	}
	
	public ParserRule getViewDefKeywordRule() {
		return getViewDefKeywordAccess().getRule();
	}
	
	//ViewDefinition returns SysML::ViewDefinition :
	//    OccurrenceDefinitionPrefix ViewDefKeyword DefinitionDeclaration ViewDefinitionBody
	//;
	public ViewDefinitionElements getViewDefinitionAccess() {
		return pViewDefinition;
	}
	
	public ParserRule getViewDefinitionRule() {
		return getViewDefinitionAccess().getRule();
	}
	
	//fragment ViewDefinitionBody returns SysML::ViewDefinition :
	//      ';'
	//    | '{' ViewDefinitionBodyItem* '}'
	//;
	public ViewDefinitionBodyElements getViewDefinitionBodyAccess() {
		return pViewDefinitionBody;
	}
	
	public ParserRule getViewDefinitionBodyRule() {
		return getViewDefinitionBodyAccess().getRule();
	}
	
	//fragment ViewDefinitionBodyItem returns SysML::ViewDefinition :
	//      DefinitionBodyItem
	//    | ownedRelationship += ElementFilterMember
	//    | ownedRelationship += ViewRenderingMember
	//;
	public ViewDefinitionBodyItemElements getViewDefinitionBodyItemAccess() {
		return pViewDefinitionBodyItem;
	}
	
	public ParserRule getViewDefinitionBodyItemRule() {
		return getViewDefinitionBodyItemAccess().getRule();
	}
	
	//ViewRenderingMember returns SysML::ViewRenderingMembership :
	//    MemberPrefix 'render'
	//    ownedRelatedElement += ViewRenderingUsage
	//;
	public ViewRenderingMemberElements getViewRenderingMemberAccess() {
		return pViewRenderingMember;
	}
	
	public ParserRule getViewRenderingMemberRule() {
		return getViewRenderingMemberAccess().getRule();
	}
	
	//ViewRenderingUsage returns SysML::RenderingUsage :
	//      ownedRelationship += OwnedReferenceSubsetting FeatureSpecialization* UsageBody
	//    | ( UsageExtensionKeyword* 'rendering' | UsageExtensionKeyword+ ) Usage
	//;
	public ViewRenderingUsageElements getViewRenderingUsageAccess() {
		return pViewRenderingUsage;
	}
	
	public ParserRule getViewRenderingUsageRule() {
		return getViewRenderingUsageAccess().getRule();
	}
	
	///* View Usages */
	//ViewUsageKeyword :
	//    ViewKeyword
	//;
	public ViewUsageKeywordElements getViewUsageKeywordAccess() {
		return pViewUsageKeyword;
	}
	
	public ParserRule getViewUsageKeywordRule() {
		return getViewUsageKeywordAccess().getRule();
	}
	
	//ViewUsage returns SysML::ViewUsage :
	//    OccurrenceUsagePrefix ViewUsageKeyword UsageDeclaration? ValuePart? ViewBody
	//;
	public ViewUsageElements getViewUsageAccess() {
		return pViewUsage;
	}
	
	public ParserRule getViewUsageRule() {
		return getViewUsageAccess().getRule();
	}
	
	//fragment ViewBody returns SysML::ViewUsage :
	//    ';' | '{' ViewBodyItem* '}'
	//;
	public ViewBodyElements getViewBodyAccess() {
		return pViewBody;
	}
	
	public ParserRule getViewBodyRule() {
		return getViewBodyAccess().getRule();
	}
	
	//fragment ViewBodyItem returns SysML::ViewUsage :
	//      DefinitionBodyItem
	//    | ownedRelationship += ElementFilterMember
	//    | ownedRelationship += Expose
	//    | ownedRelationship += ViewRenderingMember
	//;
	public ViewBodyItemElements getViewBodyItemAccess() {
		return pViewBodyItem;
	}
	
	public ParserRule getViewBodyItemRule() {
		return getViewBodyItemAccess().getRule();
	}
	
	//fragment ExposePrefix returns SysML::Expose :
	//    visibility = ExposeVisibilityKind
	//;
	public ExposePrefixElements getExposePrefixAccess() {
		return pExposePrefix;
	}
	
	public ParserRule getExposePrefixRule() {
		return getExposePrefixAccess().getRule();
	}
	
	//enum ExposeVisibilityKind returns SysML::VisibilityKind :
	//    protected = 'expose'
	//;
	public ExposeVisibilityKindElements getExposeVisibilityKindAccess() {
		return eExposeVisibilityKind;
	}
	
	public EnumRule getExposeVisibilityKindRule() {
		return getExposeVisibilityKindAccess().getRule();
	}
	
	//Expose returns SysML::Expose :
	//    ( MembershipExpose | NamespaceExpose )
	//    RelationshipBody
	//;
	public ExposeElements getExposeAccess() {
		return pExpose;
	}
	
	public ParserRule getExposeRule() {
		return getExposeAccess().getRule();
	}
	
	//MembershipExpose returns SysML::MembershipExpose :
	//    ExposePrefix ImportedMembership
	//;
	public MembershipExposeElements getMembershipExposeAccess() {
		return pMembershipExpose;
	}
	
	public ParserRule getMembershipExposeRule() {
		return getMembershipExposeAccess().getRule();
	}
	
	//NamespaceExpose returns SysML::NamespaceExpose :
	//    ExposePrefix
	//    ( ImportedNamespace
	//    | ownedRelatedElement += FilterPackage
	//    )
	//;
	public NamespaceExposeElements getNamespaceExposeAccess() {
		return pNamespaceExpose;
	}
	
	public ParserRule getNamespaceExposeRule() {
		return getNamespaceExposeAccess().getRule();
	}
	
	///* VIEWPOINTS */
	//ViewpointKeyword :
	//    'viewpoint'
	//;
	public ViewpointKeywordElements getViewpointKeywordAccess() {
		return pViewpointKeyword;
	}
	
	public ParserRule getViewpointKeywordRule() {
		return getViewpointKeywordAccess().getRule();
	}
	
	//ViewpointDefKeyword :
	//    ViewpointKeyword 'def'
	//;
	public ViewpointDefKeywordElements getViewpointDefKeywordAccess() {
		return pViewpointDefKeyword;
	}
	
	public ParserRule getViewpointDefKeywordRule() {
		return getViewpointDefKeywordAccess().getRule();
	}
	
	//ViewpointUsageKeyword :
	//    ViewpointKeyword
	//;
	public ViewpointUsageKeywordElements getViewpointUsageKeywordAccess() {
		return pViewpointUsageKeyword;
	}
	
	public ParserRule getViewpointUsageKeywordRule() {
		return getViewpointUsageKeywordAccess().getRule();
	}
	
	//ViewpointDefinition returns SysML::ViewpointDefinition :
	//    OccurrenceDefinitionPrefix ViewpointDefKeyword DefinitionDeclaration RequirementBody
	//;
	public ViewpointDefinitionElements getViewpointDefinitionAccess() {
		return pViewpointDefinition;
	}
	
	public ParserRule getViewpointDefinitionRule() {
		return getViewpointDefinitionAccess().getRule();
	}
	
	//ViewpointUsage returns SysML::ViewpointUsage :
	//    OccurrenceUsagePrefix ViewpointUsageKeyword ConstraintUsageDeclaration RequirementBody
	//;
	public ViewpointUsageElements getViewpointUsageAccess() {
		return pViewpointUsage;
	}
	
	public ParserRule getViewpointUsageRule() {
		return getViewpointUsageAccess().getRule();
	}
	
	///* RENDERINGS */
	//RenderingKeyword :
	//    'rendering'
	//;
	public RenderingKeywordElements getRenderingKeywordAccess() {
		return pRenderingKeyword;
	}
	
	public ParserRule getRenderingKeywordRule() {
		return getRenderingKeywordAccess().getRule();
	}
	
	//RenderingDefKeyword :
	//    RenderingKeyword 'def'
	//;
	public RenderingDefKeywordElements getRenderingDefKeywordAccess() {
		return pRenderingDefKeyword;
	}
	
	public ParserRule getRenderingDefKeywordRule() {
		return getRenderingDefKeywordAccess().getRule();
	}
	
	//RenderingDefinition returns SysML::RenderingDefinition :
	//    OccurrenceDefinitionPrefix RenderingDefKeyword Definition
	//;
	public RenderingDefinitionElements getRenderingDefinitionAccess() {
		return pRenderingDefinition;
	}
	
	public ParserRule getRenderingDefinitionRule() {
		return getRenderingDefinitionAccess().getRule();
	}
	
	//RenderingUsageKeyword :
	//    RenderingKeyword
	//;
	public RenderingUsageKeywordElements getRenderingUsageKeywordAccess() {
		return pRenderingUsageKeyword;
	}
	
	public ParserRule getRenderingUsageKeywordRule() {
		return getRenderingUsageKeywordAccess().getRule();
	}
	
	//RenderingUsage returns SysML::RenderingUsage :
	//    OccurrenceUsagePrefix RenderingUsageKeyword Usage
	//;
	public RenderingUsageElements getRenderingUsageAccess() {
		return pRenderingUsage;
	}
	
	public ParserRule getRenderingUsageRule() {
		return getRenderingUsageAccess().getRule();
	}
	
	///* EXPRESSIONS */
	//@Override
	//ExpressionBody returns SysML::Expression :
	//    CalculationBody
	//;
	public ExpressionBodyElements getExpressionBodyAccess() {
		return pExpressionBody;
	}
	
	public ParserRule getExpressionBodyRule() {
		return getExpressionBodyAccess().getRule();
	}
	
	///* EXPRESSIONS */
	///* Operator Expressions */
	//OwnedExpressionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += OwnedExpression
	//;
	public KerMLExpressionsGrammarAccess.OwnedExpressionMemberElements getOwnedExpressionMemberAccess() {
		return gaKerMLExpressions.getOwnedExpressionMemberAccess();
	}
	
	public ParserRule getOwnedExpressionMemberRule() {
		return getOwnedExpressionMemberAccess().getRule();
	}
	
	//OwnedExpression returns SysML::Expression :
	//     ConditionalExpression
	//;
	public KerMLExpressionsGrammarAccess.OwnedExpressionElements getOwnedExpressionAccess() {
		return gaKerMLExpressions.getOwnedExpressionAccess();
	}
	
	public ParserRule getOwnedExpressionRule() {
		return getOwnedExpressionAccess().getRule();
	}
	
	//// Conditional Test Expressions
	//OwnedExpressionReference returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += OwnedExpressionMember
	//;
	public KerMLExpressionsGrammarAccess.OwnedExpressionReferenceElements getOwnedExpressionReferenceAccess() {
		return gaKerMLExpressions.getOwnedExpressionReferenceAccess();
	}
	
	public ParserRule getOwnedExpressionReferenceRule() {
		return getOwnedExpressionReferenceAccess().getRule();
	}
	
	//ConditionalExpression returns SysML::Expression :
	//      NullCoalescingExpression
	//    | {SysML::OperatorExpression} operator = ConditionalOperator operand += NullCoalescingExpression
	//          '?' operand += OwnedExpressionReference 'else' operand += OwnedExpressionReference
	//;
	public KerMLExpressionsGrammarAccess.ConditionalExpressionElements getConditionalExpressionAccess() {
		return gaKerMLExpressions.getConditionalExpressionAccess();
	}
	
	public ParserRule getConditionalExpressionRule() {
		return getConditionalExpressionAccess().getRule();
	}
	
	//ConditionalOperator :
	//    'if'
	//;
	public KerMLExpressionsGrammarAccess.ConditionalOperatorElements getConditionalOperatorAccess() {
		return gaKerMLExpressions.getConditionalOperatorAccess();
	}
	
	public ParserRule getConditionalOperatorRule() {
		return getConditionalOperatorAccess().getRule();
	}
	
	//// Null Coalescing Expressions
	//NullCoalescingExpression returns SysML::Expression :
	//    ImpliesExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = NullCoalescingOperator operand += ImpliesExpressionReference )*
	//;
	public KerMLExpressionsGrammarAccess.NullCoalescingExpressionElements getNullCoalescingExpressionAccess() {
		return gaKerMLExpressions.getNullCoalescingExpressionAccess();
	}
	
	public ParserRule getNullCoalescingExpressionRule() {
		return getNullCoalescingExpressionAccess().getRule();
	}
	
	//NullCoalescingOperator :
	//    '??'
	//;
	public KerMLExpressionsGrammarAccess.NullCoalescingOperatorElements getNullCoalescingOperatorAccess() {
		return gaKerMLExpressions.getNullCoalescingOperatorAccess();
	}
	
	public ParserRule getNullCoalescingOperatorRule() {
		return getNullCoalescingOperatorAccess().getRule();
	}
	
	//// Logical Expressions
	//ImpliesExpressionReference returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += ImpliesExpressionMember
	//;
	public KerMLExpressionsGrammarAccess.ImpliesExpressionReferenceElements getImpliesExpressionReferenceAccess() {
		return gaKerMLExpressions.getImpliesExpressionReferenceAccess();
	}
	
	public ParserRule getImpliesExpressionReferenceRule() {
		return getImpliesExpressionReferenceAccess().getRule();
	}
	
	//ImpliesExpressionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += ImpliesExpression
	//;
	public KerMLExpressionsGrammarAccess.ImpliesExpressionMemberElements getImpliesExpressionMemberAccess() {
		return gaKerMLExpressions.getImpliesExpressionMemberAccess();
	}
	
	public ParserRule getImpliesExpressionMemberRule() {
		return getImpliesExpressionMemberAccess().getRule();
	}
	
	//ImpliesExpression returns SysML::Expression :
	//    OrExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = ImpliesOperator operand += OrExpressionReference )*
	//;
	public KerMLExpressionsGrammarAccess.ImpliesExpressionElements getImpliesExpressionAccess() {
		return gaKerMLExpressions.getImpliesExpressionAccess();
	}
	
	public ParserRule getImpliesExpressionRule() {
		return getImpliesExpressionAccess().getRule();
	}
	
	//ImpliesOperator :
	//    'implies'
	//;
	public KerMLExpressionsGrammarAccess.ImpliesOperatorElements getImpliesOperatorAccess() {
		return gaKerMLExpressions.getImpliesOperatorAccess();
	}
	
	public ParserRule getImpliesOperatorRule() {
		return getImpliesOperatorAccess().getRule();
	}
	
	//OrExpressionReference returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += OrExpressionMember
	//;
	public KerMLExpressionsGrammarAccess.OrExpressionReferenceElements getOrExpressionReferenceAccess() {
		return gaKerMLExpressions.getOrExpressionReferenceAccess();
	}
	
	public ParserRule getOrExpressionReferenceRule() {
		return getOrExpressionReferenceAccess().getRule();
	}
	
	//OrExpressionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += OrExpression
	//;
	public KerMLExpressionsGrammarAccess.OrExpressionMemberElements getOrExpressionMemberAccess() {
		return gaKerMLExpressions.getOrExpressionMemberAccess();
	}
	
	public ParserRule getOrExpressionMemberRule() {
		return getOrExpressionMemberAccess().getRule();
	}
	
	//OrExpression returns SysML::Expression :
	//    XorExpression ( {SysML::OperatorExpression.operand += current}
	//        ( operator = OrOperator operand += XorExpression
	//        | operator = ConditionalOrOperator operand += XorExpressionReference ) )*
	//;
	public KerMLExpressionsGrammarAccess.OrExpressionElements getOrExpressionAccess() {
		return gaKerMLExpressions.getOrExpressionAccess();
	}
	
	public ParserRule getOrExpressionRule() {
		return getOrExpressionAccess().getRule();
	}
	
	//OrOperator :
	//    '|'
	//;
	public KerMLExpressionsGrammarAccess.OrOperatorElements getOrOperatorAccess() {
		return gaKerMLExpressions.getOrOperatorAccess();
	}
	
	public ParserRule getOrOperatorRule() {
		return getOrOperatorAccess().getRule();
	}
	
	//ConditionalOrOperator :
	//    'or'
	//;
	public KerMLExpressionsGrammarAccess.ConditionalOrOperatorElements getConditionalOrOperatorAccess() {
		return gaKerMLExpressions.getConditionalOrOperatorAccess();
	}
	
	public ParserRule getConditionalOrOperatorRule() {
		return getConditionalOrOperatorAccess().getRule();
	}
	
	//XorExpressionReference returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += XorExpressionMember
	//;
	public KerMLExpressionsGrammarAccess.XorExpressionReferenceElements getXorExpressionReferenceAccess() {
		return gaKerMLExpressions.getXorExpressionReferenceAccess();
	}
	
	public ParserRule getXorExpressionReferenceRule() {
		return getXorExpressionReferenceAccess().getRule();
	}
	
	//XorExpressionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += XorExpression
	//;
	public KerMLExpressionsGrammarAccess.XorExpressionMemberElements getXorExpressionMemberAccess() {
		return gaKerMLExpressions.getXorExpressionMemberAccess();
	}
	
	public ParserRule getXorExpressionMemberRule() {
		return getXorExpressionMemberAccess().getRule();
	}
	
	//XorExpression returns SysML::Expression :
	//    AndExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = XorOperator operand += AndExpression )*
	//;
	public KerMLExpressionsGrammarAccess.XorExpressionElements getXorExpressionAccess() {
		return gaKerMLExpressions.getXorExpressionAccess();
	}
	
	public ParserRule getXorExpressionRule() {
		return getXorExpressionAccess().getRule();
	}
	
	//XorOperator :
	//    'xor'
	//;
	public KerMLExpressionsGrammarAccess.XorOperatorElements getXorOperatorAccess() {
		return gaKerMLExpressions.getXorOperatorAccess();
	}
	
	public ParserRule getXorOperatorRule() {
		return getXorOperatorAccess().getRule();
	}
	
	//AndExpression returns SysML::Expression :
	//    EqualityExpression ( {SysML::OperatorExpression.operand += current}
	//        ( operator = AndOperator operand += EqualityExpression
	//        | operator = ConditionalAndOperator operand += EqualityExpressionReference ) )*
	//;
	public KerMLExpressionsGrammarAccess.AndExpressionElements getAndExpressionAccess() {
		return gaKerMLExpressions.getAndExpressionAccess();
	}
	
	public ParserRule getAndExpressionRule() {
		return getAndExpressionAccess().getRule();
	}
	
	//AndOperator :
	//    '&'
	//;
	public KerMLExpressionsGrammarAccess.AndOperatorElements getAndOperatorAccess() {
		return gaKerMLExpressions.getAndOperatorAccess();
	}
	
	public ParserRule getAndOperatorRule() {
		return getAndOperatorAccess().getRule();
	}
	
	//ConditionalAndOperator :
	//    'and'
	//;
	public KerMLExpressionsGrammarAccess.ConditionalAndOperatorElements getConditionalAndOperatorAccess() {
		return gaKerMLExpressions.getConditionalAndOperatorAccess();
	}
	
	public ParserRule getConditionalAndOperatorRule() {
		return getConditionalAndOperatorAccess().getRule();
	}
	
	//// Equality Expressions
	//EqualityExpressionReference returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += EqualityExpressionMember
	//;
	public KerMLExpressionsGrammarAccess.EqualityExpressionReferenceElements getEqualityExpressionReferenceAccess() {
		return gaKerMLExpressions.getEqualityExpressionReferenceAccess();
	}
	
	public ParserRule getEqualityExpressionReferenceRule() {
		return getEqualityExpressionReferenceAccess().getRule();
	}
	
	//EqualityExpressionMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += EqualityExpression
	//;
	public KerMLExpressionsGrammarAccess.EqualityExpressionMemberElements getEqualityExpressionMemberAccess() {
		return gaKerMLExpressions.getEqualityExpressionMemberAccess();
	}
	
	public ParserRule getEqualityExpressionMemberRule() {
		return getEqualityExpressionMemberAccess().getRule();
	}
	
	//EqualityExpression returns SysML::Expression :
	//    ClassificationExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = EqualityOperator operand += ClassificationExpression )*
	//;
	public KerMLExpressionsGrammarAccess.EqualityExpressionElements getEqualityExpressionAccess() {
		return gaKerMLExpressions.getEqualityExpressionAccess();
	}
	
	public ParserRule getEqualityExpressionRule() {
		return getEqualityExpressionAccess().getRule();
	}
	
	//EqualityOperator :
	//    '==' | '!=' | '===' | '!=='
	//;
	public KerMLExpressionsGrammarAccess.EqualityOperatorElements getEqualityOperatorAccess() {
		return gaKerMLExpressions.getEqualityOperatorAccess();
	}
	
	public ParserRule getEqualityOperatorRule() {
		return getEqualityOperatorAccess().getRule();
	}
	
	//// Classification Expressions
	//ClassificationExpression returns SysML::Expression :
	//      RelationalExpression
	//      ( {SysML::OperatorExpression.operand += current}
	//          operator = ClassificationTestOperator ownedRelationship += TypeReferenceMember
	//      | {SysML::OperatorExpression.operand += current}
	//        operator = CastOperator ownedRelationship += TypeResultMember
	//      )?
	//    | {SysML::OperatorExpression} operand += SelfReferenceExpression
	//      operator = ClassificationTestOperator ownedRelationship += TypeReferenceMember
	//    | {SysML::OperatorExpression} operand += MetadataReference
	//      operator = MetaClassificationTestOperator ownedRelationship += TypeReferenceMember
	//    | {SysML::OperatorExpression} operand += SelfReferenceExpression
	//      operator = CastOperator ownedRelationship += TypeResultMember
	//    | {SysML::OperatorExpression} operand += MetadataReference
	//      operator = MetaCastOperator ownedRelationship += TypeResultMember
	//;
	public KerMLExpressionsGrammarAccess.ClassificationExpressionElements getClassificationExpressionAccess() {
		return gaKerMLExpressions.getClassificationExpressionAccess();
	}
	
	public ParserRule getClassificationExpressionRule() {
		return getClassificationExpressionAccess().getRule();
	}
	
	//ClassificationTestOperator :
	//    'hastype' | 'istype' | '@'
	//;
	public KerMLExpressionsGrammarAccess.ClassificationTestOperatorElements getClassificationTestOperatorAccess() {
		return gaKerMLExpressions.getClassificationTestOperatorAccess();
	}
	
	public ParserRule getClassificationTestOperatorRule() {
		return getClassificationTestOperatorAccess().getRule();
	}
	
	//MetaClassificationTestOperator :
	//    '@@'
	//;
	public KerMLExpressionsGrammarAccess.MetaClassificationTestOperatorElements getMetaClassificationTestOperatorAccess() {
		return gaKerMLExpressions.getMetaClassificationTestOperatorAccess();
	}
	
	public ParserRule getMetaClassificationTestOperatorRule() {
		return getMetaClassificationTestOperatorAccess().getRule();
	}
	
	//CastOperator :
	//    'as'
	//;
	public KerMLExpressionsGrammarAccess.CastOperatorElements getCastOperatorAccess() {
		return gaKerMLExpressions.getCastOperatorAccess();
	}
	
	public ParserRule getCastOperatorRule() {
		return getCastOperatorAccess().getRule();
	}
	
	//MetaCastOperator :
	//    'meta'
	//;
	public KerMLExpressionsGrammarAccess.MetaCastOperatorElements getMetaCastOperatorAccess() {
		return gaKerMLExpressions.getMetaCastOperatorAccess();
	}
	
	public ParserRule getMetaCastOperatorRule() {
		return getMetaCastOperatorAccess().getRule();
	}
	
	//MetadataReference returns SysML::MetadataAccessExpression :
	//    referencedElement = [SysML::Element | QualifiedName]
	//;
	public KerMLExpressionsGrammarAccess.MetadataReferenceElements getMetadataReferenceAccess() {
		return gaKerMLExpressions.getMetadataReferenceAccess();
	}
	
	public ParserRule getMetadataReferenceRule() {
		return getMetadataReferenceAccess().getRule();
	}
	
	//TypeReferenceMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += TypeReference
	//;
	public KerMLExpressionsGrammarAccess.TypeReferenceMemberElements getTypeReferenceMemberAccess() {
		return gaKerMLExpressions.getTypeReferenceMemberAccess();
	}
	
	public ParserRule getTypeReferenceMemberRule() {
		return getTypeReferenceMemberAccess().getRule();
	}
	
	//TypeResultMember returns SysML::ReturnParameterMembership :
	//    ownedRelatedElement += TypeReference
	//;
	public KerMLExpressionsGrammarAccess.TypeResultMemberElements getTypeResultMemberAccess() {
		return gaKerMLExpressions.getTypeResultMemberAccess();
	}
	
	public ParserRule getTypeResultMemberRule() {
		return getTypeResultMemberAccess().getRule();
	}
	
	//TypeReference returns SysML::Feature :
	//    ownedRelationship += ReferenceTyping
	//;
	public KerMLExpressionsGrammarAccess.TypeReferenceElements getTypeReferenceAccess() {
		return gaKerMLExpressions.getTypeReferenceAccess();
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}
	
	//ReferenceTyping returns SysML::FeatureTyping :
	//      type = [SysML::Type | QualifiedName]
	//;
	public KerMLExpressionsGrammarAccess.ReferenceTypingElements getReferenceTypingAccess() {
		return gaKerMLExpressions.getReferenceTypingAccess();
	}
	
	public ParserRule getReferenceTypingRule() {
		return getReferenceTypingAccess().getRule();
	}
	
	//SelfReferenceExpression returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += SelfReferenceMember
	//;
	public KerMLExpressionsGrammarAccess.SelfReferenceExpressionElements getSelfReferenceExpressionAccess() {
		return gaKerMLExpressions.getSelfReferenceExpressionAccess();
	}
	
	public ParserRule getSelfReferenceExpressionRule() {
		return getSelfReferenceExpressionAccess().getRule();
	}
	
	//SelfReferenceMember returns SysML::ReturnParameterMembership :
	//    ownedRelatedElement += EmptyFeature
	//;
	public KerMLExpressionsGrammarAccess.SelfReferenceMemberElements getSelfReferenceMemberAccess() {
		return gaKerMLExpressions.getSelfReferenceMemberAccess();
	}
	
	public ParserRule getSelfReferenceMemberRule() {
		return getSelfReferenceMemberAccess().getRule();
	}
	
	//EmptyFeature returns SysML::Feature :
	//    {SysML::Feature}
	//;
	public KerMLExpressionsGrammarAccess.EmptyFeatureElements getEmptyFeatureAccess() {
		return gaKerMLExpressions.getEmptyFeatureAccess();
	}
	
	public ParserRule getEmptyFeatureRule() {
		return getEmptyFeatureAccess().getRule();
	}
	
	//// Relational Expressions
	//RelationalExpression returns SysML::Expression :
	//    RangeExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = RelationalOperator operand += RangeExpression )*
	//;
	public KerMLExpressionsGrammarAccess.RelationalExpressionElements getRelationalExpressionAccess() {
		return gaKerMLExpressions.getRelationalExpressionAccess();
	}
	
	public ParserRule getRelationalExpressionRule() {
		return getRelationalExpressionAccess().getRule();
	}
	
	//RelationalOperator :
	//    '<' | '>' | '<=' | '>='
	//;
	public KerMLExpressionsGrammarAccess.RelationalOperatorElements getRelationalOperatorAccess() {
		return gaKerMLExpressions.getRelationalOperatorAccess();
	}
	
	public ParserRule getRelationalOperatorRule() {
		return getRelationalOperatorAccess().getRule();
	}
	
	//// Range Expressions
	//RangeExpression returns SysML::Expression :
	//    AdditiveExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = '..' operand += AdditiveExpression )?
	//;
	public KerMLExpressionsGrammarAccess.RangeExpressionElements getRangeExpressionAccess() {
		return gaKerMLExpressions.getRangeExpressionAccess();
	}
	
	public ParserRule getRangeExpressionRule() {
		return getRangeExpressionAccess().getRule();
	}
	
	//// Arithmetic Expressions
	//AdditiveExpression returns SysML::Expression :
	//    MultiplicativeExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = AdditiveOperator operand += MultiplicativeExpression )*
	//;
	public KerMLExpressionsGrammarAccess.AdditiveExpressionElements getAdditiveExpressionAccess() {
		return gaKerMLExpressions.getAdditiveExpressionAccess();
	}
	
	public ParserRule getAdditiveExpressionRule() {
		return getAdditiveExpressionAccess().getRule();
	}
	
	//AdditiveOperator :
	//    '+' | '-'
	//;
	public KerMLExpressionsGrammarAccess.AdditiveOperatorElements getAdditiveOperatorAccess() {
		return gaKerMLExpressions.getAdditiveOperatorAccess();
	}
	
	public ParserRule getAdditiveOperatorRule() {
		return getAdditiveOperatorAccess().getRule();
	}
	
	//MultiplicativeExpression returns SysML::Expression :
	//    ExponentiationExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = MultiplicativeOperator operand += ExponentiationExpression )*
	//;
	public KerMLExpressionsGrammarAccess.MultiplicativeExpressionElements getMultiplicativeExpressionAccess() {
		return gaKerMLExpressions.getMultiplicativeExpressionAccess();
	}
	
	public ParserRule getMultiplicativeExpressionRule() {
		return getMultiplicativeExpressionAccess().getRule();
	}
	
	//MultiplicativeOperator :
	//    '*' | '/' | '%'
	//;
	public KerMLExpressionsGrammarAccess.MultiplicativeOperatorElements getMultiplicativeOperatorAccess() {
		return gaKerMLExpressions.getMultiplicativeOperatorAccess();
	}
	
	public ParserRule getMultiplicativeOperatorRule() {
		return getMultiplicativeOperatorAccess().getRule();
	}
	
	//ExponentiationExpression returns SysML::Expression :
	//    UnaryExpression ( {SysML::OperatorExpression.operand += current}
	//        operator = ExponentiationOperator operand += ExponentiationExpression )?
	//;
	public KerMLExpressionsGrammarAccess.ExponentiationExpressionElements getExponentiationExpressionAccess() {
		return gaKerMLExpressions.getExponentiationExpressionAccess();
	}
	
	public ParserRule getExponentiationExpressionRule() {
		return getExponentiationExpressionAccess().getRule();
	}
	
	//ExponentiationOperator :
	//    '**' | '^'
	//;
	public KerMLExpressionsGrammarAccess.ExponentiationOperatorElements getExponentiationOperatorAccess() {
		return gaKerMLExpressions.getExponentiationOperatorAccess();
	}
	
	public ParserRule getExponentiationOperatorRule() {
		return getExponentiationOperatorAccess().getRule();
	}
	
	//// Unary Expressions
	//UnaryExpression returns SysML::Expression:
	//      {SysML::OperatorExpression} operator = UnaryOperator operand += ExtentExpression
	//    | ExtentExpression
	//;
	public KerMLExpressionsGrammarAccess.UnaryExpressionElements getUnaryExpressionAccess() {
		return gaKerMLExpressions.getUnaryExpressionAccess();
	}
	
	public ParserRule getUnaryExpressionRule() {
		return getUnaryExpressionAccess().getRule();
	}
	
	//UnaryOperator :
	//    '+' | '-' | '~' | 'not'
	//;
	public KerMLExpressionsGrammarAccess.UnaryOperatorElements getUnaryOperatorAccess() {
		return gaKerMLExpressions.getUnaryOperatorAccess();
	}
	
	public ParserRule getUnaryOperatorRule() {
		return getUnaryOperatorAccess().getRule();
	}
	
	//// Extent Expressions
	//ExtentExpression returns SysML::Expression :
	//      {SysML::OperatorExpression} operator = 'all' ownedRelationship += TypeResultMember
	//    | PrimaryExpression
	//;
	public KerMLExpressionsGrammarAccess.ExtentExpressionElements getExtentExpressionAccess() {
		return gaKerMLExpressions.getExtentExpressionAccess();
	}
	
	public ParserRule getExtentExpressionRule() {
		return getExtentExpressionAccess().getRule();
	}
	
	///* Primary Expressions */
	//PrimaryExpression returns SysML::Expression :
	//    BaseExpression
	//    ( {SysML::FeatureChainExpression.operand += current} '.'
	//      ownedRelationship += FeatureChainMember
	//    )?
	//    ( ( {SysML::OperatorExpression.operand += current}
	//        operator = '#' '(' operand += SequenceExpression ')'
	//      | {SysML::OperatorExpression.operand += current}
	//        operator = '[' operand += SequenceExpression ']'
	//      | {SysML::InvocationExpression.operand += current} '->'
	//        ownedRelationship += ReferenceTyping
	//        ( operand += BodyExpression
	//        | operand += FunctionReferenceExpression
	//        | ArgumentList
	//        )
	//      | {SysML::CollectExpression.operand += current} '.'
	//        operand += BodyExpression
	//      | {SysML::SelectExpression.operand += current} '.?'
	//        operand += BodyExpression
	//      )
	//      ( {SysML::FeatureChainExpression.operand += current} '.'
	//          ownedRelationship += FeatureChainMember
	//      )?
	//    )*
	//;
	public KerMLExpressionsGrammarAccess.PrimaryExpressionElements getPrimaryExpressionAccess() {
		return gaKerMLExpressions.getPrimaryExpressionAccess();
	}
	
	public ParserRule getPrimaryExpressionRule() {
		return getPrimaryExpressionAccess().getRule();
	}
	
	//FunctionReferenceExpression returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += FunctionReferenceMember
	//;
	public KerMLExpressionsGrammarAccess.FunctionReferenceExpressionElements getFunctionReferenceExpressionAccess() {
		return gaKerMLExpressions.getFunctionReferenceExpressionAccess();
	}
	
	public ParserRule getFunctionReferenceExpressionRule() {
		return getFunctionReferenceExpressionAccess().getRule();
	}
	
	//FunctionReferenceMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += FunctionReference
	//;
	public KerMLExpressionsGrammarAccess.FunctionReferenceMemberElements getFunctionReferenceMemberAccess() {
		return gaKerMLExpressions.getFunctionReferenceMemberAccess();
	}
	
	public ParserRule getFunctionReferenceMemberRule() {
		return getFunctionReferenceMemberAccess().getRule();
	}
	
	//FunctionReference returns SysML::Expression :
	//    ownedRelationship += ReferenceTyping
	//;
	public KerMLExpressionsGrammarAccess.FunctionReferenceElements getFunctionReferenceAccess() {
		return gaKerMLExpressions.getFunctionReferenceAccess();
	}
	
	public ParserRule getFunctionReferenceRule() {
		return getFunctionReferenceAccess().getRule();
	}
	
	//FeatureChainMember returns SysML::Membership :
	//      memberElement = [SysML::Feature | QualifiedName]
	//    | {SysML::OwningMembership} ownedRelatedElement += OwnedFeatureChain
	//;
	public KerMLExpressionsGrammarAccess.FeatureChainMemberElements getFeatureChainMemberAccess() {
		return gaKerMLExpressions.getFeatureChainMemberAccess();
	}
	
	public ParserRule getFeatureChainMemberRule() {
		return getFeatureChainMemberAccess().getRule();
	}
	
	///* Base Expressions */
	//BaseExpression returns SysML::Expression :
	//      NullExpression
	//    | LiteralExpression
	//    | FeatureReferenceExpression
	//    | MetadataAccessExpression
	//    | InvocationExpression
	//    | BodyExpression
	//    | '(' SequenceExpression ')'
	//;
	public KerMLExpressionsGrammarAccess.BaseExpressionElements getBaseExpressionAccess() {
		return gaKerMLExpressions.getBaseExpressionAccess();
	}
	
	public ParserRule getBaseExpressionRule() {
		return getBaseExpressionAccess().getRule();
	}
	
	//// Expression Bodies
	//BodyExpression returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += ExpressionBodyMember
	//;
	public KerMLExpressionsGrammarAccess.BodyExpressionElements getBodyExpressionAccess() {
		return gaKerMLExpressions.getBodyExpressionAccess();
	}
	
	public ParserRule getBodyExpressionRule() {
		return getBodyExpressionAccess().getRule();
	}
	
	//ExpressionBodyMember returns SysML::FeatureMembership :
	//    ownedRelatedElement += ExpressionBody
	//;
	public KerMLExpressionsGrammarAccess.ExpressionBodyMemberElements getExpressionBodyMemberAccess() {
		return gaKerMLExpressions.getExpressionBodyMemberAccess();
	}
	
	public ParserRule getExpressionBodyMemberRule() {
		return getExpressionBodyMemberAccess().getRule();
	}
	
	//BodyParameterMember returns SysML::ParameterMembership :
	//    'in' ownedRelatedElement += BodyParameter
	//;
	public KerMLExpressionsGrammarAccess.BodyParameterMemberElements getBodyParameterMemberAccess() {
		return gaKerMLExpressions.getBodyParameterMemberAccess();
	}
	
	public ParserRule getBodyParameterMemberRule() {
		return getBodyParameterMemberAccess().getRule();
	}
	
	//BodyParameter returns SysML::Feature :
	//    declaredName = Name
	//;
	public KerMLExpressionsGrammarAccess.BodyParameterElements getBodyParameterAccess() {
		return gaKerMLExpressions.getBodyParameterAccess();
	}
	
	public ParserRule getBodyParameterRule() {
		return getBodyParameterAccess().getRule();
	}
	
	//// Sequence Expressions
	//SequenceExpression returns SysML::Expression :
	//    OwnedExpression
	//    ( ','
	//    | {SysML::OperatorExpression.operand += current} operator = ','
	//      operand += SequenceExpression
	//    )?
	//;
	public KerMLExpressionsGrammarAccess.SequenceExpressionElements getSequenceExpressionAccess() {
		return gaKerMLExpressions.getSequenceExpressionAccess();
	}
	
	public ParserRule getSequenceExpressionRule() {
		return getSequenceExpressionAccess().getRule();
	}
	
	//// Feature Reference Expressions
	//FeatureReferenceExpression returns SysML::FeatureReferenceExpression :
	//    ownedRelationship += FeatureReferenceMember
	//;
	public KerMLExpressionsGrammarAccess.FeatureReferenceExpressionElements getFeatureReferenceExpressionAccess() {
		return gaKerMLExpressions.getFeatureReferenceExpressionAccess();
	}
	
	public ParserRule getFeatureReferenceExpressionRule() {
		return getFeatureReferenceExpressionAccess().getRule();
	}
	
	//FeatureReferenceMember returns SysML::Membership :
	//    memberElement = [SysML::Feature | QualifiedName]
	//;
	public KerMLExpressionsGrammarAccess.FeatureReferenceMemberElements getFeatureReferenceMemberAccess() {
		return gaKerMLExpressions.getFeatureReferenceMemberAccess();
	}
	
	public ParserRule getFeatureReferenceMemberRule() {
		return getFeatureReferenceMemberAccess().getRule();
	}
	
	//// Metadata Access Expressions
	//MetadataAccessExpression returns SysML::MetadataAccessExpression :
	//    referencedElement = [SysML::Element | QualifiedName] '.' 'metadata'
	//;
	public KerMLExpressionsGrammarAccess.MetadataAccessExpressionElements getMetadataAccessExpressionAccess() {
		return gaKerMLExpressions.getMetadataAccessExpressionAccess();
	}
	
	public ParserRule getMetadataAccessExpressionRule() {
		return getMetadataAccessExpressionAccess().getRule();
	}
	
	//// Invocation Expressions
	//InvocationExpression returns SysML::InvocationExpression :
	//    ownedRelationship += OwnedFeatureTyping ArgumentList
	//;
	public KerMLExpressionsGrammarAccess.InvocationExpressionElements getInvocationExpressionAccess() {
		return gaKerMLExpressions.getInvocationExpressionAccess();
	}
	
	public ParserRule getInvocationExpressionRule() {
		return getInvocationExpressionAccess().getRule();
	}
	
	//OwnedFeatureTyping returns SysML::FeatureTyping :
	//      type = [SysML::Type | QualifiedName]
	//    | ownedRelatedElement += OwnedFeatureChain
	//;
	public KerMLExpressionsGrammarAccess.OwnedFeatureTypingElements getOwnedFeatureTypingAccess() {
		return gaKerMLExpressions.getOwnedFeatureTypingAccess();
	}
	
	public ParserRule getOwnedFeatureTypingRule() {
		return getOwnedFeatureTypingAccess().getRule();
	}
	
	//OwnedFeatureChain returns SysML::Feature :
	//    FeatureChain
	//;
	public KerMLExpressionsGrammarAccess.OwnedFeatureChainElements getOwnedFeatureChainAccess() {
		return gaKerMLExpressions.getOwnedFeatureChainAccess();
	}
	
	public ParserRule getOwnedFeatureChainRule() {
		return getOwnedFeatureChainAccess().getRule();
	}
	
	//// For use in KerML and SysML grammars
	//fragment FeatureChain returns SysML::Feature :
	//    ownedRelationship += OwnedFeatureChaining
	//    ( '.' ownedRelationship += OwnedFeatureChaining )+
	//;
	public KerMLExpressionsGrammarAccess.FeatureChainElements getFeatureChainAccess() {
		return gaKerMLExpressions.getFeatureChainAccess();
	}
	
	public ParserRule getFeatureChainRule() {
		return getFeatureChainAccess().getRule();
	}
	
	//OwnedFeatureChaining returns SysML::FeatureChaining :
	//    chainingFeature = [SysML::Feature | QualifiedName]
	//;
	public KerMLExpressionsGrammarAccess.OwnedFeatureChainingElements getOwnedFeatureChainingAccess() {
		return gaKerMLExpressions.getOwnedFeatureChainingAccess();
	}
	
	public ParserRule getOwnedFeatureChainingRule() {
		return getOwnedFeatureChainingAccess().getRule();
	}
	
	//fragment ArgumentList returns SysML::Expression :
	//    '(' ( PositionalArgumentList | NamedArgumentList )? ')'
	//;
	public KerMLExpressionsGrammarAccess.ArgumentListElements getArgumentListAccess() {
		return gaKerMLExpressions.getArgumentListAccess();
	}
	
	public ParserRule getArgumentListRule() {
		return getArgumentListAccess().getRule();
	}
	
	//fragment PositionalArgumentList returns SysML::Expression :
	//    ownedRelationship += ArgumentMember
	//    ( ',' ownedRelationship += ArgumentMember )*
	//;
	public KerMLExpressionsGrammarAccess.PositionalArgumentListElements getPositionalArgumentListAccess() {
		return gaKerMLExpressions.getPositionalArgumentListAccess();
	}
	
	public ParserRule getPositionalArgumentListRule() {
		return getPositionalArgumentListAccess().getRule();
	}
	
	//ArgumentMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += Argument
	//;
	public KerMLExpressionsGrammarAccess.ArgumentMemberElements getArgumentMemberAccess() {
		return gaKerMLExpressions.getArgumentMemberAccess();
	}
	
	public ParserRule getArgumentMemberRule() {
		return getArgumentMemberAccess().getRule();
	}
	
	//Argument returns SysML::Feature :
	//    ownedRelationship += ArgumentValue
	//;
	public KerMLExpressionsGrammarAccess.ArgumentElements getArgumentAccess() {
		return gaKerMLExpressions.getArgumentAccess();
	}
	
	public ParserRule getArgumentRule() {
		return getArgumentAccess().getRule();
	}
	
	//fragment NamedArgumentList returns SysML::Expression :
	//    ownedRelationship += NamedArgumentMember
	//    ( ',' ownedRelationship += NamedArgumentMember )*
	//;
	public KerMLExpressionsGrammarAccess.NamedArgumentListElements getNamedArgumentListAccess() {
		return gaKerMLExpressions.getNamedArgumentListAccess();
	}
	
	public ParserRule getNamedArgumentListRule() {
		return getNamedArgumentListAccess().getRule();
	}
	
	//NamedArgumentMember returns SysML::ParameterMembership :
	//    ownedRelatedElement += NamedArgument
	//;
	public KerMLExpressionsGrammarAccess.NamedArgumentMemberElements getNamedArgumentMemberAccess() {
		return gaKerMLExpressions.getNamedArgumentMemberAccess();
	}
	
	public ParserRule getNamedArgumentMemberRule() {
		return getNamedArgumentMemberAccess().getRule();
	}
	
	//NamedArgument returns SysML::Feature :
	//    ownedRelationship += ParameterRedefinition '=' ownedRelationship += ArgumentValue
	//;
	public KerMLExpressionsGrammarAccess.NamedArgumentElements getNamedArgumentAccess() {
		return gaKerMLExpressions.getNamedArgumentAccess();
	}
	
	public ParserRule getNamedArgumentRule() {
		return getNamedArgumentAccess().getRule();
	}
	
	//ParameterRedefinition returns SysML::Redefinition:
	//    redefinedFeature = [SysML::Feature | QualifiedName]
	//;
	public KerMLExpressionsGrammarAccess.ParameterRedefinitionElements getParameterRedefinitionAccess() {
		return gaKerMLExpressions.getParameterRedefinitionAccess();
	}
	
	public ParserRule getParameterRedefinitionRule() {
		return getParameterRedefinitionAccess().getRule();
	}
	
	//ArgumentValue returns SysML::FeatureValue :
	//    ownedRelatedElement += OwnedExpression
	//;
	public KerMLExpressionsGrammarAccess.ArgumentValueElements getArgumentValueAccess() {
		return gaKerMLExpressions.getArgumentValueAccess();
	}
	
	public ParserRule getArgumentValueRule() {
		return getArgumentValueAccess().getRule();
	}
	
	//// Null Expressions
	//NullExpression returns SysML::NullExpression :
	//    {SysML::NullExpression} ( 'null' | '(' ')' )
	//;
	public KerMLExpressionsGrammarAccess.NullExpressionElements getNullExpressionAccess() {
		return gaKerMLExpressions.getNullExpressionAccess();
	}
	
	public ParserRule getNullExpressionRule() {
		return getNullExpressionAccess().getRule();
	}
	
	///* Literal Expressions */
	//LiteralExpression returns SysML::LiteralExpression :
	//      LiteralBoolean
	//    | LiteralString
	//    | LiteralInteger
	//    | LiteralReal
	//    | LiteralInfinity
	//;
	public KerMLExpressionsGrammarAccess.LiteralExpressionElements getLiteralExpressionAccess() {
		return gaKerMLExpressions.getLiteralExpressionAccess();
	}
	
	public ParserRule getLiteralExpressionRule() {
		return getLiteralExpressionAccess().getRule();
	}
	
	//LiteralBoolean returns SysML::LiteralBoolean :
	//    value = BooleanValue
	//;
	public KerMLExpressionsGrammarAccess.LiteralBooleanElements getLiteralBooleanAccess() {
		return gaKerMLExpressions.getLiteralBooleanAccess();
	}
	
	public ParserRule getLiteralBooleanRule() {
		return getLiteralBooleanAccess().getRule();
	}
	
	//BooleanValue returns Ecore::EBoolean :
	//    'true' | 'false'
	//;
	public KerMLExpressionsGrammarAccess.BooleanValueElements getBooleanValueAccess() {
		return gaKerMLExpressions.getBooleanValueAccess();
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//LiteralString returns SysML::LiteralString :
	//    value = STRING_VALUE
	//;
	public KerMLExpressionsGrammarAccess.LiteralStringElements getLiteralStringAccess() {
		return gaKerMLExpressions.getLiteralStringAccess();
	}
	
	public ParserRule getLiteralStringRule() {
		return getLiteralStringAccess().getRule();
	}
	
	//LiteralInteger returns SysML::LiteralInteger:
	//    value = DECIMAL_VALUE
	//;
	public KerMLExpressionsGrammarAccess.LiteralIntegerElements getLiteralIntegerAccess() {
		return gaKerMLExpressions.getLiteralIntegerAccess();
	}
	
	public ParserRule getLiteralIntegerRule() {
		return getLiteralIntegerAccess().getRule();
	}
	
	//LiteralReal returns SysML::LiteralRational:
	//    value = RealValue
	//;
	public KerMLExpressionsGrammarAccess.LiteralRealElements getLiteralRealAccess() {
		return gaKerMLExpressions.getLiteralRealAccess();
	}
	
	public ParserRule getLiteralRealRule() {
		return getLiteralRealAccess().getRule();
	}
	
	//RealValue returns Ecore::EDouble:
	//    DECIMAL_VALUE? '.' ( DECIMAL_VALUE | EXP_VALUE ) | EXP_VALUE
	//;
	public KerMLExpressionsGrammarAccess.RealValueElements getRealValueAccess() {
		return gaKerMLExpressions.getRealValueAccess();
	}
	
	public ParserRule getRealValueRule() {
		return getRealValueAccess().getRule();
	}
	
	//LiteralInfinity returns SysML::LiteralInfinity :
	//    {SysML::LiteralInfinity} '*'
	//;
	public KerMLExpressionsGrammarAccess.LiteralInfinityElements getLiteralInfinityAccess() {
		return gaKerMLExpressions.getLiteralInfinityAccess();
	}
	
	public ParserRule getLiteralInfinityRule() {
		return getLiteralInfinityAccess().getRule();
	}
	
	///* NAMES */
	//Name:
	//    ID | UNRESTRICTED_NAME
	//;
	public KerMLExpressionsGrammarAccess.NameElements getNameAccess() {
		return gaKerMLExpressions.getNameAccess();
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}
	
	//Qualification :
	//    ( Name '::' )+
	//;
	public KerMLExpressionsGrammarAccess.QualificationElements getQualificationAccess() {
		return gaKerMLExpressions.getQualificationAccess();
	}
	
	public ParserRule getQualificationRule() {
		return getQualificationAccess().getRule();
	}
	
	//QualifiedName:
	//    Qualification? Name
	//;
	public KerMLExpressionsGrammarAccess.QualifiedNameElements getQualifiedNameAccess() {
		return gaKerMLExpressions.getQualifiedNameAccess();
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	///* TERMINALS */
	//terminal DECIMAL_VALUE returns Ecore::EInt:
	//    '0'..'9' ('0'..'9')*;
	public TerminalRule getDECIMAL_VALUERule() {
		return gaKerMLExpressions.getDECIMAL_VALUERule();
	}
	
	//terminal EXP_VALUE:
	//    DECIMAL_VALUE ('e' | 'E') ('+' | '-')? DECIMAL_VALUE;
	public TerminalRule getEXP_VALUERule() {
		return gaKerMLExpressions.getEXP_VALUERule();
	}
	
	//terminal ID:
	//    ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaKerMLExpressions.getIDRule();
	}
	
	//terminal UNRESTRICTED_NAME returns Ecore::EString:
	//    '\'' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '\''))* '\'';
	public TerminalRule getUNRESTRICTED_NAMERule() {
		return gaKerMLExpressions.getUNRESTRICTED_NAMERule();
	}
	
	//terminal STRING_VALUE returns Ecore::EString:
	//    '"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | '"' | "'" | '\\') | !('\\' | '"'))* '"';
	public TerminalRule getSTRING_VALUERule() {
		return gaKerMLExpressions.getSTRING_VALUERule();
	}
	
	//terminal REGULAR_COMMENT:
	//    '/*' ->'*/';
	public TerminalRule getREGULAR_COMMENTRule() {
		return gaKerMLExpressions.getREGULAR_COMMENTRule();
	}
	
	//terminal ML_NOTE:
	//    '//*'->'*/';
	public TerminalRule getML_NOTERule() {
		return gaKerMLExpressions.getML_NOTERule();
	}
	
	//terminal SL_NOTE:
	//    '//' (!('\n' | '\r') !('\n' | '\r')*)? ('\r'? '\n')?;
	public TerminalRule getSL_NOTERule() {
		return gaKerMLExpressions.getSL_NOTERule();
	}
	
	//terminal WS:
	//    (' ' | '\t' | '\r' | '\n')+;
	public TerminalRule getWSRule() {
		return gaKerMLExpressions.getWSRule();
	}
}
